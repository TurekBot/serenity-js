[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "AxiosError",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L85",
    "longname": "AxiosError",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "AxiosInstance",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L130",
    "longname": "AxiosInstance",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "AxiosRequestConfig",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L44",
    "longname": "AxiosRequestConfig",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "AxiosPromise",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L94",
    "longname": "AxiosPromise",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "AxiosResponse",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L76",
    "longname": "AxiosResponse",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "longname": "Proxy",
    "memberof": "src/.imports-from-mdn.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "ProtractorConfig",
    "externalLink": "https://github.com/angular/protractor/blob/master/lib/config.ts",
    "longname": "protractor~ProtractorConfig",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "Runner",
    "externalLink": "https://github.com/angular/protractor/blob/master/lib/runner.ts",
    "longname": "protractor~Runner",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "ElementArrayFinder",
    "externalLink": "https://www.protractortest.org/#/api?view=ElementArrayFinder",
    "longname": "ElementArrayFinder",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "ElementFinder",
    "externalLink": "https://www.protractortest.org/#/api?view=ElementFinder",
    "longname": "ElementFinder",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "ProtractorBrowser",
    "externalLink": "https://www.protractortest.org/#/api?view=ProtractorBrowser",
    "longname": "ProtractorBrowser",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "Actions",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/input_exports_Actions.html",
    "longname": "selenium-webdriver~Actions",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "AlertPromise",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/webdriver_exports_AlertPromise.html",
    "longname": "selenium-webdriver~AlertPromise",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "By",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/by_exports_By.html",
    "longname": "selenium-webdriver~By",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "Capabilities",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_Capabilities.html",
    "longname": "selenium-webdriver~Capabilities",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "Key",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_Key.html",
    "longname": "selenium-webdriver~Key",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Navigation",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/webdriver_exports_Navigation.html",
    "longname": "selenium-webdriver~Navigation",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "Options",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/ie_exports_Options.html",
    "longname": "selenium-webdriver~Options",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "WebElement",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebElement.html",
    "longname": "selenium-webdriver~WebElement",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "Ensure",
    "externalLink": "/modules/assertions/class/src/Ensure.ts~Ensure.html",
    "longname": "@serenity-js/assertions~Ensure",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "and",
    "externalLink": "/modules/assertions/function/index.html#static-function-and",
    "longname": "@serenity-js/assertions/lib/expectations~and",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "contain",
    "externalLink": "/modules/assertions/function/index.html#static-function-contain",
    "longname": "@serenity-js/assertions/lib/expectations~contain",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "containAtLeastOneItemThat",
    "externalLink": "/modules/assertions/function/index.html#static-function-containAtLeastOneItemThat",
    "longname": "@serenity-js/assertions/lib/expectations~containAtLeastOneItemThat",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "containItemsWhereEachItem",
    "externalLink": "/modules/assertions/function/index.html#static-function-containItemsWhereEachItem",
    "longname": "@serenity-js/assertions/lib/expectations~containItemsWhereEachItem",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "endsWith",
    "externalLink": "/modules/assertions/function/index.html#static-function-endsWith",
    "longname": "@serenity-js/assertions/lib/expectations~endsWith",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "equals",
    "externalLink": "/modules/assertions/function/index.html#static-function-equals",
    "longname": "@serenity-js/assertions/lib/expectations~equals",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "includes",
    "externalLink": "/modules/assertions/function/index.html#static-function-includes",
    "longname": "@serenity-js/assertions/lib/expectations~includes",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "isAfter",
    "externalLink": "/modules/assertions/function/index.html#static-function-isAfter",
    "longname": "@serenity-js/assertions/lib/expectations~isAfter",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "isBefore",
    "externalLink": "/modules/assertions/function/index.html#static-function-isBefore",
    "longname": "@serenity-js/assertions/lib/expectations~isBefore",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "isFalse",
    "externalLink": "/modules/assertions/function/index.html#static-function-isFalse",
    "longname": "@serenity-js/assertions/lib/expectations~isFalse",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "isGreaterThan",
    "externalLink": "/modules/assertions/function/index.html#static-function-isGreaterThan",
    "longname": "@serenity-js/assertions/lib/expectations~isGreaterThan",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "isLessThan",
    "externalLink": "/modules/assertions/function/index.html#static-function-isLessThan",
    "longname": "@serenity-js/assertions/lib/expectations~isLessThan",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "isTrue",
    "externalLink": "/modules/assertions/function/index.html#static-function-isTrue",
    "longname": "@serenity-js/assertions/lib/expectations~isTrue",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "matches",
    "externalLink": "/modules/assertions/function/index.html#static-function-matches",
    "longname": "@serenity-js/assertions/lib/expectations~matches",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "not",
    "externalLink": "/modules/assertions/function/index.html#static-function-not",
    "longname": "@serenity-js/assertions/lib/expectations~not",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "or",
    "externalLink": "/modules/assertions/function/index.html#static-function-or",
    "longname": "@serenity-js/assertions/lib/expectations~or",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "property",
    "externalLink": "/modules/assertions/function/index.html#static-function-property",
    "longname": "@serenity-js/assertions/lib/expectations~property",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "startsWith",
    "externalLink": "/modules/assertions/function/index.html#static-function-startsWith",
    "longname": "@serenity-js/assertions/lib/expectations~startsWith",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Serenity",
    "externalLink": "/modules/core/class/src/Serenity.ts~Serenity.html",
    "longname": "@serenity-js/core~Serenity",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "SerenityConfig",
    "externalLink": "/modules/core/class/src/SerenityConfig.ts~SerenityConfig.html",
    "longname": "@serenity-js/core~SerenityConfig",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "AssertionError",
    "externalLink": "/modules/core/class/src/errors/AssertionError.ts~AssertionError.html",
    "longname": "@serenity-js/core/lib/errors~AssertionError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "ConfigurationError",
    "externalLink": "/modules/core/class/src/errors/ConfigurationError.ts~ConfigurationError.html",
    "longname": "@serenity-js/core/lib/errors~ConfigurationError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "external",
    "name": "ImplementationPendingError",
    "externalLink": "/modules/core/class/src/errors/ImplementationPendingError.ts~ImplementationPendingError.html",
    "longname": "@serenity-js/core/lib/errors~ImplementationPendingError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "LogicError",
    "externalLink": "/modules/core/class/src/errors/LogicError.ts~LogicError.html",
    "longname": "@serenity-js/core/lib/errors~LogicError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "RuntimeError",
    "externalLink": "/modules/core/class/src/errors/RuntimeError.ts~RuntimeError.html",
    "longname": "@serenity-js/core/lib/errors~RuntimeError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "TestCompromisedError",
    "externalLink": "/modules/core/class/src/errors/TestCompromisedError.ts~TestCompromisedError.html",
    "longname": "@serenity-js/core/lib/errors~TestCompromisedError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "UnknownError",
    "externalLink": "/modules/core/class/src/errors/UnknownError.ts~UnknownError.html",
    "longname": "@serenity-js/core/lib/errors~UnknownError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "ActivityFinished",
    "externalLink": "/modules/core/class/src/events/ActivityFinished.ts~ActivityFinished.html",
    "longname": "@serenity-js/core/lib/events~ActivityFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "ActivityRelatedArtifactArchived",
    "externalLink": "/modules/core/class/src/events/ActivityRelatedArtifactArchived.ts~ActivityRelatedArtifactArchived.html",
    "longname": "@serenity-js/core/lib/events~ActivityRelatedArtifactArchived",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "ActivityRelatedArtifactGenerated",
    "externalLink": "/modules/core/class/src/events/ActivityRelatedArtifactGenerated.ts~ActivityRelatedArtifactGenerated.html",
    "longname": "@serenity-js/core/lib/events~ActivityRelatedArtifactGenerated",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "ActivityStarts",
    "externalLink": "/modules/core/class/src/events/ActivityStarts.ts~ActivityStarts.html",
    "longname": "@serenity-js/core/lib/events~ActivityStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "name": "ArtifactArchived",
    "externalLink": "/modules/core/class/src/events/ArtifactArchived.ts~ArtifactArchived.html",
    "longname": "@serenity-js/core/lib/events~ArtifactArchived",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "name": "ArtifactGenerated",
    "externalLink": "/modules/core/class/src/events/ArtifactGenerated.ts~ArtifactGenerated.html",
    "longname": "@serenity-js/core/lib/events~ArtifactGenerated",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "name": "AsyncOperationAttempted",
    "externalLink": "/modules/core/class/src/events/AsyncOperationAttempted.ts~AsyncOperationAttempted.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationAttempted",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "name": "AsyncOperationCompleted",
    "externalLink": "/modules/core/class/src/events/AsyncOperationCompleted.ts~AsyncOperationCompleted.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationCompleted",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "name": "AsyncOperationFailed",
    "externalLink": "/modules/core/class/src/events/AsyncOperationFailed.ts~AsyncOperationFailed.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationFailed",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "name": "BusinessRuleDetected",
    "externalLink": "/modules/core/class/src/events/BusinessRuleDetected.ts~BusinessRuleDetected.html",
    "longname": "@serenity-js/core/lib/events~BusinessRuleDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "name": "DomainEvent",
    "externalLink": "/modules/core/class/src/events/DomainEvent.ts~DomainEvent.html",
    "longname": "@serenity-js/core/lib/events~DomainEvent",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "name": "FeatureNarrativeDetected",
    "externalLink": "/modules/core/class/src/events/FeatureNarrativeDetected.ts~FeatureNarrativeDetected.html",
    "longname": "@serenity-js/core/lib/events~FeatureNarrativeDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "name": "InteractionFinished",
    "externalLink": "/modules/core/class/src/events/InteractionFinished.ts~InteractionFinished.html",
    "longname": "@serenity-js/core/lib/events~InteractionFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "name": "InteractionStarts",
    "externalLink": "/modules/core/class/src/events/InteractionStarts.ts~InteractionStarts.html",
    "longname": "@serenity-js/core/lib/events~InteractionStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "name": "RetryableSceneDetected",
    "externalLink": "/modules/core/class/src/events/RetryableSceneDetected.ts~RetryableSceneDetected.html",
    "longname": "@serenity-js/core/lib/events~RetryableSceneDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "name": "SceneBackgroundDetected",
    "externalLink": "/modules/core/class/src/events/SceneBackgroundDetected.ts~SceneBackgroundDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneBackgroundDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "name": "SceneDescriptionDetected",
    "externalLink": "/modules/core/class/src/events/SceneDescriptionDetected.ts~SceneDescriptionDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneDescriptionDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "name": "SceneFinished",
    "externalLink": "/modules/core/class/src/events/SceneFinished.ts~SceneFinished.html",
    "longname": "@serenity-js/core/lib/events~SceneFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "name": "SceneFinishes",
    "externalLink": "/modules/core/class/src/events/SceneFinishes.ts~SceneFinishes.html",
    "longname": "@serenity-js/core/lib/events~SceneFinishes",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "name": "SceneParametersDetected",
    "externalLink": "/modules/core/class/src/events/SceneParametersDetected.ts~SceneParametersDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneParametersDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "name": "SceneSequenceDetected",
    "externalLink": "/modules/core/class/src/events/SceneSequenceDetected.ts~SceneSequenceDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneSequenceDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "name": "SceneStarts",
    "externalLink": "/modules/core/class/src/events/SceneStarts.ts~SceneStarts.html",
    "longname": "@serenity-js/core/lib/events~SceneStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "name": "SceneTagged",
    "externalLink": "/modules/core/class/src/events/SceneTagged.ts~SceneTagged.html",
    "longname": "@serenity-js/core/lib/events~SceneTagged",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "name": "SceneTemplateDetected",
    "externalLink": "/modules/core/class/src/events/SceneTemplateDetected.ts~SceneTemplateDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneTemplateDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "name": "TaskFinished",
    "externalLink": "/modules/core/class/src/events/TaskFinished.ts~TaskFinished.html",
    "longname": "@serenity-js/core/lib/events~TaskFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "name": "TaskStarts",
    "externalLink": "/modules/core/class/src/events/TaskStarts.ts~TaskStarts.html",
    "longname": "@serenity-js/core/lib/events~TaskStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "name": "TestRunFinished",
    "externalLink": "/modules/core/class/src/events/TestRunFinished.ts~TestRunFinished.html",
    "longname": "@serenity-js/core/lib/events~TestRunFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "name": "TestRunFinishes",
    "externalLink": "/modules/core/class/src/events/TestRunFinishes.ts~TestRunFinishes.html",
    "longname": "@serenity-js/core/lib/events~TestRunFinishes",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "external",
    "name": "TestRunStarts",
    "externalLink": "/modules/core/class/src/events/TestRunStarts.ts~TestRunStarts.html",
    "longname": "@serenity-js/core/lib/events~TestRunStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 82,
    "kind": "external",
    "name": "TestRunnerDetected",
    "externalLink": "/modules/core/class/src/events/TestRunnerDetected.ts~TestRunnerDetected.html",
    "longname": "@serenity-js/core/lib/events~TestRunnerDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 83,
    "kind": "external",
    "name": "TestSuiteFinished",
    "externalLink": "/modules/core/class/src/events/TestSuiteFinished.ts~TestSuiteFinished.html",
    "longname": "@serenity-js/core/lib/events~TestSuiteFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 84,
    "kind": "external",
    "name": "TestSuiteStarts",
    "externalLink": "/modules/core/class/src/events/TestSuiteStarts.ts~TestSuiteStarts.html",
    "longname": "@serenity-js/core/lib/events~TestSuiteStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 85,
    "kind": "external",
    "name": "serenity",
    "externalLink": "/modules/core/variable/src/instance.ts~serenity.html",
    "longname": "@serenity-js/core~serenity",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 86,
    "kind": "external",
    "name": "configure",
    "externalLink": "/modules/core/function/index.html#static-function-configure",
    "longname": "@serenity-js/core~configure",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 87,
    "kind": "external",
    "name": "engage",
    "externalLink": "/modules/core/function/index.html#static-function-engage",
    "longname": "@serenity-js/core~engage",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 88,
    "kind": "external",
    "name": "actorCalled",
    "externalLink": "/modules/core/function/index.html#static-function-actorCalled",
    "longname": "@serenity-js/core~actorCalled",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "name": "actorInTheSpotlight",
    "externalLink": "/modules/core/function/index.html#static-function-actorInTheSpotlight",
    "longname": "@serenity-js/core~actorInTheSpotlight",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "name": "AssertionReportDiffer",
    "externalLink": "/modules/core/class/src/io/AssertionReportDiffer.ts~AssertionReportDiffer.html",
    "longname": "@serenity-js/core/lib/io~AssertionReportDiffer",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "name": "Config",
    "externalLink": "/modules/core/class/src/io/Config.ts~Config.html",
    "longname": "@serenity-js/core/lib/io~Config",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "name": "SerialisedError",
    "externalLink": "/modules/core/class/src/io/ErrorSerialiser.ts~SerialisedError.html",
    "longname": "@serenity-js/core/lib/io~SerialisedError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "name": "ErrorSerialiser",
    "externalLink": "/modules/core/class/src/io/ErrorSerialiser.ts~ErrorSerialiser.html",
    "longname": "@serenity-js/core/lib/io~ErrorSerialiser",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "name": "FileFinder",
    "externalLink": "/modules/core/class/src/io/FileFinder.ts~FileFinder.html",
    "longname": "@serenity-js/core/lib/io~FileFinder",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "name": "FileSystem",
    "externalLink": "/modules/core/class/src/io/FileSystem.ts~FileSystem.html",
    "longname": "@serenity-js/core/lib/io~FileSystem",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "name": "FileSystemLocation",
    "externalLink": "/modules/core/class/src/io/FileSystemLocation.ts~FileSystemLocation.html",
    "longname": "@serenity-js/core/lib/io~FileSystemLocation",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "name": "ModuleLoader",
    "externalLink": "/modules/core/class/src/io/ModuleLoader.ts~ModuleLoader.html",
    "longname": "@serenity-js/core/lib/io~ModuleLoader",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "name": "OutputStream",
    "externalLink": "/modules/core/class/src/io/OutputStream.ts~OutputStream.html",
    "longname": "@serenity-js/core/lib/io~OutputStream",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "name": "Path",
    "externalLink": "/modules/core/class/src/io/Path.ts~Path.html",
    "longname": "@serenity-js/core/lib/io~Path",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "name": "TestRunnerAdapter",
    "externalLink": "/modules/core/class/src/io/TestRunnerAdapter.ts~TestRunnerAdapter.html",
    "longname": "@serenity-js/core/lib/io~TestRunnerAdapter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "name": "Version",
    "externalLink": "/modules/core/class/src/io/Version.ts~Version.html",
    "longname": "@serenity-js/core/lib/io~Version",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "name": "Mappable",
    "externalLink": "/modules/core/class/src/io/collections/mappable.ts~Mappable.html",
    "longname": "@serenity-js/core/lib/io/collections~Mappable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "name": "isMappable",
    "externalLink": "/modules/core/function/index.html#static-function-isMappable",
    "longname": "@serenity-js/core/lib/io/collections~isMappable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "name": "Reducible",
    "externalLink": "/modules/core/class/src/io/collections/reducible.ts~Reducible.html",
    "longname": "@serenity-js/core/lib/io/collections~Reducible",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "name": "commaSeparated",
    "externalLink": "/modules/core/function/index.html#static-function-commaSeparated",
    "longname": "@serenity-js/core/lib/io~commaSeparated",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "name": "formatted",
    "externalLink": "/modules/core/function/index.html#static-function-formatted",
    "longname": "@serenity-js/core/lib/io~formatted",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "name": "inspected",
    "externalLink": "/modules/core/function/index.html#static-function-inspected",
    "longname": "@serenity-js/core/lib/io~inspected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 108,
    "kind": "external",
    "name": "stringify",
    "externalLink": "/modules/core/function/index.html#static-function-stringify",
    "longname": "@serenity-js/core/lib/io/json~stringify",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "name": "parse",
    "externalLink": "/modules/core/function/index.html#static-function-parse",
    "longname": "@serenity-js/core/lib/io/json~parse",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 110,
    "kind": "external",
    "name": "has",
    "externalLink": "/modules/core/function/index.html#static-function-has",
    "longname": "@serenity-js/core/lib/io/reflection~has",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 111,
    "kind": "external",
    "name": "trimmed",
    "externalLink": "/modules/core/function/index.html#static-function-trimmed",
    "longname": "@serenity-js/core/lib/io~trimmed",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 112,
    "kind": "external",
    "name": "ActivityDetails",
    "externalLink": "/modules/core/class/src/model/ActivityDetails.ts~ActivityDetails.html",
    "longname": "@serenity-js/core/lib/model~ActivityDetails",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 113,
    "kind": "external",
    "name": "Artifact",
    "externalLink": "/modules/core/class/src/model/Artifact.ts~Artifact.html",
    "longname": "@serenity-js/core/lib/model~Artifact",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "name": "BusinessRule",
    "externalLink": "/modules/core/class/src/model/BusinessRule.ts~BusinessRule.html",
    "longname": "@serenity-js/core/lib/model~BusinessRule",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "name": "Category",
    "externalLink": "/modules/core/class/src/model/Category.ts~Category.html",
    "longname": "@serenity-js/core/lib/model~Category",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "name": "CorrelationId",
    "externalLink": "/modules/core/class/src/model/CorrelationId.ts~CorrelationId.html",
    "longname": "@serenity-js/core/lib/model~CorrelationId",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "external",
    "name": "Description",
    "externalLink": "/modules/core/class/src/model/Description.ts~Description.html",
    "longname": "@serenity-js/core/lib/model~Description",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 118,
    "kind": "external",
    "name": "Duration",
    "externalLink": "/modules/core/class/src/model/Duration.ts~Duration.html",
    "longname": "@serenity-js/core/lib/model~Duration",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 119,
    "kind": "external",
    "name": "Name",
    "externalLink": "/modules/core/class/src/model/Name.ts~Name.html",
    "longname": "@serenity-js/core/lib/model~Name",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 120,
    "kind": "external",
    "name": "ScenarioDetails",
    "externalLink": "/modules/core/class/src/model/ScenarioDetails.ts~ScenarioDetails.html",
    "longname": "@serenity-js/core/lib/model~ScenarioDetails",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 121,
    "kind": "external",
    "name": "ScenarioParameters",
    "externalLink": "/modules/core/class/src/model/ScenarioParameters.ts~ScenarioParameters.html",
    "longname": "@serenity-js/core/lib/model~ScenarioParameters",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 122,
    "kind": "external",
    "name": "TestSuiteDetails",
    "externalLink": "/modules/core/class/src/model/TestSuiteDetails.ts~TestSuiteDetails.html",
    "longname": "@serenity-js/core/lib/model~TestSuiteDetails",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 123,
    "kind": "external",
    "name": "Timestamp",
    "externalLink": "/modules/core/class/src/model/Timestamp.ts~Timestamp.html",
    "longname": "@serenity-js/core/lib/model~Timestamp",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "name": "AssertionReport",
    "externalLink": "/modules/core/class/src/model/artifacts/AssertionReport.ts~AssertionReport.html",
    "longname": "@serenity-js/core/lib/model/artifacts~AssertionReport",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 125,
    "kind": "external",
    "name": "RequestAndResponse",
    "externalLink": "/modules/core/class/src/model/artifacts/HTTPRequestResponse.ts~RequestAndResponse.html",
    "longname": "@serenity-js/core/lib/model/artifacts~RequestAndResponse",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "name": "HTTPRequestResponse",
    "externalLink": "/modules/core/class/src/model/artifacts/HTTPRequestResponse.ts~HTTPRequestResponse.html",
    "longname": "@serenity-js/core/lib/model/artifacts~HTTPRequestResponse",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "name": "JSONData",
    "externalLink": "/modules/core/class/src/model/artifacts/JSONData.ts~JSONData.html",
    "longname": "@serenity-js/core/lib/model/artifacts~JSONData",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "name": "LogEntry",
    "externalLink": "/modules/core/class/src/model/artifacts/LogEntry.ts~LogEntry.html",
    "longname": "@serenity-js/core/lib/model/artifacts~LogEntry",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "name": "Photo",
    "externalLink": "/modules/core/class/src/model/artifacts/Photo.ts~Photo.html",
    "longname": "@serenity-js/core/lib/model/artifacts~Photo",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "name": "TestReport",
    "externalLink": "/modules/core/class/src/model/artifacts/TestReport.ts~TestReport.html",
    "longname": "@serenity-js/core/lib/model/artifacts~TestReport",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "name": "TextData",
    "externalLink": "/modules/core/class/src/model/artifacts/TextData.ts~TextData.html",
    "longname": "@serenity-js/core/lib/model/artifacts~TextData",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "name": "SerialisedOutcome",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~SerialisedOutcome.html",
    "longname": "@serenity-js/core/lib/model~SerialisedOutcome",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "name": "Outcome",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~Outcome.html",
    "longname": "@serenity-js/core/lib/model~Outcome",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "external",
    "name": "ProblemIndication",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ProblemIndication.html",
    "longname": "@serenity-js/core/lib/model~ProblemIndication",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 135,
    "kind": "external",
    "name": "ExecutionCompromised",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionCompromised.html",
    "longname": "@serenity-js/core/lib/model~ExecutionCompromised",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "name": "ExecutionFailedWithError",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionFailedWithError.html",
    "longname": "@serenity-js/core/lib/model~ExecutionFailedWithError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "name": "ExecutionFailedWithAssertionError",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionFailedWithAssertionError.html",
    "longname": "@serenity-js/core/lib/model~ExecutionFailedWithAssertionError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "name": "ImplementationPending",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ImplementationPending.html",
    "longname": "@serenity-js/core/lib/model~ImplementationPending",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 139,
    "kind": "external",
    "name": "ExecutionIgnored",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionIgnored.html",
    "longname": "@serenity-js/core/lib/model~ExecutionIgnored",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "name": "ExecutionSkipped",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionSkipped.html",
    "longname": "@serenity-js/core/lib/model~ExecutionSkipped",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "name": "ExecutionSuccessful",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionSuccessful.html",
    "longname": "@serenity-js/core/lib/model~ExecutionSuccessful",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "name": "ArbitraryTag",
    "externalLink": "/modules/core/class/src/model/tags/ArbitraryTag.ts~ArbitraryTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ArbitraryTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "name": "BrowserTag",
    "externalLink": "/modules/core/class/src/model/tags/BrowserTag.ts~BrowserTag.html",
    "longname": "@serenity-js/core/lib/model/tags~BrowserTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "name": "CapabilityTag",
    "externalLink": "/modules/core/class/src/model/tags/CapabilityTag.ts~CapabilityTag.html",
    "longname": "@serenity-js/core/lib/model/tags~CapabilityTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "name": "ContextTag",
    "externalLink": "/modules/core/class/src/model/tags/ContextTag.ts~ContextTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ContextTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "name": "ExecutionRetriedTag",
    "externalLink": "/modules/core/class/src/model/tags/ExecutionRetriedTag.ts~ExecutionRetriedTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ExecutionRetriedTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "name": "FeatureTag",
    "externalLink": "/modules/core/class/src/model/tags/FeatureTag.ts~FeatureTag.html",
    "longname": "@serenity-js/core/lib/model/tags~FeatureTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 148,
    "kind": "external",
    "name": "IssueTag",
    "externalLink": "/modules/core/class/src/model/tags/IssueTag.ts~IssueTag.html",
    "longname": "@serenity-js/core/lib/model/tags~IssueTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 149,
    "kind": "external",
    "name": "ManualTag",
    "externalLink": "/modules/core/class/src/model/tags/ManualTag.ts~ManualTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ManualTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 150,
    "kind": "external",
    "name": "PlatformTag",
    "externalLink": "/modules/core/class/src/model/tags/PlatformTag.ts~PlatformTag.html",
    "longname": "@serenity-js/core/lib/model/tags~PlatformTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 151,
    "kind": "external",
    "name": "Tag",
    "externalLink": "/modules/core/class/src/model/tags/Tag.ts~Tag.html",
    "longname": "@serenity-js/core/lib/model/tags~Tag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 152,
    "kind": "external",
    "name": "ThemeTag",
    "externalLink": "/modules/core/class/src/model/tags/ThemeTag.ts~ThemeTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ThemeTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 153,
    "kind": "external",
    "name": "Ability",
    "externalLink": "/modules/core/class/src/screenplay/Ability.ts~Ability.html",
    "longname": "@serenity-js/core/lib/screenplay~Ability",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 154,
    "kind": "external",
    "name": "AbilityType",
    "externalLink": "/modules/core/class/src/screenplay/AbilityType.ts~AbilityType.html",
    "longname": "@serenity-js/core/lib/screenplay~AbilityType",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 155,
    "kind": "external",
    "name": "Activity",
    "externalLink": "/modules/core/class/src/screenplay/Activity.ts~Activity.html",
    "longname": "@serenity-js/core/lib/screenplay~Activity",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 156,
    "kind": "external",
    "name": "Interaction",
    "externalLink": "/modules/core/class/src/screenplay/Interaction.ts~Interaction.html",
    "longname": "@serenity-js/core/lib/screenplay~Interaction",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 157,
    "kind": "external",
    "name": "Question",
    "externalLink": "/modules/core/class/src/screenplay/Question.ts~Question.html",
    "longname": "@serenity-js/core/lib/screenplay~Question",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 158,
    "kind": "external",
    "name": "Task",
    "externalLink": "/modules/core/class/src/screenplay/Task.ts~Task.html",
    "longname": "@serenity-js/core/lib/screenplay~Task",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 159,
    "kind": "external",
    "name": "Discardable",
    "externalLink": "/modules/core/class/src/screenplay/abilities/Discardable.ts~Discardable.html",
    "longname": "@serenity-js/core/lib/screenplay/abilities~Discardable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 160,
    "kind": "external",
    "name": "Initialisable",
    "externalLink": "/modules/core/class/src/screenplay/abilities/Initialisable.ts~Initialisable.html",
    "longname": "@serenity-js/core/lib/screenplay/abilities~Initialisable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 161,
    "kind": "external",
    "name": "TakeNotes",
    "externalLink": "/modules/core/class/src/screenplay/abilities/TakeNotes.ts~TakeNotes.html",
    "longname": "@serenity-js/core/lib/screenplay/abilities~TakeNotes",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 162,
    "kind": "external",
    "name": "Actor",
    "externalLink": "/modules/core/class/src/screenplay/actor/Actor.ts~Actor.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~Actor",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 163,
    "kind": "external",
    "name": "AnswersQuestions",
    "externalLink": "/modules/core/class/src/screenplay/actor/AnswersQuestions.ts~AnswersQuestions.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~AnswersQuestions",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 164,
    "kind": "external",
    "name": "CanHaveAbilities",
    "externalLink": "/modules/core/class/src/screenplay/actor/CanHaveAbilities.ts~CanHaveAbilities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~CanHaveAbilities",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 165,
    "kind": "external",
    "name": "CollectsArtifacts",
    "externalLink": "/modules/core/class/src/screenplay/actor/CollectsArtifacts.ts~CollectsArtifacts.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~CollectsArtifacts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 166,
    "kind": "external",
    "name": "PerformsActivities",
    "externalLink": "/modules/core/class/src/screenplay/actor/PerformsActivities.ts~PerformsActivities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~PerformsActivities",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 167,
    "kind": "external",
    "name": "UsesAbilities",
    "externalLink": "/modules/core/class/src/screenplay/actor/UsesAbilities.ts~UsesAbilities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~UsesAbilities",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 168,
    "kind": "external",
    "name": "Log",
    "externalLink": "/modules/core/class/src/screenplay/interactions/Log.ts~Log.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~Log",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 169,
    "kind": "external",
    "name": "See",
    "externalLink": "/modules/core/class/src/screenplay/interactions/See.ts~See.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~See",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 170,
    "kind": "external",
    "name": "TakeNote",
    "externalLink": "/modules/core/class/src/screenplay/interactions/TakeNote.ts~TakeNote.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~TakeNote",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 171,
    "kind": "external",
    "name": "Check",
    "externalLink": "/modules/core/class/src/screenplay/questions/Check.ts~Check.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Check",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 172,
    "kind": "external",
    "name": "Expectation",
    "externalLink": "/modules/core/class/src/screenplay/questions/Expectation.ts~Expectation.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Expectation",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 173,
    "kind": "external",
    "name": "List",
    "externalLink": "/modules/core/class/src/screenplay/questions/List.ts~List.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~List",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 174,
    "kind": "external",
    "name": "MetaQuestion",
    "externalLink": "/modules/core/class/src/screenplay/questions/MetaQuestion.ts~MetaQuestion.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~MetaQuestion",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 175,
    "kind": "external",
    "name": "Note",
    "externalLink": "/modules/core/class/src/screenplay/questions/Note.ts~Note.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Note",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 176,
    "kind": "external",
    "name": "Property",
    "externalLink": "/modules/core/class/src/screenplay/questions/Property.ts~Property.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Property",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 177,
    "kind": "external",
    "name": "Transform",
    "externalLink": "/modules/core/class/src/screenplay/questions/Transform.ts~Transform.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Transform",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 178,
    "kind": "external",
    "name": "ExpectationMet",
    "externalLink": "/modules/core/class/src/screenplay/questions/expectations/ExpectationMet.ts~ExpectationMet.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/expectations~ExpectationMet",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 179,
    "kind": "external",
    "name": "ExpectationNotMet",
    "externalLink": "/modules/core/class/src/screenplay/questions/expectations/ExpectationNotMet.ts~ExpectationNotMet.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/expectations~ExpectationNotMet",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 180,
    "kind": "external",
    "name": "ExpectationOutcome",
    "externalLink": "/modules/core/class/src/screenplay/questions/expectations/ExpectationOutcome.ts~ExpectationOutcome.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/expectations~ExpectationOutcome",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 181,
    "kind": "external",
    "name": "ArrayListAdapter",
    "externalLink": "/modules/core/class/src/screenplay/questions/lists/ArrayListAdapter.ts~ArrayListAdapter.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/lists~ArrayListAdapter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 182,
    "kind": "external",
    "name": "ListAdapter",
    "externalLink": "/modules/core/class/src/screenplay/questions/lists/ListAdapter.ts~ListAdapter.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/lists~ListAdapter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 183,
    "kind": "external",
    "name": "append",
    "externalLink": "/modules/core/function/index.html#static-function-append",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~append",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 184,
    "kind": "external",
    "name": "normalize",
    "externalLink": "/modules/core/function/index.html#static-function-normalize",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~normalize",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 185,
    "kind": "external",
    "name": "replace",
    "externalLink": "/modules/core/function/index.html#static-function-replace",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~replace",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 186,
    "kind": "external",
    "name": "slice",
    "externalLink": "/modules/core/function/index.html#static-function-slice",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~slice",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 187,
    "kind": "external",
    "name": "split",
    "externalLink": "/modules/core/function/index.html#static-function-split",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~split",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 188,
    "kind": "external",
    "name": "toLocaleLowerCase",
    "externalLink": "/modules/core/function/index.html#static-function-toLocaleLowerCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toLocaleLowerCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "name": "toLocaleUpperCase",
    "externalLink": "/modules/core/function/index.html#static-function-toLocaleUpperCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toLocaleUpperCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "external",
    "name": "toLowerCase",
    "externalLink": "/modules/core/function/index.html#static-function-toLowerCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toLowerCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 191,
    "kind": "external",
    "name": "toNumber",
    "externalLink": "/modules/core/function/index.html#static-function-toNumber",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toNumber",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 192,
    "kind": "external",
    "name": "toUpperCase",
    "externalLink": "/modules/core/function/index.html#static-function-toUpperCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toUpperCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 193,
    "kind": "external",
    "name": "trim",
    "externalLink": "/modules/core/function/index.html#static-function-trim",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~trim",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 194,
    "kind": "external",
    "name": "q",
    "externalLink": "/modules/core/function/index.html#static-function-q",
    "longname": "@serenity-js/core/lib/screenplay/questions~q",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 195,
    "kind": "external",
    "name": "Loop",
    "externalLink": "/modules/core/class/src/screenplay/tasks/Loop.ts~Loop.html",
    "longname": "@serenity-js/core/lib/screenplay/tasks~Loop",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 196,
    "kind": "external",
    "name": "Cast",
    "externalLink": "/modules/core/class/src/stage/Cast.ts~Cast.html",
    "longname": "@serenity-js/core/lib/stage~Cast",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 197,
    "kind": "external",
    "name": "Clock",
    "externalLink": "/modules/core/class/src/stage/Clock.ts~Clock.html",
    "longname": "@serenity-js/core/lib/stage~Clock",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 198,
    "kind": "external",
    "name": "DressingRoom",
    "externalLink": "/modules/core/class/src/stage/DressingRoom.ts~DressingRoom.html",
    "longname": "@serenity-js/core/lib/stage~DressingRoom",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 199,
    "kind": "external",
    "name": "ListensToDomainEvents",
    "externalLink": "/modules/core/class/src/stage/ListensToDomainEvents.ts~ListensToDomainEvents.html",
    "longname": "@serenity-js/core/lib/stage~ListensToDomainEvents",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 200,
    "kind": "external",
    "name": "Stage",
    "externalLink": "/modules/core/class/src/stage/Stage.ts~Stage.html",
    "longname": "@serenity-js/core/lib/stage~Stage",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 201,
    "kind": "external",
    "name": "StageCrewMember",
    "externalLink": "/modules/core/class/src/stage/StageCrewMember.ts~StageCrewMember.html",
    "longname": "@serenity-js/core/lib/stage~StageCrewMember",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 202,
    "kind": "external",
    "name": "StageCrewMemberBuilder",
    "externalLink": "/modules/core/class/src/stage/StageCrewMemberBuilder.ts~StageCrewMemberBuilder.html",
    "longname": "@serenity-js/core/lib/stage~StageCrewMemberBuilder",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 203,
    "kind": "external",
    "name": "StageCrewMemberBuilderDependencies",
    "externalLink": "/modules/core/class/src/stage/StageCrewMemberBuilderDependencies.ts~StageCrewMemberBuilderDependencies.html",
    "longname": "@serenity-js/core/lib/stage~StageCrewMemberBuilderDependencies",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 204,
    "kind": "external",
    "name": "StageManager",
    "externalLink": "/modules/core/class/src/stage/StageManager.ts~StageManager.html",
    "longname": "@serenity-js/core/lib/stage~StageManager",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 205,
    "kind": "external",
    "name": "WithStage",
    "externalLink": "/modules/core/class/src/stage/WithStage.ts~WithStage.html",
    "longname": "@serenity-js/core/lib/stage~WithStage",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 206,
    "kind": "external",
    "name": "ArtifactArchiver",
    "externalLink": "/modules/core/class/src/stage/crew/artifact-archiver/ArtifactArchiver.ts~ArtifactArchiver.html",
    "longname": "@serenity-js/core/lib/stage/crew/artifact-archiver~ArtifactArchiver",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 207,
    "kind": "external",
    "name": "StreamReporter",
    "externalLink": "/modules/core/class/src/stage/crew/stream-reporter/StreamReporter.ts~StreamReporter.html",
    "longname": "@serenity-js/core/lib/stage/crew/stream-reporter~StreamReporter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 209,
    "kind": "external",
    "name": "JSONObject",
    "externalLink": "https://jan-molak.github.io/tiny-types/file/src/types/json.ts.html",
    "longname": "tiny-types~JSONObject",
    "memberof": "src/.imports-from-tiny-types.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 210,
    "kind": "external",
    "name": "TinyType",
    "externalLink": "https://jan-molak.github.io/tiny-types/class/src/TinyType.ts~TinyType.html",
    "longname": "tiny-types~TinyType",
    "memberof": "src/.imports-from-tiny-types.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 212,
    "kind": "external",
    "name": "ElementArray",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/webdriverio/src/types.ts",
    "longname": "@wdio/types~ElementArray",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 213,
    "kind": "external",
    "name": "Browser",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/webdriverio/src/types.ts",
    "longname": "@wdio/types~Browser",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 214,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/webdriverio/src/types.ts",
    "longname": "@wdio/types~Element",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 215,
    "kind": "external",
    "name": "Options.TestRunner",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/wdio-types/src/Options.ts",
    "longname": "@wdio/types~Options.TestRunner",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "src/index.ts",
    "content": "export * from './model';\nexport * from './screenplay';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "file",
    "name": "src/model/DeleteRequest.ts",
    "content": "import { Answerable } from '@serenity-js/core';\nimport { AxiosRequestConfig } from 'axios';\n\nimport { HTTPRequest } from './HTTPRequest';\n\n/**\n * @desc\n *  The DELETE method requests that the origin server remove the\n *  association between the target resource and its current\n *  functionality.\n *\n * @example <caption>Create and remove a resource</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, DeleteRequest, LastResponse, PostRequest, Send } from '@serenity-js/rest'\n *  import { Ensure, equals, startsWith } from '@serenity-js/assertions';\n *\n *  const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n *\n *  actor.attemptsTo(\n *      // create a new test user account\n *      Send.a(PostRequest.to('/users').with({\n *          login: 'tester',\n *          password: 'P@ssword1',\n *      }),\n *      Ensure.that(LastResponse.status(), equals(201)),\n *      Ensure.that(LastResponse.header('Location'), startsWith('/users')),\n *\n *      // delete the test user account\n *      Send.a(DeleteRequest.to(LastResponse.header('Location'))),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *  );\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE\n * @see https://tools.ietf.org/html/rfc7231#section-4.3.5\n *\n * @extends {HTTPRequest}\n */\nexport class DeleteRequest extends HTTPRequest {\n\n    /**\n     * @desc\n     *  Configures the object with a destination URI.\n     *\n     *  When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n     *  it gets concatenated with the URL provided to the Axios instance\n     *  when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} resourceUri\n     *  The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  should send the {@link HTTPRequest}.\n     *\n     * @returns {DeleteRequest}\n     */\n    static to(resourceUri: Answerable<string>): DeleteRequest {\n        return new DeleteRequest(resourceUri);\n    }\n\n    /**\n     * @desc\n     *  Overrides the default Axios request configuration provided\n     *  when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<AxiosRequestConfig>} config\n     *  Axios request configuration overrides\n     *\n     * @returns {DeleteRequest}\n     */\n    using(config: Answerable<AxiosRequestConfig>): DeleteRequest {\n        return new DeleteRequest(this.resourceUri, undefined, config);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/model/DeleteRequest.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 218,
    "kind": "class",
    "name": "DeleteRequest",
    "memberof": "src/model/DeleteRequest.ts",
    "static": true,
    "longname": "src/model/DeleteRequest.ts~DeleteRequest",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/model",
    "importStyle": "{DeleteRequest}",
    "description": " The DELETE method requests that the origin server remove the\n association between the target resource and its current\n functionality.",
    "examples": [
      "<caption>Create and remove a resource</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, DeleteRequest, LastResponse, PostRequest, Send } from '@serenity-js/rest'\n import { Ensure, equals, startsWith } from '@serenity-js/assertions';\n\n const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n\n actor.attemptsTo(\n     // create a new test user account\n     Send.a(PostRequest.to('/users').with({\n         login: 'tester',\n         password: 'P@ssword1',\n     }),\n     Ensure.that(LastResponse.status(), equals(201)),\n     Ensure.that(LastResponse.header('Location'), startsWith('/users')),\n\n     // delete the test user account\n     Send.a(DeleteRequest.to(LastResponse.header('Location'))),\n     Ensure.that(LastResponse.status(), equals(200)),\n );"
    ],
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE",
      "https://tools.ietf.org/html/rfc7231#section-4.3.5"
    ],
    "lineNumber": 45,
    "interface": false,
    "extends": [
      "HTTPRequest"
    ]
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "to",
    "memberof": "src/model/DeleteRequest.ts~DeleteRequest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/model/DeleteRequest.ts~DeleteRequest.to",
    "access": "public",
    "description": " Configures the object with a destination URI.\n\n When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n it gets concatenated with the URL provided to the Axios instance\n when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 76,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DeleteRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "resourceUri",
        "description": "The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n should send the {@link HTTPRequest}."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DeleteRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "using",
    "memberof": "src/model/DeleteRequest.ts~DeleteRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/DeleteRequest.ts~DeleteRequest#using",
    "access": "public",
    "description": " Overrides the default Axios request configuration provided\n when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 103,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{DeleteRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<AxiosRequestConfig>"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Axios request configuration overrides"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DeleteRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "src/model/GetRequest.ts",
    "content": "import { Answerable } from '@serenity-js/core';\nimport { AxiosRequestConfig } from 'axios';\n\nimport { HTTPRequest } from './HTTPRequest';\n\n/**\n * @desc\n *  The HTTP GET method requests a representation of the specified resource.\n *  It is the most frequent type of request made by consumers of a typical HTTP API.\n *  For this reason it's important to test every known endpoint that responds to GET requests and ensure that it\n *  behaves correctly.\n *\n *  Since the GET method is used to _retrieve_ data from a server, it should be implemented\n *  as [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe)\n *  and [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\n *  This means that an identical request can be made once or several times in a row with the same effect while leaving\n *  the server in the same state.\n *\n * @example <caption>Verify response to a GET request</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  interface Book {\n *      title: string;\n *      author: string;\n *  }\n *\n *  const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n *\n *  actor.attemptsTo(\n *      Send.a(GetRequest.to('/books/0-688-00230-7')),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *      Ensure.that(LastResponse.body<Book>(), equals({\n *          title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n *          author: 'Robert M. Pirsig',\n *      })),\n *  );\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET\n * @see https://tools.ietf.org/html/rfc7231#section-4.3.1\n *\n * @extends {HTTPRequest}\n */\nexport class GetRequest extends HTTPRequest {\n\n    /**\n     * @desc\n     *  Configures the object with a destination URI.\n     *\n     *  When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n     *  it gets concatenated with the URL provided to the Axios instance\n     *  when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} resourceUri\n     *  The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  should send the {@link HTTPRequest}.\n     *\n     * @returns {GetRequest}\n     */\n    static to(resourceUri: Answerable<string>): GetRequest {\n        return new GetRequest(resourceUri);\n    }\n\n    /**\n     * @desc\n     *  Overrides the default Axios request configuration provided\n     *  when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<AxiosRequestConfig>} config\n     *  Axios request configuration overrides\n     *\n     * @returns {GetRequest}\n     */\n    using(config: Answerable<AxiosRequestConfig>): GetRequest {\n        return new GetRequest(this.resourceUri, undefined, config);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/model/GetRequest.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "class",
    "name": "GetRequest",
    "memberof": "src/model/GetRequest.ts",
    "static": true,
    "longname": "src/model/GetRequest.ts~GetRequest",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/model",
    "importStyle": "{GetRequest}",
    "description": " The HTTP GET method requests a representation of the specified resource.\n It is the most frequent type of request made by consumers of a typical HTTP API.\n For this reason it's important to test every known endpoint that responds to GET requests and ensure that it\n behaves correctly.\n\n Since the GET method is used to _retrieve_ data from a server, it should be implemented\n as [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe)\n and [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\n This means that an identical request can be made once or several times in a row with the same effect while leaving\n the server in the same state.",
    "examples": [
      "<caption>Verify response to a GET request</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n\n interface Book {\n     title: string;\n     author: string;\n }\n\n const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n\n actor.attemptsTo(\n     Send.a(GetRequest.to('/books/0-688-00230-7')),\n     Ensure.that(LastResponse.status(), equals(200)),\n     Ensure.that(LastResponse.body<Book>(), equals({\n         title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n         author: 'Robert M. Pirsig',\n     })),\n );"
    ],
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET",
      "https://tools.ietf.org/html/rfc7231#section-4.3.1"
    ],
    "lineNumber": 52,
    "interface": false,
    "extends": [
      "HTTPRequest"
    ]
  },
  {
    "__docId__": 223,
    "kind": "method",
    "name": "to",
    "memberof": "src/model/GetRequest.ts~GetRequest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/model/GetRequest.ts~GetRequest.to",
    "access": "public",
    "description": " Configures the object with a destination URI.\n\n When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n it gets concatenated with the URL provided to the Axios instance\n when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 83,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{GetRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "resourceUri",
        "description": "The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n should send the {@link HTTPRequest}."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "GetRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "using",
    "memberof": "src/model/GetRequest.ts~GetRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/GetRequest.ts~GetRequest#using",
    "access": "public",
    "description": " Overrides the default Axios request configuration provided\n when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 110,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{GetRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<AxiosRequestConfig>"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Axios request configuration overrides"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "GetRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 225,
    "kind": "file",
    "name": "src/model/HTTPRequest.ts",
    "content": "import { Answerable, AnswersQuestions, Question, UsesAbilities } from '@serenity-js/core';\nimport { formatted } from '@serenity-js/core/lib/io';\nimport { AxiosRequestConfig } from 'axios';\n\n/**\n * @desc\n *  HTTP Request sent by the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n *  using the {@link Send} {@link @serenity-js/core/lib/screenplay~Interaction}\n *\n * @abstract\n * @extends {Question<Promise<AxiosRequestConfig>>}\n */\nexport abstract class HTTPRequest extends Question<Promise<AxiosRequestConfig>> {\n\n    /**\n     * @protected\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} [resourceUri]\n     *  URL to which the request should be sent\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<any>} [data]\n     *  Request body to be sent as part of the Put, Post or Patch request\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<AxiosRequestConfig>} [config]\n     *  Axios request configuration, which can be used to override the defaults\n     *  provided when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} is instantiated\n     */\n    protected constructor(\n        protected readonly resourceUri?: Answerable<string>,\n        protected readonly data?: Answerable<any>,\n        protected readonly config?: Answerable<AxiosRequestConfig>,\n    ) {\n        super('');\n        this.subject = `${ this.requestDescription() } to ${ formatted `${ this.resourceUri }` }`;\n    }\n\n    /**\n     * @desc\n     *  Resolves the {@link Question} in the context of a given {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *\n     * @param {AnswersQuestions & UsesAbilities} actor\n     * @returns {Promise<AxiosRequestConfig>}\n     */\n    answeredBy(actor: AnswersQuestions & UsesAbilities): Promise<AxiosRequestConfig> {\n        return Promise.all([\n            this.resourceUri ? actor.answer(this.resourceUri)   : Promise.resolve(void 0),\n            this.config      ? actor.answer(this.config)        : Promise.resolve({}),\n            this.data        ? actor.answer(this.data)          : Promise.resolve(void 0),\n        ]).\n        then(([url, config, data]) =>\n\n            Object.assign(\n                {},\n                { url, data },\n                config,\n                { method: this.httpMethodName() },\n            ),\n        ).\n        then(config =>\n            // eslint-disable-next-line unicorn/prefer-object-from-entries\n            Object.keys(config).reduce((acc, key) => {\n                if (config[key] !== null && config[key] !== undefined ) {\n                    acc[key] = config[key];\n                }\n                return acc;\n            }, {})\n        );\n    }\n\n    /**\n     * Determines the request method based on the name of the request class.\n     * For example: GetRequest => GET, PostRequest => POST, etc.\n     */\n    private httpMethodName(): string {\n        return this.constructor.name.replace(/Request/, '').toUpperCase();\n    }\n\n    /**\n     * A human-readable description of the request, such as \"a GET request\", \"an OPTIONS request\", etc.\n     */\n    private requestDescription(): string {\n        const\n            vowels = [ 'A', 'E', 'I', 'O', 'U' ],\n            method = this.httpMethodName();\n\n        return `${ ~vowels.indexOf(method[0]) ? 'an' : 'a' } ${ method } request`;\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/model/HTTPRequest.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 226,
    "kind": "class",
    "name": "HTTPRequest",
    "memberof": "src/model/HTTPRequest.ts",
    "static": true,
    "longname": "src/model/HTTPRequest.ts~HTTPRequest",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/model",
    "importStyle": "{HTTPRequest}",
    "description": " HTTP Request sent by the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n using the {@link Send} {@link @serenity-js/core/lib/screenplay~Interaction}",
    "lineNumber": 20,
    "abstract": true,
    "interface": false,
    "extends": [
      "Question<Promise<AxiosRequestConfig>>"
    ]
  },
  {
    "__docId__": 227,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/model/HTTPRequest.ts~HTTPRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/HTTPRequest.ts~HTTPRequest#constructor",
    "access": "protected",
    "description": "",
    "lineNumber": 35,
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": true,
        "name": "resourceUri",
        "description": "URL to which the request should be sent"
      },
      {
        "nullable": null,
        "types": [
          "Answerable<any>"
        ],
        "spread": false,
        "optional": true,
        "name": "data",
        "description": "Request body to be sent as part of the Put, Post or Patch request"
      },
      {
        "nullable": null,
        "types": [
          "Answerable<AxiosRequestConfig>"
        ],
        "spread": false,
        "optional": true,
        "name": "config",
        "description": "Axios request configuration, which can be used to override the defaults\n provided when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} is instantiated"
      }
    ]
  },
  {
    "__docId__": 228,
    "kind": "member",
    "name": "subject",
    "memberof": "src/model/HTTPRequest.ts~HTTPRequest",
    "static": false,
    "longname": "src/model/HTTPRequest.ts~HTTPRequest#subject",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "answeredBy",
    "memberof": "src/model/HTTPRequest.ts~HTTPRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/HTTPRequest.ts~HTTPRequest#answeredBy",
    "access": "public",
    "description": " Resolves the {@link Question} in the context of a given {@link @serenity-js/core/lib/screenplay/actor~Actor}",
    "lineNumber": 64,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<AxiosRequestConfig>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "AnswersQuestions & UsesAbilities"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<AxiosRequestConfig>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "httpMethodName",
    "memberof": "src/model/HTTPRequest.ts~HTTPRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/HTTPRequest.ts~HTTPRequest#httpMethodName",
    "access": "private",
    "description": "Determines the request method based on the name of the request class.\nFor example: GetRequest => GET, PostRequest => POST, etc. ",
    "lineNumber": 74,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "requestDescription",
    "memberof": "src/model/HTTPRequest.ts~HTTPRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/HTTPRequest.ts~HTTPRequest#requestDescription",
    "access": "private",
    "description": "A human-readable description of the request, such as \"a GET request\", \"an OPTIONS request\", etc. ",
    "lineNumber": 81,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 232,
    "kind": "file",
    "name": "src/model/HeadRequest.ts",
    "content": "import { Answerable } from '@serenity-js/core';\nimport { AxiosRequestConfig } from 'axios';\n\nimport { HTTPRequest } from './HTTPRequest';\n\n/**\n * @desc\n *  The HTTP HEAD method requests the headers that are returned if the specified resource\n *  would be requested with an HTTP GET method.\n *  Such a request can be done before deciding to download a large resource to save bandwidth, for example.\n *\n * @example <caption>File download test</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, HeadRequest, LastResponse, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n *\n *  actor.attemptsTo(\n *      Send.a(HeadRequest.to('/downloads/my-test-document.pdf')),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *      Ensure.that(LastResponse.header('Content-Length'), equals(256)),    // assuming we know the size of the document\n *  );\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD\n * @see https://tools.ietf.org/html/rfc7231#section-4.3.2\n *\n * @extends {HTTPRequest}\n */\nexport class HeadRequest extends HTTPRequest {\n\n    /**\n     * @desc\n     *  Configures the object with a destination URI.\n     *\n     *  When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n     *  it gets concatenated with the URL provided to the Axios instance\n     *  when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} resourceUri\n     *  The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  should send the {@link HTTPRequest}.\n     *\n     * @returns {HeadRequest}\n     */\n    static to(resourceUri: Answerable<string>): HeadRequest {\n        return new HeadRequest(resourceUri);\n    }\n\n    /**\n     * @desc\n     *  Overrides the default Axios request configuration provided\n     *  when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<AxiosRequestConfig>} config\n     *  Axios request configuration overrides\n     *\n     * @returns {HeadRequest}\n     */\n    using(config: Answerable<AxiosRequestConfig>): HeadRequest {\n        return new HeadRequest(this.resourceUri, undefined, config);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/model/HeadRequest.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 233,
    "kind": "class",
    "name": "HeadRequest",
    "memberof": "src/model/HeadRequest.ts",
    "static": true,
    "longname": "src/model/HeadRequest.ts~HeadRequest",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/model",
    "importStyle": "{HeadRequest}",
    "description": " The HTTP HEAD method requests the headers that are returned if the specified resource\n would be requested with an HTTP GET method.\n Such a request can be done before deciding to download a large resource to save bandwidth, for example.",
    "examples": [
      "<caption>File download test</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, HeadRequest, LastResponse, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n\n const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n\n actor.attemptsTo(\n     Send.a(HeadRequest.to('/downloads/my-test-document.pdf')),\n     Ensure.that(LastResponse.status(), equals(200)),\n     Ensure.that(LastResponse.header('Content-Length'), equals(256)),    // assuming we know the size of the document\n );"
    ],
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD",
      "https://tools.ietf.org/html/rfc7231#section-4.3.2"
    ],
    "lineNumber": 37,
    "interface": false,
    "extends": [
      "HTTPRequest"
    ]
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "to",
    "memberof": "src/model/HeadRequest.ts~HeadRequest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/model/HeadRequest.ts~HeadRequest.to",
    "access": "public",
    "description": " Configures the object with a destination URI.\n\n When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n it gets concatenated with the URL provided to the Axios instance\n when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{HeadRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "resourceUri",
        "description": "The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n should send the {@link HTTPRequest}."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HeadRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "using",
    "memberof": "src/model/HeadRequest.ts~HeadRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/HeadRequest.ts~HeadRequest#using",
    "access": "public",
    "description": " Overrides the default Axios request configuration provided\n when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 95,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{HeadRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<AxiosRequestConfig>"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Axios request configuration overrides"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "HeadRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 236,
    "kind": "file",
    "name": "src/model/OptionsRequest.ts",
    "content": "import { Answerable } from '@serenity-js/core';\nimport { AxiosRequestConfig } from 'axios';\n\nimport { HTTPRequest } from './HTTPRequest';\n\n/**\n * @desc\n *  The OPTIONS method requests information about the communication\n *  options available for the target resource, at either the origin\n *  server or an intervening intermediary.  This method allows a client\n *  to determine the options and/or requirements associated with a\n *  resource, or the capabilities of a server, without implying a\n *  resource action.\n *\n * @example <caption>File download test</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, OptionsRequest, LastResponse, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n *\n *  actor.attemptsTo(\n *      Send.a(OptionsRequest.to('/downloads/my-test-document.pdf')),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *      Ensure.that(LastResponse.header('Allow'), equals('OPTIONS, GET, HEAD')),\n *  );\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS\n * @see https://tools.ietf.org/html/rfc7231#section-4.3.7\n *\n * @extends {HTTPRequest}\n */\nexport class OptionsRequest extends HTTPRequest {\n\n    /**\n     * @desc\n     *  Configures the object with a destination URI.\n     *\n     *  When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n     *  it gets concatenated with the URL provided to the Axios instance\n     *  when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} resourceUri\n     *  The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  should send the {@link HTTPRequest}.\n     *\n     * @returns {OptionsRequest}\n     */\n    static to(resourceUri: Answerable<string>): OptionsRequest {\n        return new OptionsRequest(resourceUri);\n    }\n\n    /**\n     * @desc\n     *  Overrides the default Axios request configuration provided\n     *  when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<AxiosRequestConfig>} config\n     *  Axios request configuration overrides\n     *\n     * @returns {OptionsRequest}\n     */\n    using(config: Answerable<AxiosRequestConfig>): OptionsRequest {\n        return new OptionsRequest(this.resourceUri, undefined, config);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/model/OptionsRequest.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 237,
    "kind": "class",
    "name": "OptionsRequest",
    "memberof": "src/model/OptionsRequest.ts",
    "static": true,
    "longname": "src/model/OptionsRequest.ts~OptionsRequest",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/model",
    "importStyle": "{OptionsRequest}",
    "description": " The OPTIONS method requests information about the communication\n options available for the target resource, at either the origin\n server or an intervening intermediary.  This method allows a client\n to determine the options and/or requirements associated with a\n resource, or the capabilities of a server, without implying a\n resource action.",
    "examples": [
      "<caption>File download test</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, OptionsRequest, LastResponse, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n\n const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n\n actor.attemptsTo(\n     Send.a(OptionsRequest.to('/downloads/my-test-document.pdf')),\n     Ensure.that(LastResponse.status(), equals(200)),\n     Ensure.that(LastResponse.header('Allow'), equals('OPTIONS, GET, HEAD')),\n );"
    ],
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS",
      "https://tools.ietf.org/html/rfc7231#section-4.3.7"
    ],
    "lineNumber": 40,
    "interface": false,
    "extends": [
      "HTTPRequest"
    ]
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "to",
    "memberof": "src/model/OptionsRequest.ts~OptionsRequest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/model/OptionsRequest.ts~OptionsRequest.to",
    "access": "public",
    "description": " Configures the object with a destination URI.\n\n When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n it gets concatenated with the URL provided to the Axios instance\n when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 71,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{OptionsRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "resourceUri",
        "description": "The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n should send the {@link HTTPRequest}."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "OptionsRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "using",
    "memberof": "src/model/OptionsRequest.ts~OptionsRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/OptionsRequest.ts~OptionsRequest#using",
    "access": "public",
    "description": " Overrides the default Axios request configuration provided\n when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 98,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{OptionsRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<AxiosRequestConfig>"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Axios request configuration overrides"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "OptionsRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 240,
    "kind": "file",
    "name": "src/model/PatchRequest.ts",
    "content": "import { Answerable } from '@serenity-js/core';\nimport { AxiosRequestConfig } from 'axios';\n\nimport { HTTPRequest } from './HTTPRequest';\n\n/**\n * @desc\n *  The PATCH method requests that a set of changes described in the\n *  request entity be applied to the resource identified by the `resourceUri`.\n *\n * @example <caption>Add new resource to a collection</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, LastResponse, PatchRequest, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n *\n *  actor.attemptsTo(\n *      Send.a(PatchRequest.to('/books/0-688-00230-7').with({\n *          lastReadOn: '2016-06-16',\n *      })),\n *      Ensure.that(LastResponse.status(), equals(204)),\n *  );\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH\n * @see https://tools.ietf.org/html/rfc5789\n *\n * @extends {HTTPRequest}\n */\nexport class PatchRequest extends HTTPRequest {\n\n    /**\n     * @desc\n     *  Configures the object with a destination URI.\n     *\n     *  When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n     *  it gets concatenated with the URL provided to the Axios instance\n     *  when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} resourceUri\n     *  The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  should send the {@link HTTPRequest}.\n     *\n     * @returns {PatchRequest}\n     */\n    static to(resourceUri: Answerable<string>): PatchRequest {\n        return new PatchRequest(resourceUri);\n    }\n\n    /**\n     * @desc\n     *  Configures the object with a request body.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<any>} data\n     *  Data to be sent to the `resourceUri`\n     *\n     * @returns {PatchRequest}\n     */\n    with(data: Answerable<any>): PatchRequest {\n        return new PatchRequest(this.resourceUri, data, this.config);\n    }\n\n    /**\n     * @desc\n     *  Overrides the default Axios request configuration provided\n     *  when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<AxiosRequestConfig>} config\n     *  Axios request configuration overrides\n     *\n     * @returns {PatchRequest}\n     */\n    using(config: Answerable<AxiosRequestConfig>): PatchRequest {\n        return new PatchRequest(this.resourceUri, this.data, config);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/model/PatchRequest.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 241,
    "kind": "class",
    "name": "PatchRequest",
    "memberof": "src/model/PatchRequest.ts",
    "static": true,
    "longname": "src/model/PatchRequest.ts~PatchRequest",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/model",
    "importStyle": "{PatchRequest}",
    "description": " The PATCH method requests that a set of changes described in the\n request entity be applied to the resource identified by the `resourceUri`.",
    "examples": [
      "<caption>Add new resource to a collection</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, LastResponse, PatchRequest, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n\n const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n\n actor.attemptsTo(\n     Send.a(PatchRequest.to('/books/0-688-00230-7').with({\n         lastReadOn: '2016-06-16',\n     })),\n     Ensure.that(LastResponse.status(), equals(204)),\n );"
    ],
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH",
      "https://tools.ietf.org/html/rfc5789"
    ],
    "lineNumber": 37,
    "interface": false,
    "extends": [
      "HTTPRequest"
    ]
  },
  {
    "__docId__": 242,
    "kind": "method",
    "name": "to",
    "memberof": "src/model/PatchRequest.ts~PatchRequest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/model/PatchRequest.ts~PatchRequest.to",
    "access": "public",
    "description": " Configures the object with a destination URI.\n\n When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n it gets concatenated with the URL provided to the Axios instance\n when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 68,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PatchRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "resourceUri",
        "description": "The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n should send the {@link HTTPRequest}."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PatchRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 243,
    "kind": "method",
    "name": "with",
    "memberof": "src/model/PatchRequest.ts~PatchRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/PatchRequest.ts~PatchRequest#with",
    "access": "public",
    "description": " Configures the object with a request body.",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PatchRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to be sent to the `resourceUri`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PatchRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 244,
    "kind": "method",
    "name": "using",
    "memberof": "src/model/PatchRequest.ts~PatchRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/PatchRequest.ts~PatchRequest#using",
    "access": "public",
    "description": " Overrides the default Axios request configuration provided\n when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 121,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PatchRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<AxiosRequestConfig>"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Axios request configuration overrides"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PatchRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 245,
    "kind": "file",
    "name": "src/model/PostRequest.ts",
    "content": "import { Answerable } from '@serenity-js/core';\nimport { AxiosRequestConfig } from 'axios';\n\nimport { HTTPRequest } from './HTTPRequest';\n\n/**\n * @desc\n *  The HTTP POST method requests that the origin server accepts\n *  the entity enclosed in the request as a new subordinate of the resource\n *  identified by the `resourceUri`.\n *\n *  This means that the POST should be used when you want to create a child resource under\n *  a collection of resources.\n *\n *  POST request is neither [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe),\n *  nor [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\n *  This means that if you retry a POST request N times,\n *  a correctly implemented HTTP REST API will create N resources with N different URIs.\n *\n * @example <caption>Add new resource to a collection</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, LastResponse, PostRequest, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n *\n *  actor.attemptsTo(\n *      Send.a(PostRequest.to('/books').with({\n *          isbn: '0-688-00230-7',\n *          title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n *          author: 'Robert M. Pirsig',\n *      })),\n *      Ensure.that(LastResponse.status(), equals(201)),\n *      Ensure.that(LastResponse.header('Location'), equals('/books/0-688-00230-7')),\n *  );\n *\n * @example <caption>Submit a HTML form</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, LastResponse, PostRequest, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *  import { stringify } from 'querystring';\n *\n *  const\n *      actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com')),\n *      formData = stringify({\n *          name: actor.name,\n *          email: `${ actor.name }@example.com`,\n *          text: 'Your website is great! Learnt a lot :-)'\n *      });\n *\n *  actor.attemptsTo(\n *      Send.a(PostRequest.to('/feedback').with(postData).using({\n *          headers: {\n *              'Content-Type': 'application/x-www-form-urlencoded',\n *              'Content-Length': formData.length\n *          }\n *      })),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *      Ensure.that(LastResponse.header('Location'), equals('/feedback/thank-you.html')),\n *  );\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST\n * @see https://tools.ietf.org/html/rfc7231#section-4.3.3\n *\n * @extends {HTTPRequest}\n */\nexport class PostRequest extends HTTPRequest {\n\n    /**\n     * @desc\n     *  Configures the object with a destination URI.\n     *\n     *  When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n     *  it gets concatenated with the URL provided to the Axios instance\n     *  when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} resourceUri\n     *  The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  should send the {@link HTTPRequest}.\n     *\n     * @returns {PostRequest}\n     */\n    static to(resourceUri: Answerable<string>): PostRequest {\n        return new PostRequest(resourceUri);\n    }\n\n    /**\n     * @desc\n     *  Configures the object with a request body.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<any>} data\n     *  Data to be sent to the `resourceUri`\n     *\n     * @returns {PostRequest}\n     */\n    with(data: Answerable<any>): PostRequest {\n        return new PostRequest(this.resourceUri, data, this.config);\n    }\n\n    /**\n     * @desc\n     *  Overrides the default Axios request configuration provided\n     *  when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<AxiosRequestConfig>} config\n     *  Axios request configuration overrides\n     *\n     * @returns {PostRequest}\n     */\n    using(config: Answerable<AxiosRequestConfig>): PostRequest {\n        return new PostRequest(this.resourceUri, this.data, config);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/model/PostRequest.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 246,
    "kind": "class",
    "name": "PostRequest",
    "memberof": "src/model/PostRequest.ts",
    "static": true,
    "longname": "src/model/PostRequest.ts~PostRequest",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/model",
    "importStyle": "{PostRequest}",
    "description": " The HTTP POST method requests that the origin server accepts\n the entity enclosed in the request as a new subordinate of the resource\n identified by the `resourceUri`.\n\n This means that the POST should be used when you want to create a child resource under\n a collection of resources.\n\n POST request is neither [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe),\n nor [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\n This means that if you retry a POST request N times,\n a correctly implemented HTTP REST API will create N resources with N different URIs.",
    "examples": [
      "<caption>Add new resource to a collection</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, LastResponse, PostRequest, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n\n const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n\n actor.attemptsTo(\n     Send.a(PostRequest.to('/books').with({\n         isbn: '0-688-00230-7',\n         title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n         author: 'Robert M. Pirsig',\n     })),\n     Ensure.that(LastResponse.status(), equals(201)),\n     Ensure.that(LastResponse.header('Location'), equals('/books/0-688-00230-7')),\n );",
      "<caption>Submit a HTML form</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, LastResponse, PostRequest, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n import { stringify } from 'querystring';\n\n const\n     actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com')),\n     formData = stringify({\n         name: actor.name,\n         email: `${ actor.name }@example.com`,\n         text: 'Your website is great! Learnt a lot :-)'\n     });\n\n actor.attemptsTo(\n     Send.a(PostRequest.to('/feedback').with(postData).using({\n         headers: {\n             'Content-Type': 'application/x-www-form-urlencoded',\n             'Content-Length': formData.length\n         }\n     })),\n     Ensure.that(LastResponse.status(), equals(200)),\n     Ensure.that(LastResponse.header('Location'), equals('/feedback/thank-you.html')),\n );"
    ],
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST",
      "https://tools.ietf.org/html/rfc7231#section-4.3.3"
    ],
    "lineNumber": 74,
    "interface": false,
    "extends": [
      "HTTPRequest"
    ]
  },
  {
    "__docId__": 247,
    "kind": "method",
    "name": "to",
    "memberof": "src/model/PostRequest.ts~PostRequest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/model/PostRequest.ts~PostRequest.to",
    "access": "public",
    "description": " Configures the object with a destination URI.\n\n When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n it gets concatenated with the URL provided to the Axios instance\n when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 105,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PostRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "resourceUri",
        "description": "The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n should send the {@link HTTPRequest}."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PostRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "with",
    "memberof": "src/model/PostRequest.ts~PostRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/PostRequest.ts~PostRequest#with",
    "access": "public",
    "description": " Configures the object with a request body.",
    "lineNumber": 131,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PostRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to be sent to the `resourceUri`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PostRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "using",
    "memberof": "src/model/PostRequest.ts~PostRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/PostRequest.ts~PostRequest#using",
    "access": "public",
    "description": " Overrides the default Axios request configuration provided\n when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 158,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PostRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<AxiosRequestConfig>"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Axios request configuration overrides"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PostRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 250,
    "kind": "file",
    "name": "src/model/PutRequest.ts",
    "content": "import { Answerable } from '@serenity-js/core';\nimport { AxiosRequestConfig } from 'axios';\n\nimport { HTTPRequest } from './HTTPRequest';\n\n/**\n * @desc\n *  The PUT method requests that the state of the target resource be\n *  created or replaced with the state defined by the representation\n *  enclosed in the request message payload.\n *\n *  PUT request should be used when you want to create\n *  a new resource at a known `resourceUri` (e.g. `/books/0-688-00230-7`)\n *  or replace an existing resource at such `resourceUri`.\n *\n *  PUT request is [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent):\n *  calling it once or several times successively has the same effect (that is no _side effect_).\n *\n * @example <caption>Create a new resource at a known location</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, LastResponse, PutRequest, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n *\n *  actor.attemptsTo(\n *      Send.a(PutRequest.to('/books/0-688-00230-7').with({\n *          isbn: '0-688-00230-7',\n *          title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n *          author: 'Robert M. Pirsig',\n *      })),\n *      Ensure.that(LastResponse.status(), equals(201)),\n *  );\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT\n * @see https://tools.ietf.org/html/rfc7231#section-4.3.4\n *\n * @extends {HTTPRequest}\n */\nexport class PutRequest extends HTTPRequest {\n\n    /**\n     * @desc\n     *  Configures the object with a destination URI.\n     *\n     *  When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n     *  it gets concatenated with the URL provided to the Axios instance\n     *  when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} resourceUri\n     *  The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  should send the {@link HTTPRequest}.\n     *\n     * @returns {PutRequest}\n     */\n    static to(resourceUri: Answerable<string>): PutRequest {\n        return new PutRequest(resourceUri);\n    }\n\n    /**\n     * @desc\n     *  Configures the object with a request body.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<any>} data\n     *  Data to be sent to the `resourceUri`\n     *\n     * @returns {PutRequest}\n     */\n    with(data: Answerable<any>): PutRequest {\n        return new PutRequest(this.resourceUri, data, this.config);\n    }\n\n    /**\n     * @desc\n     *  Overrides the default Axios request configuration provided\n     *  when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<AxiosRequestConfig>} config\n     *  Axios request configuration overrides\n     *\n     * @returns {PutRequest}\n     */\n    using(config: Answerable<AxiosRequestConfig>): PutRequest {\n        return new PutRequest(this.resourceUri, this.data, config);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/model/PutRequest.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "class",
    "name": "PutRequest",
    "memberof": "src/model/PutRequest.ts",
    "static": true,
    "longname": "src/model/PutRequest.ts~PutRequest",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/model",
    "importStyle": "{PutRequest}",
    "description": " The PUT method requests that the state of the target resource be\n created or replaced with the state defined by the representation\n enclosed in the request message payload.\n\n PUT request should be used when you want to create\n a new resource at a known `resourceUri` (e.g. `/books/0-688-00230-7`)\n or replace an existing resource at such `resourceUri`.\n\n PUT request is [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent):\n calling it once or several times successively has the same effect (that is no _side effect_).",
    "examples": [
      "<caption>Create a new resource at a known location</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, LastResponse, PutRequest, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n\n const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n\n actor.attemptsTo(\n     Send.a(PutRequest.to('/books/0-688-00230-7').with({\n         isbn: '0-688-00230-7',\n         title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n         author: 'Robert M. Pirsig',\n     })),\n     Ensure.that(LastResponse.status(), equals(201)),\n );"
    ],
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT",
      "https://tools.ietf.org/html/rfc7231#section-4.3.4"
    ],
    "lineNumber": 47,
    "interface": false,
    "extends": [
      "HTTPRequest"
    ]
  },
  {
    "__docId__": 252,
    "kind": "method",
    "name": "to",
    "memberof": "src/model/PutRequest.ts~PutRequest",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/model/PutRequest.ts~PutRequest.to",
    "access": "public",
    "description": " Configures the object with a destination URI.\n\n When the `resourceUri` is not a fully qualified URL but a path, such as `/products/2`,\n it gets concatenated with the URL provided to the Axios instance\n when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 78,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PutRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "resourceUri",
        "description": "The URI where the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n should send the {@link HTTPRequest}."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PutRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "with",
    "memberof": "src/model/PutRequest.ts~PutRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/PutRequest.ts~PutRequest#with",
    "access": "public",
    "description": " Configures the object with a request body.",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PutRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<any>"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "Data to be sent to the `resourceUri`"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PutRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 254,
    "kind": "method",
    "name": "using",
    "memberof": "src/model/PutRequest.ts~PutRequest",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/model/PutRequest.ts~PutRequest#using",
    "access": "public",
    "description": " Overrides the default Axios request configuration provided\n when {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} was instantiated.",
    "lineNumber": 131,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{PutRequest}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<AxiosRequestConfig>"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Axios request configuration overrides"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "PutRequest"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 255,
    "kind": "file",
    "name": "src/model/index.ts",
    "content": "export * from './DeleteRequest';\nexport * from './GetRequest';\nexport * from './HeadRequest';\nexport * from './HTTPRequest';\nexport * from './OptionsRequest';\nexport * from './PatchRequest';\nexport * from './PostRequest';\nexport * from './PutRequest';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/model/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 256,
    "kind": "file",
    "name": "src/screenplay/abilities/CallAnApi.ts",
    "content": "import { Ability, ConfigurationError, LogicError, TestCompromisedError, UsesAbilities } from '@serenity-js/core';\nimport axios, { AxiosError, AxiosInstance, AxiosPromise, AxiosRequestConfig, AxiosResponse } from 'axios';\nconst mergeConfig = require('axios/lib/core/mergeConfig');      // eslint-disable-line @typescript-eslint/no-var-requires\nconst buildFullPath = require('axios/lib/core/buildFullPath');  // eslint-disable-line @typescript-eslint/no-var-requires\n\n/**\n * @desc\n *  An {@link @serenity-js/core/lib/screenplay~Ability} that enables the {@link Actor} to call a HTTP API.\n *  If you need to connect via a proxy, check out [this article](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d).\n *\n * @example <caption>Using a default Axios HTTP client</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  const actor = Actor.named('Apisit').whoCan(\n *      CallAnApi.at('https://myapp.com/api'),\n *  );\n *\n *  actor.attemptsTo(\n *      Send.a(GetRequest.to('/users/2')),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *  );\n *\n * @example <caption>Using Axios client with custom configuration</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  import axios from 'axios';\n *\n *  const axiosInstance = axios.create({\n *      timeout: 5 * 1000,\n *      headers: {\n *          'X-Custom-Api-Key': 'secret-key',\n *      },\n *  });\n *\n *  const actor = Actor.named('Apisit').whoCan(\n *      CallAnApi.using(axiosInstance),\n *  );\n *\n *  actor.attemptsTo(\n *      Send.a(GetRequest.to('/users/2')),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *  );\n *\n * @see https://github.com/axios/axios\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\n *\n * @public\n * @implements {@link @serenity-js/core/lib/screenplay~Ability}\n */\nexport class CallAnApi implements Ability {\n\n    /** @private */\n    private lastResponse: AxiosResponse;\n\n    /**\n     * @desc\n     *  Ability to Call and api at a specified baseUrl\n     *\n     *  Default timeout is set to 2s.\n     *\n     *  Default request headers:\n     *  - Accept: application/json,application/xml\n     *\n     * @param {string} baseURL\n     * @returns {CallAnApi}\n     */\n    static at(baseURL: string): CallAnApi {\n        return new CallAnApi(axios.create({\n            baseURL,\n            timeout: 2000,\n            headers: { Accept: 'application/json,application/xml' },\n        }));\n    }\n\n    /**\n     * @desc\n     *  Ability to Call a REST API using a given axios instance.\n     *\n     *  Useful when you need to customise Axios to\n     *  [make it aware of proxies](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d),\n     *  for example.\n     *\n     * @param {AxiosInstance} axiosInstance\n     * @returns {CallAnApi}\n     *\n     * @see {@link AxiosInstance}\n     */\n    static using(axiosInstance: AxiosInstance): CallAnApi {\n        return new CallAnApi(axiosInstance);\n    }\n\n    /**\n     * @desc\n     *  Used to access the Actor's ability to {@link CallAnApi}\n     *  from within the {@link @serenity-js/core/lib/screenplay~Interaction} classes,\n     *  such as {@link Send}.\n     *\n     * @param {UsesAbilities} actor\n     * @return {CallAnApi}\n     */\n    static as(actor: UsesAbilities): CallAnApi {\n        return actor.abilityTo(CallAnApi);\n    }\n\n    /**\n     * @param {AxiosInstance} axiosInstance\n     *  A pre-configured instance of the Axios HTTP client\n     *\n     * @see {@link AxiosInstance}\n     */\n    constructor(private readonly axiosInstance: AxiosInstance) {\n    }\n\n    /**\n     * @desc\n     *  Allows for the original Axios config to be changed after\n     *  the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}\n     *  has been instantiated and given to the {@link Actor}.\n     *\n     * @param {function (original: AxiosRequestConfig): any} fn\n     * @returns {void}\n     *\n     * @see {@link AxiosRequestConfig}\n     */\n    modifyConfig(fn: (original: AxiosRequestConfig) => any): void {\n        fn(this.axiosInstance.defaults);\n    }\n\n    /**\n     * @desc\n     *  Sends a HTTP request to a specified url.\n     *  Response will be cached and available via {@link CallAnApi#mapLastResponse}\n     *\n     * @param {AxiosRequestConfig} config\n     *  Axios request configuration, which can be used to override the defaults\n     *  provided when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} is instantiated\n     *\n     * @returns {Promise<AxiosResponse>}\n     *  A promise of an AxiosResponse\n     *\n     * @see {@link AxiosRequestConfig}\n     * @see {@link AxiosResponse}\n     */\n    request(config: AxiosRequestConfig): Promise<AxiosResponse> {\n        return this.captureResponseOf(this.axiosInstance.request(config));\n    }\n\n    /**\n     * @desc\n     *  Resolves the final URL, based on the {@link AxiosRequestConfig} provided\n     *  any any defaults {@link AxiosInstance} has been configured with.\n     *\n     * @param {AxiosRequestConfig} config\n     * @returns {string}\n     *\n     * @see {@link AxiosRequestConfig}\n     * @see {@link AxiosInstance}\n     */\n    resolveUrl(config: AxiosRequestConfig): string {\n        const merged = mergeConfig(this.axiosInstance.defaults, config);\n\n        return buildFullPath(merged.baseURL, merged.url);\n    }\n\n    /**\n     * @desc\n     *  Maps the last cached response to another type.\n     *  Useful when you need to extract a portion of the {@link AxiosResponse} object.\n     *\n     * @param {function<T>(AxiosResponse): T} fn - mapper function\n     * @returns {T}\n     *\n     * @see {@link AxiosResponse}\n     */\n    mapLastResponse<T>(fn: (response: AxiosResponse) => T): T {\n        if (!this.lastResponse) {\n            throw new LogicError(`Make sure to perform a HTTP API call before checking on the response`);\n        }\n\n        return fn(this.lastResponse);\n    }\n\n    private captureResponseOf(promisedResponse: AxiosPromise): AxiosPromise {\n        return promisedResponse\n            .then(\n                lastResponse => {\n                    this.lastResponse = lastResponse;\n\n                    return lastResponse;\n                },\n                error => {\n                    switch (true) {\n                        case /timeout.*exceeded/.test(error.message):\n                            throw new TestCompromisedError(`The request has timed out`, error);\n                        case /Network Error/.test(error.message):\n                            throw new TestCompromisedError(`A network error has occurred`, error);\n                        case error instanceof TypeError:\n                            throw new ConfigurationError(`Looks like there was an issue with Axios configuration`, error);\n                        case ! (error as AxiosError).response:\n                            throw new TestCompromisedError(`The API call has failed`, error);   // todo: include request url\n                        default:\n                            this.lastResponse = error.response;\n\n                            return error.response;\n                    }\n                },\n            );\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/screenplay/abilities/CallAnApi.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 257,
    "kind": "variable",
    "name": "mergeConfig",
    "memberof": "src/screenplay/abilities/CallAnApi.ts",
    "static": true,
    "longname": "src/screenplay/abilities/CallAnApi.ts~mergeConfig",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/rest/src/screenplay/abilities/CallAnApi.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 258,
    "kind": "variable",
    "name": "buildFullPath",
    "memberof": "src/screenplay/abilities/CallAnApi.ts",
    "static": true,
    "longname": "src/screenplay/abilities/CallAnApi.ts~buildFullPath",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/rest/src/screenplay/abilities/CallAnApi.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 259,
    "kind": "class",
    "name": "CallAnApi",
    "memberof": "src/screenplay/abilities/CallAnApi.ts",
    "static": true,
    "longname": "src/screenplay/abilities/CallAnApi.ts~CallAnApi",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/screenplay/abilities",
    "importStyle": "{CallAnApi}",
    "description": " An {@link @serenity-js/core/lib/screenplay~Ability} that enables the {@link Actor} to call a HTTP API.\n If you need to connect via a proxy, check out [this article](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d).",
    "examples": [
      "<caption>Using a default Axios HTTP client</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n\n const actor = Actor.named('Apisit').whoCan(\n     CallAnApi.at('https://myapp.com/api'),\n );\n\n actor.attemptsTo(\n     Send.a(GetRequest.to('/users/2')),\n     Ensure.that(LastResponse.status(), equals(200)),\n );",
      "<caption>Using Axios client with custom configuration</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n\n import axios from 'axios';\n\n const axiosInstance = axios.create({\n     timeout: 5 * 1000,\n     headers: {\n         'X-Custom-Api-Key': 'secret-key',\n     },\n });\n\n const actor = Actor.named('Apisit').whoCan(\n     CallAnApi.using(axiosInstance),\n );\n\n actor.attemptsTo(\n     Send.a(GetRequest.to('/users/2')),\n     Ensure.that(LastResponse.status(), equals(200)),\n );"
    ],
    "see": [
      "https://github.com/axios/axios",
      "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods"
    ],
    "lineNumber": 61,
    "interface": false,
    "implements": [
      "Ability"
    ]
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "lastResponse",
    "memberof": "src/screenplay/abilities/CallAnApi.ts~CallAnApi",
    "static": false,
    "longname": "src/screenplay/abilities/CallAnApi.ts~CallAnApi#lastResponse",
    "access": "private",
    "description": null,
    "lineNumber": 75,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "method",
    "name": "at",
    "memberof": "src/screenplay/abilities/CallAnApi.ts~CallAnApi",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/abilities/CallAnApi.ts~CallAnApi.at",
    "access": "public",
    "description": " Ability to Call and api at a specified baseUrl\n\n Default timeout is set to 2s.\n\n Default request headers:\n - Accept: application/json,application/xml",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{CallAnApi}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "baseURL",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "CallAnApi"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 262,
    "kind": "method",
    "name": "using",
    "memberof": "src/screenplay/abilities/CallAnApi.ts~CallAnApi",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/abilities/CallAnApi.ts~CallAnApi.using",
    "access": "public",
    "description": " Ability to Call a REST API using a given axios instance.\n\n Useful when you need to customise Axios to\n [make it aware of proxies](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d),\n for example.",
    "see": [
      "{@link AxiosInstance}"
    ],
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{CallAnApi}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "AxiosInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "axiosInstance",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "CallAnApi"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 263,
    "kind": "method",
    "name": "as",
    "memberof": "src/screenplay/abilities/CallAnApi.ts~CallAnApi",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/abilities/CallAnApi.ts~CallAnApi.as",
    "access": "public",
    "description": " Used to access the Actor's ability to {@link CallAnApi}\n from within the {@link @serenity-js/core/lib/screenplay~Interaction} classes,\n such as {@link Send}.",
    "lineNumber": 168,
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "CallAnApi"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 264,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/screenplay/abilities/CallAnApi.ts~CallAnApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/abilities/CallAnApi.ts~CallAnApi#constructor",
    "access": "public",
    "description": "",
    "see": [
      "{@link AxiosInstance}"
    ],
    "lineNumber": 178,
    "params": [
      {
        "nullable": null,
        "types": [
          "AxiosInstance"
        ],
        "spread": false,
        "optional": false,
        "name": "axiosInstance",
        "description": "A pre-configured instance of the Axios HTTP client"
      }
    ]
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "modifyConfig",
    "memberof": "src/screenplay/abilities/CallAnApi.ts~CallAnApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/abilities/CallAnApi.ts~CallAnApi#modifyConfig",
    "access": "public",
    "description": " Allows for the original Axios config to be changed after\n the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}\n has been instantiated and given to the {@link Actor}.",
    "see": [
      "{@link AxiosRequestConfig}"
    ],
    "lineNumber": 205,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function (original: AxiosRequestConfig): any"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "request",
    "memberof": "src/screenplay/abilities/CallAnApi.ts~CallAnApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/abilities/CallAnApi.ts~CallAnApi#request",
    "access": "public",
    "description": " Sends a HTTP request to a specified url.\n Response will be cached and available via {@link CallAnApi#mapLastResponse}",
    "see": [
      "{@link AxiosRequestConfig}",
      "{@link AxiosResponse}"
    ],
    "lineNumber": 237,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<AxiosResponse>}\n A promise of an AxiosResponse"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "AxiosRequestConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Axios request configuration, which can be used to override the defaults\n provided when the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability} is instantiated"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<AxiosResponse>"
      ],
      "spread": false,
      "description": "A promise of an AxiosResponse"
    }
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "resolveUrl",
    "memberof": "src/screenplay/abilities/CallAnApi.ts~CallAnApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/abilities/CallAnApi.ts~CallAnApi#resolveUrl",
    "access": "public",
    "description": " Resolves the final URL, based on the {@link AxiosRequestConfig} provided\n any any defaults {@link AxiosInstance} has been configured with.",
    "see": [
      "{@link AxiosRequestConfig}",
      "{@link AxiosInstance}"
    ],
    "lineNumber": 265,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "AxiosRequestConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "mapLastResponse",
    "memberof": "src/screenplay/abilities/CallAnApi.ts~CallAnApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/abilities/CallAnApi.ts~CallAnApi#mapLastResponse",
    "access": "public",
    "description": " Maps the last cached response to another type.\n Useful when you need to extract a portion of the {@link AxiosResponse} object.",
    "see": [
      "{@link AxiosResponse}"
    ],
    "lineNumber": 294,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{T}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "function<T>(AxiosResponse): T"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "mapper function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "captureResponseOf",
    "memberof": "src/screenplay/abilities/CallAnApi.ts~CallAnApi",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/abilities/CallAnApi.ts~CallAnApi#captureResponseOf",
    "access": "private",
    "description": " ",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "AxiosPromise"
        ],
        "spread": false,
        "optional": false,
        "name": "promisedResponse",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AxiosPromise"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 272,
    "kind": "file",
    "name": "src/screenplay/abilities/index.ts",
    "content": "export * from './CallAnApi';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/screenplay/abilities/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "src/screenplay/index.ts",
    "content": "export * from './abilities';\nexport * from './interactions';\nexport * from './questions';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/screenplay/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "src/screenplay/interactions/ChangeApiConfig.ts",
    "content": "import { Answerable, AnswersQuestions, CollectsArtifacts, Interaction, LogicError, UsesAbilities } from '@serenity-js/core';\nimport { URL } from 'url';\n\nimport { CallAnApi } from '../abilities';\n\n/**\n * @desc\n *  Changes configuration of the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}\n *  the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n *  executing this {@link @serenity-js/core/lib/screenplay~Interaction} has been configured with.\n *\n * @example <caption>Changing API URL for all subsequent requests</caption>\n *  import { actorCalled } from '@serenity-js/core';\n *  import { Navigate, Target, Text } from '@serenity-js/protractor';\n *  import { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *  import { protractor, by } from 'protractor';\n *\n *  import axios from 'axios';\n *\n *  const actor = actorCalled('Apisitt').whoCan(\n *      BrowseTheWeb.using(protractor.browser),\n *\n *      // Note: no default base URL is given when the axios instance is created\n *      CallAnApi.using(axios.create()),\n *  );\n *\n *  // Let's imagine that the website under test displays\n *  // a dynamically generated API URL we'd like to use\n *  const ApiDetailsWidget = {\n *      Url: Target.the('API URL').located(by.id('api-url')),\n *  }\n *\n *  actor.attemptsTo(\n *      Navigate.to('/profile'),\n *\n *      // We change the API URL based on the text displayed in the widget\n *      // (although we could change it to some arbitrary string too).\n *      ChangeApiConfig.setUrlTo(Text.of(ApiDetailsWidget.Url)),\n *\n *      // Any subsequent request will be sent to the newly set URL\n *      Send.a(GetRequest.to('/projects')),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *  );\n *\n * @example <caption>Changing API port for all subsequent requests</caption>\n *  import { actorCalled } from '@serenity-js/core';\n *  import { LocalServer, ManageALocalServer, StartLocalServer } from '@serenity-js/local-server';\n *  import { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  const actor = actorCalled('Apisitt').whoCan(\n *      ManageALocalServer.runningAHttpListener(someServer),\n *      CallAnApi.at('http://localhost'),\n *  );\n *\n *  actor.attemptsTo(\n *      StartALocalServer.onRandomPort(),\n *      ChangeApiConfig.setPortTo(LocalServer.port()),\n *      Send.a(GetRequest.to('/api')),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *  );\n *\n * @example <caption>Setting a header for all subsequent requests</caption>\n *  import { actorCalled, Question } from '@serenity-js/core';\n *  import { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from '@serenity-js/rest';\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  const actor = actorCalled('Apisitt').whoCan(\n *      CallAnApi.at('http://localhost'),\n *  );\n *\n *  // A sample Question reading Node process environment variable\n *  const EnvVar = (var_name: string) =>\n *      Question.about(`${ name } environment variable`, actor => process.env[var_name]);\n *\n *  actor.attemptsTo(\n *      ChangeApiConfig.setHeader('Authorization', EnvVar('TOKEN')),\n *      Send.a(GetRequest.to('/api')),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *  );\n */\nexport class ChangeApiConfig {\n\n    /**\n     * @desc\n     *  Instructs the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  to change the base URL of their {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} newApiUrl\n     * @returns {@serenity-js/core/lib/screenplay~Interaction}\n     */\n    static setUrlTo(newApiUrl: Answerable<string>): Interaction {\n        return new ChangeApiConfigSetUrl(newApiUrl);\n    }\n\n    /**\n     * @desc\n     *  Instructs the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  to change the port configured in the base URL of their {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} newApiPort\n     * @returns {@serenity-js/core/lib/screenplay~Interaction}\n     */\n    static setPortTo(newApiPort: Answerable<number>): Interaction {\n        return new ChangeApiConfigSetPort(newApiPort)\n    }\n\n    /**\n     * @desc\n     *  Instructs the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  to modify the configuration of the {@link AxiosInstance}\n     *  used by {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}\n     *  and set a HTTP request header for any subsequent {@link HTTPRequest}\n     *  issued via {@link Send}.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} name\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} value\n     *\n     * @returns {@serenity-js/core/lib/screenplay~Interaction}\n     */\n    static setHeader(name: Answerable<string>, value: Answerable<string>): Interaction {\n        return new ChangeApiConfigSetHeader(name, value);\n    }\n}\n\n/**\n * @package\n */\nclass ChangeApiConfigSetUrl extends Interaction {\n    constructor(private readonly newApiUrl: Answerable<string>) {\n        super();\n    }\n\n    performAs(actor: UsesAbilities & CollectsArtifacts & AnswersQuestions): Promise<void> {\n        return actor.answer(this.newApiUrl)\n            .then(newApiUrl => CallAnApi.as(actor).modifyConfig(config => config.baseURL = newApiUrl));\n    }\n\n    toString(): string {\n        return `#actor changes API URL configuration to ${ this.newApiUrl }`;\n    }\n}\n\n/**\n * @package\n */\nclass ChangeApiConfigSetPort  extends Interaction {\n    constructor(private readonly newPort: Answerable<number | string>) {\n        super();\n    }\n\n    performAs(actor: UsesAbilities & CollectsArtifacts & AnswersQuestions): Promise<void> {\n        return actor.answer(this.newPort)\n            .then(newPort => CallAnApi.as(actor).modifyConfig(config => {\n                if (! config.baseURL) {\n                    throw new LogicError(`Can't change the port of a baseURL that has not been set.`)\n                }\n\n                try {\n                    const newUrl = new URL(config.baseURL);\n                    newUrl.port = `${ newPort }`;\n                    config.baseURL = newUrl.toString();\n                }\n                catch (error) {\n                    throw new LogicError(`Could not change the API port`, error);\n                }\n            }));\n    }\n\n    toString(): string {\n        return `#actor changes API port configuration to ${ this.newPort }`;\n    }\n}\n\n/**\n * @package\n *\n * @see https://github.com/axios/axios#custom-instance-defaults\n */\nclass ChangeApiConfigSetHeader extends Interaction {\n\n    constructor(\n        private readonly name: Answerable<string>,\n        private readonly value: Answerable<string>\n    ) {\n        super();\n    }\n\n    performAs(actor: UsesAbilities & CollectsArtifacts & AnswersQuestions): Promise<void> {\n        return Promise.all([\n            actor.answer(this.name),\n            actor.answer(this.value),\n        ]).\n        then(([ name, value ]) => {\n            if (! name) {\n                throw new LogicError(`Looks like the name of the header is missing, \"${ name }\" given`);\n            }\n\n            // A header with an empty value might still be valid so we don't validate the value\n            // see: https://www.w3.org/Protocols/rfc2616/rfc2616-sec2.html#sec2.1\n\n            return CallAnApi.as(actor).modifyConfig(config => {\n                config.headers.common[name] = value;\n            });\n        });\n    }\n\n    toString(): string {\n        return `#actor changes API URL and sets header \"${ this.name }\" to \"${ this.value }\"`;\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/screenplay/interactions/ChangeApiConfig.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "class",
    "name": "ChangeApiConfig",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts",
    "static": true,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfig",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/screenplay/interactions",
    "importStyle": "{ChangeApiConfig}",
    "description": " Changes configuration of the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}\n the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n executing this {@link @serenity-js/core/lib/screenplay~Interaction} has been configured with.",
    "examples": [
      "<caption>Changing API URL for all subsequent requests</caption>\n import { actorCalled } from '@serenity-js/core';\n import { Navigate, Target, Text } from '@serenity-js/protractor';\n import { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n import { protractor, by } from 'protractor';\n\n import axios from 'axios';\n\n const actor = actorCalled('Apisitt').whoCan(\n     BrowseTheWeb.using(protractor.browser),\n\n     // Note: no default base URL is given when the axios instance is created\n     CallAnApi.using(axios.create()),\n );\n\n // Let's imagine that the website under test displays\n // a dynamically generated API URL we'd like to use\n const ApiDetailsWidget = {\n     Url: Target.the('API URL').located(by.id('api-url')),\n }\n\n actor.attemptsTo(\n     Navigate.to('/profile'),\n\n     // We change the API URL based on the text displayed in the widget\n     // (although we could change it to some arbitrary string too).\n     ChangeApiConfig.setUrlTo(Text.of(ApiDetailsWidget.Url)),\n\n     // Any subsequent request will be sent to the newly set URL\n     Send.a(GetRequest.to('/projects')),\n     Ensure.that(LastResponse.status(), equals(200)),\n );",
      "<caption>Changing API port for all subsequent requests</caption>\n import { actorCalled } from '@serenity-js/core';\n import { LocalServer, ManageALocalServer, StartLocalServer } from '@serenity-js/local-server';\n import { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n\n const actor = actorCalled('Apisitt').whoCan(\n     ManageALocalServer.runningAHttpListener(someServer),\n     CallAnApi.at('http://localhost'),\n );\n\n actor.attemptsTo(\n     StartALocalServer.onRandomPort(),\n     ChangeApiConfig.setPortTo(LocalServer.port()),\n     Send.a(GetRequest.to('/api')),\n     Ensure.that(LastResponse.status(), equals(200)),\n );",
      "<caption>Setting a header for all subsequent requests</caption>\n import { actorCalled, Question } from '@serenity-js/core';\n import { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from '@serenity-js/rest';\n import { Ensure, equals } from '@serenity-js/assertions';\n\n const actor = actorCalled('Apisitt').whoCan(\n     CallAnApi.at('http://localhost'),\n );\n\n // A sample Question reading Node process environment variable\n const EnvVar = (var_name: string) =>\n     Question.about(`${ name } environment variable`, actor => process.env[var_name]);\n\n actor.attemptsTo(\n     ChangeApiConfig.setHeader('Authorization', EnvVar('TOKEN')),\n     Send.a(GetRequest.to('/api')),\n     Ensure.that(LastResponse.status(), equals(200)),\n );"
    ],
    "lineNumber": 90,
    "interface": false
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "setUrlTo",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfig",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfig.setUrlTo",
    "access": "public",
    "description": " Instructs the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n to change the base URL of their {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}",
    "lineNumber": 115,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{@serenity-js/core/lib/screenplay~Interaction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "newApiUrl",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Interaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "setPortTo",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfig",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfig.setPortTo",
    "access": "public",
    "description": " Instructs the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n to change the port configured in the base URL of their {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}",
    "lineNumber": 142,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{@serenity-js/core/lib/screenplay~Interaction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "newApiPort",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Interaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "setHeader",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfig",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfig.setHeader",
    "access": "public",
    "description": " Instructs the {@link @serenity-js/core/lib/screenplay/actor~Actor}\n to modify the configuration of the {@link AxiosInstance}\n used by {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}\n and set a HTTP request header for any subsequent {@link HTTPRequest}\n issued via {@link Send}.",
    "lineNumber": 176,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{@serenity-js/core/lib/screenplay~Interaction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Interaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 279,
    "kind": "class",
    "name": "ChangeApiConfigSetUrl",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts",
    "static": true,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetUrl",
    "access": "package",
    "export": false,
    "importPath": "@serenity-js/rest/src/screenplay/interactions/ChangeApiConfig.ts",
    "importStyle": null,
    "description": "",
    "lineNumber": 191,
    "interface": false,
    "extends": [
      "@serenity-js/core~Interaction"
    ],
    "ignore": true
  },
  {
    "__docId__": 280,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetUrl#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 192,
    "undocument": true
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetUrl#performAs",
    "access": "public",
    "description": " ",
    "lineNumber": 135,
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities & CollectsArtifacts & AnswersQuestions"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "toString",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetUrl#toString",
    "access": "public",
    "description": " ",
    "lineNumber": 140,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 283,
    "kind": "class",
    "name": "ChangeApiConfigSetPort",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts",
    "static": true,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetPort",
    "access": "package",
    "export": false,
    "importPath": "@serenity-js/rest/src/screenplay/interactions/ChangeApiConfig.ts",
    "importStyle": null,
    "description": "",
    "lineNumber": 240,
    "interface": false,
    "extends": [
      "@serenity-js/core~Interaction"
    ],
    "ignore": true
  },
  {
    "__docId__": 284,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetPort",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetPort#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 241,
    "undocument": true
  },
  {
    "__docId__": 285,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetPort",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetPort#performAs",
    "access": "public",
    "description": " ",
    "lineNumber": 153,
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities & CollectsArtifacts & AnswersQuestions"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 286,
    "kind": "method",
    "name": "toString",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetPort",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetPort#toString",
    "access": "public",
    "description": " ",
    "lineNumber": 171,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 287,
    "kind": "class",
    "name": "ChangeApiConfigSetHeader",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts",
    "static": true,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetHeader",
    "access": "package",
    "export": false,
    "importPath": "@serenity-js/rest/src/screenplay/interactions/ChangeApiConfig.ts",
    "importStyle": null,
    "description": "",
    "see": [
      "https://github.com/axios/axios#custom-instance-defaults"
    ],
    "lineNumber": 304,
    "interface": false,
    "extends": [
      "@serenity-js/core~Interaction"
    ],
    "ignore": true
  },
  {
    "__docId__": 288,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetHeader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetHeader#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 306,
    "undocument": true
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetHeader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetHeader#performAs",
    "access": "public",
    "description": " ",
    "lineNumber": 190,
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities & CollectsArtifacts & AnswersQuestions"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "toString",
    "memberof": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetHeader",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfigSetHeader#toString",
    "access": "public",
    "description": " ",
    "lineNumber": 209,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 291,
    "kind": "file",
    "name": "src/screenplay/interactions/ChangeApiUrl.ts",
    "content": "import { Answerable, AnswersQuestions, CollectsArtifacts, Interaction, UsesAbilities } from '@serenity-js/core';\n\nimport { CallAnApi } from '../abilities';\n\n/**\n * @desc\n *  Changes the base URL the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}\n *  has been configured with. Useful when we don't know the URL before the test is started,\n *  for example when the URL is dynamically generated and needs to be read from the website under test.\n *\n * @example <caption>Changing the API URL</caption>\n * import { Actor } from '@serenity-js/core';\n * import { Navigate, Target, Text } from '@serenity-js/protractor';\n * import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n * import { protractor, by } from 'protractor';\n *\n * import axios  from 'axios';\n *\n * const actor = Actor.named('Apisit').whoCan(\n *     BrowseTheWeb.using(protractor.browser),\n *\n *     // Note: no default base URL is given when the axios instance is created\n *     CallAnApi.using(axios.create()),\n * );\n *\n * // Let's imagine that the website under test displays\n * // a dynamically generated API URL we'd like to use\n * const ApiDetailsWidget = {\n *     Url: Target.the('API URL').located(by.id('api-url')),\n * }\n *\n * actor.attemptsTo(\n *     Navigate.to('/profile'),\n *\n *     // We change the API URL based on the text displayed in the widget\n *     // (although we could change it to some arbitrary string too).\n *     ChangeApiUrl.to(Text.of(ApiDetailsWidget.Url)),\n *\n *     // Any subsequent request will be sent to the newly set URL\n *     Send.a(GetRequest.to('/projects')),\n *     Ensure.that(LastResponse.status(), equals(200)),\n * );\n *\n * @deprecated Use ChangeApiConfig.setUrlTo(newUrl) instead\n *\n * @see {@link ChangeApiConfig}\n *\n * @extends {@serenity-js/core/lib/screenplay~Interaction}\n */\nexport class ChangeApiUrl extends Interaction {\n\n    /**\n     * @desc\n     *  Instantiates a new {@link ChangeApiUrl} {@link @serenity-js/core/lib/screenplay~Interaction}.\n     *\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} newApiUrl\n     * @returns {@serenity-js/core/lib/screenplay~Interaction}\n     */\n    static to(newApiUrl: Answerable<string>): Interaction {\n        return new ChangeApiUrl(newApiUrl);\n    }\n\n    /**\n     * @param {@serenity-js/core/lib/screenplay~Answerable<string>} newApiUrl\n     */\n    constructor(private readonly newApiUrl: Answerable<string>) {\n        super();\n    }\n\n    /**\n     * @desc\n     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  perform this {@link @serenity-js/core/lib/screenplay~Interaction}.\n     *\n     * @param {UsesAbilities & CollectsArtifacts & AnswersQuestions} actor\n     * @returns {Promise<void>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}\n     */\n    performAs(actor: UsesAbilities & CollectsArtifacts & AnswersQuestions): Promise<void> {\n        return actor.answer(this.newApiUrl)\n            .then(newApiUrl => CallAnApi.as(actor).modifyConfig(config => config.baseURL = newApiUrl));\n    }\n\n    /**\n     * @desc\n     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.\n     *\n     * @returns {string}\n     */\n    toString(): string {\n        return `#actor changes the API URL to ${ this.newApiUrl.toString() }`;\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/screenplay/interactions/ChangeApiUrl.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 292,
    "kind": "class",
    "name": "ChangeApiUrl",
    "memberof": "src/screenplay/interactions/ChangeApiUrl.ts",
    "static": true,
    "longname": "src/screenplay/interactions/ChangeApiUrl.ts~ChangeApiUrl",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/screenplay/interactions",
    "importStyle": "{ChangeApiUrl}",
    "description": " Changes the base URL the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}\n has been configured with. Useful when we don't know the URL before the test is started,\n for example when the URL is dynamically generated and needs to be read from the website under test.",
    "examples": [
      "<caption>Changing the API URL</caption>\nimport { Actor } from '@serenity-js/core';\nimport { Navigate, Target, Text } from '@serenity-js/protractor';\nimport { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\nimport { protractor, by } from 'protractor';\n\nimport axios  from 'axios';\n\nconst actor = Actor.named('Apisit').whoCan(\n    BrowseTheWeb.using(protractor.browser),\n\n    // Note: no default base URL is given when the axios instance is created\n    CallAnApi.using(axios.create()),\n);\n\n// Let's imagine that the website under test displays\n// a dynamically generated API URL we'd like to use\nconst ApiDetailsWidget = {\n    Url: Target.the('API URL').located(by.id('api-url')),\n}\n\nactor.attemptsTo(\n    Navigate.to('/profile'),\n\n    // We change the API URL based on the text displayed in the widget\n    // (although we could change it to some arbitrary string too).\n    ChangeApiUrl.to(Text.of(ApiDetailsWidget.Url)),\n\n    // Any subsequent request will be sent to the newly set URL\n    Send.a(GetRequest.to('/projects')),\n    Ensure.that(LastResponse.status(), equals(200)),\n);"
    ],
    "see": [
      "{@link ChangeApiConfig}"
    ],
    "lineNumber": 57,
    "deprecated": "Use ChangeApiConfig.setUrlTo(newUrl) instead",
    "interface": false,
    "extends": [
      "Interaction"
    ]
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "to",
    "memberof": "src/screenplay/interactions/ChangeApiUrl.ts~ChangeApiUrl",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/interactions/ChangeApiUrl.ts~ChangeApiUrl.to",
    "access": "public",
    "description": " Instantiates a new {@link ChangeApiUrl} {@link @serenity-js/core/lib/screenplay~Interaction}.",
    "lineNumber": 81,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{@serenity-js/core/lib/screenplay~Interaction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "newApiUrl",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Interaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 294,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/screenplay/interactions/ChangeApiUrl.ts~ChangeApiUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiUrl.ts~ChangeApiUrl#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 88,
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "newApiUrl",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/screenplay/interactions/ChangeApiUrl.ts~ChangeApiUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiUrl.ts~ChangeApiUrl#performAs",
    "access": "public",
    "description": " Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n perform this {@link @serenity-js/core/lib/screenplay~Interaction}.",
    "see": [
      "{@link @serenity-js/core/lib/screenplay/actor~Actor}",
      "{@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}",
      "{@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}",
      "{@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}"
    ],
    "lineNumber": 118,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities & CollectsArtifacts & AnswersQuestions"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "toString",
    "memberof": "src/screenplay/interactions/ChangeApiUrl.ts~ChangeApiUrl",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/ChangeApiUrl.ts~ChangeApiUrl#toString",
    "access": "public",
    "description": " Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 297,
    "kind": "file",
    "name": "src/screenplay/interactions/Send.ts",
    "content": "import { Answerable, AnswersQuestions, CollectsArtifacts, Interaction, UsesAbilities } from '@serenity-js/core';\nimport { Artifact, HTTPRequestResponse, Name, RequestAndResponse } from '@serenity-js/core/lib/model';\nimport { AxiosRequestConfig, AxiosResponse } from 'axios';\n\nimport { CallAnApi } from '../abilities';\n\n/**\n * @desc\n *  Sends a {@link HTTPRequest} to a specified url.\n *  The response to the request is made available via the {@link LastResponse}\n *  {@link @serenity-js/core/lib/screenplay~Question}s.\n *\n * @example <caption>Send a GET request</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n *\n *  actor.attemptsTo(\n *      Send.a(GetRequest.to('/books/0-688-00230-7')),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *  );\n *\n * @extends {Interaction}\n */\nexport class Send extends Interaction {\n\n    /**\n     * @desc\n     *  Instantiates a new {@link Send} {@link @serenity-js/core/lib/screenplay~Interaction}.\n     *\n     * @param {@serenity-js/lib/core/screenplay~Answerable<AxiosRequestConfig>} request\n     * @returns {@serenity-js/core/lib/screenplay~Interaction}\n     *\n     * @see {@link AxiosRequestConfig}\n     */\n    static a(request: Answerable<AxiosRequestConfig>): Interaction {\n        return new Send(request);\n    }\n\n    /**\n     * @param {@serenity-js/core/lib/screenplay~Answerable<AxiosRequestConfig>} request\n     *\n     * @see {@link AxiosRequestConfig}\n     */\n    constructor(private readonly request: Answerable<AxiosRequestConfig>) {\n        super();\n    }\n\n    /**\n     * @desc\n     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  perform this {@link @serenity-js/core/lib/screenplay~Interaction}.\n     *\n     * @param {UsesAbilities & CollectsArtifacts & AnswersQuestions} actor\n     * @returns {Promise<void>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}\n     */\n    performAs(actor: UsesAbilities & CollectsArtifacts & AnswersQuestions): Promise<void> {\n        const callAnApi = CallAnApi.as(actor);\n\n        return actor.answer(this.request)\n            .then(config =>\n                callAnApi.request(config).then((response: AxiosResponse) => {\n                    const resolvedUrl = callAnApi.resolveUrl(config);\n\n                    actor.collect(\n                        this.responseToArtifact(resolvedUrl, response),\n                        this.requestToArtifactName(response.config.method, resolvedUrl),\n                    );\n                })\n            );\n    }\n\n    /**\n     * @desc\n     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.\n     *\n     * @returns {string}\n     */\n    toString(): string {\n        return `#actor sends ${ this.request.toString() }`;\n    }\n\n    private responseToArtifact(targetUrl: string, response: AxiosResponse): Artifact {\n        const\n            request: AxiosRequestConfig = response.config,\n            requestAndResponse: RequestAndResponse = {\n                request: {\n                    method:     request.method,\n                    url:        targetUrl,\n                    headers:    request.headers,\n                    data:       request.data,\n                },\n                response: {\n                    status:     response.status,\n                    headers:    response.headers,\n                    data:       response.data,\n                },\n            };\n\n        return HTTPRequestResponse.fromJSON(requestAndResponse);\n    }\n\n    private requestToArtifactName(method: string, url: string) {\n        return new Name(`${ method.toUpperCase() } ${ url }`);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/screenplay/interactions/Send.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 298,
    "kind": "class",
    "name": "Send",
    "memberof": "src/screenplay/interactions/Send.ts",
    "static": true,
    "longname": "src/screenplay/interactions/Send.ts~Send",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/screenplay/interactions",
    "importStyle": "{Send}",
    "description": " Sends a {@link HTTPRequest} to a specified url.\n The response to the request is made available via the {@link LastResponse}\n {@link @serenity-js/core/lib/screenplay~Question}s.",
    "examples": [
      "<caption>Send a GET request</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n\n const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n\n actor.attemptsTo(\n     Send.a(GetRequest.to('/books/0-688-00230-7')),\n     Ensure.that(LastResponse.status(), equals(200)),\n );"
    ],
    "lineNumber": 34,
    "interface": false,
    "extends": [
      "Interaction"
    ]
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "a",
    "memberof": "src/screenplay/interactions/Send.ts~Send",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/interactions/Send.ts~Send.a",
    "access": "public",
    "description": " Instantiates a new {@link Send} {@link @serenity-js/core/lib/screenplay~Interaction}.",
    "see": [
      "{@link AxiosRequestConfig}"
    ],
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{@serenity-js/core/lib/screenplay~Interaction}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<AxiosRequestConfig>"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Interaction"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 300,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/screenplay/interactions/Send.ts~Send",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/Send.ts~Send#constructor",
    "access": "public",
    "description": "",
    "see": [
      "{@link AxiosRequestConfig}"
    ],
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable<AxiosRequestConfig>"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 301,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/screenplay/interactions/Send.ts~Send",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/Send.ts~Send#performAs",
    "access": "public",
    "description": " Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n perform this {@link @serenity-js/core/lib/screenplay~Interaction}.",
    "see": [
      "{@link @serenity-js/core/lib/screenplay/actor~Actor}",
      "{@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}",
      "{@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}",
      "{@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}"
    ],
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities & CollectsArtifacts & AnswersQuestions"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "toString",
    "memberof": "src/screenplay/interactions/Send.ts~Send",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/Send.ts~Send#toString",
    "access": "public",
    "description": " Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.",
    "lineNumber": 132,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "responseToArtifact",
    "memberof": "src/screenplay/interactions/Send.ts~Send",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/Send.ts~Send#responseToArtifact",
    "access": "private",
    "description": " ",
    "lineNumber": 90,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "targetUrl",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "AxiosResponse"
        ],
        "spread": false,
        "optional": false,
        "name": "response",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Artifact"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "requestToArtifactName",
    "memberof": "src/screenplay/interactions/Send.ts~Send",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/screenplay/interactions/Send.ts~Send#requestToArtifactName",
    "access": "private",
    "description": " ",
    "lineNumber": 110,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "method",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 305,
    "kind": "file",
    "name": "src/screenplay/interactions/index.ts",
    "content": "export * from './ChangeApiConfig';\nexport * from './ChangeApiUrl';\nexport * from './Send';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/screenplay/interactions/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 306,
    "kind": "file",
    "name": "src/screenplay/questions/LastResponse.ts",
    "content": "import { Question } from '@serenity-js/core';\n\nimport { CallAnApi } from '../abilities';\n\n/**\n * @desc\n *  Provides access to the properties of the last {@link AxiosResponse} object,\n *  cached on the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}.\n *\n * @example <caption>Verify response to a GET request</caption>\n *  import { Actor } from '@serenity-js/core';\n *  import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n *  import { Ensure, equals } from '@serenity-js/assertions';\n *\n *  interface Book {\n *      title: string;\n *      author: string\n *  }\n *\n *  const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n *\n *  actor.attemptsTo(\n *      Send.a(GetRequest.to('/books/0-688-00230-7')),\n *      Ensure.that(LastResponse.status(), equals(200)),\n *      Ensure.that(LastResponse.header('Content-Type'), equals('application/json')),\n *      Ensure.that(LastResponse.body<Book>(), equals({\n *          title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n *          author: 'Robert M. Pirsig',\n *      })),\n *  );\n */\nexport class LastResponse {\n\n    /**\n     * @desc\n     *  Enables asserting on the {@link LastResponse} status\n     *\n     * @returns {@serenity-js/core/lib/screenplay~Question<number>}\n     */\n    static status(): Question<number> {\n        return Question.about<number>(`the status of the last response`, actor => {\n            return CallAnApi.as(actor).mapLastResponse(response => response.status);\n        });\n    }\n\n    /**\n     * @desc\n     *  Enables asserting on the {@link LastResponse} body\n     *\n     * @example <caption>A type-safe approach using generics</caption>\n     *  interface Book {\n     *      title: string;\n     *      author: string\n     *  }\n     *\n     *  actor.attemptsTo(\n     *      // ...\n     *      Ensure.that(LastResponse.body<Book>(), equals({\n     *          title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n     *          author: 'Robert M. Pirsig',\n     *      })),\n     *  );\n     *\n     * @example <caption>A non-type-safe approach using `any`</caption>\n     *  actor.attemptsTo(\n     *      // ...\n     *      Ensure.that(LastResponse.body<any>(), equals({\n     *          title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n     *          author: 'Robert M. Pirsig',\n     *      })),\n     *  );\n     *\n     * @example <caption>Retrieving an item at path using Property.of</caption>\n     *  import { Property } from '@serenity-js/core';\n     *\n     *  actor.attemptsTo(\n     *      Ensure.that(\n     *          Property.of(LastResponse.body<Book>()).title,\n     *          equals('Zen and the Art of Motorcycle Maintenance: An Inquiry into Values'),\n     *      )\n     *  )\n     *\n     * @example <caption>Filtering response body using List</caption>\n     *  import { Property } from '@serenity-js/core';\n     *  import { property, startsWith } from '@serenity-js/assertions';\n     *\n     *  actor.attemptsTo(\n     *      Ensure.that(\n     *          // imagine the API returns an array of books\n     *          List.of(LastResponse.body<Book[]>())\n     *              .where(Property.at<Book>().author, equals('Robert M. Pirsig'))\n     *              .first(),\n     *          property('title', startsWith('Zen and the Art of Motorcycle Maintenance')),\n     *      )\n     *  )\n     *\n     * @returns {@serenity-js/core/lib/screenplay~Question<any>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/questions~Property}\n     * @see {@link @serenity-js/core/lib/screenplay/questions~List}\n     */\n    static body<T = any>(): Question<T> {\n        return Question.about<T>(`the body of the last response`, actor => {\n            return CallAnApi.as(actor).mapLastResponse<T>(response => response.data as T);\n        });\n    }\n\n    /**\n     * @desc\n     *  Enables asserting on one of the {@link LastResponse}'s headers\n     *\n     * @param {string} name\n     * @returns {@serenity-js/core/lib/screenplay~Question<string>}\n     */\n    static header(name: string): Question<string> {\n        return Question.about<string>(`the '${ name }' header of the last response`, actor => {\n            return CallAnApi.as(actor).mapLastResponse(response => response.headers[name]);\n        });\n    }\n\n    /**\n     * @desc\n     *  Enables asserting on all of the {@link LastResponse}'s headers,\n     *  returned as an object where the keys represent header names.\n     *\n     * @returns {@serenity-js/core/lib/screenplay~Question<Record<string, string>>}\n     */\n    static headers(): Question<Record<string, string>> {\n        return Question.about<Record<string, string>>(`the headers or the last response`, actor => {\n            return CallAnApi.as(actor).mapLastResponse(response => response.headers);\n        });\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/screenplay/questions/LastResponse.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 307,
    "kind": "class",
    "name": "LastResponse",
    "memberof": "src/screenplay/questions/LastResponse.ts",
    "static": true,
    "longname": "src/screenplay/questions/LastResponse.ts~LastResponse",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/rest/lib/screenplay/questions",
    "importStyle": "{LastResponse}",
    "description": " Provides access to the properties of the last {@link AxiosResponse} object,\n cached on the {@link CallAnApi} {@link @serenity-js/core/lib/screenplay~Ability}.",
    "examples": [
      "<caption>Verify response to a GET request</caption>\n import { Actor } from '@serenity-js/core';\n import { CallAnApi, GetRequest, LastResponse, Send } from '@serenity-js/rest'\n import { Ensure, equals } from '@serenity-js/assertions';\n\n interface Book {\n     title: string;\n     author: string\n }\n\n const actor = Actor.named('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n\n actor.attemptsTo(\n     Send.a(GetRequest.to('/books/0-688-00230-7')),\n     Ensure.that(LastResponse.status(), equals(200)),\n     Ensure.that(LastResponse.header('Content-Type'), equals('application/json')),\n     Ensure.that(LastResponse.body<Book>(), equals({\n         title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n         author: 'Robert M. Pirsig',\n     })),\n );"
    ],
    "lineNumber": 39,
    "interface": false
  },
  {
    "__docId__": 308,
    "kind": "method",
    "name": "status",
    "memberof": "src/screenplay/questions/LastResponse.ts~LastResponse",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/questions/LastResponse.ts~LastResponse.status",
    "access": "public",
    "description": " Enables asserting on the {@link LastResponse} status",
    "lineNumber": 60,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{@serenity-js/core/lib/screenplay~Question<number>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Question<number>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 309,
    "kind": "method",
    "name": "body",
    "memberof": "src/screenplay/questions/LastResponse.ts~LastResponse",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/questions/LastResponse.ts~LastResponse.body",
    "access": "public",
    "description": " Enables asserting on the {@link LastResponse} body",
    "examples": [
      "<caption>A type-safe approach using generics</caption>\n interface Book {\n     title: string;\n     author: string\n }\n\n actor.attemptsTo(\n     // ...\n     Ensure.that(LastResponse.body<Book>(), equals({\n         title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n         author: 'Robert M. Pirsig',\n     })),\n );",
      "<caption>A non-type-safe approach using `any`</caption>\n actor.attemptsTo(\n     // ...\n     Ensure.that(LastResponse.body<any>(), equals({\n         title: 'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values',\n         author: 'Robert M. Pirsig',\n     })),\n );",
      "<caption>Retrieving an item at path using Property.of</caption>\n import { Property } from '@serenity-js/core';\n\n actor.attemptsTo(\n     Ensure.that(\n         Property.of(LastResponse.body<Book>()).title,\n         equals('Zen and the Art of Motorcycle Maintenance: An Inquiry into Values'),\n     )\n )",
      "<caption>Filtering response body using List</caption>\n import { Property } from '@serenity-js/core';\n import { property, startsWith } from '@serenity-js/assertions';\n\n actor.attemptsTo(\n     Ensure.that(\n         // imagine the API returns an array of books\n         List.of(LastResponse.body<Book[]>())\n             .where(Property.at<Book>().author, equals('Robert M. Pirsig'))\n             .first(),\n         property('title', startsWith('Zen and the Art of Motorcycle Maintenance')),\n     )\n )"
    ],
    "see": [
      "{@link @serenity-js/core/lib/screenplay/questions~Property}",
      "{@link @serenity-js/core/lib/screenplay/questions~List}"
    ],
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{@serenity-js/core/lib/screenplay~Question<any>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Question<any>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "header",
    "memberof": "src/screenplay/questions/LastResponse.ts~LastResponse",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/questions/LastResponse.ts~LastResponse.header",
    "access": "public",
    "description": " Enables asserting on one of the {@link LastResponse}'s headers",
    "lineNumber": 163,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{@serenity-js/core/lib/screenplay~Question<string>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Question<string>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 311,
    "kind": "method",
    "name": "headers",
    "memberof": "src/screenplay/questions/LastResponse.ts~LastResponse",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/screenplay/questions/LastResponse.ts~LastResponse.headers",
    "access": "public",
    "description": " Enables asserting on all of the {@link LastResponse}'s headers,\n returned as an object where the keys represent header names.",
    "lineNumber": 189,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{@serenity-js/core/lib/screenplay~Question<Record<string, string>>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Question<Record<string, string>>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 312,
    "kind": "file",
    "name": "src/screenplay/questions/index.ts",
    "content": "export * from './LastResponse';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/src/screenplay/questions/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# Serenity/JS\n\n[Serenity/JS](https://serenity-js.org) is a framework designed to make acceptance and regression testing\nof modern full-stack applications faster, more collaborative and easier to scale.\n\nVisit [serenity-js.org](https://serenity-js.org/) for the [latest tutorials](https://serenity-js.org/handbook/)\nand [API docs](https://serenity-js.org/modules/), and follow [@SerenityJS](https://twitter.com/SerenityJS) and [@JanMolak](https://twitter.com/JanMolak) on Twitter for project updates.\n\n### Learning Serenity/JS\n\nTo learn more about Serenity/JS, check out the video below, read the [tutorial](https://serenity-js.org/handbook/thinking-in-serenity-js/index.html), review the [examples](https://github.com/serenity-js/serenity-js/tree/master/examples), and create your own test suite with [Serenity/JS template projects](https://github.com/serenity-js).\n\nIf you have any questions, join us on [Serenity/JS Community Chat](https://gitter.im/serenity-js/Lobby).\n\n[![Full-Stack Acceptance Testing with Serenity/JS and the Screenplay Pattern](https://img.youtube.com/vi/djPMf-n93Rw/0.jpg)](https://www.youtube.com/watch?v=djPMf-n93Rw)\n\n## Serenity/JS REST\n\n[`@serenity-js/rest`](https://serenity-js.org/modules/rest/) module lets your actors interact with and test HTTP REST APIs.\n\n### Installation\n\nTo install this module, as well as [`axios` HTTP client](https://github.com/axios/axios),\nrun the following command in your computer terminal:\n\n```console\nnpm install --save-dev @serenity-js/{core,rest,assertions} axios\n```\n\n### Example test\n\n```typescript\nimport { actorCalled } from '@serenity-js/core';\nimport { CallAnApi, DeleteRequest, GetRequest, LastResponse, PostRequest, Send } from '@serenity-js/rest'\nimport { Ensure, equals, startsWith } from '@serenity-js/assertions';\n\nconst actor = actorCalled('Apisit').whoCan(CallAnApi.at('https://myapp.com/api'));\n\nactor.attemptsTo(\n    // no users present in the system\n    Send.a(GetRequest.to('/users')),\n    Ensure.that(LastResponse.status(), equals(200)),\n    Ensure.that(LastResponse.body(), equals([])),\n\n    // create a new test user account\n    Send.a(PostRequest.to('/users').with({\n        login: 'tester',\n        password: 'P@ssword1',\n    }),\n    Ensure.that(LastResponse.status(), equals(201)),\n    Ensure.that(LastResponse.header('Location'), startsWith('/users')),\n\n    // delete the test user account\n    Send.a(DeleteRequest.to(LastResponse.header('Location'))),\n    Ensure.that(LastResponse.status(), equals(200)),\n);\n```\n",
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@serenity-js/rest\",\n  \"version\": \"2.33.8\",\n  \"description\": \"Test REST APIs with Serenity/JS\",\n  \"author\": {\n    \"name\": \"Jan Molak\",\n    \"email\": \"jan.molak@smartcodeltd.co.uk\",\n    \"url\": \"https://janmolak.com\"\n  },\n  \"funding\": {\n    \"url\": \"https://github.com/sponsors/serenity-js\"\n  },\n  \"homepage\": \"https://serenity-js.org\",\n  \"license\": \"Apache-2.0\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"main\": \"lib/index.js\",\n  \"typings\": \"lib/index.d.ts\",\n  \"keywords\": [\n    \"serenity-js\",\n    \"http\",\n    \"rest\",\n    \"axios\",\n    \"tdd\",\n    \"bdd\",\n    \"test\",\n    \"testing\"\n  ],\n  \"scripts\": {\n    \"clean\": \"rimraf .nyc_output lib target\",\n    \"lint\": \"eslint --ext ts --config ../../.eslintrc.js .\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"test\": \"nyc --report-dir ../../target/coverage/rest mocha --config ../../.mocharc.yml 'spec/**/*.spec.*'\",\n    \"compile\": \"tsc --project tsconfig.json\",\n    \"site\": \"esdoc -c .esdoc.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/serenity-js/serenity-js.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/serenity-js/serenity-js/issues\"\n  },\n  \"engines\": {\n    \"node\": \"^12 || ^14 || ^16\",\n    \"npm\": \"^6 || ^7 || ^8\"\n  },\n  \"dependencies\": {\n    \"@serenity-js/core\": \"2.33.8\",\n    \"axios\": \"^0.21.4\"\n  },\n  \"devDependencies\": {\n    \"@documentation/esdoc-template\": \"2.0.0\",\n    \"@integration/testing-tools\": \"2.0.0\",\n    \"@serenity-js/assertions\": \"2.33.8\",\n    \"@types/chai\": \"^4.3.1\",\n    \"@types/mocha\": \"^9.1.1\",\n    \"axios-mock-adapter\": \"^1.20.0\",\n    \"mocha\": \"^9.2.2\",\n    \"ts-node\": \"^10.7.0\",\n    \"typescript\": \"^4.6.4\"\n  },\n  \"nyc\": {\n    \"include\": [\n      \"src/**/*.ts\"\n    ],\n    \"exclude\": [\n      \"src/**/*.d.ts\",\n      \"lib\",\n      \"node_modules\",\n      \"spec\"\n    ],\n    \"extension\": [\n      \".ts\"\n    ],\n    \"require\": [\n      \"ts-node/register\"\n    ],\n    \"reporter\": [\n      \"json\"\n    ],\n    \"cache\": true,\n    \"all\": true\n  }\n}\n",
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 313,
    "kind": "testFile",
    "name": "spec/model/DeleteRequest.spec.ts",
    "content": "import 'mocha';\n\nimport { DeleteRequest } from '../../src/model';\nimport { actorUsingAMockedAxiosInstance } from '../actors';\nimport { expect } from '../expect';\n\n/** @test {DeleteRequest} */\ndescribe('DeleteRequest', () => {\n\n    const { actor } = actorUsingAMockedAxiosInstance();\n\n    /** @test {DeleteRequest.to} */\n    it('represents an Axios request', () =>\n        expect(actor.answer(DeleteRequest.to('/products/2')))\n            .to.eventually.deep.equal({\n                method: 'DELETE',\n                url: '/products/2',\n            }));\n\n    /**\n     * @test {DeleteRequest.to}\n     * @test {DeleteRequest#using}\n     */\n    it('allows for additional request properties to be specified', () =>\n        expect(actor.answer(DeleteRequest.to('/products/2').using({\n            headers: {\n                Authorization: 'token',\n            },\n        }))).\n        to.eventually.deep.equal({\n            method: 'DELETE',\n            url: '/products/2',\n            headers: {\n                Authorization: 'token',\n            },\n        }));\n\n    /** @test {DeleteRequest#toString} */\n    it('provides a sensible description of the interaction being performed', () => {\n        expect(DeleteRequest.to('/products/2').toString())\n            .to.equal(`a DELETE request to '/products/2'`);\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/model/DeleteRequest.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 314,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "spec/model/DeleteRequest.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/model/DeleteRequest.spec.ts~describe0",
    "access": null,
    "description": "DeleteRequest",
    "lineNumber": 8,
    "testTargets": [
      "DeleteRequest"
    ]
  },
  {
    "__docId__": 315,
    "kind": "test",
    "name": "it1",
    "testId": 1,
    "memberof": "spec/model/DeleteRequest.spec.ts~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/DeleteRequest.spec.ts~describe0.it1",
    "access": null,
    "description": "represents an Axios request",
    "lineNumber": 13,
    "testTargets": [
      "DeleteRequest.to"
    ]
  },
  {
    "__docId__": 316,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "spec/model/DeleteRequest.spec.ts~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/DeleteRequest.spec.ts~describe0.it2",
    "access": null,
    "description": "allows for additional request properties to be specified",
    "lineNumber": 24,
    "testTargets": [
      "DeleteRequest.to",
      "DeleteRequest#using"
    ]
  },
  {
    "__docId__": 317,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "spec/model/DeleteRequest.spec.ts~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/DeleteRequest.spec.ts~describe0.it3",
    "access": null,
    "description": "provides a sensible description of the interaction being performed",
    "lineNumber": 39,
    "testTargets": [
      "DeleteRequest#toString"
    ]
  },
  {
    "__docId__": 318,
    "kind": "testFile",
    "name": "spec/model/GetRequest.spec.ts",
    "content": "import 'mocha';\n\nimport { GetRequest } from '../../src/model';\nimport { actorUsingAMockedAxiosInstance } from '../actors';\nimport { expect } from '../expect';\n\n/** @test {GetRequest} */\ndescribe('GetRequest', () => {\n\n    const { actor } = actorUsingAMockedAxiosInstance();\n\n    /** @test {GetRequest.to} */\n    it('represents an Axios request', () =>\n        expect(actor.answer(GetRequest.to('/products/2')))\n            .to.eventually.deep.equal({\n                method: 'GET',\n                url: '/products/2',\n            }));\n\n    /**\n     * @test {GetRequest.to}\n     * @test {GetRequest#using}\n     */\n    it('allows for additional request properties to be specified', () =>\n        expect(actor.answer(GetRequest.to('/products/2').using({\n            headers: {\n                Accept: 'application/json',\n            },\n            maxRedirects: 0,\n        }))).\n        to.eventually.deep.equal({\n            method: 'GET',\n            url: '/products/2',\n            headers: {\n                Accept: 'application/json',\n            },\n            maxRedirects: 0,\n        }));\n\n    /** @test {GetRequest#toString} */\n    it('provides a sensible description of the interaction being performed', () => {\n        expect(GetRequest.to('/products/2').toString())\n            .to.equal(`a GET request to '/products/2'`);\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/model/GetRequest.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 319,
    "kind": "test",
    "name": "describe4",
    "testId": 4,
    "memberof": "spec/model/GetRequest.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/model/GetRequest.spec.ts~describe4",
    "access": null,
    "description": "GetRequest",
    "lineNumber": 8,
    "testTargets": [
      "GetRequest"
    ]
  },
  {
    "__docId__": 320,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "spec/model/GetRequest.spec.ts~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/GetRequest.spec.ts~describe4.it5",
    "access": null,
    "description": "represents an Axios request",
    "lineNumber": 13,
    "testTargets": [
      "GetRequest.to"
    ]
  },
  {
    "__docId__": 321,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "spec/model/GetRequest.spec.ts~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/GetRequest.spec.ts~describe4.it6",
    "access": null,
    "description": "allows for additional request properties to be specified",
    "lineNumber": 24,
    "testTargets": [
      "GetRequest.to",
      "GetRequest#using"
    ]
  },
  {
    "__docId__": 322,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "spec/model/GetRequest.spec.ts~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/GetRequest.spec.ts~describe4.it7",
    "access": null,
    "description": "provides a sensible description of the interaction being performed",
    "lineNumber": 41,
    "testTargets": [
      "GetRequest#toString"
    ]
  },
  {
    "__docId__": 323,
    "kind": "testFile",
    "name": "spec/model/HeadRequest.spec.ts",
    "content": "import 'mocha';\n\nimport { HeadRequest } from '../../src/model';\nimport { actorUsingAMockedAxiosInstance } from '../actors';\nimport { expect } from '../expect';\n\n/** @test {HeadRequest} */\ndescribe('HeadRequest', () => {\n\n    const { actor } = actorUsingAMockedAxiosInstance();\n\n    /** @test {HeadRequest.to} */\n    it('represents an Axios request', () =>\n        expect(actor.answer(HeadRequest.to('/products/2')))\n            .to.eventually.deep.equal({\n                method: 'HEAD',\n                url: '/products/2',\n            }));\n\n    /**\n     * @test {HeadRequest.to}\n     * @test {HeadRequest#using}\n     */\n    it('allows for additional request properties to be specified', () =>\n        expect(actor.answer(HeadRequest.to('/products/2').using({\n            headers: {\n                Accept: 'application/json',\n            },\n        }))).\n        to.eventually.deep.equal({\n            method: 'HEAD',\n            url: '/products/2',\n            headers: {\n                Accept: 'application/json',\n            },\n        }));\n\n    /** @test {HeadRequest#toString} */\n    it('provides a sensible description of the interaction being performed', () => {\n        expect(HeadRequest.to('/products/2').toString())\n            .to.equal(`a HEAD request to '/products/2'`);\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/model/HeadRequest.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 324,
    "kind": "test",
    "name": "describe8",
    "testId": 8,
    "memberof": "spec/model/HeadRequest.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/model/HeadRequest.spec.ts~describe8",
    "access": null,
    "description": "HeadRequest",
    "lineNumber": 8,
    "testTargets": [
      "HeadRequest"
    ]
  },
  {
    "__docId__": 325,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "spec/model/HeadRequest.spec.ts~describe8",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/HeadRequest.spec.ts~describe8.it9",
    "access": null,
    "description": "represents an Axios request",
    "lineNumber": 13,
    "testTargets": [
      "HeadRequest.to"
    ]
  },
  {
    "__docId__": 326,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "spec/model/HeadRequest.spec.ts~describe8",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/HeadRequest.spec.ts~describe8.it10",
    "access": null,
    "description": "allows for additional request properties to be specified",
    "lineNumber": 24,
    "testTargets": [
      "HeadRequest.to",
      "HeadRequest#using"
    ]
  },
  {
    "__docId__": 327,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "spec/model/HeadRequest.spec.ts~describe8",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/HeadRequest.spec.ts~describe8.it11",
    "access": null,
    "description": "provides a sensible description of the interaction being performed",
    "lineNumber": 39,
    "testTargets": [
      "HeadRequest#toString"
    ]
  },
  {
    "__docId__": 328,
    "kind": "testFile",
    "name": "spec/model/OptionsRequest.spec.ts",
    "content": "import 'mocha';\n\nimport { OptionsRequest } from '../../src/model';\nimport { actorUsingAMockedAxiosInstance } from '../actors';\nimport { expect } from '../expect';\n\n/** @test {OptionsRequest} */\ndescribe('OptionsRequest', () => {\n\n    const { actor } = actorUsingAMockedAxiosInstance();\n\n    /** @test {OptionsRequest.to} */\n    it('represents an Axios request', () =>\n        expect(actor.answer(OptionsRequest.to('/products/2')))\n            .to.eventually.deep.equal({\n                method: 'OPTIONS',\n                url: '/products/2',\n            }));\n\n    /**\n     * @test {OptionsRequest.to}\n     * @test {OptionsRequest#using}\n     */\n    it('allows for additional request properties to be specified', () =>\n        expect(actor.answer(OptionsRequest.to('/products/2').using({\n            headers: {\n                Accept: 'application/json',\n            },\n        }))).\n        to.eventually.deep.equal({\n            method: 'OPTIONS',\n            url: '/products/2',\n            headers: {\n                Accept: 'application/json',\n            },\n        }));\n\n    /** @test {Options#toString} */\n    it('provides a sensible description of the interaction being performed', () => {\n        expect(OptionsRequest.to('/products/2').toString())\n            .to.equal(`an OPTIONS request to '/products/2'`);\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/model/OptionsRequest.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 329,
    "kind": "test",
    "name": "describe12",
    "testId": 12,
    "memberof": "spec/model/OptionsRequest.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/model/OptionsRequest.spec.ts~describe12",
    "access": null,
    "description": "OptionsRequest",
    "lineNumber": 8,
    "testTargets": [
      "OptionsRequest"
    ]
  },
  {
    "__docId__": 330,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "spec/model/OptionsRequest.spec.ts~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/OptionsRequest.spec.ts~describe12.it13",
    "access": null,
    "description": "represents an Axios request",
    "lineNumber": 13,
    "testTargets": [
      "OptionsRequest.to"
    ]
  },
  {
    "__docId__": 331,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "spec/model/OptionsRequest.spec.ts~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/OptionsRequest.spec.ts~describe12.it14",
    "access": null,
    "description": "allows for additional request properties to be specified",
    "lineNumber": 24,
    "testTargets": [
      "OptionsRequest.to",
      "OptionsRequest#using"
    ]
  },
  {
    "__docId__": 332,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "spec/model/OptionsRequest.spec.ts~describe12",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/OptionsRequest.spec.ts~describe12.it15",
    "access": null,
    "description": "provides a sensible description of the interaction being performed",
    "lineNumber": 39,
    "testTargets": [
      "Options#toString"
    ]
  },
  {
    "__docId__": 333,
    "kind": "testFile",
    "name": "spec/model/PatchRequest.spec.ts",
    "content": "import 'mocha';\n\nimport { PatchRequest } from '../../src/model';\nimport { actorUsingAMockedAxiosInstance } from '../actors';\nimport { expect } from '../expect';\n\n/** @test {PatchRequest} */\ndescribe('PatchRequest', () => {\n\n    const { actor } = actorUsingAMockedAxiosInstance();\n\n    /** @test {PatchRequest.to} */\n    it('represents an Axios request', () =>\n        expect(actor.answer(PatchRequest.to('/products/2')))\n            .to.eventually.deep.equal({\n                method: 'PATCH',\n                url: '/products/2',\n            }));\n\n    /**\n     * @test {PatchRequest.to}\n     * @test {PatchRequest#with}\n     */\n    it('can have a request body', () =>\n        expect(actor.answer(PatchRequest.to('/products/2').with({ name: 'apple' })))\n            .to.eventually.deep.equal({\n                method: 'PATCH',\n                url: '/products/2',\n                data: { name: 'apple' },\n            })\n    );\n\n    /**\n     * @test {PatchRequest.to}\n     * @test {PatchRequest#with}\n     * @test {PatchRequest#using}\n     */\n    it('allows for additional request properties to be specified', () =>\n        expect(actor.answer(PatchRequest.to('/products/2').with({ name: 'apple' }).using({\n            headers: {\n                Accept: 'application/json',\n            },\n        }))).\n        to.eventually.deep.equal({\n            method: 'PATCH',\n            url: '/products/2',\n            headers: {\n                Accept: 'application/json',\n            },\n            data: { name: 'apple' },\n        })\n    );\n\n    /** @test {PatchRequest#toString} */\n    it('provides a sensible description of the interaction being performed', () => {\n        expect(PatchRequest.to('/products/2').toString())\n            .to.equal(`a PATCH request to '/products/2'`);\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/model/PatchRequest.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 334,
    "kind": "test",
    "name": "describe16",
    "testId": 16,
    "memberof": "spec/model/PatchRequest.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/model/PatchRequest.spec.ts~describe16",
    "access": null,
    "description": "PatchRequest",
    "lineNumber": 8,
    "testTargets": [
      "PatchRequest"
    ]
  },
  {
    "__docId__": 335,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "spec/model/PatchRequest.spec.ts~describe16",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PatchRequest.spec.ts~describe16.it17",
    "access": null,
    "description": "represents an Axios request",
    "lineNumber": 13,
    "testTargets": [
      "PatchRequest.to"
    ]
  },
  {
    "__docId__": 336,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "spec/model/PatchRequest.spec.ts~describe16",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PatchRequest.spec.ts~describe16.it18",
    "access": null,
    "description": "can have a request body",
    "lineNumber": 24,
    "testTargets": [
      "PatchRequest.to",
      "PatchRequest#with"
    ]
  },
  {
    "__docId__": 337,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "spec/model/PatchRequest.spec.ts~describe16",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PatchRequest.spec.ts~describe16.it19",
    "access": null,
    "description": "allows for additional request properties to be specified",
    "lineNumber": 38,
    "testTargets": [
      "PatchRequest.to",
      "PatchRequest#with",
      "PatchRequest#using"
    ]
  },
  {
    "__docId__": 338,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "spec/model/PatchRequest.spec.ts~describe16",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PatchRequest.spec.ts~describe16.it20",
    "access": null,
    "description": "provides a sensible description of the interaction being performed",
    "lineNumber": 55,
    "testTargets": [
      "PatchRequest#toString"
    ]
  },
  {
    "__docId__": 339,
    "kind": "testFile",
    "name": "spec/model/PostRequest.spec.ts",
    "content": "import 'mocha';\n\nimport { PostRequest } from '../../src/model';\nimport { actorUsingAMockedAxiosInstance } from '../actors';\nimport { expect } from '../expect';\n\n/** @test {PostRequest} */\ndescribe('PostRequest', () => {\n\n    const { actor } = actorUsingAMockedAxiosInstance();\n\n    /** @test {PostRequest.to} */\n    it('represents an Axios request', () =>\n        expect(actor.answer(PostRequest.to('/products/2')))\n            .to.eventually.deep.equal({\n                method: 'POST',\n                url: '/products/2',\n            }));\n\n    it('can have a request body', () =>\n        expect(actor.answer(PostRequest.to('/products/2').with({ name: 'apple' })))\n            .to.eventually.deep.equal({\n                method: 'POST',\n                url: '/products/2',\n                data: { name: 'apple' },\n            })\n    );\n\n    it('allows for additional request properties to be specified', () =>\n        expect(actor.answer(PostRequest.to('/products/2').with({ name: 'apple' }).using({\n            headers: {\n                Accept: 'application/json',\n            },\n        }))).\n        to.eventually.deep.equal({\n            method: 'POST',\n            url: '/products/2',\n            headers: {\n                Accept: 'application/json',\n            },\n            data: { name: 'apple' },\n        })\n    );\n\n    /** @test {PostRequest#toString} */\n    it('provides a sensible description of the interaction being performed', () => {\n        expect(PostRequest.to('/products/2').toString())\n            .to.equal(`a POST request to '/products/2'`);\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/model/PostRequest.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 340,
    "kind": "test",
    "name": "describe21",
    "testId": 21,
    "memberof": "spec/model/PostRequest.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/model/PostRequest.spec.ts~describe21",
    "access": null,
    "description": "PostRequest",
    "lineNumber": 8,
    "testTargets": [
      "PostRequest"
    ]
  },
  {
    "__docId__": 341,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "spec/model/PostRequest.spec.ts~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PostRequest.spec.ts~describe21.it22",
    "access": null,
    "description": "represents an Axios request",
    "lineNumber": 13,
    "testTargets": [
      "PostRequest.to"
    ]
  },
  {
    "__docId__": 342,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "spec/model/PostRequest.spec.ts~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PostRequest.spec.ts~describe21.it23",
    "access": null,
    "description": "can have a request body",
    "lineNumber": 20
  },
  {
    "__docId__": 343,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "spec/model/PostRequest.spec.ts~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PostRequest.spec.ts~describe21.it24",
    "access": null,
    "description": "allows for additional request properties to be specified",
    "lineNumber": 29
  },
  {
    "__docId__": 344,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "spec/model/PostRequest.spec.ts~describe21",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PostRequest.spec.ts~describe21.it25",
    "access": null,
    "description": "provides a sensible description of the interaction being performed",
    "lineNumber": 46,
    "testTargets": [
      "PostRequest#toString"
    ]
  },
  {
    "__docId__": 345,
    "kind": "testFile",
    "name": "spec/model/PutRequest.spec.ts",
    "content": "import 'mocha';\n\nimport { PutRequest } from '../../src/model';\nimport { actorUsingAMockedAxiosInstance } from '../actors';\nimport { expect } from '../expect';\n\n/** @test {PutRequest} */\ndescribe('PutRequest', () => {\n\n    const { actor } = actorUsingAMockedAxiosInstance();\n\n    /** @test {PutRequest.to} */\n    it('represents an Axios request', () =>\n        expect(actor.answer(PutRequest.to('/products/2')))\n            .to.eventually.deep.equal({\n                method: 'PUT',\n                url: '/products/2',\n            }));\n\n    /**\n     * @test {PutRequest.to}\n     * @test {PutRequest#with}\n     */\n    it('can have a request body', () =>\n        expect(actor.answer(PutRequest.to('/products/2').with({ name: 'apple' })))\n            .to.eventually.deep.equal({\n                method: 'PUT',\n                url: '/products/2',\n                data: { name: 'apple' },\n            })\n    );\n\n    /**\n     * @test {PutRequest.to}\n     * @test {PutRequest#with}\n     * @test {PutRequest#using}\n     */\n    it('allows for additional request properties to be specified', () =>\n        expect(actor.answer(PutRequest.to('/products/2').with({ name: 'apple' }).using({\n            headers: {\n                Accept: 'application/json',\n            },\n        }))).\n        to.eventually.deep.equal({\n            method: 'PUT',\n            url: '/products/2',\n            headers: {\n                Accept: 'application/json',\n            },\n            data: { name: 'apple' },\n        })\n    );\n\n    /** @test {PutRequest#toString} */\n    it('provides a sensible description of the interaction being performed', () => {\n        expect(PutRequest.to('/products/2').toString())\n            .to.equal(`a PUT request to '/products/2'`);\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/model/PutRequest.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 346,
    "kind": "test",
    "name": "describe26",
    "testId": 26,
    "memberof": "spec/model/PutRequest.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/model/PutRequest.spec.ts~describe26",
    "access": null,
    "description": "PutRequest",
    "lineNumber": 8,
    "testTargets": [
      "PutRequest"
    ]
  },
  {
    "__docId__": 347,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "spec/model/PutRequest.spec.ts~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PutRequest.spec.ts~describe26.it27",
    "access": null,
    "description": "represents an Axios request",
    "lineNumber": 13,
    "testTargets": [
      "PutRequest.to"
    ]
  },
  {
    "__docId__": 348,
    "kind": "test",
    "name": "it28",
    "testId": 28,
    "memberof": "spec/model/PutRequest.spec.ts~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PutRequest.spec.ts~describe26.it28",
    "access": null,
    "description": "can have a request body",
    "lineNumber": 24,
    "testTargets": [
      "PutRequest.to",
      "PutRequest#with"
    ]
  },
  {
    "__docId__": 349,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "spec/model/PutRequest.spec.ts~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PutRequest.spec.ts~describe26.it29",
    "access": null,
    "description": "allows for additional request properties to be specified",
    "lineNumber": 38,
    "testTargets": [
      "PutRequest.to",
      "PutRequest#with",
      "PutRequest#using"
    ]
  },
  {
    "__docId__": 350,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "spec/model/PutRequest.spec.ts~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "spec/model/PutRequest.spec.ts~describe26.it30",
    "access": null,
    "description": "provides a sensible description of the interaction being performed",
    "lineNumber": 55,
    "testTargets": [
      "PutRequest#toString"
    ]
  },
  {
    "__docId__": 351,
    "kind": "testFile",
    "name": "spec/screenplay/abilities/CallAnApi.spec.ts",
    "content": "import 'mocha';\n\nimport { ConfigurationError, LogicError, TestCompromisedError } from '@serenity-js/core';\nimport axios, { Method } from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\nimport { given } from 'mocha-testdata';\n\nimport { CallAnApi } from '../../../src';\nimport { expect } from '../../expect';\n\n/** @test {CallAnApi} */\ndescribe('CallAnApi', () => {\n\n    given([\n        { description: 'GET',       verification: 'onGet'      },\n        { description: 'POST',      verification: 'onPost'     },\n        { description: 'PUT',       verification: 'onPut'      },\n        { description: 'HEAD',      verification: 'onHead'     },\n        { description: 'DELETE',    verification: 'onDelete'   },\n        { description: 'PATCH',     verification: 'onPatch'    },\n        { description: 'OPTIONS',   verification: 'onAny'      },\n    ]).\n    it('allows the Actor to interact with HTTP endpoints via', ({description, verification}) => {\n        const\n            { callAnApi, mock } = mockedAxiosInstance(),\n            method = description as Method,\n            url = '/products/2';\n\n        mock[verification](url).reply(200);\n\n        return expect(callAnApi.request({ method, url })).to.be.fulfilled;\n    });\n\n    /**\n     * @test {CallAnApi}\n     * @test {CallAnApi.at}\n     */\n    it('provides a convenient factory method to be used when no custom configuration is required', () => {\n        const\n            baseURL = 'https://mycompany.com/api',\n            callAnApi = CallAnApi.at(baseURL);\n\n        expect(callAnApi).to.be.instanceOf(CallAnApi);\n        expect((callAnApi as any).axiosInstance.defaults.baseURL).to.equal(baseURL);\n    });\n\n    /**\n     * @test {CallAnApi}\n     * @test {CallAnApi.using}\n     */\n    it('provides a factory method to be used when custom configuration is required', () => {\n        const\n            baseURL = 'https://mycompany.com/api',\n            callAnApi = CallAnApi.using(axios.create({ baseURL }));\n\n        expect(callAnApi).to.be.instanceOf(CallAnApi);\n        expect((callAnApi as any).axiosInstance.defaults.baseURL).to.equal(baseURL);\n    });\n\n    /**\n     * @test {CallAnApi}\n     * @test {CallAnApi.mapLastResponse}\n     */\n    it('caches the last response so that it can be easily asserted on', () => {\n        const\n            { callAnApi, mock } = mockedAxiosInstance(),\n            url = '/products/2';\n\n        mock.onGet(url).reply(200, { id: 2 });\n\n        return expect(callAnApi.request({ method: 'get', url })).to.be.fulfilled.then(() => {\n            callAnApi.mapLastResponse(response => expect(response.status).to.equal(200));\n        });\n    });\n\n    /**\n     * @test {CallAnApi}\n     * @test {CallAnApi.request}\n     * @test {CallAnApi.mapLastResponse}\n     */\n    it('caches the last response even when the server responds with an error. As long is it responds.', () => {\n        const\n            { callAnApi, mock } = mockedAxiosInstance(),\n            url = '/products/2';\n\n        mock.onGet(url).reply(500);\n\n        return expect(callAnApi.request({ method: 'get', url })).to.be.fulfilled.then(() => {\n            callAnApi.mapLastResponse(response => expect(response.status).to.equal(500));\n        });\n    });\n\n    /**\n     * @test {CallAnApi}\n     * @test {CallAnApi.resolveUrl}\n     */\n    it('provides a way to determine the actual target URL the request will be sent to', () => {\n        const callaAnApi = CallAnApi.at('https://example.org/api/v4');\n\n        const actualUrl = callaAnApi.resolveUrl({ url: 'products/3' });\n\n        expect(actualUrl).to.equal('https://example.org/api/v4/products/3')\n    });\n\n    describe('when dealing with errors', () => {\n        /**\n         * @test {CallAnApi}\n         * @test {CallAnApi.mapLastResponse}\n         */\n        it('complains if you try to retrieve the last response before making an API call', () => {\n            const { callAnApi } = mockedAxiosInstance();\n\n            expect(() => callAnApi.mapLastResponse(_ => _))\n                .to.throw(LogicError, 'Make sure to perform a HTTP API call before checking on the response');\n        });\n\n        /**\n         * @test {CallAnApi}\n         * @test {CallAnApi.request}\n         */\n        it('complains when provided with invalid Axios configuration', () => {\n            const\n                axiosInstance = axios.create({\n                    baseURL: ['bah', 'humbug', '!'] as any,\n                }),\n                callAnApi = CallAnApi.using(axiosInstance);\n\n            return expect(callAnApi.request({ method: 'get', url: '/some/api' })).to.be.rejectedWith('Looks like there was an issue with Axios configuration')\n                .then((error: ConfigurationError) => {\n                    expect(error).to.be.instanceOf(ConfigurationError);\n                    expect(error.stack).to.contain('Caused by: TypeError');\n                });\n        });\n\n        /**\n         * @test {CallAnApi}\n         * @test {CallAnApi.request}\n         */\n        it('complains when the API call times out', () => {\n            const { callAnApi, mock } = mockedAxiosInstance();\n\n            mock.onAny().timeout();\n\n            return expect(callAnApi.request({ method: 'get', url: '/some/api' })).to.be.rejectedWith('The request has timed out')\n                .then((error: TestCompromisedError) => {\n                    expect(error).to.be.instanceOf(TestCompromisedError);\n                    expect(error.stack).to.contain('Caused by: Error: timeout of 0ms exceeded');\n                });\n        });\n\n        /**\n         * @test {CallAnApi}\n         * @test {CallAnApi.request}\n         */\n        it('complains when the a network error occurs', () => {\n            const { callAnApi, mock } = mockedAxiosInstance();\n\n            mock.onAny().networkError();\n\n            return expect(callAnApi.request({ method: 'get', url: '/some/api' })).to.be.rejectedWith('A network error has occurred')\n                .then((error: TestCompromisedError) => {\n                    expect(error).to.be.instanceOf(TestCompromisedError);\n                    expect(error.stack).to.contain('Caused by: Error: Network Error');\n                });\n        });\n\n        /**\n         * @test {CallAnApi}\n         * @test {CallAnApi.request}\n         */\n        it('complains when the Axios client rejects its promise', () => {\n            const { callAnApi, mock } = mockedAxiosInstance();\n\n            mock.onAny().reply(() => Promise.reject(new Error('something unpredictable')));\n\n            return expect(callAnApi.request({ method: 'get', url: '/some/api' })).to.be.rejectedWith('The API call has failed')\n                .then((error: TestCompromisedError) => {\n                    expect(error).to.be.instanceOf(TestCompromisedError);\n                    expect(error.stack).to.contain('Caused by: Error: something unpredictable');\n                });\n        });\n    });\n\n    // eslint-disable-next-line unicorn/consistent-function-scoping\n    function mockedAxiosInstance() {\n        const\n            axiosInstance = axios.create(),\n            mock = new MockAdapter(axiosInstance),\n            callAnApi = CallAnApi.using(axiosInstance);\n\n        return { mock, callAnApi };\n    }\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/screenplay/abilities/CallAnApi.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 352,
    "kind": "test",
    "name": "describe31",
    "testId": 31,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31",
    "access": null,
    "description": "CallAnApi",
    "lineNumber": 12,
    "testTargets": [
      "CallAnApi"
    ]
  },
  {
    "__docId__": 353,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.it32",
    "access": null,
    "description": "provides a convenient factory method to be used when no custom configuration is required",
    "lineNumber": 38,
    "testTargets": [
      "CallAnApi",
      "CallAnApi.at"
    ]
  },
  {
    "__docId__": 354,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.it33",
    "access": null,
    "description": "provides a factory method to be used when custom configuration is required",
    "lineNumber": 51,
    "testTargets": [
      "CallAnApi",
      "CallAnApi.using"
    ]
  },
  {
    "__docId__": 355,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.it34",
    "access": null,
    "description": "caches the last response so that it can be easily asserted on",
    "lineNumber": 64,
    "testTargets": [
      "CallAnApi",
      "CallAnApi.mapLastResponse"
    ]
  },
  {
    "__docId__": 356,
    "kind": "test",
    "name": "it35",
    "testId": 35,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.it35",
    "access": null,
    "description": "caches the last response even when the server responds with an error. As long is it responds.",
    "lineNumber": 81,
    "testTargets": [
      "CallAnApi",
      "CallAnApi.request",
      "CallAnApi.mapLastResponse"
    ]
  },
  {
    "__docId__": 357,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.it36",
    "access": null,
    "description": "provides a way to determine the actual target URL the request will be sent to",
    "lineNumber": 97,
    "testTargets": [
      "CallAnApi",
      "CallAnApi.resolveUrl"
    ]
  },
  {
    "__docId__": 358,
    "kind": "test",
    "name": "describe37",
    "testId": 37,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.describe37",
    "access": null,
    "description": "when dealing with errors",
    "lineNumber": 105
  },
  {
    "__docId__": 359,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.describe37",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.describe37.it38",
    "access": null,
    "description": "complains if you try to retrieve the last response before making an API call",
    "lineNumber": 110,
    "testTargets": [
      "CallAnApi",
      "CallAnApi.mapLastResponse"
    ]
  },
  {
    "__docId__": 360,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.describe37",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.describe37.it39",
    "access": null,
    "description": "complains when provided with invalid Axios configuration",
    "lineNumber": 121,
    "testTargets": [
      "CallAnApi",
      "CallAnApi.request"
    ]
  },
  {
    "__docId__": 361,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.describe37",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.describe37.it40",
    "access": null,
    "description": "complains when the API call times out",
    "lineNumber": 139,
    "testTargets": [
      "CallAnApi",
      "CallAnApi.request"
    ]
  },
  {
    "__docId__": 362,
    "kind": "test",
    "name": "it41",
    "testId": 41,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.describe37",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.describe37.it41",
    "access": null,
    "description": "complains when the a network error occurs",
    "lineNumber": 155,
    "testTargets": [
      "CallAnApi",
      "CallAnApi.request"
    ]
  },
  {
    "__docId__": 363,
    "kind": "test",
    "name": "it42",
    "testId": 42,
    "memberof": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.describe37",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/abilities/CallAnApi.spec.ts~describe31.describe37.it42",
    "access": null,
    "description": "complains when the Axios client rejects its promise",
    "lineNumber": 171,
    "testTargets": [
      "CallAnApi",
      "CallAnApi.request"
    ]
  },
  {
    "__docId__": 364,
    "kind": "testFile",
    "name": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts",
    "content": "import 'mocha';\n\nimport { Ensure, equals } from '@serenity-js/assertions';\nimport { LogicError } from '@serenity-js/core';\n\nimport { ChangeApiConfig, GetRequest, LastResponse, Send } from '../../../src';\nimport { actorUsingAMockedAxiosInstance } from '../../actors';\nimport { expect } from '../../expect';\n\n/** @test {ChangeApiConfig} */\ndescribe('ChangeApiConfig', () => {\n\n    const\n        originalUrl             = 'http://localhost/',\n        newUrl                  = 'http://example.com/',\n        originalUrlWithNewPort  = 'http://localhost:8080/';\n\n    describe('when changing the API URL', () => {\n\n        const { actor, mock } = actorUsingAMockedAxiosInstance({ baseURL: originalUrl });\n\n        beforeEach(() => {\n            mock.onGet(originalUrl).reply(500);\n            mock.onGet(newUrl).reply(200);\n        });\n\n        afterEach(() =>  mock.reset());\n\n        /**\n         * @test {ChangeApiConfig}\n         * @test {ChangeApiConfig.setUrlTo}\n         */\n        it('changes the base URL used by any subsequent requests', () => actor.attemptsTo(\n            Send.a(GetRequest.to('/')),\n            Ensure.that(LastResponse.status(), equals(500)),\n\n            ChangeApiConfig.setUrlTo(newUrl),\n            Send.a(GetRequest.to('/')),\n            Ensure.that(LastResponse.status(), equals(200)),\n        ));\n    });\n\n    describe('when changing the API port', () => {\n\n        const { actor, mock } = actorUsingAMockedAxiosInstance({ baseURL: originalUrl });\n\n        beforeEach(() => {\n            mock.onGet(originalUrl).reply(500);\n            mock.onGet(originalUrlWithNewPort).reply(200);\n        });\n\n        afterEach(() =>  mock.reset());\n\n        /**\n         * @test {ChangeApiConfig}\n         * @test {ChangeApiConfig.setPortTo}\n         */\n        it('changes the base URL used by any subsequent requests', () =>\n            actor.attemptsTo(\n                Send.a(GetRequest.to('/')),\n                Ensure.that(LastResponse.status(), equals(500)),\n\n                ChangeApiConfig.setPortTo(8080),\n                Send.a(GetRequest.to('/')),\n                Ensure.that(LastResponse.status(), equals(200)),\n            ));\n\n        /**\n         * @test {ChangeApiConfig}\n         * @test {ChangeApiConfig.setPortTo}\n         */\n        it('complains if the url has not been set prior to attempted port change', () =>\n            expect(actor.attemptsTo(\n                ChangeApiConfig.setUrlTo(undefined),    // eslint-disable-line unicorn/no-useless-undefined\n                ChangeApiConfig.setPortTo(8080),\n            )).to.be.rejectedWith(LogicError, `Can't change the port of a baseURL that has not been set.`));\n\n        /**\n         * @test {ChangeApiConfig}\n         * @test {ChangeApiConfig.setPortTo}\n         */\n        it('complains if the url to be changed is invalid', () =>\n            expect(actor.attemptsTo(\n                ChangeApiConfig.setUrlTo('invalid'),\n                ChangeApiConfig.setPortTo(8080),\n            )).to.be.rejectedWith(LogicError, `Could not change the API port`));\n    });\n\n    describe('when setting a request header', () => {\n\n        const { actor, mock } = actorUsingAMockedAxiosInstance({ baseURL: originalUrl });\n\n        beforeEach(() => {\n            const dataMatcher = undefined;\n            mock.onGet(originalUrl, dataMatcher).replyOnce(401);\n            mock.onGet(originalUrl, dataMatcher, {\n                'Accept': 'application/json, text/plain, */*',\n                'Authorization': 'my-token'\n            }).replyOnce(200);\n        });\n\n        afterEach(() =>  mock.reset());\n\n        /**\n         * @test {ChangeApiConfig}\n         * @test {ChangeApiConfig.setHeader}\n         */\n        it('sets a header to be used by any subsequent requests', () =>\n            actor.attemptsTo(\n                Send.a(GetRequest.to('/')),\n                Ensure.that(LastResponse.status(), equals(401)),\n\n                ChangeApiConfig.setHeader('Authorization', 'my-token'),\n                Send.a(GetRequest.to('/')),\n                Ensure.that(LastResponse.status(), equals(200)),\n            ));\n\n        /**\n         * @test {ChangeApiConfig}\n         * @test {ChangeApiConfig.setHeader}\n         */\n        it('complains if the name of the header is empty', () =>\n            expect(actor.attemptsTo(\n                ChangeApiConfig.setHeader('', 'value'),\n            )).to.be.rejectedWith(LogicError, `Looks like the name of the header is missing, \"\" given`));\n\n        /**\n         * @test {ChangeApiConfig}\n         * @test {ChangeApiConfig.setHeader}\n         */\n        it('complains if the name of the header is undefined', () =>\n            expect(actor.attemptsTo(\n                ChangeApiConfig.setHeader(undefined, 'value'),\n            )).to.be.rejectedWith(LogicError, `Looks like the name of the header is missing, \"undefined\" given`));\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/screenplay/interactions/ChangeAPIConfig.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 365,
    "kind": "test",
    "name": "describe43",
    "testId": 43,
    "memberof": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43",
    "access": null,
    "description": "ChangeApiConfig",
    "lineNumber": 11,
    "testTargets": [
      "ChangeApiConfig"
    ]
  },
  {
    "__docId__": 366,
    "kind": "test",
    "name": "describe44",
    "testId": 44,
    "memberof": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe44",
    "access": null,
    "description": "when changing the API URL",
    "lineNumber": 18
  },
  {
    "__docId__": 367,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe44",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe44.it45",
    "access": null,
    "description": "changes the base URL used by any subsequent requests",
    "lineNumber": 33,
    "testTargets": [
      "ChangeApiConfig",
      "ChangeApiConfig.setUrlTo"
    ]
  },
  {
    "__docId__": 368,
    "kind": "test",
    "name": "describe46",
    "testId": 46,
    "memberof": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe46",
    "access": null,
    "description": "when changing the API port",
    "lineNumber": 43
  },
  {
    "__docId__": 369,
    "kind": "test",
    "name": "it47",
    "testId": 47,
    "memberof": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe46",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe46.it47",
    "access": null,
    "description": "changes the base URL used by any subsequent requests",
    "lineNumber": 58,
    "testTargets": [
      "ChangeApiConfig",
      "ChangeApiConfig.setPortTo"
    ]
  },
  {
    "__docId__": 370,
    "kind": "test",
    "name": "it48",
    "testId": 48,
    "memberof": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe46",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe46.it48",
    "access": null,
    "description": "complains if the url has not been set prior to attempted port change",
    "lineNumber": 72,
    "testTargets": [
      "ChangeApiConfig",
      "ChangeApiConfig.setPortTo"
    ]
  },
  {
    "__docId__": 371,
    "kind": "test",
    "name": "it49",
    "testId": 49,
    "memberof": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe46",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe46.it49",
    "access": null,
    "description": "complains if the url to be changed is invalid",
    "lineNumber": 82,
    "testTargets": [
      "ChangeApiConfig",
      "ChangeApiConfig.setPortTo"
    ]
  },
  {
    "__docId__": 372,
    "kind": "test",
    "name": "describe50",
    "testId": 50,
    "memberof": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe50",
    "access": null,
    "description": "when setting a request header",
    "lineNumber": 89
  },
  {
    "__docId__": 373,
    "kind": "test",
    "name": "it51",
    "testId": 51,
    "memberof": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe50",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe50.it51",
    "access": null,
    "description": "sets a header to be used by any subsequent requests",
    "lineNumber": 108,
    "testTargets": [
      "ChangeApiConfig",
      "ChangeApiConfig.setHeader"
    ]
  },
  {
    "__docId__": 374,
    "kind": "test",
    "name": "it52",
    "testId": 52,
    "memberof": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe50",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe50.it52",
    "access": null,
    "description": "complains if the name of the header is empty",
    "lineNumber": 122,
    "testTargets": [
      "ChangeApiConfig",
      "ChangeApiConfig.setHeader"
    ]
  },
  {
    "__docId__": 375,
    "kind": "test",
    "name": "it53",
    "testId": 53,
    "memberof": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe50",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/interactions/ChangeAPIConfig.spec.ts~describe43.describe50.it53",
    "access": null,
    "description": "complains if the name of the header is undefined",
    "lineNumber": 131,
    "testTargets": [
      "ChangeApiConfig",
      "ChangeApiConfig.setHeader"
    ]
  },
  {
    "__docId__": 376,
    "kind": "testFile",
    "name": "spec/screenplay/interactions/Send.spec.ts",
    "content": "import 'mocha';\n\nimport { EventRecorder } from '@integration/testing-tools';\nimport { Ensure, equals } from '@serenity-js/assertions';\nimport { Serenity } from '@serenity-js/core';\nimport { ActivityFinished, ActivityRelatedArtifactGenerated, ActivityStarts } from '@serenity-js/core/lib/events';\nimport { HTTPRequestResponse } from '@serenity-js/core/lib/model';\nimport { Clock } from '@serenity-js/core/lib/stage';\nimport axios from 'axios';\nimport MockAdapter from 'axios-mock-adapter';\n\nimport { GetRequest, LastResponse, Send } from '../../../src';\nimport { actorUsingAMockedAxiosInstance, APIActors } from '../../actors';\nimport { expect } from '../../expect';\n\n/** @test {Send} */\ndescribe('Send', () => {\n\n    interface ExampleResponse {\n        id: number;\n    }\n\n    /**\n     * @test {Send.a}\n     * @test {HTTPRequest}\n     * @test {GetRequest.to}\n     * @test {LastResponse.status}\n     * @test {LastResponse.body}\n     */\n    it('enables the actor to send a HTTPRequest', () => {\n        const { actor, mock } = actorUsingAMockedAxiosInstance();\n\n        mock.onGet('/products/2').reply(200, {\n            id: 2,\n        });\n\n        return actor.attemptsTo(\n            Send.a(GetRequest.to('/products/2')),\n            Ensure.that(LastResponse.status(), equals(200)),\n            Ensure.that(LastResponse.body<ExampleResponse>(), equals({ id: 2 })),\n        );\n    });\n\n    /**\n     * @test {Send.a}\n     * @test {HTTPRequest}\n     * @test {GetRequest.to}\n     * @test {LastResponse.status}\n     * @test {LastResponse.body}\n     */\n    it('enables the actor to send an Axios Request', () => {\n        const { actor, mock } = actorUsingAMockedAxiosInstance();\n\n        mock.onGet('/products/2').reply(200, {\n            id: 2,\n        });\n\n        return actor.attemptsTo(\n            Send.a({\n                method: 'get',\n                url: '/products/2',\n            }),\n            Ensure.that(LastResponse.status(), equals(200)),\n            Ensure.that(LastResponse.body<ExampleResponse>(), equals({ id: 2 })),\n        );\n    });\n\n    /**\n     * @test {Send.a}\n     * @test {HTTPRequest}\n     * @test {GetRequest.to}\n     */\n    it('emits the events so that the details of the HTTP interaction can be reported', () => {\n        const frozenClock = new Clock(() => new Date('1970-01-01'));\n        const axiosInstance = axios.create({\n            baseURL: 'https://myapp.com/api'\n        });\n        const mock     = new MockAdapter(axiosInstance);\n        const serenity = new Serenity(frozenClock);\n        const recorder = new EventRecorder();\n\n        serenity.configure({\n            actors: new APIActors(axiosInstance),\n            crew: [ recorder ],\n        });\n\n        mock.onGet('products/2').reply(200, {   // axios-mock-adapter doesn't resolve baseUrl; it should've really been mock.onGet('/api/products/2')\n            id: 2,\n        }, {\n            'Content-Type': 'application/json',\n        });\n\n        return serenity.theActorCalled('Apisitt').attemptsTo(\n            Send.a(GetRequest.to('products/2')),\n        ).then(() => {\n            const events = recorder.events;\n\n            expect(events).to.have.lengthOf(3);\n            expect(events[ 0 ]).to.be.instanceOf(ActivityStarts);\n            expect(events[ 1 ]).to.be.instanceOf(ActivityRelatedArtifactGenerated);\n            expect(events[ 2 ]).to.be.instanceOf(ActivityFinished);\n\n            const artifactGenerated = events[ 1 ] as ActivityRelatedArtifactGenerated;\n\n            expect(artifactGenerated.name.value).to.equal(`GET https://myapp.com/api/products/2`);\n            expect(artifactGenerated.artifact.equals(HTTPRequestResponse.fromJSON({\n                request: {\n                    method: 'get',\n                    url: 'https://myapp.com/api/products/2',\n                    headers: { Accept: 'application/json, text/plain, */*' },\n                },\n                response: {\n                    status: 200,\n                    headers: {\n                        'Content-Type': 'application/json',\n                    },\n                    data: { id: 2 },\n                },\n            }))).to.equal(true, JSON.stringify(artifactGenerated.artifact.toJSON()));\n\n            expect(artifactGenerated.timestamp.equals(frozenClock.now()))\n                .to.equal(true, artifactGenerated.timestamp.toString());\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/screenplay/interactions/Send.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 377,
    "kind": "test",
    "name": "describe54",
    "testId": 54,
    "memberof": "spec/screenplay/interactions/Send.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/screenplay/interactions/Send.spec.ts~describe54",
    "access": null,
    "description": "Send",
    "lineNumber": 17,
    "testTargets": [
      "Send"
    ]
  },
  {
    "__docId__": 378,
    "kind": "test",
    "name": "it55",
    "testId": 55,
    "memberof": "spec/screenplay/interactions/Send.spec.ts~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/interactions/Send.spec.ts~describe54.it55",
    "access": null,
    "description": "enables the actor to send a HTTPRequest",
    "lineNumber": 48,
    "testTargets": [
      "Send.a",
      "HTTPRequest",
      "GetRequest.to",
      "LastResponse.status",
      "LastResponse.body"
    ]
  },
  {
    "__docId__": 379,
    "kind": "test",
    "name": "it56",
    "testId": 56,
    "memberof": "spec/screenplay/interactions/Send.spec.ts~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/interactions/Send.spec.ts~describe54.it56",
    "access": null,
    "description": "enables the actor to send an Axios Request",
    "lineNumber": 69,
    "testTargets": [
      "Send.a",
      "HTTPRequest",
      "GetRequest.to",
      "LastResponse.status",
      "LastResponse.body"
    ]
  },
  {
    "__docId__": 380,
    "kind": "test",
    "name": "it57",
    "testId": 57,
    "memberof": "spec/screenplay/interactions/Send.spec.ts~describe54",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/interactions/Send.spec.ts~describe54.it57",
    "access": null,
    "description": "emits the events so that the details of the HTTP interaction can be reported",
    "lineNumber": 91,
    "testTargets": [
      "Send.a",
      "HTTPRequest",
      "GetRequest.to"
    ]
  },
  {
    "__docId__": 381,
    "kind": "testFile",
    "name": "spec/screenplay/questions/LastResponse.spec.ts",
    "content": "import 'mocha';\n\nimport { Ensure, equals } from '@serenity-js/assertions';\nimport { LogicError } from '@serenity-js/core';\n\nimport { GetRequest, LastResponse, Send } from '../../../src';\nimport { actorUsingAMockedAxiosInstance } from '../../actors';\nimport { expect } from '../../expect';\n\n/** @test {LastResponse} */\ndescribe('LastResponse', () => {\n\n    const { actor, mock } = actorUsingAMockedAxiosInstance();\n\n    afterEach(() =>  mock.reset());\n\n    describe('when asserting on the response to the last HTTP request', () => {\n\n        interface Product {\n            id: number;\n            name: string;\n        }\n\n        const\n            url     = '/products/2',\n            body    = { id: 2, name: 'apple' },\n            headers = { 'Content-Type': 'application/json;charset=utf-8' };\n\n        beforeEach(() =>  mock.onGet(url).reply(200, body, headers));\n\n        /**\n         * @test {LastResponse}\n         * @test {LastResponse.status}\n         */\n        it('enables access to the response status', () => actor.attemptsTo(\n            Send.a(GetRequest.to(url)),\n            Ensure.that(LastResponse.status(), equals(200)),\n        ));\n\n        /**\n         * @test {LastResponse}\n         * @test {LastResponse.body}\n         */\n        it('enables access to the response body', () => actor.attemptsTo(\n            Send.a(GetRequest.to(url)),\n            Ensure.that(LastResponse.body<Product>(), equals(body)),\n        ));\n\n        /**\n         * @test {LastResponse}\n         * @test {LastResponse.header}\n         */\n        it('enables access to a specific response header', () => actor.attemptsTo(\n            Send.a(GetRequest.to(url)),\n            Ensure.that(LastResponse.header('Content-Type'), equals(headers['Content-Type'])),\n        ));\n\n        /**\n         * @test {LastResponse}\n         * @test {LastResponse.headers}\n         */\n        it('enables access to all response headers', () => actor.attemptsTo(\n            Send.a(GetRequest.to(url)),\n            Ensure.that(LastResponse.headers(), equals(headers)),\n        ));\n    });\n\n    /**\n     * @test {CallAnApi.mapLastResponse}\n     */\n    it('complains if the last response is attempted to be retrieved without making a request first', () =>\n        expect(actor.attemptsTo(\n            Ensure.that(LastResponse.status(), equals(200)),\n        )).to.be.rejectedWith(LogicError, 'Make sure to perform a HTTP API call before checking on the response'),\n    );\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/screenplay/questions/LastResponse.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 382,
    "kind": "test",
    "name": "describe58",
    "testId": 58,
    "memberof": "spec/screenplay/questions/LastResponse.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/screenplay/questions/LastResponse.spec.ts~describe58",
    "access": null,
    "description": "LastResponse",
    "lineNumber": 11,
    "testTargets": [
      "LastResponse"
    ]
  },
  {
    "__docId__": 383,
    "kind": "test",
    "name": "describe59",
    "testId": 59,
    "memberof": "spec/screenplay/questions/LastResponse.spec.ts~describe58",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/questions/LastResponse.spec.ts~describe58.describe59",
    "access": null,
    "description": "when asserting on the response to the last HTTP request",
    "lineNumber": 17
  },
  {
    "__docId__": 384,
    "kind": "test",
    "name": "it60",
    "testId": 60,
    "memberof": "spec/screenplay/questions/LastResponse.spec.ts~describe58.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/questions/LastResponse.spec.ts~describe58.describe59.it60",
    "access": null,
    "description": "enables access to the response status",
    "lineNumber": 64,
    "testTargets": [
      "LastResponse",
      "LastResponse.status"
    ]
  },
  {
    "__docId__": 385,
    "kind": "test",
    "name": "it61",
    "testId": 61,
    "memberof": "spec/screenplay/questions/LastResponse.spec.ts~describe58.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/questions/LastResponse.spec.ts~describe58.describe59.it61",
    "access": null,
    "description": "enables access to the response body",
    "lineNumber": 73,
    "testTargets": [
      "LastResponse",
      "LastResponse.body"
    ]
  },
  {
    "__docId__": 386,
    "kind": "test",
    "name": "it62",
    "testId": 62,
    "memberof": "spec/screenplay/questions/LastResponse.spec.ts~describe58.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/questions/LastResponse.spec.ts~describe58.describe59.it62",
    "access": null,
    "description": "enables access to a specific response header",
    "lineNumber": 82,
    "testTargets": [
      "LastResponse",
      "LastResponse.header"
    ]
  },
  {
    "__docId__": 387,
    "kind": "test",
    "name": "it63",
    "testId": 63,
    "memberof": "spec/screenplay/questions/LastResponse.spec.ts~describe58.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "spec/screenplay/questions/LastResponse.spec.ts~describe58.describe59.it63",
    "access": null,
    "description": "enables access to all response headers",
    "lineNumber": 91,
    "testTargets": [
      "LastResponse",
      "LastResponse.headers"
    ]
  },
  {
    "__docId__": 388,
    "kind": "test",
    "name": "it64",
    "testId": 64,
    "memberof": "spec/screenplay/questions/LastResponse.spec.ts~describe58",
    "testDepth": 1,
    "static": true,
    "longname": "spec/screenplay/questions/LastResponse.spec.ts~describe58.it64",
    "access": null,
    "description": "complains if the last response is attempted to be retrieved without making a request first",
    "lineNumber": 100,
    "testTargets": [
      "CallAnApi.mapLastResponse"
    ]
  },
  {
    "__docId__": 389,
    "kind": "testFile",
    "name": "spec/setup.spec.ts",
    "content": "import 'mocha';\n\nimport { configure } from '@serenity-js/core';\n\nbeforeEach(() => configure({}));\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/rest/spec/setup.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  }
]