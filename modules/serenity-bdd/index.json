[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "AxiosError",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L85",
    "longname": "AxiosError",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "AxiosInstance",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L130",
    "longname": "AxiosInstance",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "AxiosRequestConfig",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L44",
    "longname": "AxiosRequestConfig",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "AxiosPromise",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L94",
    "longname": "AxiosPromise",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "AxiosResponse",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L76",
    "longname": "AxiosResponse",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "longname": "Proxy",
    "memberof": "src/.imports-from-mdn.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "ProtractorConfig",
    "externalLink": "https://github.com/angular/protractor/blob/master/lib/config.ts",
    "longname": "protractor~ProtractorConfig",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "Runner",
    "externalLink": "https://github.com/angular/protractor/blob/master/lib/runner.ts",
    "longname": "protractor~Runner",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "ElementArrayFinder",
    "externalLink": "https://www.protractortest.org/#/api?view=ElementArrayFinder",
    "longname": "ElementArrayFinder",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "ElementFinder",
    "externalLink": "https://www.protractortest.org/#/api?view=ElementFinder",
    "longname": "ElementFinder",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "ProtractorBrowser",
    "externalLink": "https://www.protractortest.org/#/api?view=ProtractorBrowser",
    "longname": "ProtractorBrowser",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "Actions",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/input_exports_Actions.html",
    "longname": "selenium-webdriver~Actions",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "AlertPromise",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/webdriver_exports_AlertPromise.html",
    "longname": "selenium-webdriver~AlertPromise",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "By",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/by_exports_By.html",
    "longname": "selenium-webdriver~By",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "Capabilities",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_Capabilities.html",
    "longname": "selenium-webdriver~Capabilities",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "Key",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_Key.html",
    "longname": "selenium-webdriver~Key",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Navigation",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/webdriver_exports_Navigation.html",
    "longname": "selenium-webdriver~Navigation",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "Options",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/ie_exports_Options.html",
    "longname": "selenium-webdriver~Options",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "WebElement",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebElement.html",
    "longname": "selenium-webdriver~WebElement",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "Ensure",
    "externalLink": "/modules/assertions/class/src/Ensure.ts~Ensure.html",
    "longname": "@serenity-js/assertions~Ensure",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "and",
    "externalLink": "/modules/assertions/function/index.html#static-function-and",
    "longname": "@serenity-js/assertions/lib/expectations~and",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "contain",
    "externalLink": "/modules/assertions/function/index.html#static-function-contain",
    "longname": "@serenity-js/assertions/lib/expectations~contain",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "containAtLeastOneItemThat",
    "externalLink": "/modules/assertions/function/index.html#static-function-containAtLeastOneItemThat",
    "longname": "@serenity-js/assertions/lib/expectations~containAtLeastOneItemThat",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "containItemsWhereEachItem",
    "externalLink": "/modules/assertions/function/index.html#static-function-containItemsWhereEachItem",
    "longname": "@serenity-js/assertions/lib/expectations~containItemsWhereEachItem",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "endsWith",
    "externalLink": "/modules/assertions/function/index.html#static-function-endsWith",
    "longname": "@serenity-js/assertions/lib/expectations~endsWith",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "equals",
    "externalLink": "/modules/assertions/function/index.html#static-function-equals",
    "longname": "@serenity-js/assertions/lib/expectations~equals",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "includes",
    "externalLink": "/modules/assertions/function/index.html#static-function-includes",
    "longname": "@serenity-js/assertions/lib/expectations~includes",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "isAfter",
    "externalLink": "/modules/assertions/function/index.html#static-function-isAfter",
    "longname": "@serenity-js/assertions/lib/expectations~isAfter",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "isBefore",
    "externalLink": "/modules/assertions/function/index.html#static-function-isBefore",
    "longname": "@serenity-js/assertions/lib/expectations~isBefore",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "isFalse",
    "externalLink": "/modules/assertions/function/index.html#static-function-isFalse",
    "longname": "@serenity-js/assertions/lib/expectations~isFalse",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "isGreaterThan",
    "externalLink": "/modules/assertions/function/index.html#static-function-isGreaterThan",
    "longname": "@serenity-js/assertions/lib/expectations~isGreaterThan",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "isLessThan",
    "externalLink": "/modules/assertions/function/index.html#static-function-isLessThan",
    "longname": "@serenity-js/assertions/lib/expectations~isLessThan",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "isTrue",
    "externalLink": "/modules/assertions/function/index.html#static-function-isTrue",
    "longname": "@serenity-js/assertions/lib/expectations~isTrue",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "matches",
    "externalLink": "/modules/assertions/function/index.html#static-function-matches",
    "longname": "@serenity-js/assertions/lib/expectations~matches",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "not",
    "externalLink": "/modules/assertions/function/index.html#static-function-not",
    "longname": "@serenity-js/assertions/lib/expectations~not",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "or",
    "externalLink": "/modules/assertions/function/index.html#static-function-or",
    "longname": "@serenity-js/assertions/lib/expectations~or",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "property",
    "externalLink": "/modules/assertions/function/index.html#static-function-property",
    "longname": "@serenity-js/assertions/lib/expectations~property",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "startsWith",
    "externalLink": "/modules/assertions/function/index.html#static-function-startsWith",
    "longname": "@serenity-js/assertions/lib/expectations~startsWith",
    "memberof": "src/.imports-from-serenity-js-assertions.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Serenity",
    "externalLink": "/modules/core/class/src/Serenity.ts~Serenity.html",
    "longname": "@serenity-js/core~Serenity",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "SerenityConfig",
    "externalLink": "/modules/core/class/src/SerenityConfig.ts~SerenityConfig.html",
    "longname": "@serenity-js/core~SerenityConfig",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "AssertionError",
    "externalLink": "/modules/core/class/src/errors/AssertionError.ts~AssertionError.html",
    "longname": "@serenity-js/core/lib/errors~AssertionError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "ConfigurationError",
    "externalLink": "/modules/core/class/src/errors/ConfigurationError.ts~ConfigurationError.html",
    "longname": "@serenity-js/core/lib/errors~ConfigurationError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "external",
    "name": "ImplementationPendingError",
    "externalLink": "/modules/core/class/src/errors/ImplementationPendingError.ts~ImplementationPendingError.html",
    "longname": "@serenity-js/core/lib/errors~ImplementationPendingError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "LogicError",
    "externalLink": "/modules/core/class/src/errors/LogicError.ts~LogicError.html",
    "longname": "@serenity-js/core/lib/errors~LogicError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "RuntimeError",
    "externalLink": "/modules/core/class/src/errors/RuntimeError.ts~RuntimeError.html",
    "longname": "@serenity-js/core/lib/errors~RuntimeError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "TestCompromisedError",
    "externalLink": "/modules/core/class/src/errors/TestCompromisedError.ts~TestCompromisedError.html",
    "longname": "@serenity-js/core/lib/errors~TestCompromisedError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "UnknownError",
    "externalLink": "/modules/core/class/src/errors/UnknownError.ts~UnknownError.html",
    "longname": "@serenity-js/core/lib/errors~UnknownError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "ActivityFinished",
    "externalLink": "/modules/core/class/src/events/ActivityFinished.ts~ActivityFinished.html",
    "longname": "@serenity-js/core/lib/events~ActivityFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "ActivityRelatedArtifactArchived",
    "externalLink": "/modules/core/class/src/events/ActivityRelatedArtifactArchived.ts~ActivityRelatedArtifactArchived.html",
    "longname": "@serenity-js/core/lib/events~ActivityRelatedArtifactArchived",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "ActivityRelatedArtifactGenerated",
    "externalLink": "/modules/core/class/src/events/ActivityRelatedArtifactGenerated.ts~ActivityRelatedArtifactGenerated.html",
    "longname": "@serenity-js/core/lib/events~ActivityRelatedArtifactGenerated",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "ActivityStarts",
    "externalLink": "/modules/core/class/src/events/ActivityStarts.ts~ActivityStarts.html",
    "longname": "@serenity-js/core/lib/events~ActivityStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "name": "ArtifactArchived",
    "externalLink": "/modules/core/class/src/events/ArtifactArchived.ts~ArtifactArchived.html",
    "longname": "@serenity-js/core/lib/events~ArtifactArchived",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "name": "ArtifactGenerated",
    "externalLink": "/modules/core/class/src/events/ArtifactGenerated.ts~ArtifactGenerated.html",
    "longname": "@serenity-js/core/lib/events~ArtifactGenerated",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "name": "AsyncOperationAttempted",
    "externalLink": "/modules/core/class/src/events/AsyncOperationAttempted.ts~AsyncOperationAttempted.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationAttempted",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "name": "AsyncOperationCompleted",
    "externalLink": "/modules/core/class/src/events/AsyncOperationCompleted.ts~AsyncOperationCompleted.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationCompleted",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "name": "AsyncOperationFailed",
    "externalLink": "/modules/core/class/src/events/AsyncOperationFailed.ts~AsyncOperationFailed.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationFailed",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "name": "BusinessRuleDetected",
    "externalLink": "/modules/core/class/src/events/BusinessRuleDetected.ts~BusinessRuleDetected.html",
    "longname": "@serenity-js/core/lib/events~BusinessRuleDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "name": "DomainEvent",
    "externalLink": "/modules/core/class/src/events/DomainEvent.ts~DomainEvent.html",
    "longname": "@serenity-js/core/lib/events~DomainEvent",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "name": "FeatureNarrativeDetected",
    "externalLink": "/modules/core/class/src/events/FeatureNarrativeDetected.ts~FeatureNarrativeDetected.html",
    "longname": "@serenity-js/core/lib/events~FeatureNarrativeDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "name": "InteractionFinished",
    "externalLink": "/modules/core/class/src/events/InteractionFinished.ts~InteractionFinished.html",
    "longname": "@serenity-js/core/lib/events~InteractionFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "name": "InteractionStarts",
    "externalLink": "/modules/core/class/src/events/InteractionStarts.ts~InteractionStarts.html",
    "longname": "@serenity-js/core/lib/events~InteractionStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "name": "RetryableSceneDetected",
    "externalLink": "/modules/core/class/src/events/RetryableSceneDetected.ts~RetryableSceneDetected.html",
    "longname": "@serenity-js/core/lib/events~RetryableSceneDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "name": "SceneBackgroundDetected",
    "externalLink": "/modules/core/class/src/events/SceneBackgroundDetected.ts~SceneBackgroundDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneBackgroundDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "name": "SceneDescriptionDetected",
    "externalLink": "/modules/core/class/src/events/SceneDescriptionDetected.ts~SceneDescriptionDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneDescriptionDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "name": "SceneFinished",
    "externalLink": "/modules/core/class/src/events/SceneFinished.ts~SceneFinished.html",
    "longname": "@serenity-js/core/lib/events~SceneFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "name": "SceneFinishes",
    "externalLink": "/modules/core/class/src/events/SceneFinishes.ts~SceneFinishes.html",
    "longname": "@serenity-js/core/lib/events~SceneFinishes",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "name": "SceneParametersDetected",
    "externalLink": "/modules/core/class/src/events/SceneParametersDetected.ts~SceneParametersDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneParametersDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "name": "SceneSequenceDetected",
    "externalLink": "/modules/core/class/src/events/SceneSequenceDetected.ts~SceneSequenceDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneSequenceDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "name": "SceneStarts",
    "externalLink": "/modules/core/class/src/events/SceneStarts.ts~SceneStarts.html",
    "longname": "@serenity-js/core/lib/events~SceneStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "name": "SceneTagged",
    "externalLink": "/modules/core/class/src/events/SceneTagged.ts~SceneTagged.html",
    "longname": "@serenity-js/core/lib/events~SceneTagged",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "name": "SceneTemplateDetected",
    "externalLink": "/modules/core/class/src/events/SceneTemplateDetected.ts~SceneTemplateDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneTemplateDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "name": "TaskFinished",
    "externalLink": "/modules/core/class/src/events/TaskFinished.ts~TaskFinished.html",
    "longname": "@serenity-js/core/lib/events~TaskFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "name": "TaskStarts",
    "externalLink": "/modules/core/class/src/events/TaskStarts.ts~TaskStarts.html",
    "longname": "@serenity-js/core/lib/events~TaskStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "name": "TestRunFinished",
    "externalLink": "/modules/core/class/src/events/TestRunFinished.ts~TestRunFinished.html",
    "longname": "@serenity-js/core/lib/events~TestRunFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "name": "TestRunFinishes",
    "externalLink": "/modules/core/class/src/events/TestRunFinishes.ts~TestRunFinishes.html",
    "longname": "@serenity-js/core/lib/events~TestRunFinishes",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "external",
    "name": "TestRunStarts",
    "externalLink": "/modules/core/class/src/events/TestRunStarts.ts~TestRunStarts.html",
    "longname": "@serenity-js/core/lib/events~TestRunStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 82,
    "kind": "external",
    "name": "TestRunnerDetected",
    "externalLink": "/modules/core/class/src/events/TestRunnerDetected.ts~TestRunnerDetected.html",
    "longname": "@serenity-js/core/lib/events~TestRunnerDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 83,
    "kind": "external",
    "name": "TestSuiteFinished",
    "externalLink": "/modules/core/class/src/events/TestSuiteFinished.ts~TestSuiteFinished.html",
    "longname": "@serenity-js/core/lib/events~TestSuiteFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 84,
    "kind": "external",
    "name": "TestSuiteStarts",
    "externalLink": "/modules/core/class/src/events/TestSuiteStarts.ts~TestSuiteStarts.html",
    "longname": "@serenity-js/core/lib/events~TestSuiteStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 85,
    "kind": "external",
    "name": "serenity",
    "externalLink": "/modules/core/variable/src/instance.ts~serenity.html",
    "longname": "@serenity-js/core~serenity",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 86,
    "kind": "external",
    "name": "configure",
    "externalLink": "/modules/core/function/index.html#static-function-configure",
    "longname": "@serenity-js/core~configure",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 87,
    "kind": "external",
    "name": "engage",
    "externalLink": "/modules/core/function/index.html#static-function-engage",
    "longname": "@serenity-js/core~engage",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 88,
    "kind": "external",
    "name": "actorCalled",
    "externalLink": "/modules/core/function/index.html#static-function-actorCalled",
    "longname": "@serenity-js/core~actorCalled",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "name": "actorInTheSpotlight",
    "externalLink": "/modules/core/function/index.html#static-function-actorInTheSpotlight",
    "longname": "@serenity-js/core~actorInTheSpotlight",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "name": "AssertionReportDiffer",
    "externalLink": "/modules/core/class/src/io/AssertionReportDiffer.ts~AssertionReportDiffer.html",
    "longname": "@serenity-js/core/lib/io~AssertionReportDiffer",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "name": "Config",
    "externalLink": "/modules/core/class/src/io/Config.ts~Config.html",
    "longname": "@serenity-js/core/lib/io~Config",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "name": "SerialisedError",
    "externalLink": "/modules/core/class/src/io/ErrorSerialiser.ts~SerialisedError.html",
    "longname": "@serenity-js/core/lib/io~SerialisedError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "name": "ErrorSerialiser",
    "externalLink": "/modules/core/class/src/io/ErrorSerialiser.ts~ErrorSerialiser.html",
    "longname": "@serenity-js/core/lib/io~ErrorSerialiser",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "name": "FileFinder",
    "externalLink": "/modules/core/class/src/io/FileFinder.ts~FileFinder.html",
    "longname": "@serenity-js/core/lib/io~FileFinder",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "name": "FileSystem",
    "externalLink": "/modules/core/class/src/io/FileSystem.ts~FileSystem.html",
    "longname": "@serenity-js/core/lib/io~FileSystem",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "name": "FileSystemLocation",
    "externalLink": "/modules/core/class/src/io/FileSystemLocation.ts~FileSystemLocation.html",
    "longname": "@serenity-js/core/lib/io~FileSystemLocation",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "name": "ModuleLoader",
    "externalLink": "/modules/core/class/src/io/ModuleLoader.ts~ModuleLoader.html",
    "longname": "@serenity-js/core/lib/io~ModuleLoader",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "name": "OutputStream",
    "externalLink": "/modules/core/class/src/io/OutputStream.ts~OutputStream.html",
    "longname": "@serenity-js/core/lib/io~OutputStream",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "name": "Path",
    "externalLink": "/modules/core/class/src/io/Path.ts~Path.html",
    "longname": "@serenity-js/core/lib/io~Path",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "name": "TestRunnerAdapter",
    "externalLink": "/modules/core/class/src/io/TestRunnerAdapter.ts~TestRunnerAdapter.html",
    "longname": "@serenity-js/core/lib/io~TestRunnerAdapter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "name": "Version",
    "externalLink": "/modules/core/class/src/io/Version.ts~Version.html",
    "longname": "@serenity-js/core/lib/io~Version",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "name": "Mappable",
    "externalLink": "/modules/core/class/src/io/collections/mappable.ts~Mappable.html",
    "longname": "@serenity-js/core/lib/io/collections~Mappable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "name": "isMappable",
    "externalLink": "/modules/core/function/index.html#static-function-isMappable",
    "longname": "@serenity-js/core/lib/io/collections~isMappable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "name": "Reducible",
    "externalLink": "/modules/core/class/src/io/collections/reducible.ts~Reducible.html",
    "longname": "@serenity-js/core/lib/io/collections~Reducible",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "name": "commaSeparated",
    "externalLink": "/modules/core/function/index.html#static-function-commaSeparated",
    "longname": "@serenity-js/core/lib/io~commaSeparated",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "name": "formatted",
    "externalLink": "/modules/core/function/index.html#static-function-formatted",
    "longname": "@serenity-js/core/lib/io~formatted",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "name": "inspected",
    "externalLink": "/modules/core/function/index.html#static-function-inspected",
    "longname": "@serenity-js/core/lib/io~inspected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 108,
    "kind": "external",
    "name": "stringify",
    "externalLink": "/modules/core/function/index.html#static-function-stringify",
    "longname": "@serenity-js/core/lib/io/json~stringify",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "name": "parse",
    "externalLink": "/modules/core/function/index.html#static-function-parse",
    "longname": "@serenity-js/core/lib/io/json~parse",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 110,
    "kind": "external",
    "name": "has",
    "externalLink": "/modules/core/function/index.html#static-function-has",
    "longname": "@serenity-js/core/lib/io/reflection~has",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 111,
    "kind": "external",
    "name": "trimmed",
    "externalLink": "/modules/core/function/index.html#static-function-trimmed",
    "longname": "@serenity-js/core/lib/io~trimmed",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 112,
    "kind": "external",
    "name": "ActivityDetails",
    "externalLink": "/modules/core/class/src/model/ActivityDetails.ts~ActivityDetails.html",
    "longname": "@serenity-js/core/lib/model~ActivityDetails",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 113,
    "kind": "external",
    "name": "Artifact",
    "externalLink": "/modules/core/class/src/model/Artifact.ts~Artifact.html",
    "longname": "@serenity-js/core/lib/model~Artifact",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "name": "BusinessRule",
    "externalLink": "/modules/core/class/src/model/BusinessRule.ts~BusinessRule.html",
    "longname": "@serenity-js/core/lib/model~BusinessRule",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "name": "Category",
    "externalLink": "/modules/core/class/src/model/Category.ts~Category.html",
    "longname": "@serenity-js/core/lib/model~Category",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "name": "CorrelationId",
    "externalLink": "/modules/core/class/src/model/CorrelationId.ts~CorrelationId.html",
    "longname": "@serenity-js/core/lib/model~CorrelationId",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "external",
    "name": "Description",
    "externalLink": "/modules/core/class/src/model/Description.ts~Description.html",
    "longname": "@serenity-js/core/lib/model~Description",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 118,
    "kind": "external",
    "name": "Duration",
    "externalLink": "/modules/core/class/src/model/Duration.ts~Duration.html",
    "longname": "@serenity-js/core/lib/model~Duration",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 119,
    "kind": "external",
    "name": "Name",
    "externalLink": "/modules/core/class/src/model/Name.ts~Name.html",
    "longname": "@serenity-js/core/lib/model~Name",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 120,
    "kind": "external",
    "name": "ScenarioDetails",
    "externalLink": "/modules/core/class/src/model/ScenarioDetails.ts~ScenarioDetails.html",
    "longname": "@serenity-js/core/lib/model~ScenarioDetails",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 121,
    "kind": "external",
    "name": "ScenarioParameters",
    "externalLink": "/modules/core/class/src/model/ScenarioParameters.ts~ScenarioParameters.html",
    "longname": "@serenity-js/core/lib/model~ScenarioParameters",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 122,
    "kind": "external",
    "name": "TestSuiteDetails",
    "externalLink": "/modules/core/class/src/model/TestSuiteDetails.ts~TestSuiteDetails.html",
    "longname": "@serenity-js/core/lib/model~TestSuiteDetails",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 123,
    "kind": "external",
    "name": "Timestamp",
    "externalLink": "/modules/core/class/src/model/Timestamp.ts~Timestamp.html",
    "longname": "@serenity-js/core/lib/model~Timestamp",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "name": "AssertionReport",
    "externalLink": "/modules/core/class/src/model/artifacts/AssertionReport.ts~AssertionReport.html",
    "longname": "@serenity-js/core/lib/model/artifacts~AssertionReport",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 125,
    "kind": "external",
    "name": "RequestAndResponse",
    "externalLink": "/modules/core/class/src/model/artifacts/HTTPRequestResponse.ts~RequestAndResponse.html",
    "longname": "@serenity-js/core/lib/model/artifacts~RequestAndResponse",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "name": "HTTPRequestResponse",
    "externalLink": "/modules/core/class/src/model/artifacts/HTTPRequestResponse.ts~HTTPRequestResponse.html",
    "longname": "@serenity-js/core/lib/model/artifacts~HTTPRequestResponse",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "name": "JSONData",
    "externalLink": "/modules/core/class/src/model/artifacts/JSONData.ts~JSONData.html",
    "longname": "@serenity-js/core/lib/model/artifacts~JSONData",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "name": "LogEntry",
    "externalLink": "/modules/core/class/src/model/artifacts/LogEntry.ts~LogEntry.html",
    "longname": "@serenity-js/core/lib/model/artifacts~LogEntry",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "name": "Photo",
    "externalLink": "/modules/core/class/src/model/artifacts/Photo.ts~Photo.html",
    "longname": "@serenity-js/core/lib/model/artifacts~Photo",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "name": "TestReport",
    "externalLink": "/modules/core/class/src/model/artifacts/TestReport.ts~TestReport.html",
    "longname": "@serenity-js/core/lib/model/artifacts~TestReport",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "name": "TextData",
    "externalLink": "/modules/core/class/src/model/artifacts/TextData.ts~TextData.html",
    "longname": "@serenity-js/core/lib/model/artifacts~TextData",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "name": "SerialisedOutcome",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~SerialisedOutcome.html",
    "longname": "@serenity-js/core/lib/model~SerialisedOutcome",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "name": "Outcome",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~Outcome.html",
    "longname": "@serenity-js/core/lib/model~Outcome",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "external",
    "name": "ProblemIndication",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ProblemIndication.html",
    "longname": "@serenity-js/core/lib/model~ProblemIndication",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 135,
    "kind": "external",
    "name": "ExecutionCompromised",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionCompromised.html",
    "longname": "@serenity-js/core/lib/model~ExecutionCompromised",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "name": "ExecutionFailedWithError",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionFailedWithError.html",
    "longname": "@serenity-js/core/lib/model~ExecutionFailedWithError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "name": "ExecutionFailedWithAssertionError",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionFailedWithAssertionError.html",
    "longname": "@serenity-js/core/lib/model~ExecutionFailedWithAssertionError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "name": "ImplementationPending",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ImplementationPending.html",
    "longname": "@serenity-js/core/lib/model~ImplementationPending",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 139,
    "kind": "external",
    "name": "ExecutionIgnored",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionIgnored.html",
    "longname": "@serenity-js/core/lib/model~ExecutionIgnored",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "name": "ExecutionSkipped",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionSkipped.html",
    "longname": "@serenity-js/core/lib/model~ExecutionSkipped",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "name": "ExecutionSuccessful",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionSuccessful.html",
    "longname": "@serenity-js/core/lib/model~ExecutionSuccessful",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "name": "ArbitraryTag",
    "externalLink": "/modules/core/class/src/model/tags/ArbitraryTag.ts~ArbitraryTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ArbitraryTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "name": "BrowserTag",
    "externalLink": "/modules/core/class/src/model/tags/BrowserTag.ts~BrowserTag.html",
    "longname": "@serenity-js/core/lib/model/tags~BrowserTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "name": "CapabilityTag",
    "externalLink": "/modules/core/class/src/model/tags/CapabilityTag.ts~CapabilityTag.html",
    "longname": "@serenity-js/core/lib/model/tags~CapabilityTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "name": "ContextTag",
    "externalLink": "/modules/core/class/src/model/tags/ContextTag.ts~ContextTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ContextTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "name": "ExecutionRetriedTag",
    "externalLink": "/modules/core/class/src/model/tags/ExecutionRetriedTag.ts~ExecutionRetriedTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ExecutionRetriedTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "name": "FeatureTag",
    "externalLink": "/modules/core/class/src/model/tags/FeatureTag.ts~FeatureTag.html",
    "longname": "@serenity-js/core/lib/model/tags~FeatureTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 148,
    "kind": "external",
    "name": "IssueTag",
    "externalLink": "/modules/core/class/src/model/tags/IssueTag.ts~IssueTag.html",
    "longname": "@serenity-js/core/lib/model/tags~IssueTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 149,
    "kind": "external",
    "name": "ManualTag",
    "externalLink": "/modules/core/class/src/model/tags/ManualTag.ts~ManualTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ManualTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 150,
    "kind": "external",
    "name": "PlatformTag",
    "externalLink": "/modules/core/class/src/model/tags/PlatformTag.ts~PlatformTag.html",
    "longname": "@serenity-js/core/lib/model/tags~PlatformTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 151,
    "kind": "external",
    "name": "Tag",
    "externalLink": "/modules/core/class/src/model/tags/Tag.ts~Tag.html",
    "longname": "@serenity-js/core/lib/model/tags~Tag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 152,
    "kind": "external",
    "name": "ThemeTag",
    "externalLink": "/modules/core/class/src/model/tags/ThemeTag.ts~ThemeTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ThemeTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 153,
    "kind": "external",
    "name": "Ability",
    "externalLink": "/modules/core/class/src/screenplay/Ability.ts~Ability.html",
    "longname": "@serenity-js/core/lib/screenplay~Ability",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 154,
    "kind": "external",
    "name": "AbilityType",
    "externalLink": "/modules/core/class/src/screenplay/AbilityType.ts~AbilityType.html",
    "longname": "@serenity-js/core/lib/screenplay~AbilityType",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 155,
    "kind": "external",
    "name": "Activity",
    "externalLink": "/modules/core/class/src/screenplay/Activity.ts~Activity.html",
    "longname": "@serenity-js/core/lib/screenplay~Activity",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 156,
    "kind": "external",
    "name": "Interaction",
    "externalLink": "/modules/core/class/src/screenplay/Interaction.ts~Interaction.html",
    "longname": "@serenity-js/core/lib/screenplay~Interaction",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 157,
    "kind": "external",
    "name": "Question",
    "externalLink": "/modules/core/class/src/screenplay/Question.ts~Question.html",
    "longname": "@serenity-js/core/lib/screenplay~Question",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 158,
    "kind": "external",
    "name": "Task",
    "externalLink": "/modules/core/class/src/screenplay/Task.ts~Task.html",
    "longname": "@serenity-js/core/lib/screenplay~Task",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 159,
    "kind": "external",
    "name": "Discardable",
    "externalLink": "/modules/core/class/src/screenplay/abilities/Discardable.ts~Discardable.html",
    "longname": "@serenity-js/core/lib/screenplay/abilities~Discardable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 160,
    "kind": "external",
    "name": "Initialisable",
    "externalLink": "/modules/core/class/src/screenplay/abilities/Initialisable.ts~Initialisable.html",
    "longname": "@serenity-js/core/lib/screenplay/abilities~Initialisable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 161,
    "kind": "external",
    "name": "TakeNotes",
    "externalLink": "/modules/core/class/src/screenplay/abilities/TakeNotes.ts~TakeNotes.html",
    "longname": "@serenity-js/core/lib/screenplay/abilities~TakeNotes",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 162,
    "kind": "external",
    "name": "Actor",
    "externalLink": "/modules/core/class/src/screenplay/actor/Actor.ts~Actor.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~Actor",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 163,
    "kind": "external",
    "name": "AnswersQuestions",
    "externalLink": "/modules/core/class/src/screenplay/actor/AnswersQuestions.ts~AnswersQuestions.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~AnswersQuestions",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 164,
    "kind": "external",
    "name": "CanHaveAbilities",
    "externalLink": "/modules/core/class/src/screenplay/actor/CanHaveAbilities.ts~CanHaveAbilities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~CanHaveAbilities",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 165,
    "kind": "external",
    "name": "CollectsArtifacts",
    "externalLink": "/modules/core/class/src/screenplay/actor/CollectsArtifacts.ts~CollectsArtifacts.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~CollectsArtifacts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 166,
    "kind": "external",
    "name": "PerformsActivities",
    "externalLink": "/modules/core/class/src/screenplay/actor/PerformsActivities.ts~PerformsActivities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~PerformsActivities",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 167,
    "kind": "external",
    "name": "UsesAbilities",
    "externalLink": "/modules/core/class/src/screenplay/actor/UsesAbilities.ts~UsesAbilities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~UsesAbilities",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 168,
    "kind": "external",
    "name": "Log",
    "externalLink": "/modules/core/class/src/screenplay/interactions/Log.ts~Log.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~Log",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 169,
    "kind": "external",
    "name": "See",
    "externalLink": "/modules/core/class/src/screenplay/interactions/See.ts~See.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~See",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 170,
    "kind": "external",
    "name": "TakeNote",
    "externalLink": "/modules/core/class/src/screenplay/interactions/TakeNote.ts~TakeNote.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~TakeNote",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 171,
    "kind": "external",
    "name": "Check",
    "externalLink": "/modules/core/class/src/screenplay/questions/Check.ts~Check.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Check",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 172,
    "kind": "external",
    "name": "Expectation",
    "externalLink": "/modules/core/class/src/screenplay/questions/Expectation.ts~Expectation.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Expectation",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 173,
    "kind": "external",
    "name": "List",
    "externalLink": "/modules/core/class/src/screenplay/questions/List.ts~List.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~List",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 174,
    "kind": "external",
    "name": "MetaQuestion",
    "externalLink": "/modules/core/class/src/screenplay/questions/MetaQuestion.ts~MetaQuestion.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~MetaQuestion",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 175,
    "kind": "external",
    "name": "Note",
    "externalLink": "/modules/core/class/src/screenplay/questions/Note.ts~Note.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Note",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 176,
    "kind": "external",
    "name": "Property",
    "externalLink": "/modules/core/class/src/screenplay/questions/Property.ts~Property.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Property",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 177,
    "kind": "external",
    "name": "Transform",
    "externalLink": "/modules/core/class/src/screenplay/questions/Transform.ts~Transform.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Transform",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 178,
    "kind": "external",
    "name": "ExpectationMet",
    "externalLink": "/modules/core/class/src/screenplay/questions/expectations/ExpectationMet.ts~ExpectationMet.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/expectations~ExpectationMet",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 179,
    "kind": "external",
    "name": "ExpectationNotMet",
    "externalLink": "/modules/core/class/src/screenplay/questions/expectations/ExpectationNotMet.ts~ExpectationNotMet.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/expectations~ExpectationNotMet",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 180,
    "kind": "external",
    "name": "ExpectationOutcome",
    "externalLink": "/modules/core/class/src/screenplay/questions/expectations/ExpectationOutcome.ts~ExpectationOutcome.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/expectations~ExpectationOutcome",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 181,
    "kind": "external",
    "name": "ArrayListAdapter",
    "externalLink": "/modules/core/class/src/screenplay/questions/lists/ArrayListAdapter.ts~ArrayListAdapter.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/lists~ArrayListAdapter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 182,
    "kind": "external",
    "name": "ListAdapter",
    "externalLink": "/modules/core/class/src/screenplay/questions/lists/ListAdapter.ts~ListAdapter.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/lists~ListAdapter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 183,
    "kind": "external",
    "name": "append",
    "externalLink": "/modules/core/function/index.html#static-function-append",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~append",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 184,
    "kind": "external",
    "name": "normalize",
    "externalLink": "/modules/core/function/index.html#static-function-normalize",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~normalize",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 185,
    "kind": "external",
    "name": "replace",
    "externalLink": "/modules/core/function/index.html#static-function-replace",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~replace",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 186,
    "kind": "external",
    "name": "slice",
    "externalLink": "/modules/core/function/index.html#static-function-slice",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~slice",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 187,
    "kind": "external",
    "name": "split",
    "externalLink": "/modules/core/function/index.html#static-function-split",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~split",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 188,
    "kind": "external",
    "name": "toLocaleLowerCase",
    "externalLink": "/modules/core/function/index.html#static-function-toLocaleLowerCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toLocaleLowerCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "name": "toLocaleUpperCase",
    "externalLink": "/modules/core/function/index.html#static-function-toLocaleUpperCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toLocaleUpperCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "external",
    "name": "toLowerCase",
    "externalLink": "/modules/core/function/index.html#static-function-toLowerCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toLowerCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 191,
    "kind": "external",
    "name": "toNumber",
    "externalLink": "/modules/core/function/index.html#static-function-toNumber",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toNumber",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 192,
    "kind": "external",
    "name": "toUpperCase",
    "externalLink": "/modules/core/function/index.html#static-function-toUpperCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toUpperCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 193,
    "kind": "external",
    "name": "trim",
    "externalLink": "/modules/core/function/index.html#static-function-trim",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~trim",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 194,
    "kind": "external",
    "name": "q",
    "externalLink": "/modules/core/function/index.html#static-function-q",
    "longname": "@serenity-js/core/lib/screenplay/questions~q",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 195,
    "kind": "external",
    "name": "Loop",
    "externalLink": "/modules/core/class/src/screenplay/tasks/Loop.ts~Loop.html",
    "longname": "@serenity-js/core/lib/screenplay/tasks~Loop",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 196,
    "kind": "external",
    "name": "Cast",
    "externalLink": "/modules/core/class/src/stage/Cast.ts~Cast.html",
    "longname": "@serenity-js/core/lib/stage~Cast",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 197,
    "kind": "external",
    "name": "Clock",
    "externalLink": "/modules/core/class/src/stage/Clock.ts~Clock.html",
    "longname": "@serenity-js/core/lib/stage~Clock",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 198,
    "kind": "external",
    "name": "DressingRoom",
    "externalLink": "/modules/core/class/src/stage/DressingRoom.ts~DressingRoom.html",
    "longname": "@serenity-js/core/lib/stage~DressingRoom",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 199,
    "kind": "external",
    "name": "ListensToDomainEvents",
    "externalLink": "/modules/core/class/src/stage/ListensToDomainEvents.ts~ListensToDomainEvents.html",
    "longname": "@serenity-js/core/lib/stage~ListensToDomainEvents",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 200,
    "kind": "external",
    "name": "Stage",
    "externalLink": "/modules/core/class/src/stage/Stage.ts~Stage.html",
    "longname": "@serenity-js/core/lib/stage~Stage",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 201,
    "kind": "external",
    "name": "StageCrewMember",
    "externalLink": "/modules/core/class/src/stage/StageCrewMember.ts~StageCrewMember.html",
    "longname": "@serenity-js/core/lib/stage~StageCrewMember",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 202,
    "kind": "external",
    "name": "StageCrewMemberBuilder",
    "externalLink": "/modules/core/class/src/stage/StageCrewMemberBuilder.ts~StageCrewMemberBuilder.html",
    "longname": "@serenity-js/core/lib/stage~StageCrewMemberBuilder",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 203,
    "kind": "external",
    "name": "StageCrewMemberBuilderDependencies",
    "externalLink": "/modules/core/class/src/stage/StageCrewMemberBuilderDependencies.ts~StageCrewMemberBuilderDependencies.html",
    "longname": "@serenity-js/core/lib/stage~StageCrewMemberBuilderDependencies",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 204,
    "kind": "external",
    "name": "StageManager",
    "externalLink": "/modules/core/class/src/stage/StageManager.ts~StageManager.html",
    "longname": "@serenity-js/core/lib/stage~StageManager",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 205,
    "kind": "external",
    "name": "WithStage",
    "externalLink": "/modules/core/class/src/stage/WithStage.ts~WithStage.html",
    "longname": "@serenity-js/core/lib/stage~WithStage",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 206,
    "kind": "external",
    "name": "ArtifactArchiver",
    "externalLink": "/modules/core/class/src/stage/crew/artifact-archiver/ArtifactArchiver.ts~ArtifactArchiver.html",
    "longname": "@serenity-js/core/lib/stage/crew/artifact-archiver~ArtifactArchiver",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 207,
    "kind": "external",
    "name": "StreamReporter",
    "externalLink": "/modules/core/class/src/stage/crew/stream-reporter/StreamReporter.ts~StreamReporter.html",
    "longname": "@serenity-js/core/lib/stage/crew/stream-reporter~StreamReporter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 209,
    "kind": "external",
    "name": "DeleteRequest",
    "externalLink": "/modules/rest/class/src/model/DeleteRequest.ts~DeleteRequest.html",
    "longname": "@serenity-js/rest/lib/model~DeleteRequest",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 210,
    "kind": "external",
    "name": "GetRequest",
    "externalLink": "/modules/rest/class/src/model/GetRequest.ts~GetRequest.html",
    "longname": "@serenity-js/rest/lib/model~GetRequest",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 211,
    "kind": "external",
    "name": "HTTPRequest",
    "externalLink": "/modules/rest/class/src/model/HTTPRequest.ts~HTTPRequest.html",
    "longname": "@serenity-js/rest/lib/model~HTTPRequest",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 212,
    "kind": "external",
    "name": "HeadRequest",
    "externalLink": "/modules/rest/class/src/model/HeadRequest.ts~HeadRequest.html",
    "longname": "@serenity-js/rest/lib/model~HeadRequest",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 213,
    "kind": "external",
    "name": "OptionsRequest",
    "externalLink": "/modules/rest/class/src/model/OptionsRequest.ts~OptionsRequest.html",
    "longname": "@serenity-js/rest/lib/model~OptionsRequest",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 214,
    "kind": "external",
    "name": "PatchRequest",
    "externalLink": "/modules/rest/class/src/model/PatchRequest.ts~PatchRequest.html",
    "longname": "@serenity-js/rest/lib/model~PatchRequest",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 215,
    "kind": "external",
    "name": "PostRequest",
    "externalLink": "/modules/rest/class/src/model/PostRequest.ts~PostRequest.html",
    "longname": "@serenity-js/rest/lib/model~PostRequest",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 216,
    "kind": "external",
    "name": "PutRequest",
    "externalLink": "/modules/rest/class/src/model/PutRequest.ts~PutRequest.html",
    "longname": "@serenity-js/rest/lib/model~PutRequest",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 217,
    "kind": "external",
    "name": "CallAnApi",
    "externalLink": "/modules/rest/class/src/screenplay/abilities/CallAnApi.ts~CallAnApi.html",
    "longname": "@serenity-js/rest/lib/screenplay/abilities~CallAnApi",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 218,
    "kind": "external",
    "name": "ChangeApiConfig",
    "externalLink": "/modules/rest/class/src/screenplay/interactions/ChangeApiConfig.ts~ChangeApiConfig.html",
    "longname": "@serenity-js/rest/lib/screenplay/interactions~ChangeApiConfig",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 219,
    "kind": "external",
    "name": "ChangeApiUrl",
    "externalLink": "/modules/rest/class/src/screenplay/interactions/ChangeApiUrl.ts~ChangeApiUrl.html",
    "longname": "@serenity-js/rest/lib/screenplay/interactions~ChangeApiUrl",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 220,
    "kind": "external",
    "name": "Send",
    "externalLink": "/modules/rest/class/src/screenplay/interactions/Send.ts~Send.html",
    "longname": "@serenity-js/rest/lib/screenplay/interactions~Send",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 221,
    "kind": "external",
    "name": "LastResponse",
    "externalLink": "/modules/rest/class/src/screenplay/questions/LastResponse.ts~LastResponse.html",
    "longname": "@serenity-js/rest/lib/screenplay/questions~LastResponse",
    "memberof": "src/.imports-from-serenity-js-rest.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 223,
    "kind": "external",
    "name": "JSONObject",
    "externalLink": "https://jan-molak.github.io/tiny-types/file/src/types/json.ts.html",
    "longname": "tiny-types~JSONObject",
    "memberof": "src/.imports-from-tiny-types.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 224,
    "kind": "external",
    "name": "TinyType",
    "externalLink": "https://jan-molak.github.io/tiny-types/class/src/TinyType.ts~TinyType.html",
    "longname": "tiny-types~TinyType",
    "memberof": "src/.imports-from-tiny-types.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 226,
    "kind": "external",
    "name": "ElementArray",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/webdriverio/src/types.ts",
    "longname": "@wdio/types~ElementArray",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 227,
    "kind": "external",
    "name": "Browser",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/webdriverio/src/types.ts",
    "longname": "@wdio/types~Browser",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 228,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/webdriverio/src/types.ts",
    "longname": "@wdio/types~Element",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 229,
    "kind": "external",
    "name": "Options.TestRunner",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/wdio-types/src/Options.ts",
    "longname": "@wdio/types~Options.TestRunner",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 230,
    "kind": "file",
    "name": "src/cli/Argv.ts",
    "content": "/**\n * @package\n */\nexport interface Argv {\n    [ key: string ]: string;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/Argv.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 231,
    "kind": "class",
    "name": "Argv",
    "memberof": "src/cli/Argv.ts",
    "static": true,
    "longname": "src/cli/Argv.ts~Argv",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/Argv.ts",
    "importStyle": "{Argv}",
    "description": "",
    "lineNumber": 11,
    "interface": true,
    "ignore": true
  },
  {
    "__docId__": 232,
    "kind": "file",
    "name": "src/cli/Printer.ts",
    "content": "import chalk = require('chalk');\n\n/**\n * @package\n */\nexport class Printer {\n\n    constructor(\n        public readonly out: NodeJS.WritableStream,\n        public readonly err: NodeJS.WritableStream,     // eslint-disable-line unicorn/prevent-abbreviations\n    ) {\n    }\n\n    info(message: string): void {\n        this.out.write(chalk.green(message) + '\\n');\n    }\n\n    error(message: string): void {\n        this.out.write(chalk.red(message) + '\\n');\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/Printer.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 233,
    "kind": "class",
    "name": "Printer",
    "memberof": "src/cli/Printer.ts",
    "static": true,
    "longname": "src/cli/Printer.ts~Printer",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/Printer.ts",
    "importStyle": "{Printer}",
    "description": "",
    "lineNumber": 13,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 234,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/Printer.ts~Printer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/Printer.ts~Printer#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "info",
    "memberof": "src/cli/Printer.ts~Printer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/Printer.ts~Printer#info",
    "access": "public",
    "description": " ",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "error",
    "memberof": "src/cli/Printer.ts~Printer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/Printer.ts~Printer#error",
    "access": "public",
    "description": " ",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 237,
    "kind": "file",
    "name": "src/cli/bootstrap.ts",
    "content": "const yargs = require('yargs'); // eslint-disable-line @typescript-eslint/no-var-requires\n\nconst pkg = require('../../package.json');  // eslint-disable-line @typescript-eslint/no-var-requires\n\n/**\n * @desc\n *  Allows for the serenity-bdd command line interface output to be intercepted for testing purposes.\n *\n * @typedef {function(error: Error, parsed: object, output: string): void} Interceptor\n *\n * @package\n */\nexport type Interceptor = (error: Error, parsed: { [key: string]: string | number }, output: string) => void;\n\n/**\n * @desc\n *  Invokes the serenity-bdd command line interface, responsible for downloading and running\n *  the [Serenity BDD CLI](https://github.com/serenity-bdd/serenity-cli)\n *\n * @param {string[]} argv\n * @param {Interceptor} interceptor\n *\n * @package\n */\nexport function bootstrap(argv: string[], interceptor?: Interceptor): void {\n    yargs()\n        .version(pkg.version)\n        .demand(1)\n        .usage('Usage: $0 <command> [options]')\n        .example('$0 update [options]', 'updates the Serenity jar to the latest version')\n        .example('$0 run [options]',    'generates the HTML report from JSON reports produced by Serenity/JS')\n        .example('$0 <command> --help', 'shows the available parameters')\n        .epilog(`copyright (C) 2016-${ new Date().getFullYear() } ${ pkg.author.name } <${ pkg.author.email }>`)\n        .commandDir('./commands')\n        .alias('h', 'help').help()\n        .parse(argv, { }, interceptor);\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/bootstrap.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 238,
    "kind": "variable",
    "name": "yargs",
    "memberof": "src/cli/bootstrap.ts",
    "static": true,
    "longname": "src/cli/bootstrap.ts~yargs",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/bootstrap.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 239,
    "kind": "variable",
    "name": "pkg",
    "memberof": "src/cli/bootstrap.ts",
    "static": true,
    "longname": "src/cli/bootstrap.ts~pkg",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/bootstrap.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 240,
    "kind": "typedef",
    "name": "Interceptor",
    "memberof": "src/cli/bootstrap.ts",
    "static": true,
    "longname": "src/cli/bootstrap.ts~Interceptor",
    "access": "package",
    "description": " Allows for the serenity-bdd command line interface output to be intercepted for testing purposes.",
    "lineNumber": 20,
    "type": {
      "types": [
        "function(error: Error, parsed: object, output: string): void"
      ],
      "optional": false,
      "name": "Interceptor"
    },
    "ignore": true
  },
  {
    "__docId__": 241,
    "kind": "function",
    "name": "bootstrap",
    "memberof": "src/cli/bootstrap.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/bootstrap.ts~bootstrap",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/bootstrap.ts",
    "importStyle": "{bootstrap}",
    "description": " Invokes the serenity-bdd command line interface, responsible for downloading and running\n the [Serenity BDD CLI](https://github.com/serenity-bdd/serenity-cli)",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Interceptor"
        ],
        "spread": false,
        "optional": false,
        "name": "interceptor",
        "description": ""
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 242,
    "kind": "file",
    "name": "src/cli/commands/run.ts",
    "content": "import { actorCalled, configure } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport * as path from 'path';   // eslint-disable-line unicorn/import-style\n\nimport { Argv } from '../Argv';\nimport { defaults } from '../defaults';\nimport { formatError } from '../io';\nimport { GAV } from '../model';\nimport { Printer } from '../Printer';\nimport { InvokeSerenityBDD, SerenityBDDArguments, SystemProperties } from '../screenplay';\nimport { NotificationReporter, ProgressReporter, RunCommandActors } from '../stage';\n\nconst yargs = require('yargs'); // eslint-disable-line @typescript-eslint/no-var-requires\n\nexport = {\n    command: 'run',\n    desc: 'Invokes the Serenity BDD CLI jar to produce a Serenity BDD HTML report from the Serenity/JS JSON reports',\n    builder: {\n        cacheDir: {\n            default:   defaults.cacheDir,\n            describe: 'A relative path to where the Serenity BDD CLI jar file is stored',\n        },\n        destination: {\n            default:   defaults.reportDir,\n            describe: 'A relative path to the directory where the Serenity BDD report should be produced',\n        },\n        features: {\n            default:   defaults.featuresDir,\n            describe: 'A relative path to the directory containing the Cucumber.js feature files',\n        },\n        artifact: {\n            default:   defaults.artifact,\n            describe: `The GAV identifier of the Serenity BDD CLI artifact to use; You're best off with the default option unless you want to experiment.`,\n        },\n        source: {\n            default:   defaults.sourceDir,\n            describe: `A relative path to the directory containing the Serenity/JS JSON reports`,\n        },\n        issueTrackerUrl: {\n            describe: `Base URL for issue trackers other than JIRA`,\n        },\n        jiraProject: {\n            describe: `JIRA project identifier`,\n        },\n        jiraUrl: {\n            describe: `Base URL of your JIRA server`,\n        },\n        project: {\n            default: path.basename(process.cwd()),\n            describe: `Project name to appear in the Serenity reports`,\n        },\n        shortFilenames: {\n            default: true,\n            type: 'boolean',\n            describe: `Use unique hashes instead of human-readable names for the HTML files`,\n        },\n        log: {\n            default: defaults.log,\n            choices: [ 'warn', 'info', 'debug' ],\n            describe: `A Logback log level to pass to the Serenity BDD CLI jar`,\n        },\n    },\n    handler: (argv: Argv): Promise<void> => {\n\n        const\n            printer         = new Printer(process.stdout, process.stderr),\n            artifactGAV     = GAV.fromString(argv.artifact),\n            pathToArtifact  = new Path(argv.cacheDir).join(artifactGAV.toPath()),\n            moduleRoot      = path.resolve(__dirname, '../../../');\n\n        configure({\n            actors: new RunCommandActors(new Path(process.cwd())),\n            crew: [\n                new NotificationReporter(printer),\n                new ProgressReporter(printer),\n            ],\n        });\n\n        return Promise.resolve()\n            .then(() =>\n                actorCalled('Serenity/JS Updater').attemptsTo(\n                    InvokeSerenityBDD.at(pathToArtifact)\n                        .withProperties(SystemProperties.of({\n                            'serenity.compress.filenames': `${ argv.shortFilenames }`,\n                            'LOG_LEVEL': argv.log,\n                            'logback.configurationFile': path.resolve(moduleRoot, './resources/logback.config.xml'),\n                        }))\n                        .withArguments(SerenityBDDArguments.from(argv)),\n                )\n            )\n            .catch(error => {\n                printer.error(formatError(error));\n                yargs.exit(1, error.message);\n            });\n    },\n};\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/commands/run.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 243,
    "kind": "variable",
    "name": "yargs",
    "memberof": "src/cli/commands/run.ts",
    "static": true,
    "longname": "src/cli/commands/run.ts~yargs",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/commands/run.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 244,
    "kind": "file",
    "name": "src/cli/commands/update.ts",
    "content": "import { isTrue } from '@serenity-js/assertions';\nimport { actorCalled, Check, configure } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { URL } from 'url';\n\nimport { Argv } from '../Argv';\nimport { defaults } from '../defaults';\nimport { axiosClient, formatError } from '../io';\nimport { Credentials, GAV } from '../model';\nimport { Printer } from '../Printer';\nimport { DownloadArtifact, FileExists, Notify } from '../screenplay';\nimport { NotificationReporter, ProgressReporter, UpdateCommandActors } from '../stage';\n\nconst yargs = require('yargs'); // eslint-disable-line @typescript-eslint/no-var-requires\n\nexport = {\n    command: 'update',\n    desc: 'Makes sure the Serenity BDD CLI jar file is available and up to date',\n    builder: {\n        cacheDir: {\n            default:   defaults.cacheDir,\n            describe: 'A relative path to where the Serenity BDD CLI jar file should be stored',\n        },\n        ignoreSSL: {\n            default:   false,\n            type:     'boolean',\n            describe: 'Ignore SSL certificates',\n        },\n        repository: {\n            default:   defaults.repository,\n            describe: 'Maven repository url where we should look for the Serenity BDD CLI artifact',\n        },\n        auth: {\n            describe: `Credentials to authenticate with your repository - \"<username>:<password>\"`,\n        },\n        artifact: {\n            default:   defaults.artifact,\n            describe: `The GAV identifier of the Serenity BDD CLI artifact to use; You're best off with the default option unless you want to experiment.`,\n        },\n    },\n    handler: (argv: Argv): Promise<void> => {\n\n        const\n            printer         = new Printer(process.stdout, process.stderr),\n            artifactGAV     = GAV.fromString(argv.artifact),\n            pathToArtifact  = new Path(argv.cacheDir).join(artifactGAV.toPath()),\n            repository      = new URL(argv.repository);\n\n        configure({\n            actors: new UpdateCommandActors(\n                new Path(process.cwd()),\n                () => axiosClient(repository, !! argv.ignoreSSL, process.env, Credentials.fromString(argv.auth))\n            ),\n            crew: [\n                new NotificationReporter(printer),\n                new ProgressReporter(printer),\n            ],\n        });\n\n        return Promise.resolve()\n            .then(() =>\n                actorCalled('Serenity/JS Updater').attemptsTo(\n                    Check.whether(FileExists.at(pathToArtifact), isTrue())\n                        .andIfSo(\n                            Notify.that(`Looks like you're good to go! Serenity BDD CLI is already at ${ pathToArtifact.value }`),\n                        )\n                        .otherwise(\n                            DownloadArtifact\n                                .identifiedBy(artifactGAV)\n                                .availableFrom(repository)\n                                .to(pathToArtifact.directory())\n                        ),\n                )\n            )\n            .catch(error => {\n                printer.error(formatError(error));\n                yargs.exit(1, error.message);\n            });\n    },\n};\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/commands/update.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 245,
    "kind": "variable",
    "name": "yargs",
    "memberof": "src/cli/commands/update.ts",
    "static": true,
    "longname": "src/cli/commands/update.ts~yargs",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/commands/update.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "file",
    "name": "src/cli/defaults.ts",
    "content": "/**\n * @desc\n *  Default configuration to be used when invoking the serenity-bdd command line interface.\n *  See the source code to find out more about the values being used.\n *\n * @typedef {Object} defaults\n * @property {string} artifact      The GAV identifier of the artifact to download from the artifact repository\n * @property {string} repository    The URL of the repository where the artifact can be found\n * @property {string} cacheDir      A relative path to the directory where the artifact should be downloaded\n * @property {string} sourceDir     A relative path to the directory where the intermediate Serenity/JS JSON reports have been generated\n * @property {string} reportDir     A relative path to the directory where the Serenity BDD HTML report should be generated\n * @property {string} featuresDir   A relative path to the Cucumber.js features directory (if Cucumber is used)\n * @property {string} log           A Logback log level that Serenity BDD CLI should use (info, warn, debug)\n *\n * @public\n */\nexport const defaults = {\n    artifact:    'net.serenity-bdd:serenity-cli:jar:2.3.31',\n    repository:  'https://repo1.maven.org/maven2/',\n    cacheDir:    'node_modules/@serenity-js/serenity-bdd/cache',\n    sourceDir:   'target/site/serenity',\n    reportDir:   'target/site/serenity',\n    featuresDir: 'features',\n    log:         'warn',\n};\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/defaults.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 247,
    "kind": "typedef",
    "name": "defaults",
    "memberof": "src/cli/defaults.ts",
    "static": true,
    "longname": "src/cli/defaults.ts~defaults",
    "access": "public",
    "description": " Default configuration to be used when invoking the serenity-bdd command line interface.\n See the source code to find out more about the values being used.",
    "lineNumber": 17,
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "artifact",
        "description": "The GAV identifier of the artifact to download from the artifact repository"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "repository",
        "description": "The URL of the repository where the artifact can be found"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "cacheDir",
        "description": "A relative path to the directory where the artifact should be downloaded"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sourceDir",
        "description": "A relative path to the directory where the intermediate Serenity/JS JSON reports have been generated"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "reportDir",
        "description": "A relative path to the directory where the Serenity BDD HTML report should be generated"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "featuresDir",
        "description": "A relative path to the Cucumber.js features directory (if Cucumber is used)"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "log",
        "description": "A Logback log level that Serenity BDD CLI should use (info, warn, debug)"
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "defaults"
    }
  },
  {
    "__docId__": 248,
    "kind": "file",
    "name": "src/cli/index.ts",
    "content": "import { bootstrap } from './bootstrap';\n\nexport = bootstrap;\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 249,
    "kind": "file",
    "name": "src/cli/io/axiosClient.ts",
    "content": "import { ConfigurationError } from '@serenity-js/core';\nimport axios, { AxiosInstance, AxiosProxyConfig, AxiosRequestConfig } from 'axios';\nimport { httpAdapter } from 'axios/lib/adapters/http';\nimport * as fs from 'fs';\nimport * as https from 'https';\nimport { URL } from 'url';\n\nimport { Credentials } from '../model';\n\nconst HttpsProxyAgent = require('https-proxy-agent');   // eslint-disable-line @typescript-eslint/no-var-requires\n\n/**\n * @package\n */\nexport function axiosClient(\n    repository: URL,\n    ignoreSsl: boolean,\n    env: { [key: string]: string },\n    repositoryAuth?: Credentials\n): AxiosInstance {\n\n    const configuredProxy = isHttps(repository.protocol)\n        ? firstNonEmpty(env, 'npm_config_https_proxy', 'https_proxy', 'HTTPS_PROXY')\n        : firstNonEmpty(env, 'npm_config_proxy', 'npm_config_http_proxy', 'http_proxy', 'HTTP_PROXY');\n\n    const configuredNoProxy = firstNonEmpty(env, 'npm_config_noproxy', 'no_proxy', 'NO_PROXY');\n\n    const configuredCa = certificationAuthority(env);\n\n    const rejectUnauthorized = shouldRejectUnauthorizedCertificates(env, ignoreSsl);\n\n    const options: AxiosRequestConfig = {\n        baseURL:    repository.toString(),\n        adapter:    httpAdapter,\n        auth:       repositoryAuth,\n    };\n\n    if (isHttps(repository.protocol)) {\n        options.proxy = false;\n        options.httpsAgent = shouldProxy(repository, configuredProxy, configuredNoProxy)\n            ? proxiedHttpsAgent(proxyConfigFrom(configuredProxy), configuredCa, rejectUnauthorized)\n            : httpsAgent(configuredCa, rejectUnauthorized);\n    }\n    else {\n        options.proxy = shouldProxy(repository, configuredProxy, configuredNoProxy)\n            ? proxyConfigFrom(configuredProxy)\n            : undefined;\n    }\n\n    if (env.npm_config_user_agent) {\n        options.headers = { 'User-Agent': env.npm_config_user_agent };\n    }\n\n    return axios.create(options);\n}\n\n/**\n * @package\n */\nexport function shouldProxy(url: URL, configuredProxy: EnvVar, configuredNoProxy: EnvVar): boolean {\n    // there's no proxy configured so don't proxy...\n    if (! configuredProxy.value) {\n        return false;\n    }\n\n    const noProxyDomains = (configuredNoProxy.value || '').split(',').map(_ => _.trim());\n\n    return ! noProxyDomains.some(noProxyDomain => {\n        if (! noProxyDomain) {\n            return false;\n        }\n\n        if (noProxyDomain === '*') {\n            return true;\n        }\n\n        if (noProxyDomain[0] === '.' && url.hostname.slice(url.hostname.length - noProxyDomain.length) === noProxyDomain) {\n            return true;\n        }\n\n        return url.hostname === noProxyDomain;\n    });\n}\n\nfunction proxyConfigFrom(proxyUrl: EnvVar): AxiosProxyConfig | undefined {\n\n    if (! proxyUrl || ! proxyUrl.value) {\n        return undefined;\n    }\n\n    let parsed: URL;\n\n    try {\n        parsed = new URL(proxyUrl.value);\n    } catch (error) {\n        throw new ConfigurationError(`Env variable ${ proxyUrl.name }=${ proxyUrl.value } should specify a valid URL`, error);\n    }\n\n    if (! isSupportedProtocol(parsed.protocol)) {\n        throw new ConfigurationError(`Env variable ${ proxyUrl.name }=${ proxyUrl.value } should specify protocol to be used, i.e. http:// or https://`);\n    }\n\n    return {\n        protocol: parsed.protocol,\n        host: parsed.hostname,\n\n        port: parsed.port\n            ? Number.parseInt(parsed.port, 10)\n            : (isHttps(parsed.protocol) ? 443 : 80),\n\n        auth: (parsed.password || parsed.username) ? {\n            password: parsed.password,\n            username: parsed.username,\n        } : undefined,\n    };\n}\n\nfunction shouldRejectUnauthorizedCertificates(env: { [key: string]: string }, ignoreSsl: boolean): boolean {\n    return ! ignoreSsl\n        || env.npm_config_strict_ssl === 'true'\n}\n\nfunction proxiedHttpsAgent(proxyConfig: AxiosProxyConfig, ca: string, rejectUnauthorized: boolean) {\n    return new HttpsProxyAgent({ ca, rejectUnauthorized, ...proxyConfig });\n}\n\nfunction httpsAgent(ca: string, rejectUnauthorized: boolean): https.Agent {\n    return new https.Agent({ ca, rejectUnauthorized, });\n}\n\nfunction certificationAuthority(env: { [key: string]: string }): string | undefined {\n\n    // old school, the value is specified in the env var itself\n    if (env.npm_config_ca) {\n        return env.npm_config_ca;\n    }\n\n    if (env.npm_config_cafile) {\n        try {\n            return fs.readFileSync(env.npm_config_cafile, { encoding: 'utf8' });\n        } catch (error) {\n            throw new ConfigurationError(`Could not read npm_config_cafile at ${ env.npm_config_cafile }`, error);\n        }\n    }\n\n    return undefined;\n}\n\ntype EnvVar = { name?: string, value?: string };    // eslint-disable-line unicorn/prevent-abbreviations\n\nfunction firstNonEmpty(env: { [key: string]: string }, ...candidateVariables: string[]): EnvVar {\n    const found = candidateVariables.find(value => !! env[value]);\n\n    return found\n        ? { name: found, value: env[found] }\n        : {};\n}\n\nfunction isSupportedProtocol(protocol: string) {\n    return [ 'http:', 'https:', 'socks4:', 'socks5:' ]\n        .find(supported => supported === protocol);\n}\n\nfunction isHttps(urlOrProtocol: string) {\n    return urlOrProtocol\n        && urlOrProtocol.startsWith('https:');\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/io/axiosClient.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 250,
    "kind": "variable",
    "name": "HttpsProxyAgent",
    "memberof": "src/cli/io/axiosClient.ts",
    "static": true,
    "longname": "src/cli/io/axiosClient.ts~HttpsProxyAgent",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/axiosClient.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "axiosClient",
    "memberof": "src/cli/io/axiosClient.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/axiosClient.ts~axiosClient",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/axiosClient.ts",
    "importStyle": "{axiosClient}",
    "description": "",
    "lineNumber": 32,
    "ignore": true,
    "params": [
      {
        "name": "repository",
        "types": [
          "*"
        ]
      },
      {
        "name": "ignoreSsl",
        "types": [
          "*"
        ]
      },
      {
        "name": "env",
        "types": [
          "*"
        ]
      },
      {
        "name": "repositoryAuth",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 252,
    "kind": "function",
    "name": "shouldProxy",
    "memberof": "src/cli/io/axiosClient.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/axiosClient.ts~shouldProxy",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/axiosClient.ts",
    "importStyle": "{shouldProxy}",
    "description": "",
    "lineNumber": 92,
    "ignore": true,
    "params": [
      {
        "name": "url",
        "types": [
          "*"
        ]
      },
      {
        "name": "configuredProxy",
        "types": [
          "*"
        ]
      },
      {
        "name": "configuredNoProxy",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 253,
    "kind": "function",
    "name": "proxyConfigFrom",
    "memberof": "src/cli/io/axiosClient.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/axiosClient.ts~proxyConfigFrom",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/axiosClient.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 85,
    "params": [
      {
        "nullable": null,
        "types": [
          "EnvVar"
        ],
        "spread": false,
        "optional": false,
        "name": "proxyUrl",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AxiosProxyConfig ",
        " undefined"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 254,
    "kind": "function",
    "name": "shouldRejectUnauthorizedCertificates",
    "memberof": "src/cli/io/axiosClient.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/axiosClient.ts~shouldRejectUnauthorizedCertificates",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/axiosClient.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 118,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "env",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "ignoreSsl",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "proxiedHttpsAgent",
    "memberof": "src/cli/io/axiosClient.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/axiosClient.ts~proxiedHttpsAgent",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/axiosClient.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 123,
    "params": [
      {
        "nullable": null,
        "types": [
          "AxiosProxyConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "proxyConfig",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ca",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "rejectUnauthorized",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 256,
    "kind": "function",
    "name": "httpsAgent",
    "memberof": "src/cli/io/axiosClient.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/axiosClient.ts~httpsAgent",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/axiosClient.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ca",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "rejectUnauthorized",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "certificationAuthority",
    "memberof": "src/cli/io/axiosClient.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/axiosClient.ts~certificationAuthority",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/axiosClient.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 131,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "env",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "undefined ",
        " undefined"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 258,
    "kind": "function",
    "name": "firstNonEmpty",
    "memberof": "src/cli/io/axiosClient.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/axiosClient.ts~firstNonEmpty",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/axiosClient.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 151,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "env",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "candidateVariables",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "EnvVar"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "isSupportedProtocol",
    "memberof": "src/cli/io/axiosClient.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/axiosClient.ts~isSupportedProtocol",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/axiosClient.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 159,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "protocol",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 260,
    "kind": "function",
    "name": "isHttps",
    "memberof": "src/cli/io/axiosClient.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/axiosClient.ts~isHttps",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/axiosClient.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "urlOrProtocol",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 261,
    "kind": "file",
    "name": "src/cli/io/formatError.ts",
    "content": "import { RuntimeError } from '@serenity-js/core';\n\n/**\n * @package\n */\nexport function formatError(error: RuntimeError | Error): string {\n\n    const learnMore = `Learn more at https://serenity-js.org/modules/serenity-bdd`;\n\n    switch (true) {\n        case /ETIMEDOUT/.test(error.message):\n            return lines(\n                `Are you behind a proxy or a firewall that needs to be configured?`,\n                ...messages(error),\n                '',\n                learnMore,\n            );\n\n        case /self signed certificate in certificate chain/.test(error.message):\n            return lines(\n                `If you're using a self-signed certificate please check if it's configured correctly or use the --ignoreSSL option.`,\n                '',\n                learnMore,\n            );\n\n        case error instanceof RuntimeError:\n            return lines(\n                ...messages(error),\n                '',\n                learnMore\n            );\n\n        default:\n            return lines(\n                `I'm terribly sorry, but something didn't go according to plan:`,\n                ...messages(error),\n            );\n    }\n}\n\nfunction messages(error: RuntimeError | Error, acc: string[] = []): string[] {\n    return error.message && (error as RuntimeError).cause\n        ? messages((error as RuntimeError).cause, acc.concat(error.message))\n        : acc.concat(error.message || `${ error }`);\n}\n\nfunction lines(...entries: string[]): string {\n    return entries.filter(line => line !== void 0).join('\\n');\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/io/formatError.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 262,
    "kind": "function",
    "name": "formatError",
    "memberof": "src/cli/io/formatError.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/formatError.ts~formatError",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/formatError.ts",
    "importStyle": "{formatError}",
    "description": "",
    "lineNumber": 17,
    "ignore": true,
    "params": [
      {
        "name": "error",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 263,
    "kind": "function",
    "name": "messages",
    "memberof": "src/cli/io/formatError.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/formatError.ts~messages",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/formatError.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "RuntimeError ",
          " Error"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "acc",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 264,
    "kind": "function",
    "name": "lines",
    "memberof": "src/cli/io/formatError.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/io/formatError.ts~lines",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/io/formatError.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "entries",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 265,
    "kind": "file",
    "name": "src/cli/io/index.ts",
    "content": "export * from './axiosClient';\nexport * from './formatError';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/io/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 266,
    "kind": "file",
    "name": "src/cli/model/Complaint.ts",
    "content": "import { JSONData } from '@serenity-js/core/lib/model';\n\n/**\n * @desc\n *  An issue to be reported to the user.\n *\n * @package\n */\nexport class Complaint extends JSONData {\n    static fromJSON(value: { description: string, message: string, stack?: string }): Complaint {\n        return new Complaint(\n            Buffer.from(JSON.stringify(value, undefined, 0), 'utf8').toString('base64')\n        );\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/Complaint.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 267,
    "kind": "class",
    "name": "Complaint",
    "memberof": "src/cli/model/Complaint.ts",
    "static": true,
    "longname": "src/cli/model/Complaint.ts~Complaint",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/Complaint.ts",
    "importStyle": "{Complaint}",
    "description": " An issue to be reported to the user.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "@serenity-js/core/lib/model~JSONData"
    ],
    "ignore": true
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "src/cli/model/Complaint.ts~Complaint",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/model/Complaint.ts~Complaint.fromJSON",
    "access": "public",
    "description": " ",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Complaint"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 269,
    "kind": "file",
    "name": "src/cli/model/Credentials.ts",
    "content": "import { ensure, Predicate, TinyType } from 'tiny-types';\n\n/**\n * @package\n */\nexport class Credentials extends TinyType {\n\n    static fromString(value: string): Credentials {\n        if (! value) {\n            return new Credentials(undefined, undefined);\n        }\n\n        ensure('Credentials', value, matches(/(.*):(.*)/, `follow the \"<username>:<password>\" format`));\n\n        const index = value.indexOf(':');\n\n        return new Credentials(\n            value.slice(0, index),\n            value.slice(index + 1)\n        )\n    }\n\n    constructor(\n        public readonly username: string,\n        public readonly password: string,\n    ) {\n        super();\n    }\n}\n\n/**\n * @package\n */\nfunction matches(expression: RegExp, description?: string): Predicate<string> {\n    return Predicate.to(description || `match pattern ${ expression }`, (value: string) => expression.test(value));\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/Credentials.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 270,
    "kind": "class",
    "name": "Credentials",
    "memberof": "src/cli/model/Credentials.ts",
    "static": true,
    "longname": "src/cli/model/Credentials.ts~Credentials",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/Credentials.ts",
    "importStyle": "{Credentials}",
    "description": "",
    "lineNumber": 13,
    "interface": false,
    "extends": [
      "tiny-types~TinyType"
    ],
    "ignore": true
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "fromString",
    "memberof": "src/cli/model/Credentials.ts~Credentials",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/model/Credentials.ts~Credentials.fromString",
    "access": "public",
    "description": " ",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Credentials"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 272,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/model/Credentials.ts~Credentials",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/model/Credentials.ts~Credentials#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 273,
    "kind": "function",
    "name": "matches",
    "memberof": "src/cli/model/Credentials.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/model/Credentials.ts~matches",
    "access": "package",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/Credentials.ts",
    "importStyle": null,
    "description": "",
    "lineNumber": 69,
    "ignore": true,
    "params": [
      {
        "name": "expression",
        "types": [
          "*"
        ]
      },
      {
        "name": "description",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "src/cli/model/DownloadProgressReport.ts",
    "content": "import { JSONData } from '@serenity-js/core/lib/model';\n\n/**\n * @desc\n *  An update on the progress of the Serenity BDD jar download.\n *\n * @package\n */\nexport class DownloadProgressReport extends JSONData {\n    static fromJSON(value: { downloadedBytes: number, totalDownloadedBytes: number, totalBytes: number }): DownloadProgressReport {\n        return new DownloadProgressReport(\n            Buffer.from(JSON.stringify(value, undefined, 0), 'utf8').toString('base64')\n        );\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/DownloadProgressReport.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "class",
    "name": "DownloadProgressReport",
    "memberof": "src/cli/model/DownloadProgressReport.ts",
    "static": true,
    "longname": "src/cli/model/DownloadProgressReport.ts~DownloadProgressReport",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/DownloadProgressReport.ts",
    "importStyle": "{DownloadProgressReport}",
    "description": " An update on the progress of the Serenity BDD jar download.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "@serenity-js/core/lib/model~JSONData"
    ],
    "ignore": true
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "src/cli/model/DownloadProgressReport.ts~DownloadProgressReport",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/model/DownloadProgressReport.ts~DownloadProgressReport.fromJSON",
    "access": "public",
    "description": " ",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "DownloadProgressReport"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 277,
    "kind": "file",
    "name": "src/cli/model/ExecutionError.ts",
    "content": "import { RuntimeError } from '@serenity-js/core';\n\n/**\n * @desc\n *  An error that has occurred during the execution of the Serenity BDD jar.\n *\n * @extends {@serenity-js/core/lib/core/errors~RuntimeError}\n *\n * @package\n */\nexport class ExecutionError extends RuntimeError {\n    constructor(message: string, cause?: Error) {\n        super(ExecutionError, message, cause);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/ExecutionError.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 278,
    "kind": "class",
    "name": "ExecutionError",
    "memberof": "src/cli/model/ExecutionError.ts",
    "static": true,
    "longname": "src/cli/model/ExecutionError.ts~ExecutionError",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/ExecutionError.ts",
    "importStyle": "{ExecutionError}",
    "description": " An error that has occurred during the execution of the Serenity BDD jar.",
    "lineNumber": 18,
    "interface": false,
    "extends": [
      "RuntimeError"
    ],
    "ignore": true
  },
  {
    "__docId__": 279,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/model/ExecutionError.ts~ExecutionError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/model/ExecutionError.ts~ExecutionError#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 280,
    "kind": "file",
    "name": "src/cli/model/GAV.ts",
    "content": "import { Path } from '@serenity-js/core/lib/io';\nimport { ensure, isDefined, isInRange, isInteger, matches, property, TinyType } from 'tiny-types';\n\n/**\n * @package\n */\nexport class GAV extends TinyType {\n    static fromString(gav: string): GAV {\n        const parts = gav.split(':');\n\n        ensure('GAV segments', parts, property('length', isInteger(), isInRange(3, 5)));\n\n        switch (parts.length) {\n            case 5:     return new GAV(parts[0], parts[1], parts[4], parts[2], parts[3]);\n            case 4:     return new GAV(parts[0], parts[1], parts[3], parts[2]);\n            default:    return new GAV(parts[0], parts[1], parts[2]);\n        }\n    }\n\n    constructor(\n        public readonly groupId: string,\n        public readonly artifactId: string,\n        public readonly version: string,\n        public readonly extension: string = 'jar',\n        public readonly classifier?: string,\n    ) {\n        super();\n        ensure('groupId', groupId, isDefined(), matches(/^[a-z][\\d_a-z-]+(?:\\.[\\d_a-z-]+)+[\\d_a-z-]$/));\n        ensure('artifactId', artifactId, isDefined(), matches(/^[\\d_a-z-]+$/));\n        ensure('version', version, isDefined(), matches(/^(?:\\d+\\.?){3}$/));\n        ensure('extension', extension, isDefined(), matches(/^[a-z]+$/));\n    }\n\n    toPath(): Path {\n        const name = [\n            this.artifactId,\n            this.version,\n            this.classifier,\n        ].filter(s => !!s).join('-');\n\n        return new Path(`${ name }.${ this.extension}`);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/GAV.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 281,
    "kind": "class",
    "name": "GAV",
    "memberof": "src/cli/model/GAV.ts",
    "static": true,
    "longname": "src/cli/model/GAV.ts~GAV",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/GAV.ts",
    "importStyle": "{GAV}",
    "description": "",
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "tiny-types~TinyType"
    ],
    "ignore": true
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "fromString",
    "memberof": "src/cli/model/GAV.ts~GAV",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/model/GAV.ts~GAV.fromString",
    "access": "public",
    "description": " ",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "gav",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "GAV"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 283,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/model/GAV.ts~GAV",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/model/GAV.ts~GAV#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "toPath",
    "memberof": "src/cli/model/GAV.ts~GAV",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/model/GAV.ts~GAV#toPath",
    "access": "public",
    "description": " ",
    "lineNumber": 34,
    "return": {
      "nullable": null,
      "types": [
        "Path"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 285,
    "kind": "file",
    "name": "src/cli/model/Notification.ts",
    "content": "import { JSONData } from '@serenity-js/core/lib/model';\n\n/**\n * @desc\n *  An information that the user should be notified about.\n *\n * @package\n */\nexport class Notification extends JSONData {\n    static fromJSON(value: { message: string }): Notification {\n        return new Notification(\n            Buffer.from(JSON.stringify(value, undefined, 0), 'utf8').toString('base64')\n        );\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/Notification.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 286,
    "kind": "class",
    "name": "Notification",
    "memberof": "src/cli/model/Notification.ts",
    "static": true,
    "longname": "src/cli/model/Notification.ts~Notification",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/model/Notification.ts",
    "importStyle": "{Notification}",
    "description": " An information that the user should be notified about.",
    "lineNumber": 16,
    "interface": false,
    "extends": [
      "@serenity-js/core/lib/model~JSONData"
    ],
    "ignore": true
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "fromJSON",
    "memberof": "src/cli/model/Notification.ts~Notification",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/model/Notification.ts~Notification.fromJSON",
    "access": "public",
    "description": " ",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Notification"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "src/cli/model/index.ts",
    "content": "export * from './Complaint';\nexport * from './Credentials';\nexport * from './DownloadProgressReport';\nexport * from './ExecutionError';\nexport * from './GAV';\nexport * from './Notification';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/model/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "file",
    "name": "src/cli/screenplay/abilities/UseFileSystem.ts",
    "content": "import { Ability, UsesAbilities } from '@serenity-js/core';\nimport { FileSystem, Path } from '@serenity-js/core/lib/io';\nimport { ReadStream, Stats, WriteStream } from 'fs';\n\n/**\n * @package\n */\nexport class UseFileSystem implements Ability {\n    static at(root: Path): UseFileSystem {\n        return new UseFileSystem(new FileSystem(root));\n    }\n\n    static as(actor: UsesAbilities): UseFileSystem {\n        return actor.abilityTo(UseFileSystem);\n    }\n\n    constructor(private readonly fileSystem: FileSystem) {\n    }\n\n    createReadStream(relativePathToFile: Path): ReadStream {\n        return this.fileSystem.createReadStream(relativePathToFile);\n    }\n\n    createWriteStreamTo(relativePathToFile: Path): WriteStream {\n        return this.fileSystem.createWriteStreamTo(relativePathToFile);\n    }\n\n    createDirectory(relativePathToDirectory: Path): Promise<Path> {\n        return this.fileSystem.ensureDirectoryExistsAt(relativePathToDirectory);\n    }\n\n    remove(relativePathToFileOrDirectory: Path): Promise<void> {\n        return this.fileSystem.remove(relativePathToFileOrDirectory);\n    }\n\n    rename(source: Path, destination: Path): Promise<void> {\n        return this.fileSystem.rename(source, destination);\n    }\n\n    attributesOf(relativePathToFileOrDirectory: Path): Promise<Stats> {\n        return this.fileSystem.stat(relativePathToFileOrDirectory);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/abilities/UseFileSystem.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 290,
    "kind": "class",
    "name": "UseFileSystem",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts",
    "static": true,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/abilities/UseFileSystem.ts",
    "importStyle": "{UseFileSystem}",
    "description": "",
    "lineNumber": 15,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "at",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem.at",
    "access": "public",
    "description": " ",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "root",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "UseFileSystem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "as",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem.as",
    "access": "public",
    "description": " ",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "UseFileSystem"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 293,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "createReadStream",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#createReadStream",
    "access": "public",
    "description": " ",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "relativePathToFile",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ReadStream"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "createWriteStreamTo",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#createWriteStreamTo",
    "access": "public",
    "description": " ",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "relativePathToFile",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "WriteStream"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "createDirectory",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#createDirectory",
    "access": "public",
    "description": " ",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "relativePathToDirectory",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "remove",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#remove",
    "access": "public",
    "description": " ",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "relativePathToFileOrDirectory",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "rename",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#rename",
    "access": "public",
    "description": " ",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "source",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "destination",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "attributesOf",
    "memberof": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/abilities/UseFileSystem.ts~UseFileSystem#attributesOf",
    "access": "public",
    "description": " ",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "relativePathToFileOrDirectory",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 300,
    "kind": "file",
    "name": "src/cli/screenplay/abilities/index.ts",
    "content": "export * from './UseFileSystem';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/abilities/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 301,
    "kind": "file",
    "name": "src/cli/screenplay/index.ts",
    "content": "export * from './abilities';\nexport * from './interactions';\nexport * from './questions';\nexport * from './tasks';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/CreateDirectory.ts",
    "content": "import { Interaction } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\n\nimport { UseFileSystem } from '../abilities';\n\n/**\n * @package\n */\nexport const CreateDirectory = {\n    at: (destination: Path): Interaction =>\n        Interaction.where(`#actor creates a directory at ${ destination.value }`, actor =>\n            UseFileSystem.as(actor).createDirectory(destination).then(_ => void 0)\n        ),\n};\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/CreateDirectory.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "variable",
    "name": "CreateDirectory",
    "memberof": "src/cli/screenplay/interactions/CreateDirectory.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/CreateDirectory.ts~CreateDirectory",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/CreateDirectory.ts",
    "importStyle": "{CreateDirectory}",
    "description": "",
    "lineNumber": 9,
    "ignore": true,
    "type": {
      "types": [
        "{\"at\": *}"
      ]
    }
  },
  {
    "__docId__": 304,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/Notify.ts",
    "content": "import { Interaction } from '@serenity-js/core';\n\nimport { Notification } from '../../model';\n\n/**\n * @package\n */\nexport const Notify = {\n    that: (message: string): Interaction =>\n        Interaction.where(`#actor notifies that \"${ message }\"`, actor =>\n            actor.collect(Notification.fromJSON({ message })),\n        ),\n};\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/Notify.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 305,
    "kind": "variable",
    "name": "Notify",
    "memberof": "src/cli/screenplay/interactions/Notify.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/Notify.ts~Notify",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/Notify.ts",
    "importStyle": "{Notify}",
    "description": "",
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "{\"that\": *}"
      ]
    }
  },
  {
    "__docId__": 306,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/RenameFile.ts",
    "content": "import { Interaction } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\n\nimport { UseFileSystem } from '../abilities';\n\n/**\n * @package\n */\nexport const RenameFile = {\n    from: (source: Path) => ({  // eslint-disable-line @typescript-eslint/explicit-module-boundary-types\n        to: (destination: Path) => Interaction.where(`#actor renames ${ source.value } to ${ destination.value }`, actor =>\n            UseFileSystem.as(actor).rename(source, destination)),\n    }),\n};\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/RenameFile.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 307,
    "kind": "variable",
    "name": "RenameFile",
    "memberof": "src/cli/screenplay/interactions/RenameFile.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/RenameFile.ts~RenameFile",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/RenameFile.ts",
    "importStyle": "{RenameFile}",
    "description": "",
    "lineNumber": 9,
    "ignore": true,
    "type": {
      "types": [
        "{\"from\": *}"
      ]
    }
  },
  {
    "__docId__": 308,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/Spawn.ts",
    "content": "import { Answerable, AnswersQuestions, CollectsArtifacts, Interaction, UsesAbilities } from '@serenity-js/core';\nimport { formatted, Path } from '@serenity-js/core/lib/io';\nimport { spawn } from 'child_process';\n\nimport { Complaint, ExecutionError, Notification } from '../../model';\n\n/**\n * @package\n */\nexport class Spawn extends Interaction {\n    static the(pathToExecutable: Answerable<Path>, ...args: string[]): Spawn {\n        return new Spawn(pathToExecutable, args);\n    }\n\n    constructor(\n        private readonly pathToExecutable: Answerable<Path>,\n        private readonly args: string[],\n    ) {\n        super();\n    }\n\n    /**\n     * @desc\n     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  perform this {@link @serenity-js/core/lib/screenplay~Interaction}.\n     *\n     * @param {UsesAbilities & AnswersQuestions & CollectsArtifacts} actor\n     * @returns {Promise<void>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}\n     */\n    performAs(actor: UsesAbilities & AnswersQuestions & CollectsArtifacts): PromiseLike<void> {\n        return actor.answer(this.pathToExecutable)\n            .then(pathToExecutable => new Promise((resolve, reject) => {\n                actor.collect(Notification.fromJSON({ message: `Spawning: ${ pathToExecutable.value } ${ this.args.join(' ') }` }));\n\n                const spawned = spawn(pathToExecutable.value, this.args, { stdio: [process.stdin, process.stdout, process.stderr] });\n\n                spawned.once('error', (error: Error) =>\n                    actor.collect(Complaint.fromJSON({ description: `Invoking Serenity BDD CLI has failed`, message: error.message, stack: error.stack })),\n                );\n\n                spawned.once('exit', (exitCode: number) =>\n                    exitCode !== 0\n                        ? reject(new ExecutionError(`The following process exited with ${ exitCode }: ${ pathToExecutable.value } ${ this.args.join(' ') }`))\n                        : resolve(void 0),\n                );\n            }));\n    }\n\n    /**\n     * @desc\n     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.\n     *\n     * @returns {string}\n     */\n    toString(): string {\n        return formatted `#actor executes ${ this.pathToExecutable } with ${ this.args }`;\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/Spawn.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 309,
    "kind": "class",
    "name": "Spawn",
    "memberof": "src/cli/screenplay/interactions/Spawn.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/Spawn.ts~Spawn",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/Spawn.ts",
    "importStyle": "{Spawn}",
    "description": "",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "@serenity-js/core~Interaction"
    ],
    "ignore": true
  },
  {
    "__docId__": 310,
    "kind": "method",
    "name": "the",
    "memberof": "src/cli/screenplay/interactions/Spawn.ts~Spawn",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/interactions/Spawn.ts~Spawn.the",
    "access": "public",
    "description": " ",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable"
        ],
        "spread": false,
        "optional": false,
        "name": "pathToExecutable",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Spawn"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 311,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/interactions/Spawn.ts~Spawn",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/Spawn.ts~Spawn#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 312,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/cli/screenplay/interactions/Spawn.ts~Spawn",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/Spawn.ts~Spawn#performAs",
    "access": "public",
    "description": " Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n perform this {@link @serenity-js/core/lib/screenplay~Interaction}.",
    "see": [
      "{@link @serenity-js/core/lib/screenplay/actor~Actor}",
      "{@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}",
      "{@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}",
      "{@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}"
    ],
    "lineNumber": 72,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities & AnswersQuestions & CollectsArtifacts"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 313,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/interactions/Spawn.ts~Spawn",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/Spawn.ts~Spawn#toString",
    "access": "public",
    "description": " Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.",
    "lineNumber": 108,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 314,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/StreamResponse.ts",
    "content": "import { Answerable, AnswersQuestions, CollectsArtifacts, ConfigurationError, Interaction, UsesAbilities } from '@serenity-js/core';\nimport { formatted, Path } from '@serenity-js/core/lib/io';\nimport { CallAnApi } from '@serenity-js/rest';\nimport { AxiosRequestConfig } from 'axios';\n\nimport { DownloadProgressReport, Notification } from '../../model';\nimport { UseFileSystem } from '../abilities';\n\n/**\n * @package\n */\nexport class StreamResponse extends Interaction {\n\n    static to(request: Answerable<AxiosRequestConfig>) {    // eslint-disable-line @typescript-eslint/explicit-module-boundary-types\n        return {\n            to: (destination: Path) => new StreamResponse(request, destination),\n        };\n    }\n\n    constructor(\n        private readonly request: Answerable<AxiosRequestConfig>,\n        private readonly destination: Path,\n    ) {\n        super();\n    }\n\n    /**\n     * @desc\n     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  perform this {@link @serenity-js/core/lib/screenplay~Interaction}.\n     *\n     * @param {UsesAbilities & CollectsArtifacts & AnswersQuestions} actor\n     * @returns {Promise<void>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}\n     */\n    performAs(actor: UsesAbilities & CollectsArtifacts & AnswersQuestions): Promise<void> {\n        return actor.answer(this.request)\n            .then((config: AxiosRequestConfig) => CallAnApi.as(actor).request({\n                ...config,\n                responseType: 'stream',\n            })\n            .then(response => {\n                if (response.status !== 200) {\n                    throw new ConfigurationError(`Received: \"${ response.status } ${ response.statusText }\" when trying to download ${ config.url }`);\n                }\n\n                return response;\n            })\n            .then(response => new Promise((resolve, reject) => {\n\n                actor.collect(Notification.fromJSON({ message: `Downloading ${ config.url } to ${ this.destination.value }` }));\n\n                const\n                    totalBytes  = Number.parseInt(response.headers['content-length'], 10),\n                    output      = UseFileSystem.as(actor).createWriteStreamTo(this.destination);\n\n                let totalDownloadedBytes  = 0;\n\n                response.data.pipe(output);\n\n                response.data.on('data', chunk => {\n                    const downloadedBytes = chunk.length;\n                    totalDownloadedBytes += downloadedBytes;\n\n                    actor.collect(DownloadProgressReport.fromJSON({\n                        downloadedBytes,\n                        totalDownloadedBytes,\n                        totalBytes,\n                    }));\n                });\n\n                response.data.on('end', () => {\n                    output.end();\n                    return resolve();\n                });\n\n                response.data.on('error', error => reject(error));\n            })));\n    }\n\n    /**\n     * @desc\n     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.\n     *\n     * @returns {string}\n     */\n    toString(): string {\n        return formatted `#actor saves response to ${ this.request } in ${ this.destination.value }`;\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/StreamResponse.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 315,
    "kind": "class",
    "name": "StreamResponse",
    "memberof": "src/cli/screenplay/interactions/StreamResponse.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/StreamResponse.ts",
    "importStyle": "{StreamResponse}",
    "description": "",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "@serenity-js/core~Interaction"
    ],
    "ignore": true
  },
  {
    "__docId__": 316,
    "kind": "method",
    "name": "to",
    "memberof": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse.to",
    "access": "public",
    "description": " ",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "Answerable"
        ],
        "spread": false,
        "optional": false,
        "name": "request",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"to\": *}"
      ]
    }
  },
  {
    "__docId__": 317,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 318,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse#performAs",
    "access": "public",
    "description": " Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n perform this {@link @serenity-js/core/lib/screenplay~Interaction}.",
    "see": [
      "{@link @serenity-js/core/lib/screenplay/actor~Actor}",
      "{@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}",
      "{@link @serenity-js/core/lib/screenplay/actor~CollectsArtifacts}",
      "{@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}"
    ],
    "lineNumber": 73,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "UsesAbilities & CollectsArtifacts & AnswersQuestions"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 319,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/interactions/StreamResponse.ts~StreamResponse#toString",
    "access": "public",
    "description": " Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.",
    "lineNumber": 135,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 320,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/TerminateFlow.ts",
    "content": "import { Interaction } from '@serenity-js/core';\n\nimport { ExecutionError } from '../../model';\n\n/**\n * @package\n */\nexport const TerminateFlow = {\n    because: (message: string, cause?: Error): Interaction =>\n        Interaction.where(`#actor terminates the flow because \"${ message }\"`, actor => {\n            throw new ExecutionError(message, cause);\n        }),\n};\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/TerminateFlow.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 321,
    "kind": "variable",
    "name": "TerminateFlow",
    "memberof": "src/cli/screenplay/interactions/TerminateFlow.ts",
    "static": true,
    "longname": "src/cli/screenplay/interactions/TerminateFlow.ts~TerminateFlow",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/interactions/TerminateFlow.ts",
    "importStyle": "{TerminateFlow}",
    "description": "",
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "{\"because\": *}"
      ]
    }
  },
  {
    "__docId__": 322,
    "kind": "file",
    "name": "src/cli/screenplay/interactions/index.ts",
    "content": "export * from './CreateDirectory';\nexport * from './Notify';\nexport * from './Spawn';\nexport * from './StreamResponse';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/interactions/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 323,
    "kind": "file",
    "name": "src/cli/screenplay/questions/Checksum.ts",
    "content": "import { Question } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { createHash } from 'crypto';\n\nimport { UseFileSystem } from '../abilities';\n\n/**\n * @package\n */\nexport const Checksum = {\n    of: (destination: Path) => ({   // eslint-disable-line @typescript-eslint/explicit-module-boundary-types\n        calculatedUsing: (hashingAlgorithm: string) =>\n            Question.about<Promise<string>>(`checksum of ${ destination.value }`, actor => {\n                const hash = createHash(hashingAlgorithm);\n\n                const input = UseFileSystem.as(actor).createReadStream(destination);\n\n                return new Promise((resolve, reject) => {\n                    input.on('data', data => hash.update(data));\n                    input.on('end', () => resolve(hash.digest('hex')));\n                    input.on('error', error => reject(error));\n                });\n            }),\n    }),\n};\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/questions/Checksum.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 324,
    "kind": "variable",
    "name": "Checksum",
    "memberof": "src/cli/screenplay/questions/Checksum.ts",
    "static": true,
    "longname": "src/cli/screenplay/questions/Checksum.ts~Checksum",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/Checksum.ts",
    "importStyle": "{Checksum}",
    "description": "",
    "lineNumber": 10,
    "ignore": true,
    "type": {
      "types": [
        "{\"of\": *}"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "file",
    "name": "src/cli/screenplay/questions/FileExists.ts",
    "content": "import { Question } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\n\nimport { UseFileSystem } from '../abilities';\n\n/**\n * @package\n */\nexport const FileExists = {\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    at: (path: Path) => Question.about<Promise<boolean>>(`${ path.value } exists`, actor =>\n        UseFileSystem.as(actor).attributesOf(path)\n            .then(_ => true)\n            .catch(error => {\n                if (error.code !== 'ENOENT') {\n                    throw error;\n                }\n\n                return false;\n            }),\n    ),\n};\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/questions/FileExists.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 326,
    "kind": "variable",
    "name": "FileExists",
    "memberof": "src/cli/screenplay/questions/FileExists.ts",
    "static": true,
    "longname": "src/cli/screenplay/questions/FileExists.ts~FileExists",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/FileExists.ts",
    "importStyle": "{FileExists}",
    "description": "",
    "lineNumber": 9,
    "ignore": true,
    "type": {
      "types": [
        "{\"at\": *}"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "file",
    "name": "src/cli/screenplay/questions/JavaExecutable.ts",
    "content": "import { AnswersQuestions, Question, UsesAbilities } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport * as path from 'path';   // eslint-disable-line unicorn/import-style\nimport { promisify } from 'util';\nconst findJavaHome = promisify(require('find-java-home'));  // eslint-disable-line  @typescript-eslint/no-var-requires\n\n/**\n * @package\n */\nexport class JavaExecutable extends Question<Promise<Path>> {\n    constructor() {\n        super(`java executable`);\n    }\n\n    answeredBy(actor: AnswersQuestions & UsesAbilities): Promise<Path> {\n        return findJavaHome({ allowJre: true })\n            .then(pathToJavaHome => path.join(pathToJavaHome, 'bin', this.javaFileName()))\n            .then(Path.fromJSON);\n    }\n\n    private javaFileName() {\n        return this.isWindows()\n            ? 'java.exe'\n            : 'java';\n    }\n\n    private isWindows() {\n        return process.platform.indexOf('win') === 0;\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/questions/JavaExecutable.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 328,
    "kind": "variable",
    "name": "findJavaHome",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts",
    "static": true,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~findJavaHome",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/JavaExecutable.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 329,
    "kind": "class",
    "name": "JavaExecutable",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts",
    "static": true,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/JavaExecutable.ts",
    "importStyle": "{JavaExecutable}",
    "description": "",
    "lineNumber": 17,
    "interface": false,
    "extends": [
      "@serenity-js/core~Question"
    ],
    "ignore": true
  },
  {
    "__docId__": 330,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 331,
    "kind": "method",
    "name": "answeredBy",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable#answeredBy",
    "access": "public",
    "description": " ",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "AnswersQuestions & UsesAbilities"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "javaFileName",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable#javaFileName",
    "access": "private",
    "description": " ",
    "lineNumber": 21,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "isWindows",
    "memberof": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/JavaExecutable.ts~JavaExecutable#isWindows",
    "access": "private",
    "description": " ",
    "lineNumber": 27,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 334,
    "kind": "file",
    "name": "src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "content": "import { AnswersQuestions, Question, UsesAbilities } from '@serenity-js/core';\n\nimport { Argv } from '../../Argv';\n\n/**\n * @package\n */\nexport class SerenityBDDArguments extends Question<string[]> {\n    private static Allowed =  [\n        'destination',\n        'features',\n        'issueTrackerUrl',\n        'jiraProject',\n        'jiraUrl',\n        'project',\n        'source',\n    ];\n\n    static from(argv: Argv): SerenityBDDArguments {\n        return new SerenityBDDArguments(argv);\n    }\n\n    constructor(private readonly argv: Argv) {\n        super('Serenity BDD arguments');\n    }\n\n    answeredBy(actor: AnswersQuestions & UsesAbilities): string[] {\n        return flatten(Object.keys(this.argv)\n            .filter(key => !! ~ SerenityBDDArguments.Allowed.indexOf(key) && !! this.argv[key])\n            .map(arg => [`--${ arg }`, this.argv[arg]]));\n    }\n}\n\nfunction flatten(list: any[]) {\n    return list.reduce((acc, current) => {\n        Array.isArray(current)\n            ? acc.push(...flatten(current))\n            : acc.push(current);\n        return acc;\n    }, []);\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 335,
    "kind": "class",
    "name": "SerenityBDDArguments",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "static": true,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "importStyle": "{SerenityBDDArguments}",
    "description": "",
    "lineNumber": 15,
    "interface": false,
    "extends": [
      "@serenity-js/core~Question"
    ],
    "ignore": true
  },
  {
    "__docId__": 336,
    "kind": "member",
    "name": "Allowed",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments",
    "static": true,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments.Allowed",
    "access": "private",
    "description": " ",
    "lineNumber": 9,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 337,
    "kind": "method",
    "name": "from",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments.from",
    "access": "public",
    "description": " ",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "Argv"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SerenityBDDArguments"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 338,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "answeredBy",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~SerenityBDDArguments#answeredBy",
    "access": "public",
    "description": " ",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "AnswersQuestions & UsesAbilities"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 340,
    "kind": "function",
    "name": "flatten",
    "memberof": "src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/questions/SerenityBDDArguments.ts~flatten",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/SerenityBDDArguments.ts",
    "importStyle": null,
    "description": " ",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": ""
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 341,
    "kind": "file",
    "name": "src/cli/screenplay/questions/SystemProperties.ts",
    "content": "import { Question } from '@serenity-js/core';\n\nimport { Argv } from '../../Argv';\n\n/**\n * @package\n */\nexport const SystemProperties = {\n    of: (argv: Argv): Question<string[]> =>\n        Question.about<string[]>('system properties', actor =>\n            Object.keys(argv)\n                .map(arg => `-D${ arg }=${ argv[arg] }`)),\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/questions/SystemProperties.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 342,
    "kind": "variable",
    "name": "SystemProperties",
    "memberof": "src/cli/screenplay/questions/SystemProperties.ts",
    "static": true,
    "longname": "src/cli/screenplay/questions/SystemProperties.ts~SystemProperties",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/questions/SystemProperties.ts",
    "importStyle": "{SystemProperties}",
    "description": "",
    "lineNumber": 8,
    "ignore": true,
    "type": {
      "types": [
        "{\"of\": *}"
      ]
    }
  },
  {
    "__docId__": 343,
    "kind": "file",
    "name": "src/cli/screenplay/questions/index.ts",
    "content": "export * from './Checksum';\nexport * from './FileExists';\nexport * from './JavaExecutable';\nexport * from './SerenityBDDArguments';\nexport * from './SystemProperties';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/questions/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 344,
    "kind": "file",
    "name": "src/cli/screenplay/tasks/DownloadArtifact.ts",
    "content": "import { AnswersQuestions, PerformsActivities, Task, UsesAbilities } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { GetRequest } from '@serenity-js/rest';\nimport { URL } from 'url';\n\nimport { GAV } from '../../model';\nimport { CreateDirectory, Notify, StreamResponse } from '../interactions';\nimport { RenameFile } from '../interactions/RenameFile';\nimport { VerifyChecksum } from './VerifyChecksum';\n\n/**\n * @package\n */\nexport class DownloadArtifact extends Task {\n    static identifiedBy(artifactIdentifier: GAV) {  // eslint-disable-line @typescript-eslint/explicit-module-boundary-types\n        return {\n            availableFrom: (repository: URL) => ({\n                to: (destinationDirectory: Path) => new DownloadArtifact(artifactIdentifier, repository, destinationDirectory),\n            }),\n        };\n    }\n\n    constructor(\n        private readonly gav: GAV,\n        private readonly repository: URL,\n        private readonly destinationDirectory: Path,\n    ) {\n        super();\n    }\n\n    /**\n     * @desc\n     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  perform this {@link @serenity-js/core/lib/screenplay~Task}.\n     *\n     * @param {PerformsActivities & UsesAbilities & AnswersQuestions} actor\n     * @returns {Promise<void>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~PerformsActivities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}\n     */\n    performAs(actor: PerformsActivities & UsesAbilities & AnswersQuestions): PromiseLike<void> | PromiseLike<any> {\n        const\n            tempFileName        = new Path(`${ this.gav.toPath().value }.download`),    // eslint-disable-line unicorn/prevent-abbreviations\n            pathToTempFile      = this.destinationDirectory.join(tempFileName),         // eslint-disable-line unicorn/prevent-abbreviations\n            pathToFinishedFile  = this.destinationDirectory.join(this.gav.toPath());\n\n        return actor.attemptsTo(\n            Notify.that(`Looks like you need the latest Serenity BDD CLI jar. Let me download it for you...`),\n            CreateDirectory.at(this.destinationDirectory),\n            StreamResponse\n                .to(GetRequest.to(this.artifactUrl()))\n                .to(pathToTempFile),\n            Notify.that(`Verifying checksums...`),\n            VerifyChecksum.at(this.artifactUrl() + '.sha1').against(pathToTempFile).calculatedUsing('sha1'),\n            RenameFile.from(pathToTempFile).to(pathToFinishedFile),\n            Notify.that(`Downloaded ${ pathToFinishedFile.value }`),\n        );\n    }\n\n    /**\n     * @desc\n     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.\n     *\n     * @returns {string}\n     */\n    toString(): string {\n        return `#actor downloads ${ this.gav.toPath().value } from ${ this.repository.toString() }`;\n    }\n\n    private artifactUrl() {\n        return [\n            this.repository.toString().replace(/\\/+$/, ''),\n            ...this.gav.groupId.split('.'),\n            this.gav.artifactId,\n            this.gav.version,\n            this.gav.toPath().value,\n        ].join('/');\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/tasks/DownloadArtifact.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 345,
    "kind": "class",
    "name": "DownloadArtifact",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts",
    "static": true,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/tasks/DownloadArtifact.ts",
    "importStyle": "{DownloadArtifact}",
    "description": "",
    "lineNumber": 21,
    "interface": false,
    "extends": [
      "@serenity-js/core~Task"
    ],
    "ignore": true
  },
  {
    "__docId__": 346,
    "kind": "method",
    "name": "identifiedBy",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact.identifiedBy",
    "access": "public",
    "description": " ",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "GAV"
        ],
        "spread": false,
        "optional": false,
        "name": "artifactIdentifier",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "{\"availableFrom\": *}"
      ]
    }
  },
  {
    "__docId__": 347,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact#performAs",
    "access": "public",
    "description": " Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n perform this {@link @serenity-js/core/lib/screenplay~Task}.",
    "see": [
      "{@link @serenity-js/core/lib/screenplay/actor~Actor}",
      "{@link @serenity-js/core/lib/screenplay/actor~PerformsActivities}",
      "{@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}",
      "{@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}"
    ],
    "lineNumber": 77,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PerformsActivities & UsesAbilities & AnswersQuestions"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact#toString",
    "access": "public",
    "description": " Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.",
    "lineNumber": 113,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 350,
    "kind": "method",
    "name": "artifactUrl",
    "memberof": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/DownloadArtifact.ts~DownloadArtifact#artifactUrl",
    "access": "private",
    "description": " ",
    "lineNumber": 73,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 351,
    "kind": "file",
    "name": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts",
    "content": "import { equals } from '@serenity-js/assertions';\nimport { AnswersQuestions, Check, PerformsActivities, Question, Task, UsesAbilities } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\n\nimport { Spawn } from '../interactions';\nimport { TerminateFlow } from '../interactions/TerminateFlow';\nimport { FileExists, JavaExecutable } from '../questions';\n\n/**\n * @package\n */\nexport class InvokeSerenityBDD extends Task {\n    static at(pathToArtifact: Path): InvokeSerenityBDD {\n        return new InvokeSerenityBDD(pathToArtifact);\n    }\n\n    withArguments(args: Question<string[]>): InvokeSerenityBDD {\n        return new InvokeSerenityBDD(this.pathToArtifact, args, this.props);\n    }\n\n    withProperties(properties: Question<string[]>): InvokeSerenityBDD {\n        return new InvokeSerenityBDD(this.pathToArtifact, this.args, properties);\n    }\n\n    constructor(\n        private readonly pathToArtifact: Path,\n        private readonly args: Question<string[]>  = Question.about(`no arguments`, actor => []),\n        private readonly props: Question<string[]> = Question.about(`no properties`, actor => []),\n    ) {\n        super();\n    }\n\n    /**\n     * @desc\n     *  Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     *  perform this {@link @serenity-js/core/lib/screenplay~Task}.\n     *\n     * @param {PerformsActivities & UsesAbilities & AnswersQuestions} actor\n     * @returns {Promise<void>}\n     *\n     * @see {@link @serenity-js/core/lib/screenplay/actor~Actor}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~PerformsActivities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}\n     * @see {@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}\n     */\n    performAs(actor: PerformsActivities & UsesAbilities & AnswersQuestions): PromiseLike<void> | PromiseLike<any> {\n\n        return Promise.all([\n            actor.answer(this.args),\n            actor.answer(this.props),\n        ]).\n        then(([ args, props ]) =>\n            actor.attemptsTo(\n                Check\n                    .whether(FileExists.at(this.pathToArtifact), equals(false))\n                    .andIfSo(TerminateFlow.because(\n                        `I couldn't access the Serenity BDD CLI at ${ this.pathToArtifact.value }. ` +\n                        `Did you remember to run \\`serenity-bdd update\\`?`,\n                    )),\n                // todo: check if reports exist before invoking the jar?\n                Spawn.the(new JavaExecutable(), ...props, '-jar', this.pathToArtifact.value, ...args),\n            ),\n        );\n    }\n\n    /**\n     * @desc\n     *  Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.\n     *\n     * @returns {string}\n     */\n    toString(): string {\n        return `#actor invokes Serenity BDD`;\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/tasks/InvokeSerenityBDD.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 352,
    "kind": "class",
    "name": "InvokeSerenityBDD",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts",
    "static": true,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/tasks/InvokeSerenityBDD.ts",
    "importStyle": "{InvokeSerenityBDD}",
    "description": "",
    "lineNumber": 19,
    "interface": false,
    "extends": [
      "@serenity-js/core~Task"
    ],
    "ignore": true
  },
  {
    "__docId__": 353,
    "kind": "method",
    "name": "at",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD.at",
    "access": "public",
    "description": " ",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Path"
        ],
        "spread": false,
        "optional": false,
        "name": "pathToArtifact",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "InvokeSerenityBDD"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 354,
    "kind": "method",
    "name": "withArguments",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD#withArguments",
    "access": "public",
    "description": " ",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "Question"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "InvokeSerenityBDD"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 355,
    "kind": "method",
    "name": "withProperties",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD#withProperties",
    "access": "public",
    "description": " ",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "Question"
        ],
        "spread": false,
        "optional": false,
        "name": "properties",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "InvokeSerenityBDD"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 356,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true
  },
  {
    "__docId__": 357,
    "kind": "method",
    "name": "performAs",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD#performAs",
    "access": "public",
    "description": " Makes the provided {@link @serenity-js/core/lib/screenplay/actor~Actor}\n perform this {@link @serenity-js/core/lib/screenplay~Task}.",
    "see": [
      "{@link @serenity-js/core/lib/screenplay/actor~Actor}",
      "{@link @serenity-js/core/lib/screenplay/actor~PerformsActivities}",
      "{@link @serenity-js/core/lib/screenplay/actor~UsesAbilities}",
      "{@link @serenity-js/core/lib/screenplay/actor~AnswersQuestions}"
    ],
    "lineNumber": 107,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "PerformsActivities & UsesAbilities & AnswersQuestions"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 358,
    "kind": "method",
    "name": "toString",
    "memberof": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/screenplay/tasks/InvokeSerenityBDD.ts~InvokeSerenityBDD#toString",
    "access": "public",
    "description": " Generates a description to be used when reporting this {@link @serenity-js/core/lib/screenplay~Activity}.",
    "lineNumber": 144,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 359,
    "kind": "file",
    "name": "src/cli/screenplay/tasks/VerifyChecksum.ts",
    "content": "import { Ensure, equals } from '@serenity-js/assertions';\nimport { Task } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { GetRequest, LastResponse, Send } from '@serenity-js/rest';\n\nimport { Checksum } from '../questions';\n\n/**\n * @package\n */\nexport const VerifyChecksum = {\n    at: (checksumUrl: string) => ({             // eslint-disable-line  @typescript-eslint/explicit-module-boundary-types\n        against: (downloadedFile: Path) => ({\n            calculatedUsing: (hashingAlgorithm: string) =>\n                Task.where(`#actor verifies checksum at ${ checksumUrl } against ${ downloadedFile.value }`,\n                    Send.a(GetRequest.to(checksumUrl)),\n                    Ensure.that(Checksum.of(downloadedFile).calculatedUsing(hashingAlgorithm), equals(LastResponse.body<string>().describedAs('expected checksum'))),\n                ),\n        }),\n    }),\n};\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/tasks/VerifyChecksum.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 360,
    "kind": "variable",
    "name": "VerifyChecksum",
    "memberof": "src/cli/screenplay/tasks/VerifyChecksum.ts",
    "static": true,
    "longname": "src/cli/screenplay/tasks/VerifyChecksum.ts~VerifyChecksum",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/screenplay/tasks/VerifyChecksum.ts",
    "importStyle": "{VerifyChecksum}",
    "description": "",
    "lineNumber": 11,
    "ignore": true,
    "type": {
      "types": [
        "{\"at\": *}"
      ]
    }
  },
  {
    "__docId__": 361,
    "kind": "file",
    "name": "src/cli/screenplay/tasks/index.ts",
    "content": "export * from './DownloadArtifact';\nexport * from './InvokeSerenityBDD';\nexport * from './VerifyChecksum';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/screenplay/tasks/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 362,
    "kind": "file",
    "name": "src/cli/stage/NotificationReporter.ts",
    "content": "import { Stage, StageCrewMember } from '@serenity-js/core';\nimport { ArtifactGenerated, DomainEvent } from '@serenity-js/core/lib/events';\n\nimport { Complaint, Notification } from '../model';\nimport { Printer } from '../Printer';\n\n/**\n * @desc\n *  Notifies the user of any {@link Notification} or {@link Complaint} type artifacts being reported.\n *\n * @package\n */\nexport class NotificationReporter implements StageCrewMember {\n    constructor(\n        private readonly printer: Printer,\n        private readonly stage?: Stage,\n    ) {\n    }\n\n    assignedTo(stage: Stage): StageCrewMember {\n        return new NotificationReporter(this.printer, stage);\n    }\n\n    notifyOf(event: DomainEvent): void {\n        if (event instanceof ArtifactGenerated && event.artifact instanceof Notification) {\n            this.printer.info(event.artifact.map((notification: { message: string }) => notification.message));\n        }\n\n        else if (event instanceof ArtifactGenerated && event.artifact instanceof Complaint) {\n            this.printer.error(event.artifact.map(({ description, message, stack }: { description: string, message: string, stack: string }) =>\n                `${ description }\\n${ stack }`));\n        }\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/stage/NotificationReporter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 363,
    "kind": "class",
    "name": "NotificationReporter",
    "memberof": "src/cli/stage/NotificationReporter.ts",
    "static": true,
    "longname": "src/cli/stage/NotificationReporter.ts~NotificationReporter",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/stage/NotificationReporter.ts",
    "importStyle": "{NotificationReporter}",
    "description": " Notifies the user of any {@link Notification} or {@link Complaint} type artifacts being reported.",
    "lineNumber": 20,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 364,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/stage/NotificationReporter.ts~NotificationReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/NotificationReporter.ts~NotificationReporter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 365,
    "kind": "method",
    "name": "assignedTo",
    "memberof": "src/cli/stage/NotificationReporter.ts~NotificationReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/NotificationReporter.ts~NotificationReporter#assignedTo",
    "access": "public",
    "description": " ",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StageCrewMember"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 366,
    "kind": "method",
    "name": "notifyOf",
    "memberof": "src/cli/stage/NotificationReporter.ts~NotificationReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/NotificationReporter.ts~NotificationReporter#notifyOf",
    "access": "public",
    "description": " ",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 367,
    "kind": "file",
    "name": "src/cli/stage/ProgressReporter.ts",
    "content": "import { Stage, StageCrewMember } from '@serenity-js/core';\nimport { ArtifactGenerated, DomainEvent } from '@serenity-js/core/lib/events';\nimport * as ProgressBar from 'progress';\n\nimport { DownloadProgressReport } from '../model';\nimport { Printer } from '../Printer';\n\n/**\n * @desc\n *  Notifies the user of the progress of the Serenity BDD CLI jar download.\n *\n * @package\n */\nexport class ProgressReporter implements StageCrewMember {\n    constructor(\n        private readonly printer: Printer,\n        private readonly stage?: Stage,\n        private progressBar?: ProgressBar,\n    ) {\n    }\n\n    assignedTo(stage: Stage): StageCrewMember {\n        return new ProgressReporter(this.printer, stage, this.progressBar);\n    }\n\n    notifyOf(event: DomainEvent): void {\n        if (event instanceof ArtifactGenerated && event.artifact instanceof DownloadProgressReport) {\n            const { downloadedBytes, totalBytes } = event.artifact.map(report => report) as { downloadedBytes: number, totalDownloadedBytes: number, totalBytes: number };\n\n            if (! this.progressBar) {\n                this.progressBar = new ProgressBar(`[:bar] Downloaded :percent at :ratebps. We should be done in about :etas`, {\n                    complete: '=',\n                    incomplete: '-',\n                    width: 20,\n                    total: totalBytes,\n                    stream: this.printer.out,\n                });\n            }\n\n            this.progressBar.tick(downloadedBytes);\n        }\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/stage/ProgressReporter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 368,
    "kind": "class",
    "name": "ProgressReporter",
    "memberof": "src/cli/stage/ProgressReporter.ts",
    "static": true,
    "longname": "src/cli/stage/ProgressReporter.ts~ProgressReporter",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/stage/ProgressReporter.ts",
    "importStyle": "{ProgressReporter}",
    "description": " Notifies the user of the progress of the Serenity BDD CLI jar download.",
    "lineNumber": 21,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 369,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/stage/ProgressReporter.ts~ProgressReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/ProgressReporter.ts~ProgressReporter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 370,
    "kind": "method",
    "name": "assignedTo",
    "memberof": "src/cli/stage/ProgressReporter.ts~ProgressReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/ProgressReporter.ts~ProgressReporter#assignedTo",
    "access": "public",
    "description": " ",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StageCrewMember"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 371,
    "kind": "method",
    "name": "notifyOf",
    "memberof": "src/cli/stage/ProgressReporter.ts~ProgressReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/ProgressReporter.ts~ProgressReporter#notifyOf",
    "access": "public",
    "description": " ",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 372,
    "kind": "member",
    "name": "progressBar",
    "memberof": "src/cli/stage/ProgressReporter.ts~ProgressReporter",
    "static": false,
    "longname": "src/cli/stage/ProgressReporter.ts~ProgressReporter#progressBar",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 373,
    "kind": "file",
    "name": "src/cli/stage/RunCommandActors.ts",
    "content": "import { Actor, Cast, TakeNotes } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\n\nimport { UseFileSystem } from '../screenplay';\n\n/**\n * @package\n */\nexport class RunCommandActors implements Cast {\n    constructor(private readonly cwd: Path){\n    }\n\n    prepare(actor: Actor): Actor {\n        return actor.whoCan(\n            UseFileSystem.at(this.cwd),\n            TakeNotes.usingAnEmptyNotepad(),\n        );\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/stage/RunCommandActors.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 374,
    "kind": "class",
    "name": "RunCommandActors",
    "memberof": "src/cli/stage/RunCommandActors.ts",
    "static": true,
    "longname": "src/cli/stage/RunCommandActors.ts~RunCommandActors",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/stage/RunCommandActors.ts",
    "importStyle": "{RunCommandActors}",
    "description": "",
    "lineNumber": 16,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 375,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/stage/RunCommandActors.ts~RunCommandActors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/RunCommandActors.ts~RunCommandActors#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 376,
    "kind": "method",
    "name": "prepare",
    "memberof": "src/cli/stage/RunCommandActors.ts~RunCommandActors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/RunCommandActors.ts~RunCommandActors#prepare",
    "access": "public",
    "description": " ",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "Actor"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Actor"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 377,
    "kind": "file",
    "name": "src/cli/stage/UpdateCommandActors.ts",
    "content": "import { Actor, Cast, TakeNotes } from '@serenity-js/core';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { CallAnApi } from '@serenity-js/rest';\nimport { AxiosInstance } from 'axios';\n\nimport { UseFileSystem } from '../screenplay';\n\n/**\n * @package\n */\nexport class UpdateCommandActors implements Cast {\n    constructor(\n        private readonly cwd: Path,\n        private readonly createAxios: () => AxiosInstance,\n    ){\n    }\n\n    prepare(actor: Actor): Actor {\n        return actor.whoCan(\n            CallAnApi.using(this.createAxios()),\n            UseFileSystem.at(this.cwd),\n            TakeNotes.usingAnEmptyNotepad(),\n        );\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/stage/UpdateCommandActors.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 378,
    "kind": "class",
    "name": "UpdateCommandActors",
    "memberof": "src/cli/stage/UpdateCommandActors.ts",
    "static": true,
    "longname": "src/cli/stage/UpdateCommandActors.ts~UpdateCommandActors",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/cli/stage/UpdateCommandActors.ts",
    "importStyle": "{UpdateCommandActors}",
    "description": "",
    "lineNumber": 18,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 379,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/stage/UpdateCommandActors.ts~UpdateCommandActors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/UpdateCommandActors.ts~UpdateCommandActors#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 380,
    "kind": "method",
    "name": "prepare",
    "memberof": "src/cli/stage/UpdateCommandActors.ts~UpdateCommandActors",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/stage/UpdateCommandActors.ts~UpdateCommandActors#prepare",
    "access": "public",
    "description": " ",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "Actor"
        ],
        "spread": false,
        "optional": false,
        "name": "actor",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Actor"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 381,
    "kind": "file",
    "name": "src/cli/stage/index.ts",
    "content": "export * from './NotificationReporter';\nexport * from './ProgressReporter';\nexport * from './RunCommandActors';\nexport * from './UpdateCommandActors';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/cli/stage/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 382,
    "kind": "file",
    "name": "src/index.ts",
    "content": "export * from './stage';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 383,
    "kind": "file",
    "name": "src/stage/crew/index.ts",
    "content": "export * from './serenity-bdd-reporter';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 384,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts",
    "content": "import { JSONObject } from 'tiny-types';\n\n// https://github.com/serenity-bdd/serenity-core/tree/50a3b1824001f192da2cdca6326d7525d4dd7f25/serenity-model/src/test/resources\n// https://github.com/serenity-bdd/serenity-core/blob/master/serenity-model/src/main/java/net/thucydides/core/model/TestOutcome.java\n\n/** @package */\nexport interface SerenityBDDReport extends JSONObject {\n    name: string;\n    id: string;\n    testSteps: TestStep[];\n    userStory: UserStory;\n    // https://github.com/serenity-bdd/serenity-core/blob/c89cd6ee4127738ac88525d29d99537921f34701/\n    // serenity-core/src/test/resources/historical-reports/sample-report-4.json\n\n    featureTag: Tag;\n    title: string;\n    description: string;\n    tags: Tag[];\n    startTime: number;\n    duration: number;\n    rule: BusinessRule;\n    projectKey: string;                 // todo [ ]     protractor\n    sessionId?: string;                 // todo [ ]     protractor\n    driver?: string;                    // todo [ ]     protractor     'chrome:jill'\n    context?: string;\n    dataTable?: DataTable;\n    manual: boolean;\n    issues?: string[];\n    additionalIssues?: string[];\n    testSource: string;\n    result: string;\n    testFailureCause?: ErrorDetails;\n    testFailureClassname?: string;\n    testFailureMessage?: string;\n    testFailureSummary?: string;\n    backgroundTitle?: string;\n    backgroundDescription?: string;\n}\n\nexport interface BusinessRule extends JSONObject {\n    name: string;\n    description?: string;\n}\n\nexport interface TestStep extends JSONObject {\n    number: number;\n    description: string;\n    duration: number;\n    startTime: number;\n    result: string;\n    children?: TestStep[];\n    screenshots?: Screenshot[];\n    reportData: ReportData[];\n    restQuery?: RESTQuery;\n    exception?: ErrorDetails;\n    // precondition: false;             // not needed?\n}\n\n// https://github.com/serenity-bdd/serenity-core/blob/master/serenity-model/src/main/java/net/thucydides/core/model/ReportData.java\nexport interface ReportData extends JSONObject {\n    id: string;\n    isEvidence: boolean;\n    path: string;\n    title: string;\n    contents: string;\n}\n\n/**\n * https://github.com/serenity-bdd/serenity-core/blob/master/serenity-model/src/main/java/net/thucydides/core/screenshots/ScreenshotAndHtmlSource.java\n */\nexport interface Screenshot extends JSONObject {\n    screenshot: string;\n    timeStamp: number;\n    htmlSource?: string;     // \"htmlSource\": \"pagesource7953468346968205961.html.txt\"\n}\n\nexport interface UserStory extends JSONObject {\n    id: string;             // dashified feature name\n    storyName: string;      // feature name\n    path: string;           // relative feature file path\n    type: string;           // 'feature'\n    narrative?: string;     // cucumber narrative, if any\n}\n\nexport interface Tag extends JSONObject {\n    name: string;\n    displayName: string;\n    type: string;\n}\n\nexport interface DataTable extends JSONObject {\n    headers: string[];\n    rows: DataTableRow[];\n    predefinedRows: boolean;\n    scenarioOutline: string;\n    dataSetDescriptors: DataTableDataSetDescriptor[];\n}\n\nexport interface DataTableRow extends JSONObject {\n    values: string[];\n    result?: string;\n}\n\nexport interface DataTableDataSetDescriptor extends JSONObject {\n    startRow: number;\n    rowCount: number;\n    name: string;\n    description: string;\n}\n\nexport interface RESTQuery extends JSONObject {\n    method: string;\n    path: string;\n    content: string;\n    contentType: string;\n    requestHeaders: string;\n    requestCookies: string;\n    responseHeaders: string;\n    responseCookies: string;\n    responseBody: string;\n    statusCode: number;\n}\n\nexport interface ErrorDetails extends JSONObject {\n    errorType: string;\n    message: string;\n    stackTrace: Array<{\n        declaringClass: string,\n        methodName: string,\n        fileName: string,\n        lineNumber: number,\n    }>;\n    rootCause?: ErrorDetails;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 385,
    "kind": "class",
    "name": "ErrorDetails",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts",
    "importStyle": "{ErrorDetails}",
    "description": null,
    "lineNumber": 14,
    "interface": false,
    "extends": [
      "tiny-types~JSONObject"
    ],
    "ignore": true
  },
  {
    "__docId__": 386,
    "kind": "member",
    "name": "errorType",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails#errorType",
    "access": "public",
    "description": " ",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 387,
    "kind": "member",
    "name": "message",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails#message",
    "access": "public",
    "description": " ",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 388,
    "kind": "member",
    "name": "stackTrace",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails#stackTrace",
    "access": "public",
    "description": " ",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 389,
    "kind": "member",
    "name": "rootCause",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema.ts~ErrorDetails#rootCause",
    "access": "public",
    "description": " ",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "ErrorDetails"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 390,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts",
    "content": "import { Stage, StageCrewMember } from '@serenity-js/core';\nimport { ArtifactGenerated, DomainEvent, TestRunFinishes } from '@serenity-js/core/lib/events';\nimport { CorrelationId } from '@serenity-js/core/lib/model';\n\nimport { EventQueueProcessors, EventQueues } from './processors';\n\n/**\n * @desc\n *  Produces [Serenity BDD](http://serenity-bdd.info/)-standard JSON reports\n *  that [Serenity BDD CLI Reporter](https://github.com/serenity-bdd/serenity-cli)\n *  can parse to produce HTML reports and living documentation.\n *\n * @example <caption>Registering the reporter programmatically</caption>\n *  import { ArtifactArchiver, configure } from '@serenity-js/core';\n *  import { SerenityBDDReporter } from '@serenity-js/serenity-bdd';\n *\n *  configure({\n *    crew: [\n *      ArtifactArchiver.storingArtifactsAt('./target/site/serenity'),\n *      new SerenityBDDReporter()\n *    ],\n *  });\n *\n * @example <caption>Registering the reporter using Protractor configuration</caption>\n *  // protractor.conf.js\n *  const\n *    { ArtifactArchiver }    = require('@serenity-js/core'),\n *    { SerenityBDDReporter } = require('@serenity-js/serenity-bdd');\n *\n *  exports.config = {\n *    framework:     'custom',\n *    frameworkPath: require.resolve('@serenity-js/protractor/adapter'),\n *\n *    serenity: {\n *      crew: [\n *        ArtifactArchiver.storingArtifactsAt('./target/site/serenity'),\n *        new SerenityBDDReporter(),\n *      ],\n *      // other Serenity/JS config\n *    },\n *\n *    // other Protractor config\n *  };\n *\n * @public\n * @implements {@serenity-js/core/lib/stage~StageCrewMember}\n */\nexport class SerenityBDDReporter implements StageCrewMember {\n    private readonly eventQueues = new EventQueues();\n    private readonly processors = new EventQueueProcessors();\n\n    /**\n     * A queue for domain events that took place before the SceneStarts event,\n     * for example in Mocha's `before` hook.\n     */\n    private readonly eventQueue: DomainEvent[] = [];\n\n    /**\n     * @param {@serenity-js/core/lib/stage~Stage} [stage=undefined] stage\n     */\n    constructor(private readonly stage?: Stage) {\n    }\n\n    /**\n     * @desc\n     *  Creates a new instance of this {@link @serenity-js/core/lib/stage~StageCrewMember}\n     *  and assigns it to a given {@link @serenity-js/core/lib/stage~Stage}.\n     *\n     * @see {@link @serenity-js/core/lib/stage~StageCrewMember}\n     *\n     * @param {@serenity-js/core/lib/stage~Stage} stage\n     *  An instance of a {@link @serenity-js/core/lib/stage~Stage} this {@link @serenity-js/core/lib/stage~StageCrewMember} will be assigned to\n     *\n     * @returns {@serenity-js/core/lib/stage~StageCrewMember}\n     *  A new instance of this {@link @serenity-js/core/lib/stage~StageCrewMember}\n     */\n    assignedTo(stage: Stage): StageCrewMember {\n        return new SerenityBDDReporter(stage);\n    }\n\n    /**\n     * @desc\n     *  Handles {@link @serenity-js/core/lib/events~DomainEvent} objects emitted by the {@link @serenity-js/core/lib/stage~StageCrewMember}.\n     *\n     * @see {@link @serenity-js/core/lib/stage~StageCrewMember}\n     *\n     * @param {@serenity-js/core/lib/events~DomainEvent} event\n     * @returns {void}\n     */\n    notifyOf (event: DomainEvent): void {\n\n        if (this.isSceneSpecific(event)) {\n            this.eventQueues.enqueue(event);\n        }\n\n        else if (event instanceof TestRunFinishes) {\n\n            this.processors\n                .process(this.eventQueues)\n                .forEach(result => {\n                    this.stage.announce(new ArtifactGenerated(\n                        result.sceneId,\n                        result.name,\n                        result.artifact,\n                        this.stage.currentTime(),\n                    ));\n                });\n        }\n    }\n\n    private isSceneSpecific(event: DomainEvent): event is DomainEvent & { sceneId: CorrelationId } {\n        return Object.prototype.hasOwnProperty.call(event, 'sceneId');\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 391,
    "kind": "class",
    "name": "SerenityBDDReporter",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts",
    "static": true,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/serenity-bdd/lib/stage/crew/serenity-bdd-reporter",
    "importStyle": "{SerenityBDDReporter}",
    "description": " Produces [Serenity BDD](http://serenity-bdd.info/)-standard JSON reports\n that [Serenity BDD CLI Reporter](https://github.com/serenity-bdd/serenity-cli)\n can parse to produce HTML reports and living documentation.",
    "examples": [
      "<caption>Registering the reporter programmatically</caption>\n import { ArtifactArchiver, configure } from '@serenity-js/core';\n import { SerenityBDDReporter } from '@serenity-js/serenity-bdd';\n\n configure({\n   crew: [\n     ArtifactArchiver.storingArtifactsAt('./target/site/serenity'),\n     new SerenityBDDReporter()\n   ],\n });",
      "<caption>Registering the reporter using Protractor configuration</caption>\n // protractor.conf.js\n const\n   { ArtifactArchiver }    = require('@serenity-js/core'),\n   { SerenityBDDReporter } = require('@serenity-js/serenity-bdd');\n\n exports.config = {\n   framework:     'custom',\n   frameworkPath: require.resolve('@serenity-js/protractor/adapter'),\n\n   serenity: {\n     crew: [\n       ArtifactArchiver.storingArtifactsAt('./target/site/serenity'),\n       new SerenityBDDReporter(),\n     ],\n     // other Serenity/JS config\n   },\n\n   // other Protractor config\n };"
    ],
    "lineNumber": 55,
    "interface": false,
    "implements": [
      "StageCrewMember"
    ]
  },
  {
    "__docId__": 392,
    "kind": "member",
    "name": "eventQueues",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#eventQueues",
    "access": "private",
    "description": " ",
    "lineNumber": 49,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 393,
    "kind": "member",
    "name": "processors",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#processors",
    "access": "private",
    "description": " ",
    "lineNumber": 50,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 394,
    "kind": "member",
    "name": "eventQueue",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#eventQueue",
    "access": "private",
    "description": "A queue for domain events that took place before the SceneStarts event,\nfor example in Mocha's `before` hook. ",
    "lineNumber": 56,
    "type": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 395,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "undefined",
        "defaultRaw": "undefined",
        "name": "stage",
        "description": "stage"
      }
    ]
  },
  {
    "__docId__": 396,
    "kind": "method",
    "name": "assignedTo",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#assignedTo",
    "access": "public",
    "description": " Creates a new instance of this {@link @serenity-js/core/lib/stage~StageCrewMember}\n and assigns it to a given {@link @serenity-js/core/lib/stage~Stage}.",
    "see": [
      "{@link @serenity-js/core/lib/stage~StageCrewMember}"
    ],
    "lineNumber": 124,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{@serenity-js/core/lib/stage~StageCrewMember}\n A new instance of this {@link @serenity-js/core/lib/stage~StageCrewMember}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Stage"
        ],
        "spread": false,
        "optional": false,
        "name": "stage",
        "description": "An instance of a {@link @serenity-js/core/lib/stage~Stage} this {@link @serenity-js/core/lib/stage~StageCrewMember} will be assigned to"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "StageCrewMember"
      ],
      "spread": false,
      "description": "A new instance of this {@link @serenity-js/core/lib/stage~StageCrewMember}"
    }
  },
  {
    "__docId__": 397,
    "kind": "method",
    "name": "notifyOf",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#notifyOf",
    "access": "public",
    "description": " Handles {@link @serenity-js/core/lib/events~DomainEvent} objects emitted by the {@link @serenity-js/core/lib/stage~StageCrewMember}.",
    "see": [
      "{@link @serenity-js/core/lib/stage~StageCrewMember}"
    ],
    "lineNumber": 150,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{void}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 398,
    "kind": "method",
    "name": "isSceneSpecific",
    "memberof": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts~SerenityBDDReporter#isSceneSpecific",
    "access": "private",
    "description": " ",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "event",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 399,
    "kind": "file",
    "name": "src/stage/crew/serenity-bdd-reporter/index.ts",
    "content": "export * from './SerenityBDDReporter';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 400,
    "kind": "file",
    "name": "src/stage/index.ts",
    "content": "export * from './crew';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/src/stage/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "kind": "index",
    "content": "# Serenity/JS\n\n[Serenity/JS](https://serenity-js.org) is a framework designed to make acceptance and regression testing\nof modern full-stack applications faster, more collaborative and easier to scale.\n\nVisit [serenity-js.org](https://serenity-js.org/) for the [latest tutorials](https://serenity-js.org/handbook/)\nand [API docs](https://serenity-js.org/modules/), and follow [@SerenityJS](https://twitter.com/SerenityJS) and [@JanMolak](https://twitter.com/JanMolak) on Twitter for project updates.\n\n### Learning Serenity/JS\n\nTo learn more about Serenity/JS, check out the video below, read the [tutorial](https://serenity-js.org/handbook/thinking-in-serenity-js/index.html), review the [examples](https://github.com/serenity-js/serenity-js/tree/master/examples), and create your own test suite with [Serenity/JS template projects](https://github.com/serenity-js).\n\nIf you have any questions, join us on [Serenity/JS Community Chat](https://gitter.im/serenity-js/Lobby).\n\n[![Full-Stack Acceptance Testing with Serenity/JS and the Screenplay Pattern](https://img.youtube.com/vi/djPMf-n93Rw/0.jpg)](https://www.youtube.com/watch?v=djPMf-n93Rw)\n\n## Serenity BDD\n\n[`@serenity-js/serenity-bdd`](https://serenity-js.org/modules/serenity-bdd/) module integrates Serenity/JS and the Serenity BDD reporting CLI.\n\nThis integration enables your Serenity/JS tests to produce interim JSON reports, which the Serenity BDD reporting CLI\ncan then turn into world-class, illustrated test reports and living documentation. Learn more about [Serenity/JS reporting](https://serenity-js.org/handbook/reporting/index.html).\n\n### Installation\n\nTo install this module, run the following command in your computer terminal:\n\n```console\nnpm install --save-dev @serenity-js/{core,serenity-bdd}\n```\n\n### SerenityBDDReporter\n\nTo allow Serenity/JS to produce Serenity BDD-standard JSON reports, assign the `SerenityBDDReporter` to the `Stage`\nand configure the `ArtifactArchiver` to store the reports at the location where Serenity BDD expects to find them.\n\nThis can be done in your `protractor.conf.js` file if you're using Protractor, or programmatically.\n\n#### Programmatic configuration\n\n```typescript\nimport { ArtifactArchiver, serenity } from '@serenity-js/core';\nimport { SerenityBDDReporter } from '@serenity-js/serenity-bdd';\n\nserenity.configure({\n    crew: [\n        ArtifactArchiver.storingArtifactsAt('./target/site/serenity'),\n        new SerenityBDDReporter()\n    ],\n});\n```\n\n#### Protractor\n\n```javascript\n// protractor.conf.js\n\nconst\n    { ArtifactArchiver }    = require('@serenity-js/core'),\n    { SerenityBDDReporter } = require('@serenity-js/serenity-bdd'),\n\nexports.config = {\n\n    framework:      'custom',\n    frameworkPath:  require.resolve('@serenity-js/protractor/adapter'),\n\n    serenity: {\n        crew: [\n            ArtifactArchiver.storingArtifactsAt('./target/site/serenity'),\n            new SerenityBDDReporter(),\n        ]\n    },\n\n    // ...\n}\n```\n\n### Serenity BDD Living Documentation\n\nTo turn the Serenity BDD-standard JSON reports produced by the `SerenityBDDReporter` into Serenity BDD test reports,\nyou need the [Serenity BDD reporting CLI](https://github.com/serenity-bdd/serenity-cli).\n\nThe Serenity BDD reporting CLI is a Java program, distributed as an executable `.jar` file and [available on Bintray](https://bintray.com/serenity/maven/serenity-cli).\n\nThis module ships with a `serenity-bdd` CLI wrapper that makes downloading and running the Serenity BDD reporting CLI easy.\n\nTo learn more about the usage of the `serenity-bdd` wrapper, run:\n\n```console\nnpx serenity-bdd --help\n```\n\n#### Configuring Serenity BDD reporting CLI\n\nTo configure the [Serenity BDD reporting CLI](https://github.com/serenity-bdd/serenity-cli), place a file called `serenity.properties`\nin your project root directory. \n\nFor example:\n\n```\n# serenity.properties\nserenity.project.name=My awesome project\n```\n\nPlease note that the reporting CLI considers only those properties that are related to producing test reports.\nLearn more about configuring [`serenity.properties`](https://serenity-bdd.github.io/theserenitybook/latest/serenity-system-properties.html).\n\n#### Downloading the Serenity BDD reporting CLI\n\nTo download the Serenity BDD reporting CLI or to update it, use the update command:\n\n```console\nnpx serenity-bdd update\n```\n\nYou can also tell it to download the Serenity BDD reporting CLI jar from your company's artifact repository if you can't use the official Bintray one:\n\n```\nnpx serenity-bdd update --repository https://artifactory.example.org/\n```\n\nTo learn more about the `update` command, run:\n\n```\nnpx serenity-bdd --help update\n```\n\nPlease note that the `update` command will try to download the `.jar` only if you don't have it cached already, or when the one you have is not up to date. Otherwise, no outbound network calls are made.\n\n##### Downloading through a proxy\n\nThe `update` command will pick up your proxy configuration automatically from your [NPM config](https://docs.npmjs.com/cli/v6/commands/npm-config), [`.npmrc` file](https://docs.npmjs.com/cli/v6/configuring-npm/npmrc), or environment variables. \n\nPlease note that you only need to use one of those configuration mechanisms.\n\n###### Use NPM config (Linux, macOS, Windows)\n\nTo use NPM-level configuration, run the following commands in your terminal:\n\n```console\nnpm config set proxy http://[user:pwd]@domain.tld:port\nnpm config set https-proxy http://[user:pwd]@domain.tld:port\n```\n\nIf your proxy requires a certificate file, you can provide a path to it as follows:\n\n```console\nnpm config set cafile /path/to/root-ca.pem\n```\n\nThe above can also be accomplished by placing an [`.npmrc` file](https://docs.npmjs.com/cli/v6/configuring-npm/npmrc) with following contents in your home directory or your project root:\n\n```bash\n# ~/.npmrc\nproxy = http://[user:pwd]@domain.tld:port\nhttps-proxy = http://[user:pwd]@domain.tld:port\n\ncafile = /path/to/root-ca.pem          # optional\nnoproxy = localhost,mycompany.com      # optional\n```\n\n###### Environment variables on Linux or macOS\n\nTo set your proxy on Linux or macOS, run the following commands in your terminal:\n\n```console\nexport HTTP_PROXY=http://[user:pwd]@domain.tld:port\nexport HTTPS_PROXY=http://[user:pwd]@domain.tld:port\n```\n\nIf needed, you can also set a `NO_PROXY` variable to a comma-separated list of domains that don't require a proxy, for example:\n\n```console\nexport NO_PROXY=localhost,mycompany.com\n```\n\nPlease note that you can add the above commands to your shell's `~/.profile`, so that they're executed whenever you open a new terminal.\n\n###### Environment variables on Windows\n\nTo configure a proxy on Windows, run the following commands in Command Prompt:\n\n```console\nset HTTP_PROXY=http://[user:pwd]@domain.tld:port\nset HTTPS_PROXY=http://[user:pwd]@domain.tld:port\n```\n\nIf you're using Powershell, run the following commands instead:\n\n```console\n$env:HTTP_PROXY = http://[user:pwd]@domain.tld:port\n$env:HTTPS_PROXY = http://[user:pwd]@domain.tld:port\n```\n\n##### Use a specific User-Agent\n\nIf your artifact registry requires you to use a specific user agent, you can configure it using NPM config:\n\n```console\nnpm config set user-agent \"Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0\"\n``` \n\n##### Ignore SSL checks\n\nYou can instruct the `update` command to ignore any SSL certificate errors by providing an `--ignoreSSL` flag when running the command:  \n\n```console\nnpx serenity-bdd update --ignoreSSL\n```\n\nYou can also disable certificate checks at the NPM config level by running: \n\n```console\nnpm config set strict-ssl false\n```\n\nAlternative, you can accomplish the same with an `.npmrc` file:\n\n```bash\n# ~/.npmrc\nnpm_config_strict-ssl = false\n```\n\n#### Producing the Serenity BDD test report\n\nTo produce the Serenity BDD test report and living documentation using default settings, run:\n\n```\nnpx serenity-bdd run\n```\n\nTo learn more about the `run` command and how to change the default settings, run:\n\n```\nnpx serenity-bdd --help run\n```\n\n### Using NPM scripts\n\nThe easiest way to ensure that the Serenity BDD reporting CLI is up to date\nand that the Serenity BDD test report is produced after each test run is to\nadd the following entries to the scripts section of the `package.json` file:\n\n```json\n{\n  \"scripts\": {\n    \"test:update-serenity\": \"serenity-bdd update\",\n    \"test:acceptance\": \"/* invoke the test runner */\",\n    \"test:report\": \"serenity-bdd run\",\n    \"test\": \"failsafe test:acceptance test:update-serenity test:report\",\n    // ... other scripts\n  },\n  // ... other config\n}\n```\n\nIn the above example, the [`npm-failsafe`](https://www.npmjs.com/package/npm-failsafe) module is used to invoke\neach of the `test:update-serenity`, `test:acceptance` and `test:report` scripts when `npm test` is executed.\nThis is to ensure that the Serenity BDD report is produced even when there is a test failure.\n",
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@serenity-js/serenity-bdd\",\n  \"version\": \"2.33.6\",\n  \"description\": \"Serenity BDD reporter for Serenity/JS\",\n  \"author\": {\n    \"name\": \"Jan Molak\",\n    \"email\": \"jan.molak@smartcodeltd.co.uk\",\n    \"url\": \"https://janmolak.com\"\n  },\n  \"funding\": {\n    \"url\": \"https://github.com/sponsors/serenity-js\"\n  },\n  \"homepage\": \"https://serenity-js.org\",\n  \"license\": \"Apache-2.0\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"main\": \"lib/index.js\",\n  \"typings\": \"lib/index.d.ts\",\n  \"bin\": {\n    \"serenity-bdd\": \"bin/serenity-bdd\"\n  },\n  \"keywords\": [\n    \"serenity-js\",\n    \"tdd\",\n    \"bdd\",\n    \"test\",\n    \"testing\"\n  ],\n  \"scripts\": {\n    \"clean\": \"rimraf .nyc_output lib target\",\n    \"lint\": \"eslint --ext ts --config ../../.eslintrc.js .\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"test\": \"nyc --report-dir ../../target/coverage/serenity-bdd mocha --config ../../.mocharc.yml 'spec/**/*.spec.*'\",\n    \"compile\": \"tsc --project tsconfig.json\",\n    \"site\": \"esdoc -c .esdoc.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/serenity-js/serenity-js.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/serenity-js/serenity-js/issues\"\n  },\n  \"engines\": {\n    \"node\": \"^12 || ^14 || ^16\",\n    \"npm\": \"^6 || ^7 || ^8\"\n  },\n  \"dependencies\": {\n    \"@serenity-js/assertions\": \"2.33.6\",\n    \"@serenity-js/core\": \"2.33.6\",\n    \"@serenity-js/rest\": \"2.33.6\",\n    \"axios\": \"^0.21.4\",\n    \"chalk\": \"^4.1.2\",\n    \"find-java-home\": \"^1.2.2\",\n    \"https-proxy-agent\": \"^5.0.1\",\n    \"progress\": \"^2.0.3\",\n    \"tiny-types\": \"^1.17.0\",\n    \"which\": \"^2.0.2\",\n    \"yargs\": \"^16.2.0\"\n  },\n  \"devDependencies\": {\n    \"@documentation/esdoc-template\": \"2.0.0\",\n    \"@integration/testing-tools\": \"2.0.0\",\n    \"@types/chai\": \"^4.3.1\",\n    \"@types/mocha\": \"^9.1.0\",\n    \"@types/progress\": \"^2.0.5\",\n    \"memfs\": \"^3.4.1\",\n    \"mocha\": \"^9.2.2\",\n    \"ts-node\": \"^10.7.0\",\n    \"typescript\": \"^4.6.3\"\n  },\n  \"nyc\": {\n    \"include\": [\n      \"src/**/*.ts\"\n    ],\n    \"exclude\": [\n      \"src/**/*.d.ts\",\n      \"src/cli\",\n      \"lib\",\n      \"node_modules\",\n      \"spec\"\n    ],\n    \"extension\": [\n      \".ts\"\n    ],\n    \"require\": [\n      \"ts-node/register\"\n    ],\n    \"reporter\": [\n      \"json\"\n    ],\n    \"cache\": true,\n    \"all\": true\n  }\n}\n",
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 401,
    "kind": "testFile",
    "name": "spec/cli/bootstrap.spec.ts",
    "content": "import 'mocha';\n\nimport { expect } from '@integration/testing-tools';\n\nimport { bootstrap } from '../../src/cli/bootstrap';\n\ndescribe('Serenity BDD CLI', () => {\n\n    it('should tell its version', () => {\n        const pkg = require('../../package.json');  // eslint-disable-line @typescript-eslint/no-var-requires\n\n        bootstrap(['--version'], (error, parsed, output) => {\n            expect(output).to.equal(pkg.version);\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/cli/bootstrap.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 402,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "spec/cli/bootstrap.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/cli/bootstrap.spec.ts~describe0",
    "access": null,
    "description": "Serenity BDD CLI",
    "lineNumber": 7
  },
  {
    "__docId__": 403,
    "kind": "test",
    "name": "it1",
    "testId": 1,
    "memberof": "spec/cli/bootstrap.spec.ts~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "spec/cli/bootstrap.spec.ts~describe0.it1",
    "access": null,
    "description": "should tell its version",
    "lineNumber": 9
  },
  {
    "__docId__": 404,
    "kind": "testFile",
    "name": "spec/cli/model/Credentials.spec.ts",
    "content": "import 'mocha';\n\nimport { expect } from '@integration/testing-tools';\n\nimport { Credentials } from '../../../src/cli/model';\n\ndescribe('Credentials', () => {\n\n    // eslint-disable unicorn/no-useless-undefined\n\n    it('defaults to \"no credentials\" if the credentials are not specified', () => {\n        const credentials = Credentials.fromString(undefined);  // eslint-disable-line unicorn/no-useless-undefined\n\n        expect(credentials.username).to.equal(undefined);\n        expect(credentials.password).to.equal(undefined);\n    });\n\n    it('defaults to \"no credentials\" if the credentials are empty', () => {\n        const credentials = Credentials.fromString('');\n\n        expect(credentials.username).to.equal(undefined);\n        expect(credentials.password).to.equal(undefined);\n    });\n\n    // eslint-enable: unicorn/no-useless-undefined\n\n    it('complains if the credentials string does not follow the <username>:<password> template', () => {\n\n        expect(() => Credentials.fromString('invalid'))\n            .to.throw(Error, 'Credentials should follow the \"<username>:<password>\" format')\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/cli/model/Credentials.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 405,
    "kind": "test",
    "name": "describe2",
    "testId": 2,
    "memberof": "spec/cli/model/Credentials.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/cli/model/Credentials.spec.ts~describe2",
    "access": null,
    "description": "Credentials",
    "lineNumber": 7
  },
  {
    "__docId__": 406,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "spec/cli/model/Credentials.spec.ts~describe2",
    "testDepth": 1,
    "static": true,
    "longname": "spec/cli/model/Credentials.spec.ts~describe2.it3",
    "access": null,
    "description": "defaults to \"no credentials\" if the credentials are not specified",
    "lineNumber": 11
  },
  {
    "__docId__": 407,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "spec/cli/model/Credentials.spec.ts~describe2",
    "testDepth": 1,
    "static": true,
    "longname": "spec/cli/model/Credentials.spec.ts~describe2.it4",
    "access": null,
    "description": "defaults to \"no credentials\" if the credentials are empty",
    "lineNumber": 18
  },
  {
    "__docId__": 408,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "spec/cli/model/Credentials.spec.ts~describe2",
    "testDepth": 1,
    "static": true,
    "longname": "spec/cli/model/Credentials.spec.ts~describe2.it5",
    "access": null,
    "description": "complains if the credentials string does not follow the <username>:<password> template",
    "lineNumber": 27
  },
  {
    "__docId__": 409,
    "kind": "testFile",
    "name": "spec/cli/model/GAV.spec.ts",
    "content": "import 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { Path } from '@serenity-js/core/lib/io';\n\nimport { GAV } from '../../../src/cli/model';\n\ndescribe('GAV', () => {\n\n    describe('can be described using a string which format', () => {\n\n        it('follows group:artifact:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity-cli:2.1.9');\n\n            expect(gav.groupId).to.equal('net.serenity-bdd');\n            expect(gav.artifactId).to.equal('serenity-cli');\n            expect(gav.extension).to.equal('jar');\n            expect(gav.version).to.equal('2.1.9');\n            expect(gav.classifier).to.equal(undefined);\n        });\n\n        it('follows group:artifact:extension:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity:war:2.1.9');\n\n            expect(gav.groupId).to.equal('net.serenity-bdd');\n            expect(gav.artifactId).to.equal('serenity');\n            expect(gav.extension).to.equal('war');\n            expect(gav.version).to.equal('2.1.9');\n            expect(gav.classifier).to.equal(undefined);\n        });\n\n        it('follows group:artifact:extension:classifier:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity-cli:jar:all:2.1.9');\n\n            expect(gav.groupId).to.equal('net.serenity-bdd');\n            expect(gav.artifactId).to.equal('serenity-cli');\n            expect(gav.extension).to.equal('jar');\n            expect(gav.version).to.equal('2.1.9');\n            expect(gav.classifier).to.equal('all');\n        });\n    });\n\n    describe('can be converted to a file name when the identifier', () => {\n        it('follows group:artifact:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity-cli:2.1.9');\n\n            expect(gav.toPath()).to.equal(new Path('serenity-cli-2.1.9.jar'));\n        });\n\n        it('follows group:artifact:extension:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity:war:2.1.9');\n\n            expect(gav.toPath()).to.equal(new Path('serenity-2.1.9.war'));\n        });\n\n        it('follows group:artifact:extension:classifier:version', () => {\n            const gav = GAV.fromString('net.serenity-bdd:serenity-cli:jar:all:2.1.9');\n\n            expect(gav.toPath()).to.equal(new Path('serenity-cli-2.1.9-all.jar'));\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/cli/model/GAV.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 410,
    "kind": "test",
    "name": "describe6",
    "testId": 6,
    "memberof": "spec/cli/model/GAV.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe6",
    "access": null,
    "description": "GAV",
    "lineNumber": 8
  },
  {
    "__docId__": 411,
    "kind": "test",
    "name": "describe7",
    "testId": 7,
    "memberof": "spec/cli/model/GAV.spec.ts~describe6",
    "testDepth": 1,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe6.describe7",
    "access": null,
    "description": "can be described using a string which format",
    "lineNumber": 10
  },
  {
    "__docId__": 412,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "spec/cli/model/GAV.spec.ts~describe6.describe7",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe6.describe7.it8",
    "access": null,
    "description": "follows group:artifact:version",
    "lineNumber": 12
  },
  {
    "__docId__": 413,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "spec/cli/model/GAV.spec.ts~describe6.describe7",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe6.describe7.it9",
    "access": null,
    "description": "follows group:artifact:extension:version",
    "lineNumber": 22
  },
  {
    "__docId__": 414,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "spec/cli/model/GAV.spec.ts~describe6.describe7",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe6.describe7.it10",
    "access": null,
    "description": "follows group:artifact:extension:classifier:version",
    "lineNumber": 32
  },
  {
    "__docId__": 415,
    "kind": "test",
    "name": "describe11",
    "testId": 11,
    "memberof": "spec/cli/model/GAV.spec.ts~describe6",
    "testDepth": 1,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe6.describe11",
    "access": null,
    "description": "can be converted to a file name when the identifier",
    "lineNumber": 43
  },
  {
    "__docId__": 416,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "spec/cli/model/GAV.spec.ts~describe6.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe6.describe11.it12",
    "access": null,
    "description": "follows group:artifact:version",
    "lineNumber": 44
  },
  {
    "__docId__": 417,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "spec/cli/model/GAV.spec.ts~describe6.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe6.describe11.it13",
    "access": null,
    "description": "follows group:artifact:extension:version",
    "lineNumber": 50
  },
  {
    "__docId__": 418,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "spec/cli/model/GAV.spec.ts~describe6.describe11",
    "testDepth": 2,
    "static": true,
    "longname": "spec/cli/model/GAV.spec.ts~describe6.describe11.it14",
    "access": null,
    "description": "follows group:artifact:extension:classifier:version",
    "lineNumber": 56
  },
  {
    "__docId__": 419,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/dealing_with_out_of_order_events.spec.ts",
    "content": "/* eslint-disable unicorn/filename-case, @typescript-eslint/indent */\nimport 'mocha';\n\nimport { EventRecorder, EventStreamEmitter, expect, PickEvent } from '@integration/testing-tools';\nimport { Clock, Duration, Stage, StageManager } from '@serenity-js/core';\nimport { ArtifactGenerated } from '@serenity-js/core/lib/events';\nimport { Extras } from '@serenity-js/core/lib/stage/Extras';\n\nimport { SerenityBDDReporter } from '../../../../../src';\n\n/** @test {SerenityBDDReporter} */\ndescribe('SerenityBDDReporter', () => {\n\n    let reporter: SerenityBDDReporter,\n        stage: Stage,\n        emitter: EventStreamEmitter,\n        recorder: EventRecorder;\n\n    beforeEach(() => {\n        const frozenClock = new Clock(() => new Date(0))\n        stage = new Stage(new Extras(), new StageManager(Duration.ofMilliseconds(250), frozenClock));\n        emitter = new EventStreamEmitter(stage);\n        recorder = new EventRecorder([], stage);\n\n        reporter = new SerenityBDDReporter(stage);\n\n        stage.assign(reporter);\n        stage.assign(recorder);\n    });\n\n    it(`works when events are in order`, () =>\n        emitter.emit(`\n            {\"type\":\"SceneStarts\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"timestamp\":\"2020-10-08T16:14:59.637Z\",\"details\":{\"category\":\"Search\",\"location\":{\"column\":3,\"line\":15,\"path\":\"features/search.feature\"},\"name\":\"Advanced search\"}}}\n                {\"type\":\"TaskStarts\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10urdx00arcuun2wz2b721\",\"timestamp\":\"2020-10-08T16:15:00.645Z\",\"details\":{\"name\":\"When he enters search details\"}}}\n                    {\"type\":\"TaskStarts\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10vfaq00b3cuun69j179uv\",\"timestamp\":\"2020-10-08T16:15:31.634Z\",\"details\":{\"name\":\"Bob chooses first option\"}}}\n                        {\"type\":\"InteractionStarts\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10vfaq00b4cuun76se5lvf\",\"timestamp\":\"2020-10-08T16:15:31.634Z\",\"details\":{\"name\":\"Bob waits up to 5s until the first option does become clickable\"}}}\n                        {\"type\":\"InteractionFinished\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10vfaq00b4cuun76se5lvf\",\"outcome\":{\"code\":4,\"error\":\"{\\\\\"name\\\\\":\\\\\"AssertionError\\\\\",\\\\\"stack\\\\\":\\\\\"AssertionError: Waited 5s for the first option to become clickable\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"Waited 5s for the first option to become clickable\\\\\",\\\\\"expected\\\\\":null,\\\\\"actual\\\\\":null}\"},\"timestamp\":\"2020-10-08T16:15:41.906Z\",\"details\":{\"name\":\"Bob waits up to 5s until the first option does become clickable\"}}}\n                    {\"type\":\"TaskFinished\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10vfaq00b3cuun69j179uv\",\"outcome\":{\"code\":4,\"error\":\"{\\\\\"name\\\\\":\\\\\"AssertionError\\\\\",\\\\\"stack\\\\\":\\\\\"AssertionError: Waited 5s for the first option to become clickable\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"Waited 5s for the first option to become clickable\\\\\",\\\\\"expected\\\\\":null,\\\\\"actual\\\\\":null}\"},\"timestamp\":\"2020-10-08T16:15:41.907Z\",\"details\":{\"name\":\"Bob chooses first option\"}}}\n                {\"type\":\"TaskFinished\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10urdx00arcuun2wz2b721\",\"outcome\":{\"code\":2,\"error\":\"{\\\\\"name\\\\\":\\\\\"Error\\\\\",\\\\\"stack\\\\\":\\\\\"Error: function timed out, ensure the promise resolves within 40000 milliseconds\\\\\",\\\\\"message\\\\\":\\\\\"function timed out, ensure the promise resolves within 40000 milliseconds\\\\\"}\"},\"timestamp\":\"2020-10-08T16:15:40.649Z\",\"details\":{\"name\":\"When he enters search details\"}}}\n            {\"type\":\"SceneFinishes\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"outcome\":{\"code\":2,\"error\":\"{\\\\\"name\\\\\":\\\\\"Error\\\\\",\\\\\"stack\\\\\":\\\\\"Error: function timed out, ensure the promise resolves within 40000 milliseconds\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"function timed out, ensure the promise resolves within 40000 milliseconds\\\\\"}\"},\"timestamp\":\"2020-10-08T16:15:40.650Z\",\"details\":{\"category\":\"Search\",\"location\":{\"column\":3,\"line\":15,\"path\":\"features/search.feature\"},\"name\":\"Advanced search\"}}}\n            {\"type\":\"SceneFinished\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"outcome\":{\"code\":2,\"error\":\"{\\\\\"name\\\\\":\\\\\"Error\\\\\",\\\\\"stack\\\\\":\\\\\"Error: function timed out, ensure the promise resolves within 40000 milliseconds\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"function timed out, ensure the promise resolves within 40000 milliseconds\\\\\"}\"},\"timestamp\":\"2020-10-08T16:15:40.661Z\",\"details\":{\"category\":\"Search\",\"location\":{\"column\":3,\"line\":15,\"path\":\"features/search.feature\"},\"name\":\"Advanced search\"}}}\n            {\"type\":\"SceneStarts\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"timestamp\":\"2020-10-08T16:15:40.663Z\",\"details\":{\"category\":\"Tag management\",\"location\":{\"column\":3,\"line\":5,\"path\":\"features/tags.feature\"},\"name\":\"Create new tag\"}}}\n                {\"type\":\"TaskStarts\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"activityId\":\"ckg10vm9k00bbcuun7p1h7cce\",\"timestamp\":\"2020-10-08T16:15:40.664Z\",\"details\":{\"name\":\"Given Adam is logged in\"}}}\n                    {\"type\":\"InteractionStarts\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"activityId\":\"ckg10vm9l00bdcuun74ye4qww\",\"timestamp\":\"2020-10-08T16:15:40.665Z\",\"details\":{\"name\":\"Adam navigates to '/'\"}}}\n                    {\"type\":\"InteractionFinished\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"activityId\":\"ckg10vm9l00bdcuun74ye4qww\",\"outcome\":{\"code\":64},\"timestamp\":\"2020-10-08T16:15:41.908Z\",\"details\":{\"name\":\"Adam navigates to '/'\"}}}\n                {\"type\":\"TaskFinished\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"activityId\":\"ckg10vm9k00bbcuun7p1h7cce\",\"outcome\":{\"code\":64},\"timestamp\":\"2020-10-08T16:15:42.682Z\",\"details\":{\"name\":\"Given Adam is logged in\"}}}\n            {\"type\":\"SceneFinishes\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"outcome\":{\"code\":2,\"error\":\"{\\\\\"name\\\\\":\\\\\"Error\\\\\",\\\\\"stack\\\\\":\\\\\"Error: function timed out, ensure the promise resolves within 10000 milliseconds\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"function timed out, ensure the promise resolves within 10000 milliseconds\\\\\"}\"},\"timestamp\":\"2020-10-08T16:15:52.689Z\",\"details\":{\"category\":\"Tag management\",\"location\":{\"column\":3,\"line\":5,\"path\":\"features/tags.feature\"},\"name\":\"Create new tag\"}}}\n            {\"type\":\"SceneFinished\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"outcome\":{\"code\":2,\"error\":\"{\\\\\"name\\\\\":\\\\\"Error\\\\\",\\\\\"stack\\\\\":\\\\\"Error: function timed out, ensure the promise resolves within 10000 milliseconds\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"function timed out, ensure the promise resolves within 10000 milliseconds\\\\\"}\"},\"timestamp\":\"2020-10-08T16:15:52.701Z\",\"details\":{\"category\":\"Tag management\",\"location\":{\"column\":3,\"line\":5,\"path\":\"features/tags.feature\"},\"name\":\"Create new tag\"}}}\n            {\"type\":\"TestRunFinishes\",\"event\":\"2020-10-08T16:16:15.302Z\"}\n            {\"type\":\"TestRunFinished\",\"event\":\"2020-10-08T16:16:15.313Z\"}\n        `).then(() => {\n\n            PickEvent.from(recorder.events)\n                .next(ArtifactGenerated, ({ artifact }) => {\n                    const report = artifact.map(_ => _);\n\n                    expect(report).to.deep.equal(firstExpectedReport)\n                })\n                .next(ArtifactGenerated, ({ artifact }) => {\n                    const report = artifact.map(_ => _);\n\n                    expect(report).to.deep.equal(secondExpectedReport)\n                });\n\n        }));\n\n    it(`correctly reconciles out of order events`, () =>\n        emitter.emit(`\n            {\"type\":\"SceneStarts\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"timestamp\":\"2020-10-08T16:14:59.637Z\",\"details\":{\"category\":\"Search\",\"location\":{\"column\":3,\"line\":15,\"path\":\"features/search.feature\"},\"name\":\"Advanced search\"}}}\n                {\"type\":\"TaskStarts\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10urdx00arcuun2wz2b721\",\"timestamp\":\"2020-10-08T16:15:00.645Z\",\"details\":{\"name\":\"When he enters search details\"}}}\n                    {\"type\":\"TaskStarts\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10vfaq00b3cuun69j179uv\",\"timestamp\":\"2020-10-08T16:15:31.634Z\",\"details\":{\"name\":\"Bob chooses first option\"}}}\n                        {\"type\":\"InteractionStarts\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10vfaq00b4cuun76se5lvf\",\"timestamp\":\"2020-10-08T16:15:31.634Z\",\"details\":{\"name\":\"Bob waits up to 5s until the first option does become clickable\"}}}\n                {\"type\":\"TaskFinished\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10urdx00arcuun2wz2b721\",\"outcome\":{\"code\":2,\"error\":\"{\\\\\"name\\\\\":\\\\\"Error\\\\\",\\\\\"stack\\\\\":\\\\\"Error: function timed out, ensure the promise resolves within 40000 milliseconds\\\\\",\\\\\"message\\\\\":\\\\\"function timed out, ensure the promise resolves within 40000 milliseconds\\\\\"}\"},\"timestamp\":\"2020-10-08T16:15:40.649Z\",\"details\":{\"name\":\"When he enters search details\"}}}\n            {\"type\":\"SceneFinishes\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"outcome\":{\"code\":2,\"error\":\"{\\\\\"name\\\\\":\\\\\"Error\\\\\",\\\\\"stack\\\\\":\\\\\"Error: function timed out, ensure the promise resolves within 40000 milliseconds\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"function timed out, ensure the promise resolves within 40000 milliseconds\\\\\"}\"},\"timestamp\":\"2020-10-08T16:15:40.650Z\",\"details\":{\"category\":\"Search\",\"location\":{\"column\":3,\"line\":15,\"path\":\"features/search.feature\"},\"name\":\"Advanced search\"}}}\n            {\"type\":\"SceneFinished\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"outcome\":{\"code\":2,\"error\":\"{\\\\\"name\\\\\":\\\\\"Error\\\\\",\\\\\"stack\\\\\":\\\\\"Error: function timed out, ensure the promise resolves within 40000 milliseconds\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"function timed out, ensure the promise resolves within 40000 milliseconds\\\\\"}\"},\"timestamp\":\"2020-10-08T16:15:40.661Z\",\"details\":{\"category\":\"Search\",\"location\":{\"column\":3,\"line\":15,\"path\":\"features/search.feature\"},\"name\":\"Advanced search\"}}}\n            {\"type\":\"SceneStarts\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"timestamp\":\"2020-10-08T16:15:40.663Z\",\"details\":{\"category\":\"Tag management\",\"location\":{\"column\":3,\"line\":5,\"path\":\"features/tags.feature\"},\"name\":\"Create new tag\"}}}\n                {\"type\":\"TaskStarts\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"activityId\":\"ckg10vm9k00bbcuun7p1h7cce\",\"timestamp\":\"2020-10-08T16:15:40.664Z\",\"details\":{\"name\":\"Given Adam is logged in\"}}}\n                    {\"type\":\"InteractionStarts\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"activityId\":\"ckg10vm9l00bdcuun74ye4qww\",\"timestamp\":\"2020-10-08T16:15:40.665Z\",\"details\":{\"name\":\"Adam navigates to '/'\"}}}\n                                {\"type\":\"InteractionFinished\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10vfaq00b4cuun76se5lvf\",\"outcome\":{\"code\":4,\"error\":\"{\\\\\"name\\\\\":\\\\\"AssertionError\\\\\",\\\\\"stack\\\\\":\\\\\"AssertionError: Waited 5s for the first option to become clickable\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"Waited 5s for the first option to become clickable\\\\\",\\\\\"expected\\\\\":null,\\\\\"actual\\\\\":null}\"},\"timestamp\":\"2020-10-08T16:15:41.906Z\",\"details\":{\"name\":\"Bob waits up to 5s until the first option does become clickable\"}}}\n                            {\"type\":\"TaskFinished\",\"event\":{\"sceneId\":\"ckg2xi0mf0000xf5zb41kc67m\",\"activityId\":\"ckg10vfaq00b3cuun69j179uv\",\"outcome\":{\"code\":4,\"error\":\"{\\\\\"name\\\\\":\\\\\"AssertionError\\\\\",\\\\\"stack\\\\\":\\\\\"AssertionError: Waited 5s for the first option to become clickable\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"Waited 5s for the first option to become clickable\\\\\",\\\\\"expected\\\\\":null,\\\\\"actual\\\\\":null}\"},\"timestamp\":\"2020-10-08T16:15:41.907Z\",\"details\":{\"name\":\"Bob chooses first option\"}}}\n                    {\"type\":\"InteractionFinished\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"activityId\":\"ckg10vm9l00bdcuun74ye4qww\",\"outcome\":{\"code\":64},\"timestamp\":\"2020-10-08T16:15:41.908Z\",\"details\":{\"name\":\"Adam navigates to '/'\"}}}\n                {\"type\":\"TaskFinished\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"activityId\":\"ckg10vm9k00bbcuun7p1h7cce\",\"outcome\":{\"code\":64},\"timestamp\":\"2020-10-08T16:15:42.682Z\",\"details\":{\"name\":\"Given Adam is logged in\"}}}\n            {\"type\":\"SceneFinishes\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"outcome\":{\"code\":2,\"error\":\"{\\\\\"name\\\\\":\\\\\"Error\\\\\",\\\\\"stack\\\\\":\\\\\"Error: function timed out, ensure the promise resolves within 10000 milliseconds\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"function timed out, ensure the promise resolves within 10000 milliseconds\\\\\"}\"},\"timestamp\":\"2020-10-08T16:15:52.689Z\",\"details\":{\"category\":\"Tag management\",\"location\":{\"column\":3,\"line\":5,\"path\":\"features/tags.feature\"},\"name\":\"Create new tag\"}}}\n            {\"type\":\"SceneFinished\",\"event\":{\"sceneId\":\"ckg9wf6xr000001qd8igkb90j\",\"outcome\":{\"code\":2,\"error\":\"{\\\\\"name\\\\\":\\\\\"Error\\\\\",\\\\\"stack\\\\\":\\\\\"Error: function timed out, ensure the promise resolves within 10000 milliseconds\\\\\\\\n\\\\\",\\\\\"message\\\\\":\\\\\"function timed out, ensure the promise resolves within 10000 milliseconds\\\\\"}\"},\"timestamp\":\"2020-10-08T16:15:52.701Z\",\"details\":{\"category\":\"Tag management\",\"location\":{\"column\":3,\"line\":5,\"path\":\"features/tags.feature\"},\"name\":\"Create new tag\"}}}\n            {\"type\":\"TestRunFinishes\",\"event\":\"2020-10-08T16:16:15.302Z\"}\n            {\"type\":\"TestRunFinished\",\"event\":\"2020-10-08T16:16:15.313Z\"}\n        `).then(() => {\n\n            PickEvent.from(recorder.events)\n                .next(ArtifactGenerated, ({ artifact }) => {\n                    const report = artifact.map(_ => _);\n\n                    expect(report).to.deep.equal(firstExpectedReport)\n                })\n                .next(ArtifactGenerated, ({ artifact }) => {\n                    const report = artifact.map(_ => _);\n\n                    expect(report).to.deep.equal(secondExpectedReport)\n                });\n\n        }));\n\n    const firstExpectedReport = {\n        'name': 'Advanced search',\n        'title': 'Advanced search',\n        'manual': false,\n        'testFailureClassname': 'Error',\n        'testFailureMessage': 'function timed out, ensure the promise resolves within 40000 milliseconds',\n        'testFailureSummary': 'ERROR;Error;function timed out, ensure the promise resolves within 40000 milliseconds;',\n        'testSteps': [\n            {\n                'number': 1,\n                'description': 'When he enters search details',\n                'startTime': 1602173700645,\n                'children': [\n                    {\n                        'number': 2,\n                        'description': 'Bob chooses first option',\n                        'startTime': 1602173731634,\n                        'children': [\n                            {\n                                'number': 3,\n                                'description': 'Bob waits up to 5s until the first option does become clickable',\n                                'startTime': 1602173731634,\n                                'children': [],\n                                'reportData': [],\n                                'screenshots': [],\n                                'result': 'FAILURE',\n                                'duration': 10272,\n                                'exception': {\n                                    'errorType': 'AssertionError',\n                                    'message': 'Waited 5s for the first option to become clickable',\n                                    'stackTrace': [\n                                        {\n                                            'declaringClass': '',\n                                            'methodName': 'undefined()',\n                                            'fileName': 'AssertionError: Waited 5s for the first option to become clickable'\n                                        }\n                                    ]\n                                }\n                            }\n                        ],\n                        'reportData': [],\n                        'screenshots': [],\n                        'result': 'FAILURE',\n                        'duration': 10273\n                    }\n                ],\n                'reportData': [],\n                'screenshots': [],\n                'result': 'ERROR',\n                'duration': 40004\n            }\n        ],\n        'userStory': {\n            'id': 'search',\n            'storyName': 'Search',\n            'path': 'features/search.feature',\n            'type': 'feature'\n        },\n        'startTime': 1602173699637,\n        'duration': 41024,\n        'result': 'ERROR',\n        'testFailureCause': {\n            'errorType': 'Error',\n            'message': 'function timed out, ensure the promise resolves within 40000 milliseconds',\n            'stackTrace': [\n                {\n                    'declaringClass': '',\n                    'methodName': 'undefined()',\n                    'fileName': 'Error: function timed out, ensure the promise resolves within 40000 milliseconds'\n                }\n            ]\n        },\n        'id': 'search;advanced-search'\n    };\n\n    const secondExpectedReport = {\n        'name': 'Create new tag',\n        'title': 'Create new tag',\n        'manual': false,\n        'testFailureClassname': 'Error',\n        'testFailureMessage': 'function timed out, ensure the promise resolves within 10000 milliseconds',\n        'testFailureSummary': 'ERROR;Error;function timed out, ensure the promise resolves within 10000 milliseconds;',\n        'testSteps': [\n            {\n                'number': 1,\n                'description': 'Given Adam is logged in',\n                'startTime': 1602173740664,\n                'children': [\n                    {\n                        'number': 2,\n                        'description': \"Adam navigates to '/'\",\n                        'startTime': 1602173740665,\n                        'children': [],\n                        'reportData': [],\n                        'screenshots': [],\n                        'result': 'SUCCESS',\n                        'duration': 1243\n                    }\n                ],\n                'reportData': [],\n                'screenshots': [],\n                'result': 'SUCCESS',\n                'duration': 2018\n            }\n        ],\n        'userStory': {\n            'id': 'tag-management',\n            'storyName': 'Tag management',\n            'path': 'features/tags.feature',\n            'type': 'feature'\n        },\n        'startTime': 1602173740663,\n        'duration': 12038,\n        'result': 'ERROR',\n        'testFailureCause': {\n            'errorType': 'Error',\n            'message': 'function timed out, ensure the promise resolves within 10000 milliseconds',\n            'stackTrace': [\n                {\n                    'declaringClass': '',\n                    'methodName': 'undefined()',\n                    'fileName': 'Error: function timed out, ensure the promise resolves within 10000 milliseconds'\n                }\n            ]\n        },\n        'id': 'tag-management;create-new-tag'\n    };\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/dealing_with_out_of_order_events.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 420,
    "kind": "test",
    "name": "describe15",
    "testId": 15,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/dealing_with_out_of_order_events.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/dealing_with_out_of_order_events.spec.ts~describe15",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 12,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 421,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/dealing_with_out_of_order_events.spec.ts~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/dealing_with_out_of_order_events.spec.ts~describe15.it16",
    "access": null,
    "lineNumber": 31
  },
  {
    "__docId__": 422,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/dealing_with_out_of_order_events.spec.ts~describe15",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/dealing_with_out_of_order_events.spec.ts~describe15.it17",
    "access": null,
    "lineNumber": 67
  },
  {
    "__docId__": 423,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts",
    "content": "/* eslint-disable unicorn/filename-case, @typescript-eslint/indent */\nimport 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { StageManager } from '@serenity-js/core';\nimport { FeatureNarrativeDetected, SceneBackgroundDetected, SceneDescriptionDetected, SceneFinished, SceneStarts, TestRunFinishes } from '@serenity-js/core/lib/events';\nimport { CorrelationId, Description, ExecutionSuccessful, Name } from '@serenity-js/core/lib/model';\nimport * as sinon from 'sinon';\n\nimport { SerenityBDDReporter } from '../../../../../src';\nimport { SerenityBDDReport } from '../../../../../src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema';\nimport { given } from '../../given';\nimport { defaultCardScenario } from '../../samples';\nimport { create } from '../create';\n\ndescribe('SerenityBDDReporter', () => {\n\n    let stageManager: sinon.SinonStubbedInstance<StageManager>,\n        reporter: SerenityBDDReporter;\n\n    const sceneId = new CorrelationId('a-scene-id');\n\n    beforeEach(() => {\n        const env = create();\n\n        stageManager    = env.stageManager;\n        reporter        = env.reporter;\n    });\n\n    /**\n     * @test {SerenityBDDReporter}\n     * @test {SceneStarts}\n     * @test {SceneBackgroundDetected}\n     * @test {SceneFinished}\n     * @test {ExecutionSuccessful}\n     * @test {TestRunFinishes}\n     */\n    it('captures information about scenario background', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneStarts(sceneId, defaultCardScenario),\n                new SceneBackgroundDetected(sceneId, new Name('Background title'), new Description('Background description')),\n            new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.backgroundTitle).to.equal('Background title');\n        expect(report.backgroundDescription).to.equal('Background description');\n    });\n\n    /**\n     * @test {SerenityBDDReporter}\n     * @test {SceneStarts}\n     * @test {SceneDescriptionDetected}\n     * @test {SceneFinished}\n     * @test {ExecutionSuccessful}\n     * @test {TestRunFinishes}\n     */\n    it('captures the description of the scenario', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneStarts(sceneId, defaultCardScenario),\n            new SceneDescriptionDetected(sceneId, new Description('Scenario description')),\n            new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.description).to.equal('Scenario description');\n    });\n\n    /**\n     * @test {SerenityBDDReporter}\n     * @test {SceneStarts}\n     * @test {FeatureNarrativeDetected}\n     * @test {SceneFinished}\n     * @test {ExecutionSuccessful}\n     * @test {TestRunFinishes}\n     */\n    it('captures the narrative behind the scenario', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneStarts(sceneId, defaultCardScenario),\n            new FeatureNarrativeDetected(sceneId, new Description('Feature narrative')),\n            new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.userStory.narrative).to.equal('Feature narrative');\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 424,
    "kind": "test",
    "name": "describe18",
    "testId": 18,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe18",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 16
  },
  {
    "__docId__": 425,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe18",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe18.it19",
    "access": null,
    "description": "captures information about scenario background",
    "lineNumber": 38,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneBackgroundDetected",
      "SceneFinished",
      "ExecutionSuccessful",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 426,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe18",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe18.it20",
    "access": null,
    "description": "captures the description of the scenario",
    "lineNumber": 60,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneDescriptionDetected",
      "SceneFinished",
      "ExecutionSuccessful",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 427,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe18",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/describing_scene.spec.ts~describe18.it21",
    "access": null,
    "description": "captures the narrative behind the scenario",
    "lineNumber": 81,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "FeatureNarrativeDetected",
      "SceneFinished",
      "ExecutionSuccessful",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 428,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts",
    "content": "/* eslint-disable unicorn/filename-case, @typescript-eslint/indent */\nimport 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { StageManager } from '@serenity-js/core';\nimport {\n    ActivityRelatedArtifactArchived,\n    ActivityRelatedArtifactGenerated,\n    SceneFinished,\n    SceneStarts,\n    TaskFinished,\n    TaskStarts,\n    TestRunFinishes,\n} from '@serenity-js/core/lib/events';\nimport { Path } from '@serenity-js/core/lib/io';\nimport { ActivityDetails, CorrelationId, ExecutionSuccessful, JSONData, Name, Photo, TextData, Timestamp } from '@serenity-js/core/lib/model';\nimport * as sinon from 'sinon';\n\nimport { SerenityBDDReporter } from '../../../../../src/stage';\nimport { SerenityBDDReport } from '../../../../../src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema';\nimport { given } from '../../given';\nimport { defaultCardScenario, photo } from '../../samples';\nimport { create } from '../create';\n\ndescribe('SerenityBDDReporter', () => {\n\n    let stageManager: sinon.SinonStubbedInstance<StageManager>,\n        reporter: SerenityBDDReporter;\n\n    const\n        sceneId = new CorrelationId('a-scene-id'),\n        activityIds = [ new CorrelationId('activity-0'), new CorrelationId('activity-1') ];\n\n    beforeEach(() => {\n        const env = create();\n\n        stageManager    = env.stageManager;\n        reporter        = env.reporter;\n    });\n\n    describe('when reporting activities that took place during scenario execution', () => {\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('reports the outcome of a single activity', () => {\n            const pickACard = new ActivityDetails(new Name('Pick the default credit card'));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(sceneId, defaultCardScenario),\n                    new TaskStarts(sceneId, activityIds[0], pickACard),\n                    new TaskFinished(sceneId, activityIds[0], pickACard, new ExecutionSuccessful()),\n                new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(1);\n            expect(report.testSteps[0].description).to.equal(pickACard.name.value);\n            expect(report.testSteps[0].result).to.equal('SUCCESS');\n        });\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('reports the outcome of a sequence of several activities', () => {\n            const pickACard   = new ActivityDetails(new Name('Pick the default credit card'));\n            const makePayment = new ActivityDetails(new Name('Make the payment'));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(sceneId, defaultCardScenario),\n                    new TaskStarts(sceneId, activityIds[0], pickACard),\n                    new TaskFinished(sceneId, activityIds[0], pickACard, new ExecutionSuccessful()),\n                    new TaskStarts(sceneId, activityIds[1], makePayment),\n                    new TaskFinished(sceneId, activityIds[1], makePayment, new ExecutionSuccessful()),\n                new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(2);\n            expect(report.testSteps[0].description).to.equal(pickACard.name.value);\n            expect(report.testSteps[0].result).to.equal('SUCCESS');\n            expect(report.testSteps[1].description).to.equal(makePayment.name.value);\n            expect(report.testSteps[1].result).to.equal('SUCCESS');\n        });\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('reports the outcome of nested activities', () => {\n            const pickACard = new ActivityDetails(new Name('Pick the default credit card'));\n            const viewListOfCards = new ActivityDetails(new Name('View the list of available cards'));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(sceneId, defaultCardScenario),\n                    new TaskStarts(sceneId, activityIds[0], pickACard),\n                        new TaskStarts(sceneId, activityIds[1], viewListOfCards),\n                        new TaskFinished(sceneId, activityIds[1], viewListOfCards, new ExecutionSuccessful()),\n                    new TaskFinished(sceneId, activityIds[0], pickACard, new ExecutionSuccessful()),\n                new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(1);\n            expect(report.testSteps[0].children).to.have.lengthOf(1);\n            expect(report.testSteps[0].children[0].description).to.equal(viewListOfCards.name.value);\n            expect(report.testSteps[0].children[0].result).to.equal('SUCCESS');\n        });\n    });\n\n    describe('order of events', () => {\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {ArtifactGenerated}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('records the events in a correct order', () => {\n            const pickACard = new ActivityDetails(new Name('Pick the default credit card'));\n\n            const t1 = new Timestamp(new Date(0));\n            const t2 = new Timestamp(new Date(10));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(sceneId, defaultCardScenario),\n                    new TaskStarts(sceneId, activityIds[0], pickACard),\n                        new ActivityRelatedArtifactGenerated(sceneId, activityIds[0], new Name('photo1'), photo),\n                        new ActivityRelatedArtifactArchived(sceneId, activityIds[0], new Name('photo1'), Photo, new Path('target/site/serenity/photo1.png'), t1),\n                    new TaskFinished(sceneId, activityIds[0], pickACard, new ExecutionSuccessful()),\n                        new ActivityRelatedArtifactGenerated(sceneId, activityIds[0], new Name('photo2'), photo),\n                        new ActivityRelatedArtifactArchived(sceneId, activityIds[0], new Name('photo2'), Photo, new Path('target/site/serenity/photo2.png'), t2),\n                new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(1);\n            expect(report.testSteps[0].screenshots).to.deep.equal([\n                { screenshot: 'photo1.png', timeStamp: t1.toMillisecondTimestamp() },\n                { screenshot: 'photo2.png', timeStamp: t2.toMillisecondTimestamp() },\n            ]);\n        });\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('records the order of test steps so that the Serenity BDD reporter can display the reportData in the correct context', () => {\n            const\n                pickACard   = new ActivityDetails(new Name('Pick a credit card')),\n                makePayment = new ActivityDetails(new Name('Make a payment'));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(sceneId, defaultCardScenario),\n                    new TaskStarts(sceneId, activityIds[0], pickACard),\n                        new ActivityRelatedArtifactGenerated(sceneId, activityIds[0], new Name('pick a card message'), JSONData.fromJSON({ card: 'default' })),\n                        new ActivityRelatedArtifactArchived(sceneId, activityIds[0], new Name('pick a card message'), JSONData, new Path('target/site/serenity/pick-a-card-message-md5hash.json')),\n                    new TaskFinished(sceneId, activityIds[0], pickACard, new ExecutionSuccessful()),\n                    new TaskStarts(sceneId, activityIds[1], makePayment),\n                        new ActivityRelatedArtifactGenerated(sceneId, activityIds[1], new Name('make a payment message'), JSONData.fromJSON({ amount: '£42' })),\n                        new ActivityRelatedArtifactArchived(sceneId, activityIds[1], new Name('make a payment message'), JSONData, new Path('target/site/serenity/make-a-payment-message-md5hash.json')),\n                        new ActivityRelatedArtifactGenerated(sceneId, activityIds[1], new Name('server log'), TextData.fromJSON({ contentType: 'text/plain', data: 'received payment request' })),\n                    new TaskFinished(sceneId, activityIds[1], makePayment, new ExecutionSuccessful()),\n                new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(2);\n            expect(report.testSteps[0].number).to.equal(1);\n            expect(report.testSteps[0].reportData[0].title).to.equal('pick a card message');\n            expect(report.testSteps[0].reportData[0].contents).to.equal('{\\n    \"card\": \"default\"\\n}');\n\n            expect(report.testSteps[1].number).to.equal(2);\n\n            expect(report.testSteps[1].reportData[0].title).to.equal('make a payment message');\n            expect(report.testSteps[1].reportData[0].contents).to.deep.equal('{\\n    \"amount\": \"£42\"\\n}');\n\n            expect(report.testSteps[1].reportData[1].title).to.equal('server log');\n            expect(report.testSteps[1].reportData[1].contents).to.deep.equal('received payment request');\n        });\n    });\n\n    describe('artifacts', () => {\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {TaskStarts}\n         * @test {ArtifactGenerated}\n         * @test {TaskFinished}\n         * @test {ExecutionSuccessful}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         */\n        it('records the arbitrary JSON data emitted during the interaction', () => {\n            const pickACard = new ActivityDetails(new Name('Pick the default credit card'));\n\n            const t1 = new Timestamp(new Date(0));\n            const t2 = new Timestamp(new Date(10));\n\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(sceneId, defaultCardScenario),\n                    new TaskStarts(sceneId, activityIds[0], pickACard),\n                        new ActivityRelatedArtifactGenerated(sceneId, activityIds[0], new Name('photo1'), photo),\n                        new ActivityRelatedArtifactArchived(sceneId, activityIds[0], new Name('photo1'), Photo, new Path('target/site/serenity/photo1.png'), t1),\n                    new TaskFinished(sceneId, activityIds[0], pickACard, new ExecutionSuccessful()),\n                        new ActivityRelatedArtifactGenerated(sceneId, activityIds[0], new Name('photo2'), photo),\n                        new ActivityRelatedArtifactArchived(sceneId, activityIds[0], new Name('photo2'), Photo, new Path('target/site/serenity/photo2.png'), t2),\n                new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n            expect(report.testSteps).to.have.lengthOf(1);\n            expect(report.testSteps[0].screenshots).to.deep.equal([\n                { screenshot: 'photo1.png', timeStamp: t1.toMillisecondTimestamp() },\n                { screenshot: 'photo2.png', timeStamp: t2.toMillisecondTimestamp() },\n            ]);\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 429,
    "kind": "test",
    "name": "describe22",
    "testId": 22,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 25
  },
  {
    "__docId__": 430,
    "kind": "test",
    "name": "describe23",
    "testId": 23,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe23",
    "access": null,
    "description": "when reporting activities that took place during scenario execution",
    "lineNumber": 41
  },
  {
    "__docId__": 431,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe23.it24",
    "access": null,
    "description": "reports the outcome of a single activity",
    "lineNumber": 52,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 432,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe23.it25",
    "access": null,
    "description": "reports the outcome of a sequence of several activities",
    "lineNumber": 79,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 433,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe23.it26",
    "access": null,
    "description": "reports the outcome of nested activities",
    "lineNumber": 111,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 434,
    "kind": "test",
    "name": "describe27",
    "testId": 27,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe27",
    "access": null,
    "description": "order of events",
    "lineNumber": 134
  },
  {
    "__docId__": 435,
    "kind": "test",
    "name": "it28",
    "testId": 28,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe27",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe27.it28",
    "access": null,
    "description": "records the events in a correct order",
    "lineNumber": 146,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "ArtifactGenerated",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 436,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe27",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe27.it29",
    "access": null,
    "description": "records the order of test steps so that the Serenity BDD reporter can display the reportData in the correct context",
    "lineNumber": 182,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 437,
    "kind": "test",
    "name": "describe30",
    "testId": 30,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe30",
    "access": null,
    "description": "artifacts",
    "lineNumber": 219
  },
  {
    "__docId__": 438,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe30",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_activities.spec.ts~describe22.describe30.it31",
    "access": null,
    "description": "records the arbitrary JSON data emitted during the interaction",
    "lineNumber": 231,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "TaskStarts",
      "ArtifactGenerated",
      "TaskFinished",
      "ExecutionSuccessful",
      "SceneFinished",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 439,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_business_rules.spec.ts",
    "content": "/* eslint-disable unicorn/filename-case */\nimport 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { StageManager } from '@serenity-js/core';\nimport {\n    BusinessRuleDetected,\n    SceneFinished,\n    SceneParametersDetected,\n    SceneSequenceDetected,\n    SceneStarts,\n    SceneTemplateDetected,\n    TestRunFinishes,\n} from '@serenity-js/core/lib/events';\nimport { FileSystemLocation, Path } from '@serenity-js/core/lib/io';\nimport { BusinessRule, Category, CorrelationId, Description, ExecutionSuccessful, Name, ScenarioDetails, ScenarioParameters } from '@serenity-js/core/lib/model';\nimport * as sinon from 'sinon';\n\nimport { SerenityBDDReporter } from '../../../../../src';\nimport { SerenityBDDReport } from '../../../../../src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema';\nimport { given } from '../../given';\nimport { create } from '../create';\n\ndescribe('SerenityBDDReporter', () => {\n\n    let stageManager: sinon.SinonStubbedInstance<StageManager>,\n        reporter: SerenityBDDReporter;\n\n    beforeEach(() => {\n        const env = create();\n\n        stageManager    = env.stageManager;\n        reporter        = env.reporter;\n    });\n\n    // see examples/cucumber/features/reporting_results/reports_scenario_outlines.feature for more context\n    const\n        sceneIds = [ new CorrelationId('scene-0'), new CorrelationId('scene-1') ],\n        category = new Category('Reporting results'),\n        name     = new Name('Reports scenario outlines'),\n        path     = new Path(`reporting_results/reports_scenario_outlines.feature`),\n        template = new Description(`\n            When <Developer> makes a contribution of:\n              | value      |\n              | time       |\n              | talent     |\n              | great code |\n            Then they help bring serenity to fellow devs\n        `),\n        sequence = new ScenarioDetails(name, category, new FileSystemLocation(\n            path,\n            7,\n        )),\n        scenarios = [\n            new ScenarioDetails(name, category, new FileSystemLocation(path, 25)),\n            new ScenarioDetails(name, category, new FileSystemLocation(path, 26)),\n        ]\n    ;\n\n    /**\n     * @test {SerenityBDDReporter}\n     * @test {SceneStarts}\n     * @test {SceneBackgroundDetected}\n     * @test {SceneFinished}\n     * @test {ExecutionSuccessful}\n     * @test {TestRunFinishes}\n     */\n    it('captures information about the business rule for single-scene scenarios', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneStarts(sceneIds[0], scenarios[0]),\n            new BusinessRuleDetected(sceneIds[0], scenarios[0], new BusinessRule(new Name('my rule name'), new Description('my rule description'))),\n            new SceneFinished(sceneIds[0], scenarios[0], new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.rule.name).to.equal('my rule name');\n        expect(report.rule.description).to.equal('my rule description');\n    });\n\n    it('captures information about the business rule for scene sequences', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneSequenceDetected(sceneIds[0], sequence),\n            new SceneTemplateDetected(sceneIds[0], template),\n            new SceneParametersDetected(\n                sceneIds[0],\n                scenarios[0],\n                new ScenarioParameters(\n                    new Name('Serenity/JS contributors'),\n                    new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                    { Developer: 'jan-molak', Twitter_Handle: '@JanMolak' },\n                ),\n            ),\n            new SceneStarts(sceneIds[0], scenarios[0]),\n            new BusinessRuleDetected(sceneIds[0], scenarios[0], new BusinessRule(new Name('my rule name'), new Description('my rule description'))),\n            new SceneFinished(sceneIds[0], scenarios[0], new ExecutionSuccessful()),\n\n            new SceneSequenceDetected(sceneIds[1], sequence),\n            new SceneTemplateDetected(sceneIds[1], template),\n            new SceneParametersDetected(\n                sceneIds[1],\n                scenarios[1],\n                new ScenarioParameters(\n                    new Name('Serenity/JS contributors'),\n                    new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                    { Developer: 'wakaleo', Twitter_Handle: '@wakaleo' },\n                ),\n            ),\n            new SceneStarts(sceneIds[1], scenarios[1]),\n            new BusinessRuleDetected(sceneIds[1], scenarios[1], new BusinessRule(new Name('my rule name'), new Description('my rule description'))),\n            new SceneFinished(sceneIds[1], scenarios[1], new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.rule.name).to.equal('my rule name');\n        expect(report.rule.description).to.equal('my rule description');\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_business_rules.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 440,
    "kind": "test",
    "name": "describe32",
    "testId": 32,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_business_rules.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_business_rules.spec.ts~describe32",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 24
  },
  {
    "__docId__": 441,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_business_rules.spec.ts~describe32",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_business_rules.spec.ts~describe32.it33",
    "access": null,
    "description": "captures information about the business rule for single-scene scenarios",
    "lineNumber": 68,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneBackgroundDetected",
      "SceneFinished",
      "ExecutionSuccessful",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 442,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_business_rules.spec.ts~describe32",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_business_rules.spec.ts~describe32.it34",
    "access": null,
    "description": "captures information about the business rule for scene sequences",
    "lineNumber": 82
  },
  {
    "__docId__": 443,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts",
    "content": "/* eslint-disable unicorn/filename-case, @typescript-eslint/indent */\nimport 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { StageManager } from '@serenity-js/core';\nimport { SceneFinished, SceneParametersDetected, SceneSequenceDetected, SceneStarts, SceneTagged, SceneTemplateDetected, TestRunFinishes } from '@serenity-js/core/lib/events';\nimport { FileSystemLocation, Path } from '@serenity-js/core/lib/io';\nimport {\n    BrowserTag,\n    Category,\n    CorrelationId,\n    Description,\n    ExecutionFailedWithError,\n    ExecutionSuccessful,\n    Name,\n    PlatformTag,\n    ScenarioDetails,\n    ScenarioParameters,\n} from '@serenity-js/core/lib/model';\nimport * as sinon from 'sinon';\n\nimport { SerenityBDDReporter } from '../../../../../src/stage';\nimport { SerenityBDDReport } from '../../../../../src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema';\nimport { given } from '../../given';\nimport { create } from '../create';\n\ndescribe('SerenityBDDReporter', () => {\n\n    let stageManager: sinon.SinonStubbedInstance<StageManager>,\n        reporter: SerenityBDDReporter;\n\n    beforeEach(() => {\n        const env = create();\n\n        stageManager    = env.stageManager;\n        reporter        = env.reporter;\n    });\n\n    // see examples/cucumber/features/reporting_results/reports_scenario_outlines.feature for more context\n    const\n        sceneIds = [ new CorrelationId('scene-0'), new CorrelationId('scene-1') ],\n        category = new Category('Reporting results'),\n        name     = new Name('Reports scenario outlines'),\n        path     = new Path(`reporting_results/reports_scenario_outlines.feature`),\n        template = new Description(`\n            When <Developer> makes a contribution of:\n              | value      |\n              | time       |\n              | talent     |\n              | great code |\n            Then they help bring serenity to fellow devs\n        `),\n        sequence = new ScenarioDetails(name, category, new FileSystemLocation(\n            path,\n            7,\n        )),\n        scenarios = [\n            new ScenarioDetails(name, category, new FileSystemLocation(path, 25)),\n            new ScenarioDetails(name, category, new FileSystemLocation(path, 26)),\n        ]\n    ;\n\n    /**\n     * @test {SerenityBDDReporter}\n     */\n    it('captures information about a sequence of scenes (2 scenes in a sequence)', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneSequenceDetected(sceneIds[0], sequence),\n                new SceneTemplateDetected(sceneIds[0], template),\n                new SceneParametersDetected(\n                    sceneIds[0],\n                    scenarios[0],\n                    new ScenarioParameters(\n                        new Name('Serenity/JS contributors'),\n                        new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                        { Developer: 'jan-molak', Twitter_Handle: '@JanMolak' },\n                    ),\n                ),\n                new SceneStarts(sceneIds[0], scenarios[0]),\n                new SceneFinished(sceneIds[0], scenarios[0], new ExecutionSuccessful()),\n            new SceneSequenceDetected(sceneIds[1], sequence),\n                new SceneTemplateDetected(sceneIds[1], template),\n                new SceneParametersDetected(\n                    sceneIds[1],\n                    scenarios[1],\n                    new ScenarioParameters(\n                        new Name('Serenity/JS contributors'),\n                        new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                        { Developer: 'wakaleo', Twitter_Handle: '@wakaleo' },\n                    ),\n                ),\n                new SceneStarts(sceneIds[1], scenarios[1]),\n                new SceneFinished(sceneIds[1], scenarios[1], new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.name).to.equal(name.value);\n        expect(report.dataTable).to.exist;\n        expect(report.dataTable.scenarioOutline).to.equal(template.value);\n        expect(report.dataTable.headers).to.deep.equal([\n            'Developer',\n            'Twitter_Handle',\n        ]);\n\n        expect(report.dataTable.dataSetDescriptors).to.deep.equal([{\n            startRow: 0,\n            rowCount: 2,\n            name: 'Serenity/JS contributors',\n            description: 'Some of the people who have contributed their time and talent to the Serenity/JS project',\n        }]);\n\n        expect(report.dataTable.rows).to.deep.equal([\n            { values: [ 'jan-molak', '@JanMolak' ], result: 'SUCCESS' },\n            { values: [ 'wakaleo', '@wakaleo' ], result: 'SUCCESS' },\n        ]);\n\n        expect(report.testSteps).to.have.lengthOf(2);\n        expect(report.testSteps[0].description)\n            .to.equal(`${name.value} #1 - Developer: jan-molak, Twitter_Handle: @JanMolak`);\n\n        expect(report.testSteps[1].description)\n            .to.equal(`${name.value} #2 - Developer: wakaleo, Twitter_Handle: @wakaleo`);\n    });\n\n    /**\n     * @test {SerenityBDDReporter}\n     */\n    it('determines the result of the sequence based on the worst result of the contributing scenarios', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneSequenceDetected(sceneIds[0], sequence),\n                new SceneTemplateDetected(sceneIds[0], template),\n                new SceneParametersDetected(\n                    sceneIds[0],\n                    scenarios[0],\n                    new ScenarioParameters(\n                        new Name('Serenity/JS contributors'),\n                        new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                        { Developer: 'jan-molak', Twitter_Handle: '@JanMolak' },\n                    ),\n                ),\n                new SceneStarts(sceneIds[0], scenarios[0]),\n                new SceneFinished(sceneIds[0], scenarios[0], new ExecutionFailedWithError(new Error('Something happened'))),\n\n            new SceneSequenceDetected(sceneIds[1], sequence),\n                new SceneTemplateDetected(sceneIds[1], template),\n                new SceneParametersDetected(\n                    sceneIds[1],\n                    scenarios[1],\n                    new ScenarioParameters(\n                        new Name('Serenity/JS contributors'),\n                        new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                        { Developer: 'wakaleo', Twitter_Handle: '@wakaleo' },\n                    ),\n                ),\n                new SceneStarts(sceneIds[1], scenarios[1]),\n                new SceneFinished(sceneIds[1], scenarios[1], new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.dataTable.rows).to.deep.equal([\n            { values: [ 'jan-molak', '@JanMolak' ], result: 'ERROR' },\n            { values: [ 'wakaleo', '@wakaleo' ], result: 'SUCCESS' },\n        ]);\n\n        expect(report.testSteps).to.have.lengthOf(2);\n        expect(report.testSteps[0].description)\n            .to.equal(`${name.value} #1 - Developer: jan-molak, Twitter_Handle: @JanMolak`);\n        // todo: check for error somewhere here\n        // todo: map well map the main report\n\n        expect(report.testSteps[1].description)\n            .to.equal(`${name.value} #2 - Developer: wakaleo, Twitter_Handle: @wakaleo`);\n    });\n\n    /**\n     * @test {SerenityBDDReporter}\n     */\n    it('ensures that context and tags are not duplicated despite having multiple scenarios in a sequence', () => {\n        given(reporter).isNotifiedOfFollowingEvents(\n            new SceneSequenceDetected(sceneIds[0], sequence),\n            new SceneTemplateDetected(sceneIds[0], template),\n            new SceneParametersDetected(\n                sceneIds[0],\n                scenarios[0],\n                new ScenarioParameters(\n                    new Name('Serenity/JS contributors'),\n                    new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                    { Developer: 'jan-molak', Twitter_Handle: '@JanMolak' },\n                ),\n            ),\n            new SceneStarts(sceneIds[0], scenarios[0]),\n                new SceneTagged(\n                    sceneIds[0],\n                    new BrowserTag('chrome', '83.0.4103.106'),\n                ),\n                new SceneTagged(\n                    sceneIds[0],\n                    new PlatformTag('Mac OS X'),\n                ),\n            new SceneFinished(sceneIds[0], scenarios[0], new ExecutionFailedWithError(new Error('Something happened'))),\n\n            new SceneSequenceDetected(sceneIds[1], sequence),\n            new SceneTemplateDetected(sceneIds[1], template),\n            new SceneParametersDetected(\n                sceneIds[1],\n                scenarios[1],\n                new ScenarioParameters(\n                    new Name('Serenity/JS contributors'),\n                    new Description(`Some of the people who have contributed their time and talent to the Serenity/JS project`),\n                    { Developer: 'wakaleo', Twitter_Handle: '@wakaleo' },\n                ),\n            ),\n            new SceneStarts(sceneIds[1], scenarios[1]),\n                new SceneTagged(\n                    sceneIds[1],\n                    new BrowserTag('chrome', '83.0.4103.106'),\n                ),\n                new SceneTagged(\n                    sceneIds[1],\n                    new PlatformTag('Mac OS X'),\n                ),\n            new SceneFinished(sceneIds[1], scenarios[1], new ExecutionSuccessful()),\n            new TestRunFinishes(),\n        );\n\n        const report: SerenityBDDReport = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n        expect(report.id).to.equal('reporting-results;reports-scenario-outlines;chrome-83-0-4103-106;mac-os-x');\n\n        expect(report.context).to.equal('chrome,mac');\n\n        expect(report.tags).to.deep.equal([{\n            browserName: 'chrome',\n            browserVersion: '83.0.4103.106',\n            displayName: 'chrome 83.0.4103.106',\n            name: 'chrome 83.0.4103.106',\n            type: 'browser',\n        }, {\n            displayName: 'Mac OS X',\n            name: 'Mac OS X',\n            platformName: 'Mac OS X',\n            platformVersion: '',\n            type: 'platform',\n        }]);\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 444,
    "kind": "test",
    "name": "describe35",
    "testId": 35,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe35",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 27
  },
  {
    "__docId__": 445,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe35.it36",
    "access": null,
    "description": "captures information about a sequence of scenes (2 scenes in a sequence)",
    "lineNumber": 66,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 446,
    "kind": "test",
    "name": "it37",
    "testId": 37,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe35.it37",
    "access": null,
    "description": "determines the result of the sequence based on the worst result of the contributing scenarios",
    "lineNumber": 130,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 447,
    "kind": "test",
    "name": "it38",
    "testId": 38,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe35",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/reporting_scene_sequences.spec.ts~describe35.it38",
    "access": null,
    "description": "ensures that context and tags are not duplicated despite having multiple scenarios in a sequence",
    "lineNumber": 182,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 448,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts",
    "content": "/*eslint-disable unicorn/filename-case */\n\nimport 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { StageManager } from '@serenity-js/core';\nimport { SceneFinished, SceneStarts, SceneTagged, TestRunFinishes } from '@serenity-js/core/lib/events';\nimport { ArbitraryTag, BrowserTag, CapabilityTag, ContextTag, CorrelationId, ExecutionSuccessful, FeatureTag, IssueTag, ManualTag, ThemeTag } from '@serenity-js/core/lib/model';\nimport * as sinon from 'sinon';\n\nimport { SerenityBDDReporter } from '../../../../../src/stage';\nimport { SerenityBDDReport } from '../../../../../src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema';\nimport { given } from '../../given';\nimport { defaultCardScenario } from '../../samples';\nimport { create } from '../create';\n\ndescribe('SerenityBDDReporter', () => {\n\n    let stageManager: sinon.SinonStubbedInstance<StageManager>,\n        reporter: SerenityBDDReporter;\n\n    const sceneId = new CorrelationId('a-scene-id');\n\n    beforeEach(() => {\n        const env = create();\n\n        stageManager    = env.stageManager;\n        reporter        = env.reporter;\n    });\n\n    describe('produces a SerenityBDDReport that', () => {\n\n        let report: SerenityBDDReport;\n\n        describe('can be tagged', () => {\n\n            beforeEach(() => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneStarts(sceneId, defaultCardScenario),\n                );\n            });\n\n            describe('@manual', () => {\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 */\n                it('is marked as automated (non-manual) by default', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.manual).to.equal(false);\n                });\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {ManualTag}\n                 */\n                it('can be optionally tagged as manual', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(sceneId, new ManualTag()),\n                        new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.manual).to.equal(true);\n                    expect(report.tags).to.deep.include.members([{\n                        name: 'Manual',\n                        displayName: 'Manual',\n                        type: 'External Tests',\n                    }]);\n                });\n            });\n\n            describe('@issue', () => {\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {IssueTag}\n                 */\n                it('can be tagged with an issue number', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(sceneId, new IssueTag('ABC-1234')),\n                        new SceneTagged(sceneId, new IssueTag('DEF-5678')),\n                        new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.tags).to.deep.include.members([{\n                        name:        'ABC-1234',\n                        displayName: 'ABC-1234',\n                        type:        'issue',\n                    }, {\n                        name:        'DEF-5678',\n                        displayName: 'DEF-5678',\n                        type:        'issue',\n                    }]);\n\n                    expect(report.issues).to.deep.equal([\n                        'ABC-1234',\n                        'DEF-5678',\n                    ]);\n\n                    expect(report.additionalIssues).to.deep.equal([\n                        'ABC-1234',\n                        'DEF-5678',\n                    ]);\n                });\n            });\n\n            describe('@arbitrary-tag', () => {\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {ArbitraryTag}\n                 */\n                it('can be tagged with an arbitrary tag', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(sceneId, new ArbitraryTag('regression')),\n                        new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.tags).to.deep.include.members([{\n                        name:        'regression',\n                        displayName: 'regression',\n                        type:        'tag',\n                    }]);\n                });\n            });\n\n            describe('to indicate that a scenario', () => {\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {FeatureTag}\n                 */\n                it('belongs to a feature', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(sceneId, new FeatureTag('Checkout')),\n                        new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.tags).to.deep.include.members([{\n                        name: 'Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    }]);\n\n                    expect(report.featureTag).to.deep.equal({\n                        name: 'Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    });\n                });\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {FeatureTag}\n                 * @test {CapabilityTag}\n                 */\n                it('belongs to a capability', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(sceneId, new CapabilityTag('E-Commerce')),\n                        new SceneTagged(sceneId, new FeatureTag('Checkout')),\n                        new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.tags).to.deep.include.members([{\n                        name: 'E-Commerce',\n                        type: 'capability',\n                        displayName: 'E-Commerce',\n                    }, {\n                        name: 'E-Commerce/Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    }]);\n\n                    expect(report.featureTag).to.deep.equal({\n                        name: 'E-Commerce/Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    });\n                });\n\n                /**\n                 * @test {SerenityBDDReporter}\n                 * @test {SceneStarts}\n                 * @test {SceneFinished}\n                 * @test {SceneTagged}\n                 * @test {TestRunFinishes}\n                 * @test {ExecutionSuccessful}\n                 * @test {FeatureTag}\n                 * @test {CapabilityTag}\n                 * @test {ThemeTag}\n                 */\n                it('belongs to a theme', () => {\n                    given(reporter).isNotifiedOfFollowingEvents(\n                        new SceneTagged(sceneId, new ThemeTag('Digital')),\n                        new SceneTagged(sceneId, new CapabilityTag('E-Commerce')),\n                        new SceneTagged(sceneId, new FeatureTag('Checkout')),\n                        new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                        new TestRunFinishes(),\n                    );\n\n                    report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                    expect(report.tags).to.deep.include.members([{\n                        name: 'Digital',\n                        type: 'theme',\n                        displayName: 'Digital',\n                    }, {\n                        name: 'Digital/E-Commerce',\n                        type: 'capability',\n                        displayName: 'E-Commerce',\n                    }, {\n                        name: 'E-Commerce/Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    }]);\n\n                    expect(report.featureTag).to.deep.equal({\n                        name: 'E-Commerce/Checkout',\n                        type: 'feature',\n                        displayName: 'Checkout',\n                    });\n                });\n\n                describe('is executed in the context and', () => {\n\n                    /**\n                     * @test {SerenityBDDReporter}\n                     * @test {SceneStarts}\n                     * @test {SceneFinished}\n                     * @test {SceneTagged}\n                     * @test {TestRunFinishes}\n                     * @test {ExecutionSuccessful}\n                     * @test {BrowserTag}\n                     */\n                    it('indicates the web browser where the test was executed', () => {\n                        given(reporter).isNotifiedOfFollowingEvents(\n                            new SceneTagged(sceneId, new BrowserTag('chrome', '80.0.3987.87')),\n                            new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                            new TestRunFinishes(),\n                        );\n\n                        report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                        expect(report.context).to.equal('chrome');\n\n                        expect(report.tags).to.deep.include.members([{\n                            browserName: 'chrome',\n                            browserVersion: '80.0.3987.87',\n                            name: 'chrome 80.0.3987.87',\n                            displayName: 'chrome 80.0.3987.87',\n                            type: 'browser',\n                        }]);\n                    });\n\n                    /**\n                     * @test {SerenityBDDReporter}\n                     * @test {SceneStarts}\n                     * @test {SceneFinished}\n                     * @test {SceneTagged}\n                     * @test {TestRunFinishes}\n                     * @test {ExecutionSuccessful}\n                     * @test {ContextTag}\n                     */\n                    it('indicates the operating system where the test was executed', () => {\n                        given(reporter).isNotifiedOfFollowingEvents(\n                            new SceneTagged(sceneId, new ContextTag('iphone')),\n                            new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                            new TestRunFinishes(),\n                        );\n\n                        report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                        expect(report.context).to.equal('iphone');\n\n                        expect(report.tags).to.deep.include.members([{\n                            name: 'iphone',\n                            displayName: 'iphone',\n                            type: 'context',\n                        }]);\n                    });\n\n                    /**\n                     * @test {SerenityBDDReporter}\n                     * @test {SceneStarts}\n                     * @test {SceneFinished}\n                     * @test {SceneTagged}\n                     * @test {TestRunFinishes}\n                     * @test {ExecutionSuccessful}\n                     * @test {BrowserTag}\n                     * @test {ContextTag}\n                     */\n                    it('ensures that the user-specified context takes precedence over browser context', () => {\n                        given(reporter).isNotifiedOfFollowingEvents(\n                            new SceneTagged(sceneId, new BrowserTag('safari', '13.0.5')),\n                            new SceneTagged(sceneId, new ContextTag('iphone')),\n                            new SceneFinished(sceneId, defaultCardScenario, new ExecutionSuccessful()),\n                            new TestRunFinishes(),\n                        );\n\n                        report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                        expect(report.context).to.equal('iphone');\n\n                        expect(report.tags).to.deep.include.members([{\n                            name: 'safari 13.0.5',\n                            displayName: 'safari 13.0.5',\n                            type: 'browser',\n                            browserName: 'safari',\n                            browserVersion: '13.0.5',\n                        }, {\n                            name: 'iphone',\n                            displayName: 'iphone',\n                            type: 'context',\n                        }]);\n                    });\n                });\n            });\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 449,
    "kind": "test",
    "name": "describe39",
    "testId": 39,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 17
  },
  {
    "__docId__": 450,
    "kind": "test",
    "name": "describe40",
    "testId": 40,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40",
    "access": null,
    "description": "produces a SerenityBDDReport that",
    "lineNumber": 31
  },
  {
    "__docId__": 451,
    "kind": "test",
    "name": "describe41",
    "testId": 41,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41",
    "access": null,
    "description": "can be tagged",
    "lineNumber": 35
  },
  {
    "__docId__": 452,
    "kind": "test",
    "name": "describe42",
    "testId": 42,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe42",
    "access": null,
    "description": "@manual",
    "lineNumber": 43
  },
  {
    "__docId__": 453,
    "kind": "test",
    "name": "it43",
    "testId": 43,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe42",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe42.it43",
    "access": null,
    "description": "is marked as automated (non-manual) by default",
    "lineNumber": 52,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 454,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe42",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe42.it44",
    "access": null,
    "description": "can be optionally tagged as manual",
    "lineNumber": 72,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "ManualTag"
    ]
  },
  {
    "__docId__": 455,
    "kind": "test",
    "name": "describe45",
    "testId": 45,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe45",
    "access": null,
    "description": "@issue",
    "lineNumber": 90
  },
  {
    "__docId__": 456,
    "kind": "test",
    "name": "it46",
    "testId": 46,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe45",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe45.it46",
    "access": null,
    "description": "can be tagged with an issue number",
    "lineNumber": 101,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "IssueTag"
    ]
  },
  {
    "__docId__": 457,
    "kind": "test",
    "name": "describe47",
    "testId": 47,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe47",
    "access": null,
    "description": "@arbitrary-tag",
    "lineNumber": 133
  },
  {
    "__docId__": 458,
    "kind": "test",
    "name": "it48",
    "testId": 48,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe47",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe47.it48",
    "access": null,
    "description": "can be tagged with an arbitrary tag",
    "lineNumber": 144,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "ArbitraryTag"
    ]
  },
  {
    "__docId__": 459,
    "kind": "test",
    "name": "describe49",
    "testId": 49,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49",
    "access": null,
    "description": "to indicate that a scenario",
    "lineNumber": 161
  },
  {
    "__docId__": 460,
    "kind": "test",
    "name": "it50",
    "testId": 50,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49.it50",
    "access": null,
    "description": "belongs to a feature",
    "lineNumber": 172,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "FeatureTag"
    ]
  },
  {
    "__docId__": 461,
    "kind": "test",
    "name": "it51",
    "testId": 51,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49.it51",
    "access": null,
    "description": "belongs to a capability",
    "lineNumber": 204,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "FeatureTag",
      "CapabilityTag"
    ]
  },
  {
    "__docId__": 462,
    "kind": "test",
    "name": "it52",
    "testId": 52,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49.it52",
    "access": null,
    "description": "belongs to a theme",
    "lineNumber": 242,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "FeatureTag",
      "CapabilityTag",
      "ThemeTag"
    ]
  },
  {
    "__docId__": 463,
    "kind": "test",
    "name": "describe53",
    "testId": 53,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49.describe53",
    "access": null,
    "description": "is executed in the context and",
    "lineNumber": 274
  },
  {
    "__docId__": 464,
    "kind": "test",
    "name": "it54",
    "testId": 54,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49.describe53",
    "testDepth": 5,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49.describe53.it54",
    "access": null,
    "description": "indicates the web browser where the test was executed",
    "lineNumber": 285,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "BrowserTag"
    ]
  },
  {
    "__docId__": 465,
    "kind": "test",
    "name": "it55",
    "testId": 55,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49.describe53",
    "testDepth": 5,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49.describe53.it55",
    "access": null,
    "description": "indicates the operating system where the test was executed",
    "lineNumber": 314,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "ContextTag"
    ]
  },
  {
    "__docId__": 466,
    "kind": "test",
    "name": "it56",
    "testId": 56,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49.describe53",
    "testDepth": 5,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter/tagging_scenarios.spec.ts~describe39.describe40.describe41.describe49.describe53.it56",
    "access": null,
    "description": "ensures that the user-specified context takes precedence over browser context",
    "lineNumber": 342,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "SceneTagged",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "BrowserTag",
      "ContextTag"
    ]
  },
  {
    "__docId__": 467,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts",
    "content": "/* eslint-disable unicorn/filename-case */\nimport 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { AssertionError, ImplementationPendingError, StageManager, TestCompromisedError } from '@serenity-js/core';\nimport { ArtifactGenerated, SceneFinished, SceneStarts, TestRunFinishes, TestRunnerDetected } from '@serenity-js/core/lib/events';\nimport { FileSystemLocation, Path } from '@serenity-js/core/lib/io';\nimport {\n    Category,\n    CorrelationId,\n    Duration,\n    ExecutionCompromised,\n    ExecutionFailedWithAssertionError,\n    ExecutionFailedWithError,\n    ExecutionIgnored,\n    ExecutionSkipped,\n    ExecutionSuccessful,\n    ImplementationPending,\n    JSONData,\n    Name,\n    ScenarioDetails,\n    TestReport,\n    Timestamp,\n} from '@serenity-js/core/lib/model';\nimport * as sinon from 'sinon';\n\nimport { SerenityBDDReporter } from '../../../../src/stage';\nimport { SerenityBDDReport } from '../../../../src/stage/crew/serenity-bdd-reporter/SerenityBDDJsonSchema';\nimport { given } from '../given';\nimport { create } from './create';\n\n/** @test {SerenityBDDReporter} */\ndescribe('SerenityBDDReporter', () => {\n\n    const\n        startTime = Timestamp.fromJSON('2018-05-25T00:00:00.123Z'),\n        scenarioDuration = Duration.ofMilliseconds(142);\n\n    const\n        aSceneId = new CorrelationId('a-scene-id'),\n        anotherSceneId = new CorrelationId('another-scene-id');\n\n    const defaultCardScenario = new ScenarioDetails(\n        new Name('Paying with a default card'),\n        new Category('Online Checkout'),\n        new FileSystemLocation(\n            new Path(`payments/checkout.feature`),\n        ),\n    );\n\n    const voucherScenario = new ScenarioDetails(\n        new Name('Paying with a voucher'),\n        new Category('Online Checkout'),\n        new FileSystemLocation(\n            new Path(`payments/checkout.feature`),\n        ),\n    );\n\n    const jasmineScenario = new ScenarioDetails(\n        new Name('Paying with a default card'),\n        new Category('Online Checkout'),\n        new FileSystemLocation(\n            new Path(`spec/checkout.spec.ts`),\n        ),\n    );\n\n    let stageManager: sinon.SinonStubbedInstance<StageManager>,\n        reporter: SerenityBDDReporter;\n\n    beforeEach(() => {\n        const env = create();\n\n        stageManager    = env.stageManager;\n        reporter        = env.reporter;\n    });\n\n    describe('generates a SerenityBDDReport Artifact that', () => {\n\n        let artifact: JSONData;\n\n        beforeEach(() => {\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(aSceneId, defaultCardScenario),\n                new SceneFinished(aSceneId, defaultCardScenario, new ExecutionSuccessful()),\n                new TestRunFinishes(),\n            );\n\n            expect(stageManager.notifyOf.callCount).to.equal(1);\n\n            artifact = stageManager.notifyOf.firstCall.lastArg.artifact;\n        });\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {SceneFinished}\n         * @test {ExecutionSuccessful}\n         * @test {TestRunFinishes}\n         */\n        it('is a valid artifact', () => {\n            expect(artifact).to.be.instanceOf(TestReport);\n        });\n    });\n\n    describe('emits an ArtifactGenerated event that', () => {\n\n        /**\n         * @test {SerenityBDDReporter}\n         * @test {SceneStarts}\n         * @test {SceneFinished}\n         * @test {TestRunFinishes}\n         * @test {ExecutionSuccessful}\n         * @test {ExecutionSkipped}\n         */\n        it('is separate for each scenario', () => {\n            given(reporter).isNotifiedOfFollowingEvents(\n                new SceneStarts(aSceneId, defaultCardScenario),\n                new SceneFinished(aSceneId, defaultCardScenario, new ExecutionSuccessful()),\n                new SceneStarts(anotherSceneId, voucherScenario),\n                new SceneFinished(anotherSceneId, voucherScenario, new ExecutionSkipped()),\n                new TestRunFinishes(),\n            );\n\n            expect(stageManager.notifyOf.callCount).to.equal(2);\n\n            const\n                event1: ArtifactGenerated = stageManager.notifyOf.firstCall.lastArg,\n                event2: ArtifactGenerated = stageManager.notifyOf.secondCall.lastArg;\n\n            expect(event1.artifact.map(_ => _).name).to.equal(defaultCardScenario.name.value);\n\n            expect(event2.artifact.map(_ => _).name).to.equal(voucherScenario.name.value);\n        });\n    });\n\n    describe('produces a SerenityBDDReport that', () => {\n\n        let report: SerenityBDDReport;\n\n        describe('at the scenario level', () => {\n\n            beforeEach(() => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneStarts(aSceneId, defaultCardScenario, startTime),\n                    new SceneFinished(aSceneId, defaultCardScenario, new ExecutionSuccessful(), startTime.plus(scenarioDuration)),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('contains the id of the scenario', () => {\n                expect(report.id).to.equal('online-checkout;paying-with-a-default-card');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('contains the name of the scenario', () => {\n                expect(report.name).to.equal(defaultCardScenario.name.value);\n                expect(report.title).to.equal(defaultCardScenario.name.value);\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('contains the start time of the scenario', () => {\n                expect(report.startTime).to.equal(startTime.toMillisecondTimestamp());\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('contains the duration of the scenario', () => {\n                expect(report.duration).to.equal(scenarioDuration.inMilliseconds());\n            });\n        });\n\n        describe('describes the result of scenario execution that', () => {\n\n            beforeEach(() => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneStarts(aSceneId, defaultCardScenario),\n                );\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('has finished with success', () => {\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(aSceneId, defaultCardScenario, new ExecutionSuccessful()),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('SUCCESS');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ImplementationPending}\n             */\n            it('hasn\\'t been implemented yet', () => {\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(aSceneId, defaultCardScenario, new ImplementationPending(new ImplementationPendingError('method missing'))),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('PENDING');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionIgnored}\n             */\n            it('has been ignored', () => {\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(aSceneId, defaultCardScenario, new ExecutionIgnored(new Error(`Failed, retrying`))),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('IGNORED');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSkipped}\n             */\n            it('has been skipped', () => {\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(aSceneId, defaultCardScenario, new ExecutionSkipped()),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('SKIPPED');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionFailedWithAssertionError}\n             */\n            it('has failed with an assertion error', () => {\n\n                const assertionError = new AssertionError('expected true to equal false', false, true);\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(aSceneId, defaultCardScenario, new ExecutionFailedWithAssertionError(assertionError)),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('FAILURE');\n                expect(report.testFailureCause.errorType).to.equal('AssertionError');\n                expect(report.testFailureCause.message).to.equal('expected true to equal false');\n                expect(report.testFailureCause.stackTrace).to.be.an('array');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {TestCompromisedError}\n             * @test {ExecutionCompromised}\n             */\n            it('has been compromised', () => {\n\n                // const assertionError = new AssertionError('expected true to equal false', false, true);\n                const assertionError = new TestCompromisedError('expected true to equal false');\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(aSceneId, defaultCardScenario, new ExecutionCompromised(assertionError)),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('COMPROMISED');\n                expect(report.testFailureCause.errorType).to.equal('TestCompromisedError');\n                expect(report.testFailureCause.message).to.equal('expected true to equal false');\n                expect(report.testFailureCause.stackTrace).to.be.an('array');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionFailedWithError}\n             */\n            it('has failed with a non-assertion error', () => {\n                const error = new Error(\"We're sorry, something happened\");\n\n                error.stack = [\n                    \"Error: We're sorry, something happened\",\n                    '    at callFn (/fake/path/node_modules/mocha/lib/runnable.js:326:21)',\n                    '    at Test.Runnable.run (/fake/path/node_modules/mocha/lib/runnable.js:319:7)',\n                    // and so on\n                ].join('\\n');\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(aSceneId, defaultCardScenario, new ExecutionFailedWithError(error)),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('ERROR');\n                expect(report.testFailureCause).to.deep.equal({\n                    errorType: 'Error',\n                    message: `We're sorry, something happened`,\n                    stackTrace: [ {\n                        declaringClass: '',\n                        fileName: '/fake/path/node_modules/mocha/lib/runnable.js',\n                        lineNumber: 326,\n                        methodName: 'callFn()',\n                    }, {\n                        declaringClass: '',\n                        fileName: '/fake/path/node_modules/mocha/lib/runnable.js',\n                        lineNumber: 319,\n                        methodName: 'Test.Runnable.run()',\n                    } ],\n                });\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionCompromised}\n             */\n            it('has been compromised', () => {\n                const databaseError = new Error(`Could not connect to the database`);\n                databaseError.stack = [\n                    'Error: Could not connect to the database',\n                    '    at callFn (/fake/path/node_modules/db-module/index.js:56:78)',\n                    // and so on\n                ].join('\\n');\n\n                const error = new TestCompromisedError(`Test database not deployed, no point running the test`, databaseError);\n                error.stack = [\n                    'TestCompromisedError: Test database not deployed, no point running the test',\n                    '    at callFn (/fake/path/my-test/index.js:12:34)',\n                    // and so on\n                ].join('\\n');\n\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneFinished(aSceneId, defaultCardScenario, new ExecutionCompromised(error)),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.result).to.equal('COMPROMISED');\n                expect(report.testFailureCause).to.deep.equal({\n                    errorType: 'TestCompromisedError',\n                    message: `Test database not deployed, no point running the test`,\n                    stackTrace: [\n                        {\n                            declaringClass: '',\n                            fileName: '/fake/path/my-test/index.js',\n                            lineNumber: 12,\n                            methodName: 'callFn()',\n                        },\n                    ],\n                    rootCause: {\n                        errorType: `Error`,\n                        message: `Could not connect to the database`,\n                        stackTrace: [\n                            {\n                                declaringClass: '',\n                                fileName: '/fake/path/node_modules/db-module/index.js',\n                                lineNumber: 56,\n                                methodName: 'callFn()',\n                            },\n                        ],\n                    },\n                });\n            });\n        });\n\n        describe('indicates its execution context', () => {\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {TestRunnerDetected}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('specifies the test runner', () => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneStarts(aSceneId, defaultCardScenario),\n                    new TestRunnerDetected(aSceneId, new Name('Cucumber')),\n                    new SceneFinished(aSceneId, defaultCardScenario, new ExecutionSuccessful()),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.testSource).to.equal('Cucumber');\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('specifies the user story covered', () => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneStarts(aSceneId, defaultCardScenario),\n                    new SceneFinished(aSceneId, defaultCardScenario, new ExecutionSuccessful()),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.userStory).to.deep.equal({\n                    id: 'online-checkout',\n                    storyName: 'Online Checkout',           // category name, a.k.a. feature name\n                    path: 'payments/checkout.feature',\n                    type: 'feature',\n                });\n            });\n\n            /**\n             * @test {SerenityBDDReporter}\n             * @test {SceneStarts}\n             * @test {SceneFinished}\n             * @test {TestRunFinishes}\n             * @test {ExecutionSuccessful}\n             */\n            it('does not mention the user story path for non-Cucumber scenarios (as it breaks the Serenity BDD HTML report)', () => {\n                given(reporter).isNotifiedOfFollowingEvents(\n                    new SceneStarts(aSceneId, jasmineScenario),\n                    new SceneFinished(aSceneId, jasmineScenario, new ExecutionSuccessful()),\n                    new TestRunFinishes(),\n                );\n\n                report = stageManager.notifyOf.firstCall.lastArg.artifact.map(_ => _);\n\n                expect(report.userStory).to.deep.equal({\n                    id: 'online-checkout',\n                    storyName: 'Online Checkout',           // category name, a.k.a. feature name\n                    path: '',\n                    type: 'feature',\n                });\n            });\n\n            describe('reports information from the cucumber feature file', () => {\n\n                /** @test {SerenityBDDReporter} */\n                it('reports the scenario-level narrative');\n\n                /** @test {SerenityBDDReporter} */\n                it('reports the scenario-level background title');\n\n                /** @test {SerenityBDDReporter} */\n                it('reports the scenario-level background description');\n            });\n        });\n    });\n\n    describe('attachements', () => {\n        it('todo');\n        // todo:\n        // - screenshots\n        // - html source\n        // - http request/responses\n        // - arbitrary text data\n    });\n\n    describe('Error handling', () => {\n\n        // todo: node-cleanup\n        it('generates the report even when the test runner has crashed');\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 468,
    "kind": "test",
    "name": "describe57",
    "testId": 57,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 33,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 469,
    "kind": "test",
    "name": "describe58",
    "testId": 58,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe58",
    "access": null,
    "description": "generates a SerenityBDDReport Artifact that",
    "lineNumber": 77
  },
  {
    "__docId__": 470,
    "kind": "test",
    "name": "it59",
    "testId": 59,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe58",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe58.it59",
    "access": null,
    "description": "is a valid artifact",
    "lineNumber": 100,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "ExecutionSuccessful",
      "TestRunFinishes"
    ]
  },
  {
    "__docId__": 471,
    "kind": "test",
    "name": "describe60",
    "testId": 60,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe60",
    "access": null,
    "description": "emits an ArtifactGenerated event that",
    "lineNumber": 105
  },
  {
    "__docId__": 472,
    "kind": "test",
    "name": "it61",
    "testId": 61,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe60",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe60.it61",
    "access": null,
    "description": "is separate for each scenario",
    "lineNumber": 115,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful",
      "ExecutionSkipped"
    ]
  },
  {
    "__docId__": 473,
    "kind": "test",
    "name": "describe62",
    "testId": 62,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62",
    "access": null,
    "description": "produces a SerenityBDDReport that",
    "lineNumber": 136
  },
  {
    "__docId__": 474,
    "kind": "test",
    "name": "describe63",
    "testId": 63,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe63",
    "access": null,
    "description": "at the scenario level",
    "lineNumber": 140
  },
  {
    "__docId__": 475,
    "kind": "test",
    "name": "it64",
    "testId": 64,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe63",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe63.it64",
    "access": null,
    "description": "contains the id of the scenario",
    "lineNumber": 159,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 476,
    "kind": "test",
    "name": "it65",
    "testId": 65,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe63",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe63.it65",
    "access": null,
    "description": "contains the name of the scenario",
    "lineNumber": 170,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 477,
    "kind": "test",
    "name": "it66",
    "testId": 66,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe63",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe63.it66",
    "access": null,
    "description": "contains the start time of the scenario",
    "lineNumber": 182,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 478,
    "kind": "test",
    "name": "it67",
    "testId": 67,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe63",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe63.it67",
    "access": null,
    "description": "contains the duration of the scenario",
    "lineNumber": 193,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 479,
    "kind": "test",
    "name": "describe68",
    "testId": 68,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68",
    "access": null,
    "description": "describes the result of scenario execution that",
    "lineNumber": 198
  },
  {
    "__docId__": 480,
    "kind": "test",
    "name": "it69",
    "testId": 69,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68.it69",
    "access": null,
    "description": "has finished with success",
    "lineNumber": 213,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 481,
    "kind": "test",
    "name": "it70",
    "testId": 70,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68.it70",
    "access": null,
    "description": "hasn't been implemented yet",
    "lineNumber": 232,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ImplementationPending"
    ]
  },
  {
    "__docId__": 482,
    "kind": "test",
    "name": "it71",
    "testId": 71,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68.it71",
    "access": null,
    "description": "has been ignored",
    "lineNumber": 251,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionIgnored"
    ]
  },
  {
    "__docId__": 483,
    "kind": "test",
    "name": "it72",
    "testId": 72,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68.it72",
    "access": null,
    "description": "has been skipped",
    "lineNumber": 270,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSkipped"
    ]
  },
  {
    "__docId__": 484,
    "kind": "test",
    "name": "it73",
    "testId": 73,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68.it73",
    "access": null,
    "description": "has failed with an assertion error",
    "lineNumber": 289,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionFailedWithAssertionError"
    ]
  },
  {
    "__docId__": 485,
    "kind": "test",
    "name": "it74",
    "testId": 74,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68.it74",
    "access": null,
    "description": "has been compromised",
    "lineNumber": 314,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "TestCompromisedError",
      "ExecutionCompromised"
    ]
  },
  {
    "__docId__": 486,
    "kind": "test",
    "name": "it75",
    "testId": 75,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68.it75",
    "access": null,
    "description": "has failed with a non-assertion error",
    "lineNumber": 339,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionFailedWithError"
    ]
  },
  {
    "__docId__": 487,
    "kind": "test",
    "name": "it76",
    "testId": 76,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe68.it76",
    "access": null,
    "description": "has been compromised",
    "lineNumber": 381,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionCompromised"
    ]
  },
  {
    "__docId__": 488,
    "kind": "test",
    "name": "describe77",
    "testId": 77,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77",
    "access": null,
    "description": "indicates its execution context",
    "lineNumber": 431
  },
  {
    "__docId__": 489,
    "kind": "test",
    "name": "it78",
    "testId": 78,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77.it78",
    "access": null,
    "description": "specifies the test runner",
    "lineNumber": 441,
    "testTargets": [
      "SerenityBDDReporter",
      "TestRunnerDetected",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 490,
    "kind": "test",
    "name": "it79",
    "testId": 79,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77.it79",
    "access": null,
    "description": "specifies the user story covered",
    "lineNumber": 461,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 491,
    "kind": "test",
    "name": "it80",
    "testId": 80,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77.it80",
    "access": null,
    "description": "does not mention the user story path for non-Cucumber scenarios (as it breaks the Serenity BDD HTML report)",
    "lineNumber": 485,
    "testTargets": [
      "SerenityBDDReporter",
      "SceneStarts",
      "SceneFinished",
      "TestRunFinishes",
      "ExecutionSuccessful"
    ]
  },
  {
    "__docId__": 492,
    "kind": "test",
    "name": "describe81",
    "testId": 81,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77",
    "testDepth": 3,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77.describe81",
    "access": null,
    "description": "reports information from the cucumber feature file",
    "lineNumber": 502
  },
  {
    "__docId__": 493,
    "kind": "test",
    "name": "it82",
    "testId": 82,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77.describe81",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77.describe81.it82",
    "access": null,
    "description": "reports the scenario-level narrative",
    "lineNumber": 505,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 494,
    "kind": "test",
    "name": "it83",
    "testId": 83,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77.describe81",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77.describe81.it83",
    "access": null,
    "description": "reports the scenario-level background title",
    "lineNumber": 508,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 495,
    "kind": "test",
    "name": "it84",
    "testId": 84,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77.describe81",
    "testDepth": 4,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe62.describe77.describe81.it84",
    "access": null,
    "description": "reports the scenario-level background description",
    "lineNumber": 511,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 496,
    "kind": "test",
    "name": "describe85",
    "testId": 85,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe85",
    "access": null,
    "description": "attachements",
    "lineNumber": 516
  },
  {
    "__docId__": 497,
    "kind": "test",
    "name": "it86",
    "testId": 86,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe85",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe85.it86",
    "access": null,
    "description": "todo",
    "lineNumber": 517
  },
  {
    "__docId__": 498,
    "kind": "test",
    "name": "describe87",
    "testId": 87,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe87",
    "access": null,
    "description": "Error handling",
    "lineNumber": 525
  },
  {
    "__docId__": 499,
    "kind": "test",
    "name": "it88",
    "testId": 88,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe87",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.spec.ts~describe57.describe87.it88",
    "access": null,
    "description": "generates the report even when the test runner has crashed",
    "lineNumber": 528
  },
  {
    "__docId__": 500,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts",
    "content": "import 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { ConfigurationError } from '@serenity-js/core';\nimport { inspect } from 'util';\n\nimport { errorReportFrom } from '../../../../../../src/stage/crew/serenity-bdd-reporter/processors/mappers';\n\ndescribe('errorReportFrom', () => {\n\n    describe('when representing Errors as Serenity BDD-standard JSON reports', () => {\n\n        it('supports native Error', () => {\n\n            const report = errorReportFrom(thrown(Error, 'boom'))\n\n            expect(report.errorType).to.equal('Error');\n            expect(report.message).to.equal('boom');\n            expect(report.stackTrace.length).to.be.greaterThan(0);\n        });\n\n        it('supports Serenity/JS Errors', () => {\n\n            const report = errorReportFrom(thrown(ConfigurationError, 'wrong config'))\n\n            expect(report.errorType).to.equal('ConfigurationError');\n            expect(report.message).to.equal('wrong config');\n            expect(report.stackTrace.length).to.be.greaterThan(0);\n        });\n\n        it('supports Serenity/JS Errors with root causes', () => {\n\n            const report = errorReportFrom(thrown(ConfigurationError, 'wrong config', thrown(Error, 'config file does not exist')))\n\n            expect(report.errorType).to.equal('ConfigurationError');\n            expect(report.message).to.equal('wrong config');\n            expect(report.rootCause.errorType).to.equal('Error');\n            expect(report.rootCause.message).to.equal('config file does not exist');\n            expect(report.stackTrace.length).to.be.greaterThan(0);\n        });\n    });\n\n    describe('when representing non-Error \"throwables\" as Serenity BDD-standard JSON reports', () => {\n\n        it('supports null', () => {\n            const report = errorReportFrom(null);   // eslint-disable-line unicorn/no-null\n\n            expect(report).to.deep.equal({\n                'errorType': 'null',\n                'message': '',\n                'stackTrace': [],\n            });\n        });\n\n        it('supports undefined', () => {\n            const report = errorReportFrom(undefined);  // eslint-disable-line unicorn/no-useless-undefined\n\n            expect(report).to.deep.equal({\n                'errorType': 'undefined',\n                'message': '',\n                'stackTrace': [],\n            });\n        });\n\n        it('supports objects', () => {\n            const maybeError = { message: `something's wrong`, code: 500 };\n            const report = errorReportFrom(maybeError);\n\n            expect(report).to.deep.equal({\n                'errorType': 'Object',\n                'message': inspect(maybeError),\n                'stackTrace': [],\n            });\n        });\n\n        it('supports arrays', () => {\n            const maybeError = [ 'you', 'really', `shouldn't`, 'throw', 'arrays' ];\n            const report = errorReportFrom(maybeError);\n\n            expect(report).to.deep.equal({\n                'errorType': 'Array',\n                'message': inspect(maybeError),\n                'stackTrace': [],\n            });\n        });\n\n        it('supports numbers', () => {\n            const report = errorReportFrom(404);\n\n            expect(report).to.deep.equal({\n                'errorType': 'Number',\n                'message': '404',\n                'stackTrace': [],\n            });\n        });\n\n        it('supports strings', () => {\n            const report = errorReportFrom('skipped step');\n\n            expect(report).to.deep.equal({\n                'errorType': 'String',\n                'message': 'skipped step',\n                'stackTrace': [],\n            });\n        });\n\n        it('supports booleans', () => {\n            const report = errorReportFrom(false);\n\n            expect(report).to.deep.equal({\n                'errorType': 'Boolean',\n                'message': 'false',\n                'stackTrace': [],\n            });\n        });\n    });\n});\n\nfunction thrown<T>(type: new (...args: any[]) => T, ...args: any[]): T {\n    try {\n        throw new type(...args);\n    } catch (error) {\n        return error;\n    }\n}\n\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 501,
    "kind": "test",
    "name": "describe89",
    "testId": 89,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89",
    "access": null,
    "description": "errorReportFrom",
    "lineNumber": 9
  },
  {
    "__docId__": 502,
    "kind": "test",
    "name": "describe90",
    "testId": 90,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe90",
    "access": null,
    "description": "when representing Errors as Serenity BDD-standard JSON reports",
    "lineNumber": 11
  },
  {
    "__docId__": 503,
    "kind": "test",
    "name": "it91",
    "testId": 91,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe90",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe90.it91",
    "access": null,
    "description": "supports native Error",
    "lineNumber": 13
  },
  {
    "__docId__": 504,
    "kind": "test",
    "name": "it92",
    "testId": 92,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe90",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe90.it92",
    "access": null,
    "description": "supports Serenity/JS Errors",
    "lineNumber": 22
  },
  {
    "__docId__": 505,
    "kind": "test",
    "name": "it93",
    "testId": 93,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe90",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe90.it93",
    "access": null,
    "description": "supports Serenity/JS Errors with root causes",
    "lineNumber": 31
  },
  {
    "__docId__": 506,
    "kind": "test",
    "name": "describe94",
    "testId": 94,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94",
    "access": null,
    "description": "when representing non-Error \"throwables\" as Serenity BDD-standard JSON reports",
    "lineNumber": 43
  },
  {
    "__docId__": 507,
    "kind": "test",
    "name": "it95",
    "testId": 95,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94.it95",
    "access": null,
    "description": "supports null",
    "lineNumber": 45
  },
  {
    "__docId__": 508,
    "kind": "test",
    "name": "it96",
    "testId": 96,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94.it96",
    "access": null,
    "description": "supports undefined",
    "lineNumber": 55
  },
  {
    "__docId__": 509,
    "kind": "test",
    "name": "it97",
    "testId": 97,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94.it97",
    "access": null,
    "description": "supports objects",
    "lineNumber": 65
  },
  {
    "__docId__": 510,
    "kind": "test",
    "name": "it98",
    "testId": 98,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94.it98",
    "access": null,
    "description": "supports arrays",
    "lineNumber": 76
  },
  {
    "__docId__": 511,
    "kind": "test",
    "name": "it99",
    "testId": 99,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94.it99",
    "access": null,
    "description": "supports numbers",
    "lineNumber": 87
  },
  {
    "__docId__": 512,
    "kind": "test",
    "name": "it100",
    "testId": 100,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94.it100",
    "access": null,
    "description": "supports strings",
    "lineNumber": 97
  },
  {
    "__docId__": 513,
    "kind": "test",
    "name": "it101",
    "testId": 101,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94",
    "testDepth": 2,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/processors/mappers/errorReportFrom.spec.ts~describe89.describe94.it101",
    "access": null,
    "description": "supports booleans",
    "lineNumber": 107
  },
  {
    "__docId__": 514,
    "kind": "testFile",
    "name": "spec/stage/crew/serenity-bdd-reporter/snapshots/events_before_and_after_scenario.spec.ts",
    "content": "/* eslint-disable unicorn/filename-case */\nimport 'mocha';\n\nimport { contentsOf, EventRecorder, EventStreamEmitter, expect } from '@integration/testing-tools';\nimport { Actor, Cast, Clock, Duration, Stage, StageManager } from '@serenity-js/core';\nimport { ArtifactGenerated, DomainEvent } from '@serenity-js/core/lib/events';\nimport { TestReport } from '@serenity-js/core/lib/model';\n\nimport { SerenityBDDReporter } from '../../../../../src';\n\ndescribe('SerenityBDDReporter', () => {\n\n    let reporter: SerenityBDDReporter,\n        stage: Stage,\n        emitter: EventStreamEmitter,\n        recorder: EventRecorder;\n\n    beforeEach(() => {\n        stage = new Stage(new Extras(), new StageManager(Duration.ofMilliseconds(250), new Clock()));\n        emitter = new EventStreamEmitter(stage);\n        recorder = new EventRecorder([], stage);\n\n        reporter = new SerenityBDDReporter(stage);\n\n        stage.assign(recorder);\n        stage.assign(reporter);\n    });\n\n    /** @test {SerenityBDDReporter} */\n    it(`includes orphaned events that happened before the scenario in first scenario, and those that happened after - in last scenario`, async () => {\n        await emitter.emit(\n            contentsOf(__dirname, 'examples', 'scenario_with_interactions_in_before_and_after_hooks.events')\n        );\n\n        const reports: TestReport[] = testReportsFrom(recorder.events);\n        expect(reports).to.have.lengthOf(1);\n\n        const generated = reports[0].map(report => report);\n        const expected = JSON.parse(contentsOf(__dirname, 'examples', 'scenario_with_interactions_in_before_and_after_hooks.json'));\n\n        expect(generated).to.deep.equal(expected);\n    });\n\n    /** @test {SerenityBDDReporter} */\n    it(`includes events that happened in beforeAll hook`, async () => {\n        await emitter.emit(\n            contentsOf(__dirname, 'examples', 'issue-1162-scenario_with_interactions_in_before_all_hook.events')\n        );\n\n        const reports: TestReport[] = testReportsFrom(recorder.events);\n        expect(reports).to.have.lengthOf(2);\n\n        const generated = reports.map(report => report.map(data => data));\n        const expected = JSON.parse(contentsOf(__dirname, 'examples', 'issue-1162-scenario_with_interactions_in_before_all_hook.json'));\n\n        expect(generated).to.deep.equal(expected);\n    });\n});\n\nfunction testReportsFrom(events: DomainEvent[]): TestReport[] {\n    return events\n        .filter((e: DomainEvent) => e instanceof ArtifactGenerated && e.artifact instanceof TestReport)\n        .map((e: ArtifactGenerated) => e.artifact);\n}\n\nclass Extras implements Cast {\n    prepare(actor: Actor): Actor {\n        return actor;\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/serenity-bdd/spec/stage/crew/serenity-bdd-reporter/snapshots/events_before_and_after_scenario.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 515,
    "kind": "test",
    "name": "describe102",
    "testId": 102,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/snapshots/events_before_and_after_scenario.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/snapshots/events_before_and_after_scenario.spec.ts~describe102",
    "access": null,
    "description": "SerenityBDDReporter",
    "lineNumber": 11
  },
  {
    "__docId__": 516,
    "kind": "test",
    "name": "it103",
    "testId": 103,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/snapshots/events_before_and_after_scenario.spec.ts~describe102",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/snapshots/events_before_and_after_scenario.spec.ts~describe102.it103",
    "access": null,
    "lineNumber": 30,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  },
  {
    "__docId__": 517,
    "kind": "test",
    "name": "it104",
    "testId": 104,
    "memberof": "spec/stage/crew/serenity-bdd-reporter/snapshots/events_before_and_after_scenario.spec.ts~describe102",
    "testDepth": 1,
    "static": true,
    "longname": "spec/stage/crew/serenity-bdd-reporter/snapshots/events_before_and_after_scenario.spec.ts~describe102.it104",
    "access": null,
    "lineNumber": 45,
    "testTargets": [
      "SerenityBDDReporter"
    ]
  }
]