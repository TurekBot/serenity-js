[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "AxiosError",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L85",
    "longname": "AxiosError",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "AxiosInstance",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L130",
    "longname": "AxiosInstance",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "AxiosRequestConfig",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L44",
    "longname": "AxiosRequestConfig",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "AxiosPromise",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L94",
    "longname": "AxiosPromise",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "AxiosResponse",
    "externalLink": "https://github.com/axios/axios/blob/v0.21.1/index.d.ts#L76",
    "longname": "AxiosResponse",
    "memberof": "src/.imports-from-axios.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "longname": "Proxy",
    "memberof": "src/.imports-from-mdn.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "ProtractorConfig",
    "externalLink": "https://github.com/angular/protractor/blob/master/lib/config.ts",
    "longname": "protractor~ProtractorConfig",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "Runner",
    "externalLink": "https://github.com/angular/protractor/blob/master/lib/runner.ts",
    "longname": "protractor~Runner",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "ElementArrayFinder",
    "externalLink": "https://www.protractortest.org/#/api?view=ElementArrayFinder",
    "longname": "ElementArrayFinder",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "ElementFinder",
    "externalLink": "https://www.protractortest.org/#/api?view=ElementFinder",
    "longname": "ElementFinder",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "ProtractorBrowser",
    "externalLink": "https://www.protractortest.org/#/api?view=ProtractorBrowser",
    "longname": "ProtractorBrowser",
    "memberof": "src/.imports-from-protractor.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "Actions",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/input_exports_Actions.html",
    "longname": "selenium-webdriver~Actions",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "AlertPromise",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/webdriver_exports_AlertPromise.html",
    "longname": "selenium-webdriver~AlertPromise",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "By",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/by_exports_By.html",
    "longname": "selenium-webdriver~By",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "Capabilities",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_Capabilities.html",
    "longname": "selenium-webdriver~Capabilities",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "Key",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_Key.html",
    "longname": "selenium-webdriver~Key",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Navigation",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/lib/webdriver_exports_Navigation.html",
    "longname": "selenium-webdriver~Navigation",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "Options",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/ie_exports_Options.html",
    "longname": "selenium-webdriver~Options",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "WebElement",
    "externalLink": "https://www.selenium.dev/selenium/docs/api/javascript/module/selenium-webdriver/index_exports_WebElement.html",
    "longname": "selenium-webdriver~WebElement",
    "memberof": "src/.imports-from-selenium-webdriver.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "Serenity",
    "externalLink": "/modules/core/class/src/Serenity.ts~Serenity.html",
    "longname": "@serenity-js/core~Serenity",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "SerenityConfig",
    "externalLink": "/modules/core/class/src/SerenityConfig.ts~SerenityConfig.html",
    "longname": "@serenity-js/core~SerenityConfig",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "AssertionError",
    "externalLink": "/modules/core/class/src/errors/AssertionError.ts~AssertionError.html",
    "longname": "@serenity-js/core/lib/errors~AssertionError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "ConfigurationError",
    "externalLink": "/modules/core/class/src/errors/ConfigurationError.ts~ConfigurationError.html",
    "longname": "@serenity-js/core/lib/errors~ConfigurationError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "ImplementationPendingError",
    "externalLink": "/modules/core/class/src/errors/ImplementationPendingError.ts~ImplementationPendingError.html",
    "longname": "@serenity-js/core/lib/errors~ImplementationPendingError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "LogicError",
    "externalLink": "/modules/core/class/src/errors/LogicError.ts~LogicError.html",
    "longname": "@serenity-js/core/lib/errors~LogicError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "RuntimeError",
    "externalLink": "/modules/core/class/src/errors/RuntimeError.ts~RuntimeError.html",
    "longname": "@serenity-js/core/lib/errors~RuntimeError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "TestCompromisedError",
    "externalLink": "/modules/core/class/src/errors/TestCompromisedError.ts~TestCompromisedError.html",
    "longname": "@serenity-js/core/lib/errors~TestCompromisedError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "UnknownError",
    "externalLink": "/modules/core/class/src/errors/UnknownError.ts~UnknownError.html",
    "longname": "@serenity-js/core/lib/errors~UnknownError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "ActivityFinished",
    "externalLink": "/modules/core/class/src/events/ActivityFinished.ts~ActivityFinished.html",
    "longname": "@serenity-js/core/lib/events~ActivityFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "ActivityRelatedArtifactArchived",
    "externalLink": "/modules/core/class/src/events/ActivityRelatedArtifactArchived.ts~ActivityRelatedArtifactArchived.html",
    "longname": "@serenity-js/core/lib/events~ActivityRelatedArtifactArchived",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "ActivityRelatedArtifactGenerated",
    "externalLink": "/modules/core/class/src/events/ActivityRelatedArtifactGenerated.ts~ActivityRelatedArtifactGenerated.html",
    "longname": "@serenity-js/core/lib/events~ActivityRelatedArtifactGenerated",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "ActivityStarts",
    "externalLink": "/modules/core/class/src/events/ActivityStarts.ts~ActivityStarts.html",
    "longname": "@serenity-js/core/lib/events~ActivityStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "ArtifactArchived",
    "externalLink": "/modules/core/class/src/events/ArtifactArchived.ts~ArtifactArchived.html",
    "longname": "@serenity-js/core/lib/events~ArtifactArchived",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "ArtifactGenerated",
    "externalLink": "/modules/core/class/src/events/ArtifactGenerated.ts~ArtifactGenerated.html",
    "longname": "@serenity-js/core/lib/events~ArtifactGenerated",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "AsyncOperationAttempted",
    "externalLink": "/modules/core/class/src/events/AsyncOperationAttempted.ts~AsyncOperationAttempted.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationAttempted",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "AsyncOperationCompleted",
    "externalLink": "/modules/core/class/src/events/AsyncOperationCompleted.ts~AsyncOperationCompleted.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationCompleted",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "AsyncOperationFailed",
    "externalLink": "/modules/core/class/src/events/AsyncOperationFailed.ts~AsyncOperationFailed.html",
    "longname": "@serenity-js/core/lib/events~AsyncOperationFailed",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "BusinessRuleDetected",
    "externalLink": "/modules/core/class/src/events/BusinessRuleDetected.ts~BusinessRuleDetected.html",
    "longname": "@serenity-js/core/lib/events~BusinessRuleDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "DomainEvent",
    "externalLink": "/modules/core/class/src/events/DomainEvent.ts~DomainEvent.html",
    "longname": "@serenity-js/core/lib/events~DomainEvent",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "FeatureNarrativeDetected",
    "externalLink": "/modules/core/class/src/events/FeatureNarrativeDetected.ts~FeatureNarrativeDetected.html",
    "longname": "@serenity-js/core/lib/events~FeatureNarrativeDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "InteractionFinished",
    "externalLink": "/modules/core/class/src/events/InteractionFinished.ts~InteractionFinished.html",
    "longname": "@serenity-js/core/lib/events~InteractionFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "InteractionStarts",
    "externalLink": "/modules/core/class/src/events/InteractionStarts.ts~InteractionStarts.html",
    "longname": "@serenity-js/core/lib/events~InteractionStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "RetryableSceneDetected",
    "externalLink": "/modules/core/class/src/events/RetryableSceneDetected.ts~RetryableSceneDetected.html",
    "longname": "@serenity-js/core/lib/events~RetryableSceneDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "external",
    "name": "SceneBackgroundDetected",
    "externalLink": "/modules/core/class/src/events/SceneBackgroundDetected.ts~SceneBackgroundDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneBackgroundDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 49,
    "kind": "external",
    "name": "SceneDescriptionDetected",
    "externalLink": "/modules/core/class/src/events/SceneDescriptionDetected.ts~SceneDescriptionDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneDescriptionDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 50,
    "kind": "external",
    "name": "SceneFinished",
    "externalLink": "/modules/core/class/src/events/SceneFinished.ts~SceneFinished.html",
    "longname": "@serenity-js/core/lib/events~SceneFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 51,
    "kind": "external",
    "name": "SceneFinishes",
    "externalLink": "/modules/core/class/src/events/SceneFinishes.ts~SceneFinishes.html",
    "longname": "@serenity-js/core/lib/events~SceneFinishes",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 52,
    "kind": "external",
    "name": "SceneParametersDetected",
    "externalLink": "/modules/core/class/src/events/SceneParametersDetected.ts~SceneParametersDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneParametersDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 53,
    "kind": "external",
    "name": "SceneSequenceDetected",
    "externalLink": "/modules/core/class/src/events/SceneSequenceDetected.ts~SceneSequenceDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneSequenceDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 54,
    "kind": "external",
    "name": "SceneStarts",
    "externalLink": "/modules/core/class/src/events/SceneStarts.ts~SceneStarts.html",
    "longname": "@serenity-js/core/lib/events~SceneStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 55,
    "kind": "external",
    "name": "SceneTagged",
    "externalLink": "/modules/core/class/src/events/SceneTagged.ts~SceneTagged.html",
    "longname": "@serenity-js/core/lib/events~SceneTagged",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 56,
    "kind": "external",
    "name": "SceneTemplateDetected",
    "externalLink": "/modules/core/class/src/events/SceneTemplateDetected.ts~SceneTemplateDetected.html",
    "longname": "@serenity-js/core/lib/events~SceneTemplateDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 57,
    "kind": "external",
    "name": "TaskFinished",
    "externalLink": "/modules/core/class/src/events/TaskFinished.ts~TaskFinished.html",
    "longname": "@serenity-js/core/lib/events~TaskFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 58,
    "kind": "external",
    "name": "TaskStarts",
    "externalLink": "/modules/core/class/src/events/TaskStarts.ts~TaskStarts.html",
    "longname": "@serenity-js/core/lib/events~TaskStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 59,
    "kind": "external",
    "name": "TestRunFinished",
    "externalLink": "/modules/core/class/src/events/TestRunFinished.ts~TestRunFinished.html",
    "longname": "@serenity-js/core/lib/events~TestRunFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 60,
    "kind": "external",
    "name": "TestRunFinishes",
    "externalLink": "/modules/core/class/src/events/TestRunFinishes.ts~TestRunFinishes.html",
    "longname": "@serenity-js/core/lib/events~TestRunFinishes",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 61,
    "kind": "external",
    "name": "TestRunStarts",
    "externalLink": "/modules/core/class/src/events/TestRunStarts.ts~TestRunStarts.html",
    "longname": "@serenity-js/core/lib/events~TestRunStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 62,
    "kind": "external",
    "name": "TestRunnerDetected",
    "externalLink": "/modules/core/class/src/events/TestRunnerDetected.ts~TestRunnerDetected.html",
    "longname": "@serenity-js/core/lib/events~TestRunnerDetected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 63,
    "kind": "external",
    "name": "TestSuiteFinished",
    "externalLink": "/modules/core/class/src/events/TestSuiteFinished.ts~TestSuiteFinished.html",
    "longname": "@serenity-js/core/lib/events~TestSuiteFinished",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 64,
    "kind": "external",
    "name": "TestSuiteStarts",
    "externalLink": "/modules/core/class/src/events/TestSuiteStarts.ts~TestSuiteStarts.html",
    "longname": "@serenity-js/core/lib/events~TestSuiteStarts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 65,
    "kind": "external",
    "name": "serenity",
    "externalLink": "/modules/core/variable/src/instance.ts~serenity.html",
    "longname": "@serenity-js/core~serenity",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 66,
    "kind": "external",
    "name": "configure",
    "externalLink": "/modules/core/function/index.html#static-function-configure",
    "longname": "@serenity-js/core~configure",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 67,
    "kind": "external",
    "name": "engage",
    "externalLink": "/modules/core/function/index.html#static-function-engage",
    "longname": "@serenity-js/core~engage",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 68,
    "kind": "external",
    "name": "actorCalled",
    "externalLink": "/modules/core/function/index.html#static-function-actorCalled",
    "longname": "@serenity-js/core~actorCalled",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 69,
    "kind": "external",
    "name": "actorInTheSpotlight",
    "externalLink": "/modules/core/function/index.html#static-function-actorInTheSpotlight",
    "longname": "@serenity-js/core~actorInTheSpotlight",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 70,
    "kind": "external",
    "name": "AssertionReportDiffer",
    "externalLink": "/modules/core/class/src/io/AssertionReportDiffer.ts~AssertionReportDiffer.html",
    "longname": "@serenity-js/core/lib/io~AssertionReportDiffer",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 71,
    "kind": "external",
    "name": "Config",
    "externalLink": "/modules/core/class/src/io/Config.ts~Config.html",
    "longname": "@serenity-js/core/lib/io~Config",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 72,
    "kind": "external",
    "name": "SerialisedError",
    "externalLink": "/modules/core/class/src/io/ErrorSerialiser.ts~SerialisedError.html",
    "longname": "@serenity-js/core/lib/io~SerialisedError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 73,
    "kind": "external",
    "name": "ErrorSerialiser",
    "externalLink": "/modules/core/class/src/io/ErrorSerialiser.ts~ErrorSerialiser.html",
    "longname": "@serenity-js/core/lib/io~ErrorSerialiser",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 74,
    "kind": "external",
    "name": "FileFinder",
    "externalLink": "/modules/core/class/src/io/FileFinder.ts~FileFinder.html",
    "longname": "@serenity-js/core/lib/io~FileFinder",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 75,
    "kind": "external",
    "name": "FileSystem",
    "externalLink": "/modules/core/class/src/io/FileSystem.ts~FileSystem.html",
    "longname": "@serenity-js/core/lib/io~FileSystem",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 76,
    "kind": "external",
    "name": "FileSystemLocation",
    "externalLink": "/modules/core/class/src/io/FileSystemLocation.ts~FileSystemLocation.html",
    "longname": "@serenity-js/core/lib/io~FileSystemLocation",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 77,
    "kind": "external",
    "name": "ModuleLoader",
    "externalLink": "/modules/core/class/src/io/ModuleLoader.ts~ModuleLoader.html",
    "longname": "@serenity-js/core/lib/io~ModuleLoader",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 78,
    "kind": "external",
    "name": "OutputStream",
    "externalLink": "/modules/core/class/src/io/OutputStream.ts~OutputStream.html",
    "longname": "@serenity-js/core/lib/io~OutputStream",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "name": "Path",
    "externalLink": "/modules/core/class/src/io/Path.ts~Path.html",
    "longname": "@serenity-js/core/lib/io~Path",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "name": "TestRunnerAdapter",
    "externalLink": "/modules/core/class/src/io/TestRunnerAdapter.ts~TestRunnerAdapter.html",
    "longname": "@serenity-js/core/lib/io~TestRunnerAdapter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "external",
    "name": "Version",
    "externalLink": "/modules/core/class/src/io/Version.ts~Version.html",
    "longname": "@serenity-js/core/lib/io~Version",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 82,
    "kind": "external",
    "name": "Mappable",
    "externalLink": "/modules/core/class/src/io/collections/mappable.ts~Mappable.html",
    "longname": "@serenity-js/core/lib/io/collections~Mappable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 83,
    "kind": "external",
    "name": "isMappable",
    "externalLink": "/modules/core/function/index.html#static-function-isMappable",
    "longname": "@serenity-js/core/lib/io/collections~isMappable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 84,
    "kind": "external",
    "name": "Reducible",
    "externalLink": "/modules/core/class/src/io/collections/reducible.ts~Reducible.html",
    "longname": "@serenity-js/core/lib/io/collections~Reducible",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 85,
    "kind": "external",
    "name": "commaSeparated",
    "externalLink": "/modules/core/function/index.html#static-function-commaSeparated",
    "longname": "@serenity-js/core/lib/io~commaSeparated",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 86,
    "kind": "external",
    "name": "formatted",
    "externalLink": "/modules/core/function/index.html#static-function-formatted",
    "longname": "@serenity-js/core/lib/io~formatted",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 87,
    "kind": "external",
    "name": "inspected",
    "externalLink": "/modules/core/function/index.html#static-function-inspected",
    "longname": "@serenity-js/core/lib/io~inspected",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 88,
    "kind": "external",
    "name": "stringify",
    "externalLink": "/modules/core/function/index.html#static-function-stringify",
    "longname": "@serenity-js/core/lib/io/json~stringify",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "name": "parse",
    "externalLink": "/modules/core/function/index.html#static-function-parse",
    "longname": "@serenity-js/core/lib/io/json~parse",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "name": "has",
    "externalLink": "/modules/core/function/index.html#static-function-has",
    "longname": "@serenity-js/core/lib/io/reflection~has",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "name": "trimmed",
    "externalLink": "/modules/core/function/index.html#static-function-trimmed",
    "longname": "@serenity-js/core/lib/io~trimmed",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "name": "ActivityDetails",
    "externalLink": "/modules/core/class/src/model/ActivityDetails.ts~ActivityDetails.html",
    "longname": "@serenity-js/core/lib/model~ActivityDetails",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "name": "Artifact",
    "externalLink": "/modules/core/class/src/model/Artifact.ts~Artifact.html",
    "longname": "@serenity-js/core/lib/model~Artifact",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "name": "BusinessRule",
    "externalLink": "/modules/core/class/src/model/BusinessRule.ts~BusinessRule.html",
    "longname": "@serenity-js/core/lib/model~BusinessRule",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "name": "Category",
    "externalLink": "/modules/core/class/src/model/Category.ts~Category.html",
    "longname": "@serenity-js/core/lib/model~Category",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "name": "CorrelationId",
    "externalLink": "/modules/core/class/src/model/CorrelationId.ts~CorrelationId.html",
    "longname": "@serenity-js/core/lib/model~CorrelationId",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "name": "Description",
    "externalLink": "/modules/core/class/src/model/Description.ts~Description.html",
    "longname": "@serenity-js/core/lib/model~Description",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "name": "Duration",
    "externalLink": "/modules/core/class/src/model/Duration.ts~Duration.html",
    "longname": "@serenity-js/core/lib/model~Duration",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "name": "Name",
    "externalLink": "/modules/core/class/src/model/Name.ts~Name.html",
    "longname": "@serenity-js/core/lib/model~Name",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "name": "ScenarioDetails",
    "externalLink": "/modules/core/class/src/model/ScenarioDetails.ts~ScenarioDetails.html",
    "longname": "@serenity-js/core/lib/model~ScenarioDetails",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "name": "ScenarioParameters",
    "externalLink": "/modules/core/class/src/model/ScenarioParameters.ts~ScenarioParameters.html",
    "longname": "@serenity-js/core/lib/model~ScenarioParameters",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "name": "TestSuiteDetails",
    "externalLink": "/modules/core/class/src/model/TestSuiteDetails.ts~TestSuiteDetails.html",
    "longname": "@serenity-js/core/lib/model~TestSuiteDetails",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "name": "Timestamp",
    "externalLink": "/modules/core/class/src/model/Timestamp.ts~Timestamp.html",
    "longname": "@serenity-js/core/lib/model~Timestamp",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "name": "AssertionReport",
    "externalLink": "/modules/core/class/src/model/artifacts/AssertionReport.ts~AssertionReport.html",
    "longname": "@serenity-js/core/lib/model/artifacts~AssertionReport",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "name": "RequestAndResponse",
    "externalLink": "/modules/core/class/src/model/artifacts/HTTPRequestResponse.ts~RequestAndResponse.html",
    "longname": "@serenity-js/core/lib/model/artifacts~RequestAndResponse",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "name": "HTTPRequestResponse",
    "externalLink": "/modules/core/class/src/model/artifacts/HTTPRequestResponse.ts~HTTPRequestResponse.html",
    "longname": "@serenity-js/core/lib/model/artifacts~HTTPRequestResponse",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "name": "JSONData",
    "externalLink": "/modules/core/class/src/model/artifacts/JSONData.ts~JSONData.html",
    "longname": "@serenity-js/core/lib/model/artifacts~JSONData",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 108,
    "kind": "external",
    "name": "LogEntry",
    "externalLink": "/modules/core/class/src/model/artifacts/LogEntry.ts~LogEntry.html",
    "longname": "@serenity-js/core/lib/model/artifacts~LogEntry",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "name": "Photo",
    "externalLink": "/modules/core/class/src/model/artifacts/Photo.ts~Photo.html",
    "longname": "@serenity-js/core/lib/model/artifacts~Photo",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 110,
    "kind": "external",
    "name": "TestReport",
    "externalLink": "/modules/core/class/src/model/artifacts/TestReport.ts~TestReport.html",
    "longname": "@serenity-js/core/lib/model/artifacts~TestReport",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 111,
    "kind": "external",
    "name": "TextData",
    "externalLink": "/modules/core/class/src/model/artifacts/TextData.ts~TextData.html",
    "longname": "@serenity-js/core/lib/model/artifacts~TextData",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 112,
    "kind": "external",
    "name": "SerialisedOutcome",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~SerialisedOutcome.html",
    "longname": "@serenity-js/core/lib/model~SerialisedOutcome",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 113,
    "kind": "external",
    "name": "Outcome",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~Outcome.html",
    "longname": "@serenity-js/core/lib/model~Outcome",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "name": "ProblemIndication",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ProblemIndication.html",
    "longname": "@serenity-js/core/lib/model~ProblemIndication",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "name": "ExecutionCompromised",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionCompromised.html",
    "longname": "@serenity-js/core/lib/model~ExecutionCompromised",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "name": "ExecutionFailedWithError",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionFailedWithError.html",
    "longname": "@serenity-js/core/lib/model~ExecutionFailedWithError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "external",
    "name": "ExecutionFailedWithAssertionError",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionFailedWithAssertionError.html",
    "longname": "@serenity-js/core/lib/model~ExecutionFailedWithAssertionError",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 118,
    "kind": "external",
    "name": "ImplementationPending",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ImplementationPending.html",
    "longname": "@serenity-js/core/lib/model~ImplementationPending",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 119,
    "kind": "external",
    "name": "ExecutionIgnored",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionIgnored.html",
    "longname": "@serenity-js/core/lib/model~ExecutionIgnored",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 120,
    "kind": "external",
    "name": "ExecutionSkipped",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionSkipped.html",
    "longname": "@serenity-js/core/lib/model~ExecutionSkipped",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 121,
    "kind": "external",
    "name": "ExecutionSuccessful",
    "externalLink": "/modules/core/class/src/model/outcomes.ts~ExecutionSuccessful.html",
    "longname": "@serenity-js/core/lib/model~ExecutionSuccessful",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 122,
    "kind": "external",
    "name": "ArbitraryTag",
    "externalLink": "/modules/core/class/src/model/tags/ArbitraryTag.ts~ArbitraryTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ArbitraryTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 123,
    "kind": "external",
    "name": "BrowserTag",
    "externalLink": "/modules/core/class/src/model/tags/BrowserTag.ts~BrowserTag.html",
    "longname": "@serenity-js/core/lib/model/tags~BrowserTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "name": "CapabilityTag",
    "externalLink": "/modules/core/class/src/model/tags/CapabilityTag.ts~CapabilityTag.html",
    "longname": "@serenity-js/core/lib/model/tags~CapabilityTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 125,
    "kind": "external",
    "name": "ContextTag",
    "externalLink": "/modules/core/class/src/model/tags/ContextTag.ts~ContextTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ContextTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "name": "ExecutionRetriedTag",
    "externalLink": "/modules/core/class/src/model/tags/ExecutionRetriedTag.ts~ExecutionRetriedTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ExecutionRetriedTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "name": "FeatureTag",
    "externalLink": "/modules/core/class/src/model/tags/FeatureTag.ts~FeatureTag.html",
    "longname": "@serenity-js/core/lib/model/tags~FeatureTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "name": "IssueTag",
    "externalLink": "/modules/core/class/src/model/tags/IssueTag.ts~IssueTag.html",
    "longname": "@serenity-js/core/lib/model/tags~IssueTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "name": "ManualTag",
    "externalLink": "/modules/core/class/src/model/tags/ManualTag.ts~ManualTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ManualTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "name": "PlatformTag",
    "externalLink": "/modules/core/class/src/model/tags/PlatformTag.ts~PlatformTag.html",
    "longname": "@serenity-js/core/lib/model/tags~PlatformTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "name": "Tag",
    "externalLink": "/modules/core/class/src/model/tags/Tag.ts~Tag.html",
    "longname": "@serenity-js/core/lib/model/tags~Tag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "name": "ThemeTag",
    "externalLink": "/modules/core/class/src/model/tags/ThemeTag.ts~ThemeTag.html",
    "longname": "@serenity-js/core/lib/model/tags~ThemeTag",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "name": "Ability",
    "externalLink": "/modules/core/class/src/screenplay/Ability.ts~Ability.html",
    "longname": "@serenity-js/core/lib/screenplay~Ability",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "external",
    "name": "AbilityType",
    "externalLink": "/modules/core/class/src/screenplay/AbilityType.ts~AbilityType.html",
    "longname": "@serenity-js/core/lib/screenplay~AbilityType",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 135,
    "kind": "external",
    "name": "Activity",
    "externalLink": "/modules/core/class/src/screenplay/Activity.ts~Activity.html",
    "longname": "@serenity-js/core/lib/screenplay~Activity",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "name": "Interaction",
    "externalLink": "/modules/core/class/src/screenplay/Interaction.ts~Interaction.html",
    "longname": "@serenity-js/core/lib/screenplay~Interaction",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "name": "Question",
    "externalLink": "/modules/core/class/src/screenplay/Question.ts~Question.html",
    "longname": "@serenity-js/core/lib/screenplay~Question",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "name": "Task",
    "externalLink": "/modules/core/class/src/screenplay/Task.ts~Task.html",
    "longname": "@serenity-js/core/lib/screenplay~Task",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 139,
    "kind": "external",
    "name": "Discardable",
    "externalLink": "/modules/core/class/src/screenplay/abilities/Discardable.ts~Discardable.html",
    "longname": "@serenity-js/core/lib/screenplay/abilities~Discardable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "name": "Initialisable",
    "externalLink": "/modules/core/class/src/screenplay/abilities/Initialisable.ts~Initialisable.html",
    "longname": "@serenity-js/core/lib/screenplay/abilities~Initialisable",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "name": "TakeNotes",
    "externalLink": "/modules/core/class/src/screenplay/abilities/TakeNotes.ts~TakeNotes.html",
    "longname": "@serenity-js/core/lib/screenplay/abilities~TakeNotes",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "name": "Actor",
    "externalLink": "/modules/core/class/src/screenplay/actor/Actor.ts~Actor.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~Actor",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "name": "AnswersQuestions",
    "externalLink": "/modules/core/class/src/screenplay/actor/AnswersQuestions.ts~AnswersQuestions.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~AnswersQuestions",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "name": "CanHaveAbilities",
    "externalLink": "/modules/core/class/src/screenplay/actor/CanHaveAbilities.ts~CanHaveAbilities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~CanHaveAbilities",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "name": "CollectsArtifacts",
    "externalLink": "/modules/core/class/src/screenplay/actor/CollectsArtifacts.ts~CollectsArtifacts.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~CollectsArtifacts",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "name": "PerformsActivities",
    "externalLink": "/modules/core/class/src/screenplay/actor/PerformsActivities.ts~PerformsActivities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~PerformsActivities",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "name": "UsesAbilities",
    "externalLink": "/modules/core/class/src/screenplay/actor/UsesAbilities.ts~UsesAbilities.html",
    "longname": "@serenity-js/core/lib/screenplay/actor~UsesAbilities",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 148,
    "kind": "external",
    "name": "Log",
    "externalLink": "/modules/core/class/src/screenplay/interactions/Log.ts~Log.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~Log",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 149,
    "kind": "external",
    "name": "See",
    "externalLink": "/modules/core/class/src/screenplay/interactions/See.ts~See.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~See",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 150,
    "kind": "external",
    "name": "TakeNote",
    "externalLink": "/modules/core/class/src/screenplay/interactions/TakeNote.ts~TakeNote.html",
    "longname": "@serenity-js/core/lib/screenplay/interactions~TakeNote",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 151,
    "kind": "external",
    "name": "Check",
    "externalLink": "/modules/core/class/src/screenplay/questions/Check.ts~Check.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Check",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 152,
    "kind": "external",
    "name": "Expectation",
    "externalLink": "/modules/core/class/src/screenplay/questions/Expectation.ts~Expectation.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Expectation",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 153,
    "kind": "external",
    "name": "List",
    "externalLink": "/modules/core/class/src/screenplay/questions/List.ts~List.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~List",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 154,
    "kind": "external",
    "name": "MetaQuestion",
    "externalLink": "/modules/core/class/src/screenplay/questions/MetaQuestion.ts~MetaQuestion.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~MetaQuestion",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 155,
    "kind": "external",
    "name": "Note",
    "externalLink": "/modules/core/class/src/screenplay/questions/Note.ts~Note.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Note",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 156,
    "kind": "external",
    "name": "Property",
    "externalLink": "/modules/core/class/src/screenplay/questions/Property.ts~Property.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Property",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 157,
    "kind": "external",
    "name": "Transform",
    "externalLink": "/modules/core/class/src/screenplay/questions/Transform.ts~Transform.html",
    "longname": "@serenity-js/core/lib/screenplay/questions~Transform",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 158,
    "kind": "external",
    "name": "ExpectationMet",
    "externalLink": "/modules/core/class/src/screenplay/questions/expectations/ExpectationMet.ts~ExpectationMet.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/expectations~ExpectationMet",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 159,
    "kind": "external",
    "name": "ExpectationNotMet",
    "externalLink": "/modules/core/class/src/screenplay/questions/expectations/ExpectationNotMet.ts~ExpectationNotMet.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/expectations~ExpectationNotMet",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 160,
    "kind": "external",
    "name": "ExpectationOutcome",
    "externalLink": "/modules/core/class/src/screenplay/questions/expectations/ExpectationOutcome.ts~ExpectationOutcome.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/expectations~ExpectationOutcome",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 161,
    "kind": "external",
    "name": "ArrayListAdapter",
    "externalLink": "/modules/core/class/src/screenplay/questions/lists/ArrayListAdapter.ts~ArrayListAdapter.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/lists~ArrayListAdapter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 162,
    "kind": "external",
    "name": "ListAdapter",
    "externalLink": "/modules/core/class/src/screenplay/questions/lists/ListAdapter.ts~ListAdapter.html",
    "longname": "@serenity-js/core/lib/screenplay/questions/lists~ListAdapter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 163,
    "kind": "external",
    "name": "append",
    "externalLink": "/modules/core/function/index.html#static-function-append",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~append",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 164,
    "kind": "external",
    "name": "normalize",
    "externalLink": "/modules/core/function/index.html#static-function-normalize",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~normalize",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 165,
    "kind": "external",
    "name": "replace",
    "externalLink": "/modules/core/function/index.html#static-function-replace",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~replace",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 166,
    "kind": "external",
    "name": "slice",
    "externalLink": "/modules/core/function/index.html#static-function-slice",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~slice",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 167,
    "kind": "external",
    "name": "split",
    "externalLink": "/modules/core/function/index.html#static-function-split",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~split",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 168,
    "kind": "external",
    "name": "toLocaleLowerCase",
    "externalLink": "/modules/core/function/index.html#static-function-toLocaleLowerCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toLocaleLowerCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 169,
    "kind": "external",
    "name": "toLocaleUpperCase",
    "externalLink": "/modules/core/function/index.html#static-function-toLocaleUpperCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toLocaleUpperCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 170,
    "kind": "external",
    "name": "toLowerCase",
    "externalLink": "/modules/core/function/index.html#static-function-toLowerCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toLowerCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 171,
    "kind": "external",
    "name": "toNumber",
    "externalLink": "/modules/core/function/index.html#static-function-toNumber",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toNumber",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 172,
    "kind": "external",
    "name": "toUpperCase",
    "externalLink": "/modules/core/function/index.html#static-function-toUpperCase",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~toUpperCase",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 173,
    "kind": "external",
    "name": "trim",
    "externalLink": "/modules/core/function/index.html#static-function-trim",
    "longname": "@serenity-js/core/lib/screenplay/questions/mappings/string~trim",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 174,
    "kind": "external",
    "name": "q",
    "externalLink": "/modules/core/function/index.html#static-function-q",
    "longname": "@serenity-js/core/lib/screenplay/questions~q",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 175,
    "kind": "external",
    "name": "Loop",
    "externalLink": "/modules/core/class/src/screenplay/tasks/Loop.ts~Loop.html",
    "longname": "@serenity-js/core/lib/screenplay/tasks~Loop",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 176,
    "kind": "external",
    "name": "Cast",
    "externalLink": "/modules/core/class/src/stage/Cast.ts~Cast.html",
    "longname": "@serenity-js/core/lib/stage~Cast",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 177,
    "kind": "external",
    "name": "Clock",
    "externalLink": "/modules/core/class/src/stage/Clock.ts~Clock.html",
    "longname": "@serenity-js/core/lib/stage~Clock",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 178,
    "kind": "external",
    "name": "DressingRoom",
    "externalLink": "/modules/core/class/src/stage/DressingRoom.ts~DressingRoom.html",
    "longname": "@serenity-js/core/lib/stage~DressingRoom",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 179,
    "kind": "external",
    "name": "ListensToDomainEvents",
    "externalLink": "/modules/core/class/src/stage/ListensToDomainEvents.ts~ListensToDomainEvents.html",
    "longname": "@serenity-js/core/lib/stage~ListensToDomainEvents",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 180,
    "kind": "external",
    "name": "Stage",
    "externalLink": "/modules/core/class/src/stage/Stage.ts~Stage.html",
    "longname": "@serenity-js/core/lib/stage~Stage",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 181,
    "kind": "external",
    "name": "StageCrewMember",
    "externalLink": "/modules/core/class/src/stage/StageCrewMember.ts~StageCrewMember.html",
    "longname": "@serenity-js/core/lib/stage~StageCrewMember",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 182,
    "kind": "external",
    "name": "StageCrewMemberBuilder",
    "externalLink": "/modules/core/class/src/stage/StageCrewMemberBuilder.ts~StageCrewMemberBuilder.html",
    "longname": "@serenity-js/core/lib/stage~StageCrewMemberBuilder",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 183,
    "kind": "external",
    "name": "StageCrewMemberBuilderDependencies",
    "externalLink": "/modules/core/class/src/stage/StageCrewMemberBuilderDependencies.ts~StageCrewMemberBuilderDependencies.html",
    "longname": "@serenity-js/core/lib/stage~StageCrewMemberBuilderDependencies",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 184,
    "kind": "external",
    "name": "StageManager",
    "externalLink": "/modules/core/class/src/stage/StageManager.ts~StageManager.html",
    "longname": "@serenity-js/core/lib/stage~StageManager",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 185,
    "kind": "external",
    "name": "WithStage",
    "externalLink": "/modules/core/class/src/stage/WithStage.ts~WithStage.html",
    "longname": "@serenity-js/core/lib/stage~WithStage",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 186,
    "kind": "external",
    "name": "ArtifactArchiver",
    "externalLink": "/modules/core/class/src/stage/crew/artifact-archiver/ArtifactArchiver.ts~ArtifactArchiver.html",
    "longname": "@serenity-js/core/lib/stage/crew/artifact-archiver~ArtifactArchiver",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 187,
    "kind": "external",
    "name": "StreamReporter",
    "externalLink": "/modules/core/class/src/stage/crew/stream-reporter/StreamReporter.ts~StreamReporter.html",
    "longname": "@serenity-js/core/lib/stage/crew/stream-reporter~StreamReporter",
    "memberof": "src/.imports-from-serenity-js-core.js",
    "static": true,
    "access": "public",
    "description": null,
    "builtinExternal": true
  },
  {
    "__docId__": 189,
    "kind": "external",
    "name": "JSONObject",
    "externalLink": "https://jan-molak.github.io/tiny-types/file/src/types/json.ts.html",
    "longname": "tiny-types~JSONObject",
    "memberof": "src/.imports-from-tiny-types.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 190,
    "kind": "external",
    "name": "TinyType",
    "externalLink": "https://jan-molak.github.io/tiny-types/class/src/TinyType.ts~TinyType.html",
    "longname": "tiny-types~TinyType",
    "memberof": "src/.imports-from-tiny-types.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 192,
    "kind": "external",
    "name": "ElementArray",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/webdriverio/src/types.ts",
    "longname": "@wdio/types~ElementArray",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 193,
    "kind": "external",
    "name": "Browser",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/webdriverio/src/types.ts",
    "longname": "@wdio/types~Browser",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 194,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/webdriverio/src/types.ts",
    "longname": "@wdio/types~Element",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 195,
    "kind": "external",
    "name": "Options.TestRunner",
    "externalLink": "https://github.com/webdriverio/webdriverio/blob/main/packages/wdio-types/src/Options.ts",
    "longname": "@wdio/types~Options.TestRunner",
    "memberof": "src/.imports-from-webdriverio.js",
    "static": true,
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "src/SerenityReporterForJasmine.ts",
    "content": "import { AssertionError, ImplementationPendingError, Serenity, TestCompromisedError } from '@serenity-js/core';\nimport {\n    DomainEvent,\n    SceneFinished,\n    SceneFinishes,\n    SceneStarts,\n    SceneTagged,\n    TaskFinished,\n    TaskStarts,\n    TestRunFinished,\n    TestRunFinishes,\n    TestRunnerDetected, TestRunStarts,\n    TestSuiteFinished,\n    TestSuiteStarts,\n} from '@serenity-js/core/lib/events';\nimport { ErrorSerialiser, FileSystemLocation } from '@serenity-js/core/lib/io';\nimport {\n    ActivityDetails,\n    Category,\n    CorrelationId,\n    ExecutionCompromised,\n    ExecutionFailedWithAssertionError,\n    ExecutionFailedWithError,\n    ExecutionSkipped,\n    ExecutionSuccessful,\n    FeatureTag,\n    ImplementationPending,\n    Name,\n    Outcome,\n    ProblemIndication,\n    ScenarioDetails,\n    TestSuiteDetails,\n} from '@serenity-js/core/lib/model';\n\nimport { Expectation, JasmineDoneInfo, JasmineReporter, JasmineStartedInfo, SpecResult, SuiteResult } from './jasmine';\n\n/**\n * @desc\n *  [Jasmine reporter](https://jasmine.github.io/tutorials/custom_reporter) that translates Jasmine-specific test events\n *  to Serenity/JS events.\n *\n * @see {@link bootstrap}\n * @implements {JasmineReporter}\n */\nexport class SerenityReporterForJasmine implements JasmineReporter {\n\n    private static readonly errorMessagePattern = /^([^\\s:]*Error):\\s(.*)$/;\n    private describes: SuiteResult[] = [];\n\n    private currentSceneId: CorrelationId = undefined;\n\n    /**\n     * @param {Serenity} serenity\n     */\n    constructor(private readonly serenity: Serenity) {\n    }\n\n    jasmineStarted(info: JasmineStartedInfo): void {\n        this.emit(new TestRunStarts(this.serenity.currentTime()));\n    }\n\n    suiteStarted(result: SuiteResult): void {\n        this.describes.push(result);\n\n        this.emit(new TestSuiteStarts(this.testSuiteDetailsOf(result), this.serenity.currentTime()));\n    }\n\n    suiteDone(result: SuiteResult): void {\n        this.describes = this.describes.filter(suite => suite.id !== result.id);\n\n        this.emit(new TestSuiteFinished(this.testSuiteDetailsOf(result), this.outcomeFrom(result), this.serenity.currentTime()));\n    }\n\n    specStarted(result: SpecResult): void {\n        this.currentSceneId = this.serenity.assignNewSceneId();\n\n        const details = this.scenarioDetailsOf(result);\n\n        this.emit(\n            new SceneStarts(this.currentSceneId, details, this.serenity.currentTime()),\n            new SceneTagged(this.currentSceneId, new FeatureTag(this.currentFeatureName()), this.serenity.currentTime()),\n            new TestRunnerDetected(this.currentSceneId, new Name('Jasmine'), this.serenity.currentTime()),\n        );\n    }\n\n    specDone(result: SpecResult): Promise<void> {\n\n        /**\n         * Serenity doesn't allow for more than one failure per activity, but Jasmine does.\n         * If there are multiple failures we wrap them up in fake activities so that they're all reported correctly.\n         */\n        if (result.failedExpectations.length > 1) {\n            result.failedExpectations.forEach(failedExpectation => {\n                const\n                    sceneId = this.serenity.currentSceneId(),\n                    activityId = this.serenity.assignNewActivityId();\n                const details = new ActivityDetails(new Name('Expectation'));\n\n                this.emit(\n                    new TaskStarts(sceneId, activityId, details, this.serenity.currentTime()),\n                    new TaskFinished(sceneId, activityId, details, this.failureOutcomeFrom(failedExpectation), this.serenity.currentTime()),\n                );\n            });\n        }\n\n        const\n            scenarioDetails = this.scenarioDetailsOf(result),\n            outcome = this.outcomeFrom(result);\n\n        this.emit(new SceneFinishes(\n            this.currentSceneId,\n            scenarioDetails,\n            outcome,\n            this.serenity.currentTime(),\n        ));\n\n        return this.serenity.waitForNextCue()\n            .then(() => {\n                this.emit(new SceneFinished(\n                    this.currentSceneId,\n                    scenarioDetails,\n                    outcome,\n                    this.serenity.currentTime(),\n                ));\n            }, error => {\n                this.emit(new SceneFinished(\n                    this.currentSceneId,\n                    scenarioDetails,\n                    new ExecutionFailedWithError(error),\n                    this.serenity.currentTime(),\n                ));\n\n                throw error;\n            });\n    }\n\n    jasmineDone(suiteInfo: JasmineDoneInfo): Promise<void> {\n        this.emit(new TestRunFinishes(this.serenity.currentTime()));\n\n        return this.serenity.waitForNextCue()\n            .then(() => {\n                this.emit(new TestRunFinished(this.serenity.currentTime()));\n            });\n    }\n\n    /**\n     * @private\n     * @param {DomainEvent[]} events\n     */\n    private emit(...events: DomainEvent[]): void {\n        events.forEach(event => this.serenity.announce(event));\n    }\n\n    /**\n     * @private\n     * @param {SpecResult} spec\n     * @returns {ScenarioDetails}\n     */\n    private scenarioDetailsOf(spec: SpecResult): ScenarioDetails {\n        return new ScenarioDetails(\n            new Name(this.currentScenarioNameFor(spec.description)),\n            new Category(this.currentFeatureName()),\n            FileSystemLocation.fromJSON(spec.location as any),\n        );\n    }\n\n    /**\n     * @private\n     * @param {SuiteResult} result\n     * @returns {TestSuiteDetails}\n     */\n    private testSuiteDetailsOf(result: SuiteResult): TestSuiteDetails {\n        return new TestSuiteDetails(\n            new Name(result.description),\n            FileSystemLocation.fromJSON(result.location as any),\n            new CorrelationId(result.id),\n        );\n    }\n\n    /**\n     * @private\n     * @returns {string}\n     */\n    private currentFeatureName(): string {\n        return this.describes[0]\n            ? this.describes[0].description\n            : 'Unknown feature';\n    }\n\n    /**\n     * @private\n     * @param {string} itBlockDescription\n     * @returns {string}\n     */\n    private currentScenarioNameFor(itBlockDescription: string): string {\n        const [ topSuite_, ...rest ] = this.describes;\n\n        return rest.reverse()\n            .reduce((name, current) => `${ current.description } ${ name }`, itBlockDescription);\n    }\n\n    /**\n     * @private\n     * @param {SpecResult | SuiteResult} result\n     * @returns {Outcome}\n     */\n    private outcomeFrom(result: SpecResult | SuiteResult): Outcome {\n        switch (result.status) {\n            case 'failed':\n                return this.failureOutcomeFrom(result.failedExpectations[0]);\n            case 'pending':\n                return new ImplementationPending(new ImplementationPendingError((result as any).pendingReason || ''));\n            case 'excluded':\n                return new ExecutionSkipped();\n            case 'passed':  // eslint-disable-line unicorn/no-useless-switch-case\n            default:\n                return new ExecutionSuccessful();\n        }\n    }\n\n    /**\n     * @private\n     * @param {Expectation} failure\n     * @returns {ProblemIndication}\n     */\n    private failureOutcomeFrom(failure: Expectation): ProblemIndication {\n        const error = this.errorFrom(failure);\n\n        if (error instanceof AssertionError) {\n            // sadly, Jasmine error propagation mechanism is rather basic\n            // and unable to serialise the expected/actual properties of the AssertionError object\n            return new ExecutionFailedWithAssertionError(error);\n        }\n\n        if (error instanceof TestCompromisedError) {\n            return new ExecutionCompromised(error);\n        }\n\n        if (failure.matcherName) {                       // the presence of a non-empty matcherName property indicates a Jasmine-specific assertion error\n            return new ExecutionFailedWithAssertionError(\n                new AssertionError(failure.message, failure.expected, failure.actual, error),\n            );\n        }\n\n        return new ExecutionFailedWithError(error);\n    }\n\n    private errorFrom(failure: Expectation): Error {\n        if (this.containsCorrectlySerialisedError(failure)) {\n            return ErrorSerialiser.deserialiseFromStackTrace(failure.stack);\n        }\n\n        if (this.containsIncorrectlySerialisedError(failure)) {\n            return ErrorSerialiser.deserialiseFromStackTrace(this.repairedStackTraceOf(failure));\n        }\n\n        return new Error(failure.message);\n    }\n\n    private containsCorrectlySerialisedError(failure: Expectation): boolean {\n        return !! failure.stack && SerenityReporterForJasmine.errorMessagePattern.test(failure.stack.split('\\n')[0]);\n    }\n\n    private containsIncorrectlySerialisedError(failure: Expectation): boolean {\n        return !! failure.stack && SerenityReporterForJasmine.errorMessagePattern.test(failure.message);\n    }\n\n    /**\n     * It seems like Jasmine mixes up serialisation and display logic,\n     * which means that its \"failure.stack\" is not really an Error stacktrace,\n     * but rather something along the lines of:\n     * \"error properties: AssertionError: undefined\"\n     * where the error message is lost, and there's an \"error properties:\" prefix present.\n     *\n     * Probably caused by this:\n     * https://github.com/jasmine/jasmine/blob/b4cbe9850fbe192eaffeae450669f96e79a574ed/src/core/ExceptionFormatter.js#L93\n     *\n     * @param {Expectation} failure\n     */\n    private repairedStackTraceOf(failure: Expectation): string {\n        return [\n            failure.message,\n            ...failure.stack.split('\\n').slice(1),\n        ].join('\\n');\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/SerenityReporterForJasmine.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "class",
    "name": "SerenityReporterForJasmine",
    "memberof": "src/SerenityReporterForJasmine.ts",
    "static": true,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/jasmine",
    "importStyle": "{SerenityReporterForJasmine}",
    "description": " [Jasmine reporter](https://jasmine.github.io/tutorials/custom_reporter) that translates Jasmine-specific test events\n to Serenity/JS events.",
    "see": [
      "{@link bootstrap}"
    ],
    "lineNumber": 52,
    "interface": false,
    "implements": [
      "JasmineReporter"
    ]
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "errorMessagePattern",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "static": true,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine.errorMessagePattern",
    "access": "private",
    "description": " ",
    "lineNumber": 47,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 199,
    "kind": "member",
    "name": "describes",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#describes",
    "access": "private",
    "description": " ",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "currentSceneId",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#currentSceneId",
    "access": "private",
    "description": " ",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "CorrelationId"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 201,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 95,
    "params": [
      {
        "nullable": null,
        "types": [
          "Serenity"
        ],
        "spread": false,
        "optional": false,
        "name": "serenity",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "jasmineStarted",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#jasmineStarted",
    "access": "public",
    "description": " ",
    "lineNumber": 58,
    "params": [
      {
        "nullable": null,
        "types": [
          "JasmineStartedInfo"
        ],
        "spread": false,
        "optional": false,
        "name": "info",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "suiteStarted",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#suiteStarted",
    "access": "public",
    "description": " ",
    "lineNumber": 62,
    "params": [
      {
        "nullable": null,
        "types": [
          "SuiteResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 204,
    "kind": "method",
    "name": "suiteDone",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#suiteDone",
    "access": "public",
    "description": " ",
    "lineNumber": 68,
    "params": [
      {
        "nullable": null,
        "types": [
          "SuiteResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 206,
    "kind": "method",
    "name": "specStarted",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#specStarted",
    "access": "public",
    "description": " ",
    "lineNumber": 74,
    "params": [
      {
        "nullable": null,
        "types": [
          "SpecResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "specDone",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#specDone",
    "access": "public",
    "description": " ",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "SpecResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "jasmineDone",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#jasmineDone",
    "access": "public",
    "description": " ",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "JasmineDoneInfo"
        ],
        "spread": false,
        "optional": false,
        "name": "suiteInfo",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 210,
    "kind": "method",
    "name": "emit",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#emit",
    "access": "private",
    "description": "",
    "lineNumber": 281,
    "params": [
      {
        "nullable": null,
        "types": [
          "DomainEvent[]"
        ],
        "spread": false,
        "optional": false,
        "name": "events",
        "description": ""
      }
    ],
    "ignore": true,
    "return": null
  },
  {
    "__docId__": 211,
    "kind": "method",
    "name": "scenarioDetailsOf",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#scenarioDetailsOf",
    "access": "private",
    "description": "",
    "lineNumber": 303,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ScenarioDetails}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SpecResult"
        ],
        "spread": false,
        "optional": false,
        "name": "spec",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ScenarioDetails"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 212,
    "kind": "method",
    "name": "testSuiteDetailsOf",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#testSuiteDetailsOf",
    "access": "private",
    "description": "",
    "lineNumber": 329,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{TestSuiteDetails}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SuiteResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "TestSuiteDetails"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 213,
    "kind": "method",
    "name": "currentFeatureName",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#currentFeatureName",
    "access": "private",
    "description": "",
    "lineNumber": 352,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 214,
    "kind": "method",
    "name": "currentScenarioNameFor",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#currentScenarioNameFor",
    "access": "private",
    "description": "",
    "lineNumber": 376,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{string}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "itBlockDescription",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 215,
    "kind": "method",
    "name": "outcomeFrom",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#outcomeFrom",
    "access": "private",
    "description": "",
    "lineNumber": 401,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Outcome}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "SpecResult ",
          " SuiteResult"
        ],
        "spread": false,
        "optional": false,
        "name": "result",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Outcome"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "failureOutcomeFrom",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#failureOutcomeFrom",
    "access": "private",
    "description": "",
    "lineNumber": 433,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{ProblemIndication}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Expectation"
        ],
        "spread": false,
        "optional": false,
        "name": "failure",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "ProblemIndication"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "errorFrom",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#errorFrom",
    "access": "private",
    "description": " ",
    "lineNumber": 248,
    "params": [
      {
        "nullable": null,
        "types": [
          "Expectation"
        ],
        "spread": false,
        "optional": false,
        "name": "failure",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Error"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "containsCorrectlySerialisedError",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#containsCorrectlySerialisedError",
    "access": "private",
    "description": " ",
    "lineNumber": 260,
    "params": [
      {
        "nullable": null,
        "types": [
          "Expectation"
        ],
        "spread": false,
        "optional": false,
        "name": "failure",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "containsIncorrectlySerialisedError",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#containsIncorrectlySerialisedError",
    "access": "private",
    "description": " ",
    "lineNumber": 264,
    "params": [
      {
        "nullable": null,
        "types": [
          "Expectation"
        ],
        "spread": false,
        "optional": false,
        "name": "failure",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "repairedStackTraceOf",
    "memberof": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/SerenityReporterForJasmine.ts~SerenityReporterForJasmine#repairedStackTraceOf",
    "access": "private",
    "description": "It seems like Jasmine mixes up serialisation and display logic,\nwhich means that its \"failure.stack\" is not really an Error stacktrace,\nbut rather something along the lines of:\n\"error properties: AssertionError: undefined\"\nwhere the error message is lost, and there's an \"error properties:\" prefix present.\n\nProbably caused by this:\nhttps://github.com/jasmine/jasmine/blob/b4cbe9850fbe192eaffeae450669f96e79a574ed/src/core/ExceptionFormatter.js#L93 ",
    "lineNumber": 280,
    "params": [
      {
        "nullable": null,
        "types": [
          "Expectation"
        ],
        "spread": false,
        "optional": false,
        "name": "failure",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 221,
    "kind": "file",
    "name": "src/adapter/JasmineAdapter.ts",
    "content": "import { ModuleLoader, TestRunnerAdapter } from '@serenity-js/core/lib/io';\nimport { ExecutionIgnored, Outcome } from '@serenity-js/core/lib/model';\n\nimport { AcceptingSpecFilter, CustomFunctionSpecFilter, GrepSpecFilter, InvertedGrepSpecFilter, SpecFilter } from './filters';\nimport { JasmineConfig } from './JasmineConfig';\nimport reporter = require('../index');\n\n/**\n * @desc\n *  Allows for programmatic execution of Jasmine test scenarios,\n *  using {@link SerenityReporterForJasmine} to report progress.\n *\n * @implements {@serenity-js/core/lib/io~TestRunnerAdapter}\n */\nexport class JasmineAdapter implements TestRunnerAdapter {\n\n    private runner: any;\n    private totalScenarios = 0;\n\n    private static readonly defaultConfig = {\n        /*\n         * Serenity/JS doesn't use Jasmine's assertions, so this mechanism can be disabled\n         */\n        oneFailurePerSpec: true,\n\n        /*\n         * A spec should stop execution as soon as there's a hook or spec failure\n         * See https://github.com/angular/protractor/issues/3234\n         */\n        stopSpecOnExpectationFailure: true,\n\n        /*\n         * Default to not executing tests at random.\n         * See https://github.com/angular/protractor/blob/4f74a4ec753c97adfe955fe468a39286a0a55837/lib/frameworks/jasmine.js#L76\n         */\n        random: false,\n    };\n\n    /**\n     * @param {JasmineConfig} config\n     * @param {@serenity-js/core/lib/io~ModuleLoader} loader\n     */\n    constructor(\n        private readonly config: JasmineConfig,\n        private readonly loader: ModuleLoader,\n    ) {\n    }\n\n    /**\n     * @desc\n     *  Scenario success threshold for this test runner.\n     *\n     * @returns {Outcome | { Code: number }}\n     */\n    successThreshold(): Outcome | { Code: number } {\n        return ExecutionIgnored;\n    }\n\n    /**\n     * @desc\n     *  Loads test scenarios.\n     *\n     * @param {string[]} pathsToScenarios\n     *\n     * @returns {Promise<void>}\n     */\n    async load(pathsToScenarios: string[]): Promise<void> {\n        const JasmineRunner = this.loader.require('jasmine');\n        this.runner         = new JasmineRunner({ projectBaseDir: '' });\n\n        if (this.config.defaultTimeoutInterval) {\n            this.runner.jasmine.DEFAULT_TIMEOUT_INTERVAL = this.config.defaultTimeoutInterval;\n        }\n\n        this.runner.clearReporters();\n\n        this.runner.loadConfig(Object.assign(\n            JasmineAdapter.defaultConfig,\n            this.config,\n        ));\n\n        this.runner.addReporter(reporter(this.runner.jasmine));\n\n        if (this.config.reporters) {\n            this.config.reporters.forEach(reporter => {\n                this.runner.addReporter(reporter)\n            });\n        }\n\n        this.runner.configureDefaultReporter(this.config);\n\n        this.runner.loadRequires();\n        this.runner.loadHelpers();\n\n        this.configureSpecFilter();\n\n        await this.loadSpecs(pathsToScenarios);\n\n        this.countScenarios(this.runner.env.topSuite())\n    }\n\n    private configureSpecFilter(): void {\n        /*\n         * Configure spec filter\n         */\n        this.runner.env.configure({\n            specFilter: spec => this.specFilter().matches(spec.getFullName()),\n        })\n    }\n\n    private async loadSpecs(pathsToScenarios: string[]): Promise<void> {\n        this.runner.specDir     = '';\n        this.runner.specFiles   = [];\n        this.runner.addSpecFiles(pathsToScenarios);\n\n        await this.runner.loadSpecs();\n    }\n\n    private specFilter(): SpecFilter {\n        if (this.config.specFilter) {\n            return new CustomFunctionSpecFilter(this.config.specFilter);\n        }\n\n        if (this.config.grep) {\n            return this.config.invertGrep\n                ? new InvertedGrepSpecFilter(this.config.grep)\n                : new GrepSpecFilter(this.config.grep);\n        }\n\n        return new AcceptingSpecFilter();\n    }\n\n    /**\n     * @desc\n     *  Returns the number of loaded scenarios\n     *\n     * @returns {number}\n     */\n    scenarioCount(): number {\n        return this.totalScenarios;\n    }\n\n    private countScenarios(suite: JasmineSuite): void {\n        suite.children?.forEach((child) => {\n            if (Array.isArray(child.children)) {\n                return this.countScenarios(child)\n            }\n            if (this.specFilter().matches(child.getFullName())) {\n                this.totalScenarios++\n            }\n        })\n    }\n\n    /**\n     * @desc\n     *  Runs loaded test scenarios.\n     *\n     * @returns {Promise<void>}\n     */\n    run(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            this.runner.onComplete((passed: boolean) => resolve());\n            this.runner.execute();\n        });\n    }\n}\n\n/**\n * @package\n */\ninterface JasmineSuite extends JasmineSpec {\n    children?: JasmineSuite[]\n}\n\n/**\n * @package\n */\ninterface JasmineSpec {\n    getFullName(): string;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/adapter/JasmineAdapter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "class",
    "name": "JasmineAdapter",
    "memberof": "src/adapter/JasmineAdapter.ts",
    "static": true,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/jasmine/lib/adapter",
    "importStyle": "{JasmineAdapter}",
    "description": " Allows for programmatic execution of Jasmine test scenarios,\n using {@link SerenityReporterForJasmine} to report progress.",
    "lineNumber": 22,
    "interface": false,
    "implements": [
      "TestRunnerAdapter"
    ]
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "runner",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "static": false,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter#runner",
    "access": "private",
    "description": " ",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "totalScenarios",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "static": false,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter#totalScenarios",
    "access": "private",
    "description": " ",
    "lineNumber": 18,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "defaultConfig",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "static": true,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter.defaultConfig",
    "access": "private",
    "description": " ",
    "lineNumber": 20,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 226,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 81,
    "params": [
      {
        "nullable": null,
        "types": [
          "JasmineConfig"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "ModuleLoader"
        ],
        "spread": false,
        "optional": false,
        "name": "loader",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 227,
    "kind": "method",
    "name": "successThreshold",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter#successThreshold",
    "access": "public",
    "description": " Scenario success threshold for this test runner.",
    "lineNumber": 104,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Outcome | { Code: number }}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Outcome ",
        " { Code: number }"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "load",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter#load",
    "access": "public",
    "description": " Loads test scenarios.",
    "lineNumber": 140,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "pathsToScenarios",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 230,
    "kind": "method",
    "name": "configureSpecFilter",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter#configureSpecFilter",
    "access": "private",
    "description": " ",
    "lineNumber": 102,
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 231,
    "kind": "method",
    "name": "loadSpecs",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter#loadSpecs",
    "access": "private",
    "description": " ",
    "lineNumber": 111,
    "params": [
      {
        "nullable": null,
        "types": [
          "UNKNOWN"
        ],
        "spread": false,
        "optional": false,
        "name": "pathsToScenarios",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 232,
    "kind": "method",
    "name": "specFilter",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter#specFilter",
    "access": "private",
    "description": " ",
    "lineNumber": 119,
    "return": {
      "nullable": null,
      "types": [
        "SpecFilter"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true,
    "params": []
  },
  {
    "__docId__": 233,
    "kind": "method",
    "name": "scenarioCount",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter#scenarioCount",
    "access": "public",
    "description": " Returns the number of loaded scenarios",
    "lineNumber": 258,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 234,
    "kind": "method",
    "name": "countScenarios",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter#countScenarios",
    "access": "private",
    "description": " ",
    "lineNumber": 143,
    "params": [
      {
        "nullable": null,
        "types": [
          "JasmineSuite"
        ],
        "spread": false,
        "optional": false,
        "name": "suite",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "void"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "run",
    "memberof": "src/adapter/JasmineAdapter.ts~JasmineAdapter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/JasmineAdapter.ts~JasmineAdapter#run",
    "access": "public",
    "description": " Runs loaded test scenarios.",
    "lineNumber": 303,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise<void>}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<void>"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 236,
    "kind": "file",
    "name": "src/adapter/JasmineConfig.ts",
    "content": "/**\n * @desc\n *  Configuration object that will be passed to the JasmineRunner.\n *\n * @see https://jasmine.github.io/setup/nodejs.html\n */\nimport { JasmineReporter } from '../jasmine';\n\nexport interface JasmineConfig {\n\n    /**\n     * @desc\n     *  A list of paths to helper files that should be loaded and executed before the `requires` and the `specs`.\n     *  Accepts relative and absolute paths as well as glob expressions.\n     *\n     * @type {string[] | undefined}\n     * @see https://jasmine.github.io/tutorials/react_with_npm\n     */\n    helpers?: string[];\n\n    /**\n     * @desc\n     *  A list of paths to files that should be required after the `helpers`, but before the `specs`.\n     *  The path need to be compatible with Node {@link require}.\n     *\n     * @type {string[] | undefined}\n     */\n    requires?: string[];\n\n    /**\n     * @desc\n     *  Whether or not the tests should be executed in a pseudo-random order.\n     *\n     * @type {boolean | undefined}\n     */\n    random?: boolean;\n\n    /**\n     * @desc\n     *  Used to exclude any test scenarios which name doesn't match the pattern from the run.\n     *\n     * @type {string | RegExp | undefined}\n     */\n    grep?: string | RegExp;\n\n    /**\n     * @desc\n     *  Inverts 'grep' matches.\n     *\n     *  Defaults to `false`\n     *\n     * @type {boolean | undefined}\n     */\n    invertGrep?: boolean;\n\n    /**\n     * @desc\n     *  Receives the full name of a test scenario and returns `true`\n     *  for those that should be executed.\n     *\n     *  Takes precedence over `grep`\n     *\n     * @type {function(specName: string): boolean}\n     */\n    specFilter?: (specName: string) => boolean\n\n    /**\n     * @desc\n     *  The randomisation seed that will be used to determine the pseudo-random order of execution,\n     *  if `random` is set to `true`\n     *\n     * @type {string | undefined}\n     * @see {@link JasmineConfig#random}\n     */\n    seed?: string;\n\n    /**\n     * @desc\n     *  Sets the global `jasmine.DEFAULT_TIMEOUT_INTERVAL`,\n     *  which defines the default number of milliseconds Jasmine will wait for an asynchronous spec to complete.\n     *\n     * @type {number | undefined}\n     * @see https://jasmine.github.io/api/edge/jasmine#.DEFAULT_TIMEOUT_INTERVAL\n     */\n    defaultTimeoutInterval?: number;\n\n    /**\n     * @desc\n     *  A list of Jasmine reporters to be added to the test runner.\n     *\n     *  Useful for situations like configuring ReportPortal, because you cannot use `jasmine.addReporter()` in the Protractor config.\n     *\n     *  Note: reporters must be instantiated before adding them to the configuration.\n     *\n     * @type {JasmineReporter[] | undefined}\n     *\n     * @example <caption>Using ReportPortal with Protractor and Jasmine</caption>\n     *  // protractor.conf.js\n     *  const AgentJasmine = require('@reportportal/agent-js-jasmine')\n     *  const agent = new AgentJasmine(require('./reportportalConf'))\n     *  // ...\n     *  jasmineNodeOpts: {\n     *    // ...\n     *    reporters: [ agent.getJasmineReporter() ],\n     *  }\n     *\n     *  afterLaunch:() => {\n     *    return agent.getExitPromise();\n     *  },\n     */\n    reporters?: JasmineReporter[];\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/adapter/JasmineConfig.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 237,
    "kind": "class",
    "name": "JasmineConfig",
    "memberof": "src/adapter/JasmineConfig.ts",
    "static": true,
    "longname": "src/adapter/JasmineConfig.ts~JasmineConfig",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/jasmine/lib/adapter",
    "importStyle": "{JasmineConfig}",
    "description": " Configuration object that will be passed to the JasmineRunner.",
    "see": [
      "https://jasmine.github.io/setup/nodejs.html"
    ],
    "lineNumber": 14,
    "interface": true
  },
  {
    "__docId__": 238,
    "kind": "member",
    "name": "helpers",
    "memberof": "src/adapter/JasmineConfig.ts~JasmineConfig",
    "static": false,
    "longname": "src/adapter/JasmineConfig.ts~JasmineConfig#helpers",
    "access": "public",
    "description": " A list of paths to helper files that should be loaded and executed before the `requires` and the `specs`.\n Accepts relative and absolute paths as well as glob expressions.",
    "see": [
      "https://jasmine.github.io/tutorials/react_with_npm"
    ],
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string[] ",
        " undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 239,
    "kind": "member",
    "name": "requires",
    "memberof": "src/adapter/JasmineConfig.ts~JasmineConfig",
    "static": false,
    "longname": "src/adapter/JasmineConfig.ts~JasmineConfig#requires",
    "access": "public",
    "description": " A list of paths to files that should be required after the `helpers`, but before the `specs`.\n The path need to be compatible with Node {@link require}.",
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "string[] ",
        " undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 240,
    "kind": "member",
    "name": "random",
    "memberof": "src/adapter/JasmineConfig.ts~JasmineConfig",
    "static": false,
    "longname": "src/adapter/JasmineConfig.ts~JasmineConfig#random",
    "access": "public",
    "description": " Whether or not the tests should be executed in a pseudo-random order.",
    "lineNumber": 74,
    "type": {
      "nullable": null,
      "types": [
        "boolean ",
        " undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 241,
    "kind": "member",
    "name": "grep",
    "memberof": "src/adapter/JasmineConfig.ts~JasmineConfig",
    "static": false,
    "longname": "src/adapter/JasmineConfig.ts~JasmineConfig#grep",
    "access": "public",
    "description": " Used to exclude any test scenarios which name doesn't match the pattern from the run.",
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "string ",
        " RegExp ",
        " undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 242,
    "kind": "member",
    "name": "invertGrep",
    "memberof": "src/adapter/JasmineConfig.ts~JasmineConfig",
    "static": false,
    "longname": "src/adapter/JasmineConfig.ts~JasmineConfig#invertGrep",
    "access": "public",
    "description": " Inverts 'grep' matches.\n\n Defaults to `false`",
    "lineNumber": 114,
    "type": {
      "nullable": null,
      "types": [
        "boolean ",
        " undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 243,
    "kind": "member",
    "name": "specFilter",
    "memberof": "src/adapter/JasmineConfig.ts~JasmineConfig",
    "static": false,
    "longname": "src/adapter/JasmineConfig.ts~JasmineConfig#specFilter",
    "access": "public",
    "description": " Receives the full name of a test scenario and returns `true`\n for those that should be executed.\n\n Takes precedence over `grep`",
    "lineNumber": 136,
    "type": {
      "nullable": null,
      "types": [
        "function(specName: string): boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 244,
    "kind": "member",
    "name": "seed",
    "memberof": "src/adapter/JasmineConfig.ts~JasmineConfig",
    "static": false,
    "longname": "src/adapter/JasmineConfig.ts~JasmineConfig#seed",
    "access": "public",
    "description": " The randomisation seed that will be used to determine the pseudo-random order of execution,\n if `random` is set to `true`",
    "see": [
      "{@link JasmineConfig#random}"
    ],
    "lineNumber": 157,
    "type": {
      "nullable": null,
      "types": [
        "string ",
        " undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 245,
    "kind": "member",
    "name": "defaultTimeoutInterval",
    "memberof": "src/adapter/JasmineConfig.ts~JasmineConfig",
    "static": false,
    "longname": "src/adapter/JasmineConfig.ts~JasmineConfig#defaultTimeoutInterval",
    "access": "public",
    "description": " Sets the global `jasmine.DEFAULT_TIMEOUT_INTERVAL`,\n which defines the default number of milliseconds Jasmine will wait for an asynchronous spec to complete.",
    "see": [
      "https://jasmine.github.io/api/edge/jasmine#.DEFAULT_TIMEOUT_INTERVAL"
    ],
    "lineNumber": 178,
    "type": {
      "nullable": null,
      "types": [
        "number ",
        " undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 246,
    "kind": "member",
    "name": "reporters",
    "memberof": "src/adapter/JasmineConfig.ts~JasmineConfig",
    "static": false,
    "longname": "src/adapter/JasmineConfig.ts~JasmineConfig#reporters",
    "access": "public",
    "description": " A list of Jasmine reporters to be added to the test runner.\n\n Useful for situations like configuring ReportPortal, because you cannot use `jasmine.addReporter()` in the Protractor config.\n\n Note: reporters must be instantiated before adding them to the configuration.",
    "examples": [
      "<caption>Using ReportPortal with Protractor and Jasmine</caption>\n // protractor.conf.js\n const AgentJasmine = require('@reportportal/agent-js-jasmine')\n const agent = new AgentJasmine(require('./reportportalConf'))\n // ...\n jasmineNodeOpts: {\n   // ...\n   reporters: [ agent.getJasmineReporter() ],\n }\n\n afterLaunch:() => {\n   return agent.getExitPromise();\n },"
    ],
    "lineNumber": 215,
    "type": {
      "nullable": null,
      "types": [
        "JasmineReporter[] ",
        " undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 247,
    "kind": "file",
    "name": "src/adapter/filters/AcceptingSpecFilter.ts",
    "content": "import { SpecFilter } from './SpecFilter';\n\n/**\n * @package\n */\nexport class AcceptingSpecFilter implements SpecFilter {\n    matches(specName: string): boolean {\n        return true;\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/adapter/filters/AcceptingSpecFilter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 248,
    "kind": "class",
    "name": "AcceptingSpecFilter",
    "memberof": "src/adapter/filters/AcceptingSpecFilter.ts",
    "static": true,
    "longname": "src/adapter/filters/AcceptingSpecFilter.ts~AcceptingSpecFilter",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/jasmine/src/adapter/filters/AcceptingSpecFilter.ts",
    "importStyle": "{AcceptingSpecFilter}",
    "description": "",
    "lineNumber": 13,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "matches",
    "memberof": "src/adapter/filters/AcceptingSpecFilter.ts~AcceptingSpecFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/filters/AcceptingSpecFilter.ts~AcceptingSpecFilter#matches",
    "access": "public",
    "description": " ",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "specName",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 250,
    "kind": "file",
    "name": "src/adapter/filters/CustomFunctionSpecFilter.ts",
    "content": "import { SpecFilter } from './SpecFilter';\n\n/**\n * @package\n */\nexport class CustomFunctionSpecFilter implements SpecFilter {\n    constructor(private readonly fn: (specName: string) => boolean) {\n    }\n\n    matches(specName: string): boolean {\n        return this.fn(specName);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/adapter/filters/CustomFunctionSpecFilter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "class",
    "name": "CustomFunctionSpecFilter",
    "memberof": "src/adapter/filters/CustomFunctionSpecFilter.ts",
    "static": true,
    "longname": "src/adapter/filters/CustomFunctionSpecFilter.ts~CustomFunctionSpecFilter",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/jasmine/src/adapter/filters/CustomFunctionSpecFilter.ts",
    "importStyle": "{CustomFunctionSpecFilter}",
    "description": "",
    "lineNumber": 13,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 252,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/adapter/filters/CustomFunctionSpecFilter.ts~CustomFunctionSpecFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/filters/CustomFunctionSpecFilter.ts~CustomFunctionSpecFilter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 14,
    "undocument": true
  },
  {
    "__docId__": 253,
    "kind": "method",
    "name": "matches",
    "memberof": "src/adapter/filters/CustomFunctionSpecFilter.ts~CustomFunctionSpecFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/filters/CustomFunctionSpecFilter.ts~CustomFunctionSpecFilter#matches",
    "access": "public",
    "description": " ",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "specName",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 254,
    "kind": "file",
    "name": "src/adapter/filters/GrepSpecFilter.ts",
    "content": "import { SpecFilter } from './SpecFilter';\n\n/**\n * @desc\n *  https://github.com/jasmine/jasmine-npm/blob/641c33d4765efb0486f68980a8b7d184dd797122/lib/filters/console_spec_filter.js\n *\n * @package\n */\nexport class GrepSpecFilter implements SpecFilter {\n    private readonly pattern: RegExp;\n\n    constructor(pattern: RegExp | string) {\n        this.pattern = new RegExp(pattern)\n    }\n\n    matches(specName: string): boolean {\n        return this.pattern.test(specName);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/adapter/filters/GrepSpecFilter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 255,
    "kind": "class",
    "name": "GrepSpecFilter",
    "memberof": "src/adapter/filters/GrepSpecFilter.ts",
    "static": true,
    "longname": "src/adapter/filters/GrepSpecFilter.ts~GrepSpecFilter",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/jasmine/src/adapter/filters/GrepSpecFilter.ts",
    "importStyle": "{GrepSpecFilter}",
    "description": " https://github.com/jasmine/jasmine-npm/blob/641c33d4765efb0486f68980a8b7d184dd797122/lib/filters/console_spec_filter.js",
    "lineNumber": 16,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 256,
    "kind": "member",
    "name": "pattern",
    "memberof": "src/adapter/filters/GrepSpecFilter.ts~GrepSpecFilter",
    "static": false,
    "longname": "src/adapter/filters/GrepSpecFilter.ts~GrepSpecFilter#pattern",
    "access": "private",
    "description": " ",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 257,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/adapter/filters/GrepSpecFilter.ts~GrepSpecFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/filters/GrepSpecFilter.ts~GrepSpecFilter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "matches",
    "memberof": "src/adapter/filters/GrepSpecFilter.ts~GrepSpecFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/filters/GrepSpecFilter.ts~GrepSpecFilter#matches",
    "access": "public",
    "description": " ",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "specName",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 260,
    "kind": "file",
    "name": "src/adapter/filters/InvertedGrepSpecFilter.ts",
    "content": "import { SpecFilter } from './SpecFilter';\n\n/**\n * @package\n */\nexport class InvertedGrepSpecFilter implements SpecFilter {\n    private readonly pattern: RegExp;\n\n    constructor(pattern: RegExp | string) {\n        this.pattern = new RegExp(pattern)\n    }\n\n    matches(specName: string): boolean {\n        return ! this.pattern.test(specName);\n    }\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/adapter/filters/InvertedGrepSpecFilter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "class",
    "name": "InvertedGrepSpecFilter",
    "memberof": "src/adapter/filters/InvertedGrepSpecFilter.ts",
    "static": true,
    "longname": "src/adapter/filters/InvertedGrepSpecFilter.ts~InvertedGrepSpecFilter",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/jasmine/src/adapter/filters/InvertedGrepSpecFilter.ts",
    "importStyle": "{InvertedGrepSpecFilter}",
    "description": "",
    "lineNumber": 13,
    "interface": false,
    "ignore": true
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "pattern",
    "memberof": "src/adapter/filters/InvertedGrepSpecFilter.ts~InvertedGrepSpecFilter",
    "static": false,
    "longname": "src/adapter/filters/InvertedGrepSpecFilter.ts~InvertedGrepSpecFilter#pattern",
    "access": "private",
    "description": " ",
    "lineNumber": 7,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 263,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/adapter/filters/InvertedGrepSpecFilter.ts~InvertedGrepSpecFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/filters/InvertedGrepSpecFilter.ts~InvertedGrepSpecFilter#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 265,
    "kind": "method",
    "name": "matches",
    "memberof": "src/adapter/filters/InvertedGrepSpecFilter.ts~InvertedGrepSpecFilter",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/adapter/filters/InvertedGrepSpecFilter.ts~InvertedGrepSpecFilter#matches",
    "access": "public",
    "description": " ",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "specName",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 266,
    "kind": "file",
    "name": "src/adapter/filters/SpecFilter.ts",
    "content": "/**\n * @package\n */\nexport interface SpecFilter {\n    matches(specName: string): boolean;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/adapter/filters/SpecFilter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 267,
    "kind": "class",
    "name": "SpecFilter",
    "memberof": "src/adapter/filters/SpecFilter.ts",
    "static": true,
    "longname": "src/adapter/filters/SpecFilter.ts~SpecFilter",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/jasmine/src/adapter/filters/SpecFilter.ts",
    "importStyle": "{SpecFilter}",
    "description": "",
    "lineNumber": 11,
    "interface": true,
    "ignore": true
  },
  {
    "__docId__": 268,
    "kind": "file",
    "name": "src/adapter/filters/index.ts",
    "content": "export * from './AcceptingSpecFilter';\nexport * from './CustomFunctionSpecFilter';\nexport * from './GrepSpecFilter';\nexport * from './InvertedGrepSpecFilter';\nexport * from './SpecFilter';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/adapter/filters/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 269,
    "kind": "file",
    "name": "src/adapter/index.ts",
    "content": "export * from './JasmineAdapter';\nexport * from './JasmineConfig';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/adapter/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 270,
    "kind": "file",
    "name": "src/bootstrap.ts",
    "content": "import { RuntimeError, serenity } from '@serenity-js/core';\n\nimport { monkeyPatched } from './monkeyPatched';\nimport { SerenityReporterForJasmine } from './SerenityReporterForJasmine';\n\n/**\n * @desc\n *  Monkey-patches Jasmine's Suite and Spec so that they provide more accurate information and\n *  returns a bootstrapped instance of the {@link SerenityReporterForJasmine} to be registered with Jasmine.\n *\n * @example <caption>Registering the reporter from the command line</caption>\n * jasmine --reporter=@serenity-js/jasmine\n *\n * @example <caption>Registering the reporter programmatically</caption>\n * import serenityReporterForJasmine = require('@serenity-js/jasmine');\n *\n * jasmine.getEnv().addReporter(serenityReporterForJasmine);\n *\n * @see {@link monkeyPatched}\n * @see {@link SerenityReporterForJasmine}\n *\n * @param {jasmine} jasmine - the global.jasmine instance\n * @returns {SerenityReporterForJasmine}\n */\nexport function bootstrap(jasmine = (global as any).jasmine): SerenityReporterForJasmine {\n    const wrappers = {\n        expectationResultFactory: originalExpectationResultFactory => ((attributes: { passed: boolean, error: Error }) => {\n            const result = originalExpectationResultFactory(attributes);\n\n            if (! attributes.passed && attributes.error instanceof RuntimeError) {\n                result.stack = attributes.error.stack;\n            }\n\n            return result;\n        }),\n    };\n\n    jasmine.Suite = monkeyPatched(jasmine.Suite, wrappers);\n    jasmine.Spec = monkeyPatched(jasmine.Spec, wrappers);\n\n    return new SerenityReporterForJasmine(serenity);\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/bootstrap.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "bootstrap",
    "memberof": "src/bootstrap.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/bootstrap.ts~bootstrap",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/jasmine",
    "importStyle": "{bootstrap}",
    "description": " Monkey-patches Jasmine's Suite and Spec so that they provide more accurate information and\n returns a bootstrapped instance of the {@link SerenityReporterForJasmine} to be registered with Jasmine.",
    "examples": [
      "<caption>Registering the reporter from the command line</caption>\njasmine --reporter=@serenity-js/jasmine",
      "<caption>Registering the reporter programmatically</caption>\nimport serenityReporterForJasmine = require('@serenity-js/jasmine');\n\njasmine.getEnv().addReporter(serenityReporterForJasmine);"
    ],
    "see": [
      "{@link monkeyPatched}",
      "{@link SerenityReporterForJasmine}"
    ],
    "lineNumber": 36,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{SerenityReporterForJasmine}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "jasmine"
        ],
        "spread": false,
        "optional": false,
        "name": "jasmine",
        "description": "the global.jasmine instance"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SerenityReporterForJasmine"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 272,
    "kind": "file",
    "name": "src/index.ts",
    "content": "import { bootstrap } from './bootstrap';\n\nexport = bootstrap;\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 273,
    "kind": "file",
    "name": "src/jasmine/Expectation.ts",
    "content": "/**\n * @package\n * @see https://jasmine.github.io/api/edge/global.html#Expectation\n */\nexport interface Expectation {\n\n    /** The name of the matcher that was executed for this expectation. */\n    matcherName: string;\n\n    /** The failure message for the expectation. */\n    message: string;\n\n    /** The stack trace for the failure if available. */\n    stack?: string;\n\n    /** Whether the expectation passed or failed. */\n    passed:\tboolean;\n\n    /** If the expectation failed, what was the expected value. */\n    expected?: any;\n\n    /** If the expectation failed, what actual value was produced. */\n    actual?: any;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/jasmine/Expectation.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 274,
    "kind": "class",
    "name": "Expectation",
    "memberof": "src/jasmine/Expectation.ts",
    "static": true,
    "longname": "src/jasmine/Expectation.ts~Expectation",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/jasmine/src/jasmine/Expectation.ts",
    "importStyle": "{Expectation}",
    "description": "",
    "see": [
      "https://jasmine.github.io/api/edge/global.html#Expectation"
    ],
    "lineNumber": 12,
    "interface": true,
    "ignore": true
  },
  {
    "__docId__": 275,
    "kind": "member",
    "name": "matcherName",
    "memberof": "src/jasmine/Expectation.ts~Expectation",
    "static": false,
    "longname": "src/jasmine/Expectation.ts~Expectation#matcherName",
    "access": "public",
    "description": "The name of the matcher that was executed for this expectation. ",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 276,
    "kind": "member",
    "name": "message",
    "memberof": "src/jasmine/Expectation.ts~Expectation",
    "static": false,
    "longname": "src/jasmine/Expectation.ts~Expectation#message",
    "access": "public",
    "description": "The failure message for the expectation. ",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 277,
    "kind": "member",
    "name": "stack",
    "memberof": "src/jasmine/Expectation.ts~Expectation",
    "static": false,
    "longname": "src/jasmine/Expectation.ts~Expectation#stack",
    "access": "public",
    "description": "The stack trace for the failure if available. ",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 278,
    "kind": "member",
    "name": "passed",
    "memberof": "src/jasmine/Expectation.ts~Expectation",
    "static": false,
    "longname": "src/jasmine/Expectation.ts~Expectation#passed",
    "access": "public",
    "description": "Whether the expectation passed or failed. ",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 279,
    "kind": "member",
    "name": "expected",
    "memberof": "src/jasmine/Expectation.ts~Expectation",
    "static": false,
    "longname": "src/jasmine/Expectation.ts~Expectation#expected",
    "access": "public",
    "description": "If the expectation failed, what was the expected value. ",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 280,
    "kind": "member",
    "name": "actual",
    "memberof": "src/jasmine/Expectation.ts~Expectation",
    "static": false,
    "longname": "src/jasmine/Expectation.ts~Expectation#actual",
    "access": "public",
    "description": "If the expectation failed, what actual value was produced. ",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 281,
    "kind": "file",
    "name": "src/jasmine/JasmineDoneInfo.ts",
    "content": "import { Expectation } from './Expectation';\nimport { Order } from './Order';\n\n/**\n * @desc\n *  Information passed to the Reporter#jasmineDone event.\n *\n * @package\n * @see https://jasmine.github.io/api/edge/global.html#JasmineDoneInfo\n */\nexport interface JasmineDoneInfo {\n\n    /** The overall result of the suite: 'passed', 'failed', or 'incomplete'. */\n    overallStatus: string;\n\n    /** Explanation of why the suite was incomplete. */\n    incompleteReason: string | undefined;\n\n    /** Information about the ordering (random or not) of this execution of the suite. */\n    order: Order;\n\n    /** List of expectations that failed in an afterAll at the global level. */\n    failedExpectations:\tExpectation[];\n\n    /** List of deprecation warnings that occurred at the global level. */\n    deprecationWarnings: Expectation[];\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/jasmine/JasmineDoneInfo.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 282,
    "kind": "class",
    "name": "JasmineDoneInfo",
    "memberof": "src/jasmine/JasmineDoneInfo.ts",
    "static": true,
    "longname": "src/jasmine/JasmineDoneInfo.ts~JasmineDoneInfo",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/jasmine/src/jasmine/JasmineDoneInfo.ts",
    "importStyle": "{JasmineDoneInfo}",
    "description": " Information passed to the Reporter#jasmineDone event.",
    "see": [
      "https://jasmine.github.io/api/edge/global.html#JasmineDoneInfo"
    ],
    "lineNumber": 18,
    "interface": true,
    "ignore": true
  },
  {
    "__docId__": 283,
    "kind": "member",
    "name": "overallStatus",
    "memberof": "src/jasmine/JasmineDoneInfo.ts~JasmineDoneInfo",
    "static": false,
    "longname": "src/jasmine/JasmineDoneInfo.ts~JasmineDoneInfo#overallStatus",
    "access": "public",
    "description": "The overall result of the suite: 'passed', 'failed', or 'incomplete'. ",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 284,
    "kind": "member",
    "name": "incompleteReason",
    "memberof": "src/jasmine/JasmineDoneInfo.ts~JasmineDoneInfo",
    "static": false,
    "longname": "src/jasmine/JasmineDoneInfo.ts~JasmineDoneInfo#incompleteReason",
    "access": "public",
    "description": "Explanation of why the suite was incomplete. ",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "undefined ",
        " undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 285,
    "kind": "member",
    "name": "order",
    "memberof": "src/jasmine/JasmineDoneInfo.ts~JasmineDoneInfo",
    "static": false,
    "longname": "src/jasmine/JasmineDoneInfo.ts~JasmineDoneInfo#order",
    "access": "public",
    "description": "Information about the ordering (random or not) of this execution of the suite. ",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "Order"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 286,
    "kind": "member",
    "name": "failedExpectations",
    "memberof": "src/jasmine/JasmineDoneInfo.ts~JasmineDoneInfo",
    "static": false,
    "longname": "src/jasmine/JasmineDoneInfo.ts~JasmineDoneInfo#failedExpectations",
    "access": "public",
    "description": "List of expectations that failed in an afterAll at the global level. ",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 287,
    "kind": "member",
    "name": "deprecationWarnings",
    "memberof": "src/jasmine/JasmineDoneInfo.ts~JasmineDoneInfo",
    "static": false,
    "longname": "src/jasmine/JasmineDoneInfo.ts~JasmineDoneInfo#deprecationWarnings",
    "access": "public",
    "description": "List of deprecation warnings that occurred at the global level. ",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "src/jasmine/JasmineReporter.ts",
    "content": "import { JasmineDoneInfo } from './JasmineDoneInfo';\nimport { JasmineStartedInfo } from './JasmineStartedInfo';\nimport { SpecResult } from './SpecResult';\nimport { SuiteResult } from './SuiteResult';\n\n/**\n * @desc\n *  An interface representing an instance of a Jasmine Reporter object\n *\n * @see https://jasmine.github.io/api/edge/Reporter.html\n * @interface\n */\nexport interface JasmineReporter {\n\n    /**\n     * @desc\n     *  Called after all of the specs have been loaded, but just before execution starts.\n     *\n     * @see https://jasmine.github.io/api/edge/Reporter.html#jasmineStarted\n     *\n     * @type {function(suiteInfo: JasmineStartedInfo): Promise<void> | void}\n     * @public\n     */\n    jasmineStarted?: (suiteInfo: JasmineStartedInfo) => Promise<void> | void;\n\n    /**\n     * @desc\n     *  Invoked when an `it` starts to run (including associated `beforeEach` functions)\n     *\n     * @see https://jasmine.github.io/api/edge/Reporter.html#specStarted\n     *\n     * @type {function(result: SpecResult): Promise<void> | void}\n     * @public\n     */\n    specStarted?: (result: SpecResult) => Promise<void> | void;\n\n    /**\n     * @desc\n     *  Invoked when an `it` and its associated `beforeEach` and `afterEach` functions have been run.\n     *\n     *  While Jasmine doesn't require any specific functions, not defining a `specDone`\n     *  will make it impossible for a reporter to know when a spec has failed.\n     *\n     * @see https://jasmine.github.io/api/edge/Reporter.html#specDone\n     *\n     * @type {function(result: SpecResult): Promise<void> | void}\n     * @public\n     */\n    specDone?: (result: SpecResult) => Promise<void> | void;\n\n    /**\n     * @desc\n     *  Invoked when a `describe` starts to run.\n     *\n     * @see https://jasmine.github.io/api/edge/Reporter.html#suiteStarted\n     *\n     * @type {function(result: SuiteResult): Promise<void> | void}\n     * @public\n     */\n    suiteStarted?: (result: SuiteResult) => Promise<void> | void;\n\n    /**\n     * @desc\n     *  Invoked when all of the child specs and suites for a given suite have been run.\n     *\n     *  While Jasmine doesn't require any specific functions, not defining a `suiteDone`\n     *  will make it impossible for a reporter to know when a suite has failures in an `afterAll`.\n     *\n     * @see https://jasmine.github.io/api/edge/Reporter.html#suiteDone\n     *\n     * @type {function(result: SuiteResult): Promise<void> | void}\n     * @public\n     */\n    suiteDone?: (result: SuiteResult) => Promise<void> | void;\n\n    /**\n     * @desc\n     *  Called when the entire suite has finished execution.\n     *\n     * @see https://jasmine.github.io/api/edge/Reporter.html#jasmineDone\n     *\n     * @type {function(suiteInfo: JasmineDoneInfo): Promise<void> | void}\n     * @public\n     */\n    jasmineDone?: (suiteInfo: JasmineDoneInfo) => Promise<void> | void;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/jasmine/JasmineReporter.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "class",
    "name": "JasmineReporter",
    "memberof": "src/jasmine/JasmineReporter.ts",
    "static": true,
    "longname": "src/jasmine/JasmineReporter.ts~JasmineReporter",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/jasmine/lib/jasmine",
    "importStyle": "{JasmineReporter}",
    "description": " An interface representing an instance of a Jasmine Reporter object",
    "see": [
      "https://jasmine.github.io/api/edge/Reporter.html"
    ],
    "lineNumber": 20,
    "interface": true
  },
  {
    "__docId__": 290,
    "kind": "member",
    "name": "jasmineStarted",
    "memberof": "src/jasmine/JasmineReporter.ts~JasmineReporter",
    "static": false,
    "longname": "src/jasmine/JasmineReporter.ts~JasmineReporter#jasmineStarted",
    "access": "public",
    "description": " Called after all of the specs have been loaded, but just before execution starts.",
    "see": [
      "https://jasmine.github.io/api/edge/Reporter.html#jasmineStarted"
    ],
    "lineNumber": 42,
    "type": {
      "nullable": null,
      "types": [
        "function(suiteInfo: JasmineStartedInfo): Promise<void> ",
        " void"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 291,
    "kind": "member",
    "name": "specStarted",
    "memberof": "src/jasmine/JasmineReporter.ts~JasmineReporter",
    "static": false,
    "longname": "src/jasmine/JasmineReporter.ts~JasmineReporter#specStarted",
    "access": "public",
    "description": " Invoked when an `it` starts to run (including associated `beforeEach` functions)",
    "see": [
      "https://jasmine.github.io/api/edge/Reporter.html#specStarted"
    ],
    "lineNumber": 64,
    "type": {
      "nullable": null,
      "types": [
        "function(result: SpecResult): Promise<void> ",
        " void"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 292,
    "kind": "member",
    "name": "specDone",
    "memberof": "src/jasmine/JasmineReporter.ts~JasmineReporter",
    "static": false,
    "longname": "src/jasmine/JasmineReporter.ts~JasmineReporter#specDone",
    "access": "public",
    "description": " Invoked when an `it` and its associated `beforeEach` and `afterEach` functions have been run.\n\n While Jasmine doesn't require any specific functions, not defining a `specDone`\n will make it impossible for a reporter to know when a spec has failed.",
    "see": [
      "https://jasmine.github.io/api/edge/Reporter.html#specDone"
    ],
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "function(result: SpecResult): Promise<void> ",
        " void"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 293,
    "kind": "member",
    "name": "suiteStarted",
    "memberof": "src/jasmine/JasmineReporter.ts~JasmineReporter",
    "static": false,
    "longname": "src/jasmine/JasmineReporter.ts~JasmineReporter#suiteStarted",
    "access": "public",
    "description": " Invoked when a `describe` starts to run.",
    "see": [
      "https://jasmine.github.io/api/edge/Reporter.html#suiteStarted"
    ],
    "lineNumber": 111,
    "type": {
      "nullable": null,
      "types": [
        "function(result: SuiteResult): Promise<void> ",
        " void"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 294,
    "kind": "member",
    "name": "suiteDone",
    "memberof": "src/jasmine/JasmineReporter.ts~JasmineReporter",
    "static": false,
    "longname": "src/jasmine/JasmineReporter.ts~JasmineReporter#suiteDone",
    "access": "public",
    "description": " Invoked when all of the child specs and suites for a given suite have been run.\n\n While Jasmine doesn't require any specific functions, not defining a `suiteDone`\n will make it impossible for a reporter to know when a suite has failures in an `afterAll`.",
    "see": [
      "https://jasmine.github.io/api/edge/Reporter.html#suiteDone"
    ],
    "lineNumber": 136,
    "type": {
      "nullable": null,
      "types": [
        "function(result: SuiteResult): Promise<void> ",
        " void"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 295,
    "kind": "member",
    "name": "jasmineDone",
    "memberof": "src/jasmine/JasmineReporter.ts~JasmineReporter",
    "static": false,
    "longname": "src/jasmine/JasmineReporter.ts~JasmineReporter#jasmineDone",
    "access": "public",
    "description": " Called when the entire suite has finished execution.",
    "see": [
      "https://jasmine.github.io/api/edge/Reporter.html#jasmineDone"
    ],
    "lineNumber": 158,
    "type": {
      "nullable": null,
      "types": [
        "function(suiteInfo: JasmineDoneInfo): Promise<void> ",
        " void"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 296,
    "kind": "file",
    "name": "src/jasmine/JasmineStartedInfo.ts",
    "content": "import { Order } from './Order';\n\n/**\n * @desc\n *  Information passed to the Reporter#jasmineStarted event.\n *\n * @package\n * @see https://jasmine.github.io/api/edge/global.html#JasmineStartedInfo\n */\nexport interface JasmineStartedInfo {\n\n    /** The total number of specs defined in this suite. */\n    totalSpecsDefined: number;\n\n    /** Information about the ordering (random or not) of this execution of the suite. */\n    order: Order;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/jasmine/JasmineStartedInfo.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 297,
    "kind": "class",
    "name": "JasmineStartedInfo",
    "memberof": "src/jasmine/JasmineStartedInfo.ts",
    "static": true,
    "longname": "src/jasmine/JasmineStartedInfo.ts~JasmineStartedInfo",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/jasmine/src/jasmine/JasmineStartedInfo.ts",
    "importStyle": "{JasmineStartedInfo}",
    "description": " Information passed to the Reporter#jasmineStarted event.",
    "see": [
      "https://jasmine.github.io/api/edge/global.html#JasmineStartedInfo"
    ],
    "lineNumber": 17,
    "interface": true,
    "ignore": true
  },
  {
    "__docId__": 298,
    "kind": "member",
    "name": "totalSpecsDefined",
    "memberof": "src/jasmine/JasmineStartedInfo.ts~JasmineStartedInfo",
    "static": false,
    "longname": "src/jasmine/JasmineStartedInfo.ts~JasmineStartedInfo#totalSpecsDefined",
    "access": "public",
    "description": "The total number of specs defined in this suite. ",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 299,
    "kind": "member",
    "name": "order",
    "memberof": "src/jasmine/JasmineStartedInfo.ts~JasmineStartedInfo",
    "static": false,
    "longname": "src/jasmine/JasmineStartedInfo.ts~JasmineStartedInfo#order",
    "access": "public",
    "description": "Information about the ordering (random or not) of this execution of the suite. ",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "Order"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 300,
    "kind": "file",
    "name": "src/jasmine/Location.ts",
    "content": "/**\n * @desc\n *  A Serenity/JS-specific customisation - the file system location of the caller of a given `it` and `describe` function.\n *\n * @package\n */\nexport interface Location {\n    path: string;\n    column: number;\n    line: number;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/jasmine/Location.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 301,
    "kind": "class",
    "name": "Location",
    "memberof": "src/jasmine/Location.ts",
    "static": true,
    "longname": "src/jasmine/Location.ts~Location",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/jasmine/src/jasmine/Location.ts",
    "importStyle": "{Location}",
    "description": " A Serenity/JS-specific customisation - the file system location of the caller of a given `it` and `describe` function.",
    "lineNumber": 14,
    "interface": true,
    "ignore": true
  },
  {
    "__docId__": 302,
    "kind": "member",
    "name": "path",
    "memberof": "src/jasmine/Location.ts~Location",
    "static": false,
    "longname": "src/jasmine/Location.ts~Location#path",
    "access": "public",
    "description": " ",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 303,
    "kind": "member",
    "name": "column",
    "memberof": "src/jasmine/Location.ts~Location",
    "static": false,
    "longname": "src/jasmine/Location.ts~Location#column",
    "access": "public",
    "description": " ",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 304,
    "kind": "member",
    "name": "line",
    "memberof": "src/jasmine/Location.ts~Location",
    "static": false,
    "longname": "src/jasmine/Location.ts~Location#line",
    "access": "public",
    "description": " ",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 305,
    "kind": "file",
    "name": "src/jasmine/Order.ts",
    "content": "/**\n * @desc\n *  Information about the ordering (random or not) of this execution of the suite.\n *\n * @package\n */\nexport interface Order {\n    random: boolean;\n    seed: string;\n    sort: (items: Array<{ id: number }>) => Array<{ id: number }>;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/jasmine/Order.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 306,
    "kind": "class",
    "name": "Order",
    "memberof": "src/jasmine/Order.ts",
    "static": true,
    "longname": "src/jasmine/Order.ts~Order",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/jasmine/src/jasmine/Order.ts",
    "importStyle": "{Order}",
    "description": " Information about the ordering (random or not) of this execution of the suite.",
    "lineNumber": 14,
    "interface": true,
    "ignore": true
  },
  {
    "__docId__": 307,
    "kind": "member",
    "name": "random",
    "memberof": "src/jasmine/Order.ts~Order",
    "static": false,
    "longname": "src/jasmine/Order.ts~Order#random",
    "access": "public",
    "description": " ",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 308,
    "kind": "member",
    "name": "seed",
    "memberof": "src/jasmine/Order.ts~Order",
    "static": false,
    "longname": "src/jasmine/Order.ts~Order#seed",
    "access": "public",
    "description": " ",
    "lineNumber": 9,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 309,
    "kind": "member",
    "name": "sort",
    "memberof": "src/jasmine/Order.ts~Order",
    "static": false,
    "longname": "src/jasmine/Order.ts~Order#sort",
    "access": "public",
    "description": " ",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 310,
    "kind": "file",
    "name": "src/jasmine/Result.ts",
    "content": "import { Expectation } from './Expectation';\n\nexport interface Result {\n\n    /** The unique id of this spec. */\n    id: string;\n\n    /** The description passed to the 'it' that created this spec. */\n    description: string;\n\n    /** The full description including all ancestors of this spec. */\n    fullName: string;\n\n    /** The list of expectations that failed during execution of this spec. */\n    failedExpectations: Expectation[];\n\n    /** The list of deprecation warnings that occurred during execution this spec. */\n    deprecationWarnings: Expectation[];\n\n    /** Once the spec has completed, this string represents the pass/fail status of this spec. */\n    status?: string;\n\n    /** The time in ms used by the spec execution, including any before/afterEach. */\n    duration: number | null;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/jasmine/Result.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 311,
    "kind": "file",
    "name": "src/jasmine/SpecResult.ts",
    "content": "import { Expectation } from './Expectation';\nimport { Location } from './Location';\n\nexport interface SpecResult {\n    /** The unique id of this spec. */\n    id: string;\n\n    /** The description passed to the 'it' that created this spec. */\n    description: string;\n\n    /** The full description including all ancestors of this spec. */\n    fullName: string;\n\n    /** The list of expectations that failed during execution of this spec. */\n    failedExpectations: Expectation[];\n\n    /** The list of expectations that passed during execution of this spec. */\n    passedExpectations: Expectation[];\n\n    /** The list of deprecation warnings that occurred during execution this spec. */\n    deprecationWarnings: Expectation[];\n\n    /** If the spec is pending, this will be the reason. */\n    pendingReason: string;\n\n    /** Once the spec has completed, this string represents the pass/fail status of this spec. */\n    status?: string;\n\n    /** The time in ms used by the spec execution, including any before/afterEach. */\n    duration: number | null;\n\n    location: Location;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/jasmine/SpecResult.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 312,
    "kind": "file",
    "name": "src/jasmine/SuiteResult.ts",
    "content": "import { Expectation } from './Expectation';\nimport { Location } from './Location';\nimport { Result } from './Result';\n\n/**\n * @package\n * @see https://jasmine.github.io/api/edge/global.html#SuiteResult\n */\nexport interface SuiteResult extends Result {\n    /** The unique id of this suite. */\n    id: string;\n\n    /** The description text passed to the `describe` that made this suite. */\n    description: string;\n\n    /** The full description including all ancestors of this suite. */\n    fullName: string;\n\n    /** The list of expectations that failed in an afterAll for this suite. */\n    failedExpectations:\tExpectation[];\n\n    /** The list of deprecation warnings that occurred on this suite. */\n    deprecationWarnings: Expectation[];\n\n    /** Once the suite has completed, this string represents the pass/fail status of this suite. */\n    status?:\tstring;\n\n    /** The time in ms for Suite execution, including any before/afterAll, before/afterEach. */\n    duration: number | null;\n\n    location: Location;\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/jasmine/SuiteResult.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 313,
    "kind": "class",
    "name": "SuiteResult",
    "memberof": "src/jasmine/SuiteResult.ts",
    "static": true,
    "longname": "src/jasmine/SuiteResult.ts~SuiteResult",
    "access": "package",
    "export": true,
    "importPath": "@serenity-js/jasmine/src/jasmine/SuiteResult.ts",
    "importStyle": "{SuiteResult}",
    "description": "",
    "see": [
      "https://jasmine.github.io/api/edge/global.html#SuiteResult"
    ],
    "lineNumber": 16,
    "interface": true,
    "extends": [
      "src/jasmine/Result.js~Result"
    ],
    "ignore": true
  },
  {
    "__docId__": 314,
    "kind": "member",
    "name": "id",
    "memberof": "src/jasmine/SuiteResult.ts~SuiteResult",
    "static": false,
    "longname": "src/jasmine/SuiteResult.ts~SuiteResult#id",
    "access": "public",
    "description": "The unique id of this suite. ",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "description",
    "memberof": "src/jasmine/SuiteResult.ts~SuiteResult",
    "static": false,
    "longname": "src/jasmine/SuiteResult.ts~SuiteResult#description",
    "access": "public",
    "description": "The description text passed to the `describe` that made this suite. ",
    "lineNumber": 14,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 316,
    "kind": "member",
    "name": "fullName",
    "memberof": "src/jasmine/SuiteResult.ts~SuiteResult",
    "static": false,
    "longname": "src/jasmine/SuiteResult.ts~SuiteResult#fullName",
    "access": "public",
    "description": "The full description including all ancestors of this suite. ",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 317,
    "kind": "member",
    "name": "failedExpectations",
    "memberof": "src/jasmine/SuiteResult.ts~SuiteResult",
    "static": false,
    "longname": "src/jasmine/SuiteResult.ts~SuiteResult#failedExpectations",
    "access": "public",
    "description": "The list of expectations that failed in an afterAll for this suite. ",
    "lineNumber": 20,
    "type": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "deprecationWarnings",
    "memberof": "src/jasmine/SuiteResult.ts~SuiteResult",
    "static": false,
    "longname": "src/jasmine/SuiteResult.ts~SuiteResult#deprecationWarnings",
    "access": "public",
    "description": "The list of deprecation warnings that occurred on this suite. ",
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "UNKNOWN"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 319,
    "kind": "member",
    "name": "status",
    "memberof": "src/jasmine/SuiteResult.ts~SuiteResult",
    "static": false,
    "longname": "src/jasmine/SuiteResult.ts~SuiteResult#status",
    "access": "public",
    "description": "Once the suite has completed, this string represents the pass/fail status of this suite. ",
    "lineNumber": 26,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 320,
    "kind": "member",
    "name": "duration",
    "memberof": "src/jasmine/SuiteResult.ts~SuiteResult",
    "static": false,
    "longname": "src/jasmine/SuiteResult.ts~SuiteResult#duration",
    "access": "public",
    "description": "The time in ms for Suite execution, including any before/afterAll, before/afterEach. ",
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "undefined ",
        " undefined"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 321,
    "kind": "member",
    "name": "location",
    "memberof": "src/jasmine/SuiteResult.ts~SuiteResult",
    "static": false,
    "longname": "src/jasmine/SuiteResult.ts~SuiteResult#location",
    "access": "public",
    "description": " ",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Location"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 322,
    "kind": "file",
    "name": "src/jasmine/index.ts",
    "content": "/* istanbul ignore file */\nexport * from './Expectation';\nexport * from './JasmineDoneInfo';\nexport * from './JasmineReporter';\nexport * from './JasmineStartedInfo';\nexport * from './Order';\nexport * from './SpecResult';\nexport * from './SuiteResult';\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/jasmine/index.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 323,
    "kind": "file",
    "name": "src/monkeyPatched.ts",
    "content": "import { ErrorStackParser } from '@serenity-js/core/lib/io';\n\nconst parser = new ErrorStackParser();\n\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/ban-types */\n\n/**\n * @desc\n *  Monkey-patches Jasmine domain model constructors so that they\n *  record information about the file system location of the caller function.\n *\n *  This helps to make reporting more accurate.\n *\n * @param jasmineConstructor - A Jasmine constructor function to be patched\n * @param {object} wrappers - Attributes to wrap when the monkey-patched Jasmine constructor is invoked\n */\nexport function monkeyPatched(\n    jasmineConstructor: any,\n    wrappers: {[key: string]: (original: (attrs: object) => any) => (attrs: object) => any} = {},\n) {\n    const result = function MonkeyPatched(attrs: object) {\n\n        Object.keys(wrappers).forEach(key => {\n            attrs[key] = wrappers[key](attrs[key]);\n        });\n\n        const instance = new jasmineConstructor(attrs);\n        instance.result.location = callerLocation();\n\n        return instance;\n    };\n\n    Object.getOwnPropertyNames(jasmineConstructor)\n        .filter(isAStaticProperty)\n        .forEach(property => {\n            result[property] = jasmineConstructor[property];\n        });\n\n    return result;\n}\n\n// eslint-enable\n\n/**\n * @desc\n *  Retrieves the file system location of the caller function.\n *\n * @package\n */\nfunction callerLocation() {\n    const found = parser.parse(new Error('fake error'))\n        .filter(frame => ! /(node_modules)/.test(frame.fileName))\n        .find(frame => /^(Suite|Object)/.test(frame.functionName));\n\n    const caller = found || { fileName: 'unknown', lineNumber: 0, columnNumber: 0 };\n\n    return {\n        path: caller.fileName,\n        line: caller.lineNumber,\n        column: caller.columnNumber,\n    };\n}\n\n/**\n * @desc\n *  Checks if a given property is likely to be a static method or a static field on the constructor function.\n *\n * @param {string} property - name of the property to be checked\n *\n * @package\n */\nfunction isAStaticProperty(property: string) {\n    return ! ~['length', 'name', 'arguments', 'caller', 'prototype'].indexOf(property);\n}\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/src/monkeyPatched.ts",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 324,
    "kind": "variable",
    "name": "parser",
    "memberof": "src/monkeyPatched.ts",
    "static": true,
    "longname": "src/monkeyPatched.ts~parser",
    "access": "public",
    "export": false,
    "importPath": "@serenity-js/jasmine/src/monkeyPatched.ts",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "ignore": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 325,
    "kind": "function",
    "name": "monkeyPatched",
    "memberof": "src/monkeyPatched.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/monkeyPatched.ts~monkeyPatched",
    "access": "public",
    "export": true,
    "importPath": "@serenity-js/jasmine",
    "importStyle": "{monkeyPatched}",
    "description": " Monkey-patches Jasmine domain model constructors so that they\n record information about the file system location of the caller function.\n\n This helps to make reporting more accurate.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "jasmineConstructor",
        "description": "A Jasmine constructor function to be patched"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "wrappers",
        "description": "Attributes to wrap when the monkey-patched Jasmine constructor is invoked"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 326,
    "kind": "function",
    "name": "callerLocation",
    "memberof": "src/monkeyPatched.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/monkeyPatched.ts~callerLocation",
    "access": "package",
    "export": false,
    "importPath": "@serenity-js/jasmine/src/monkeyPatched.ts",
    "importStyle": null,
    "description": " Retrieves the file system location of the caller function.",
    "lineNumber": 68,
    "ignore": true,
    "params": [],
    "return": {
      "types": [
        "{\"path\": *, \"line\": *, \"column\": *}"
      ]
    }
  },
  {
    "__docId__": 327,
    "kind": "function",
    "name": "isAStaticProperty",
    "memberof": "src/monkeyPatched.ts",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/monkeyPatched.ts~isAStaticProperty",
    "access": "package",
    "export": false,
    "importPath": "@serenity-js/jasmine/src/monkeyPatched.ts",
    "importStyle": null,
    "description": " Checks if a given property is likely to be a static method or a static field on the constructor function.",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "property",
        "description": "name of the property to be checked"
      }
    ],
    "ignore": true,
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "kind": "index",
    "content": "# Serenity/JS\n\n[Serenity/JS](https://serenity-js.org) is a framework designed to make acceptance and regression testing\nof modern full-stack applications faster, more collaborative and easier to scale.\n\nVisit [serenity-js.org](https://serenity-js.org/) for the [latest tutorials](https://serenity-js.org/handbook/)\nand [API docs](https://serenity-js.org/modules/), and follow [@SerenityJS](https://twitter.com/SerenityJS) and [@JanMolak](https://twitter.com/JanMolak) on Twitter for project updates.\n\n### Learning Serenity/JS\n\nTo learn more about Serenity/JS, check out the video below, read the [tutorial](https://serenity-js.org/handbook/thinking-in-serenity-js/index.html), review the [examples](https://github.com/serenity-js/serenity-js/tree/master/examples), and create your own test suite with [Serenity/JS template projects](https://github.com/serenity-js).\n\nIf you have any questions, join us on [Serenity/JS Community Chat](https://gitter.im/serenity-js/Lobby).\n\n[![Full-Stack Acceptance Testing with Serenity/JS and the Screenplay Pattern](https://img.youtube.com/vi/djPMf-n93Rw/0.jpg)](https://www.youtube.com/watch?v=djPMf-n93Rw)\n\n## Serenity/JS Jasmine\n\n[`@serenity-js/jasmine`](https://serenity-js.org/modules/jasmine) contains a [Jasmine reporter](https://jasmine.github.io/api/edge/Reporter.html)\nyou register with [Jasmine test runner](https://jasmine.github.io/)\nto enable integration between Jasmine and Serenity/JS.\n\n### Installation\n\nTo install this module, run the following command in your computer terminal:\n```console\nnpm install --save-dev @serenity-js/{core,jasmine}\n```\n\nLearn more about [integrating Serenity/JS with Jasmine](https://serenity-js.org/handbook/integration/serenityjs-and-jasmine.html)\n\n### Command line usage\n\n```\njasmine --reporter=@serenity-js/jasmine\n```\n\n### Programmatic usage\n\n```typescript\nimport serenityReporterForJasmine = require('@serenity-js/jasmine');\n\njasmine.getEnv().addReporter(serenityReporterForJasmine);\n```\n",
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"@serenity-js/jasmine\",\n  \"version\": \"2.33.9\",\n  \"description\": \"Serenity/JS adapter for the Jasmine test runner\",\n  \"author\": {\n    \"name\": \"Jan Molak\",\n    \"email\": \"jan.molak@smartcodeltd.co.uk\",\n    \"url\": \"https://janmolak.com\"\n  },\n  \"funding\": {\n    \"url\": \"https://github.com/sponsors/serenity-js\"\n  },\n  \"homepage\": \"https://serenity-js.org\",\n  \"license\": \"Apache-2.0\",\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"main\": \"lib/index.js\",\n  \"typings\": \"lib/index.d.ts\",\n  \"keywords\": [\n    \"serenity-js\",\n    \"jasmine\",\n    \"tdd\",\n    \"bdd\",\n    \"test\",\n    \"testing\"\n  ],\n  \"scripts\": {\n    \"clean\": \"rimraf .nyc_output lib target\",\n    \"lint\": \"eslint --ext ts --config ../../.eslintrc.js .\",\n    \"lint:fix\": \"npm run lint -- --fix\",\n    \"test\": \"nyc --report-dir ../../target/coverage/jasmine mocha --config ../../.mocharc.yml 'spec/**/*.spec.*'\",\n    \"compile\": \"tsc --project tsconfig.json\",\n    \"site\": \"esdoc -c .esdoc.js\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/serenity-js/serenity-js.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/serenity-js/serenity-js/issues\"\n  },\n  \"engines\": {\n    \"node\": \"^12 || ^14 || ^16\",\n    \"npm\": \"^6 || ^7 || ^8\"\n  },\n  \"dependencies\": {\n    \"@serenity-js/core\": \"2.33.9\"\n  },\n  \"peerDependencies\": {\n    \"jasmine\": \"^3.99.0\"\n  },\n  \"devDependencies\": {\n    \"@documentation/esdoc-template\": \"2.0.0\",\n    \"@integration/testing-tools\": \"2.0.0\",\n    \"@types/chai\": \"^4.3.1\",\n    \"@types/mocha\": \"^9.1.1\",\n    \"jasmine\": \"^3.99.0\",\n    \"mocha\": \"^10.0.0\",\n    \"ts-node\": \"^10.7.0\",\n    \"typescript\": \"^4.6.4\"\n  },\n  \"nyc\": {\n    \"include\": [\n      \"src/**/*.ts\"\n    ],\n    \"exclude\": [\n      \"src/**/*.d.ts\",\n      \"lib\",\n      \"node_modules\",\n      \"spec\"\n    ],\n    \"extension\": [\n      \".ts\"\n    ],\n    \"require\": [\n      \"ts-node/register\"\n    ],\n    \"reporter\": [\n      \"json\"\n    ],\n    \"cache\": true,\n    \"all\": true\n  }\n}\n",
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 328,
    "kind": "testFile",
    "name": "spec/SerenityReporterForJasmine.spec.ts",
    "content": "/* eslint-disable unicorn/no-null */\nimport 'mocha';\n\nimport { expect, PickEvent } from '@integration/testing-tools';\nimport { AssertionError, Clock, ImplementationPendingError, Serenity, Stage, StageCrewMember, TestCompromisedError } from '@serenity-js/core';\nimport {\n    DomainEvent,\n    SceneFinished,\n    SceneStarts,\n    SceneTagged, TaskFinished,\n    TaskStarts,\n    TestRunFinished,\n    TestRunnerDetected, TestRunStarts,\n    TestSuiteFinished,\n    TestSuiteStarts,\n} from '@serenity-js/core/lib/events';\nimport { FileSystemLocation } from '@serenity-js/core/lib/io';\nimport {\n    CorrelationId, ExecutionCompromised, ExecutionFailedWithAssertionError,\n    ExecutionFailedWithError,\n    ExecutionSkipped,\n    ExecutionSuccessful,\n    FeatureTag,\n    ImplementationPending,\n    Name,\n    TestSuiteDetails,\n    Timestamp,\n} from '@serenity-js/core/lib/model';\n\nimport { SerenityReporterForJasmine } from '../src/SerenityReporterForJasmine';\n\n/** @test {SerenityReporterForJasmine} */\ndescribe('SerenityReporterForJasmine', () => {\n\n    let serenity: Serenity,\n        reporter: SerenityReporterForJasmine,\n        listener: Listener;\n\n    const now = new Date('1970-01-01T00:00:00Z');\n\n    beforeEach(() => {\n        serenity = new Serenity(new Clock(() => now));\n        reporter = new SerenityReporterForJasmine(serenity);\n        listener = new Listener();\n\n        serenity.configure({ crew: [ listener ] });\n    });\n\n    describe('notifies Serenity when', () => {\n\n        describe('the test run', () => {\n            /** @test {SerenityReporterForJasmine#jasmineStarted} */\n            it('starts', async () => {\n                await reporter.jasmineStarted({\n                    totalSpecsDefined: 5,\n                    order: {\n                        random: true,\n                        seed: '14552',\n                        sort: () => void 0,\n                    },\n                });\n\n                PickEvent.from(listener.events)\n                    .next(TestRunStarts,    event => expect(event.timestamp).to.equal(new Timestamp(now)));\n            });\n\n            /** @test {SerenityReporterForJasmine#jasmineDone} */\n            it('ends', async () => {\n                await reporter.jasmineDone({\n                    overallStatus: 'passed',\n                    incompleteReason: undefined,\n                    order: {\n                        random: true,\n                        seed: '14552',\n                        sort: () => void 0,\n                    },\n                    failedExpectations: [],\n                    deprecationWarnings: [],\n                });\n\n                PickEvent.from(listener.events)\n                    .next(TestRunFinished,    event => expect(event.timestamp).to.equal(new Timestamp(now)));\n            });\n        });\n\n        describe('the test suite', () => {\n\n            /** @test {SerenityReporterForJasmine#suiteStarted} */\n            it('starts', () => {\n\n                const jasmineEvent = {\n                    id: 'suite1',\n                    description: 'Jasmine',\n                    fullName: 'Jasmine',\n                    failedExpectations: [],\n                    deprecationWarnings: [],\n                    duration: null,\n                    location: {\n                        path: '/path/to/spec.js',\n                        line: 5,\n                        column: 9,\n                    },\n                };\n\n                reporter.suiteStarted(jasmineEvent);\n\n                expect(listener.events.length).to.equal(1);\n                expect(listener.events[0]).to.equal(\n                    new TestSuiteStarts(\n                        new TestSuiteDetails(\n                            new Name('Jasmine'),\n                            FileSystemLocation.fromJSON(jasmineEvent.location),\n                            CorrelationId.fromJSON(jasmineEvent.id),\n                        ),\n                        new Timestamp(now),\n                    ),\n                );\n            });\n\n            /**\n             * @test {SerenityReporterForJasmine#suiteStarted}\n             * @test {SerenityReporterForJasmine#suiteDone}\n             */\n            it('ends', () => {\n\n                reporter.suiteStarted({\n                    id: 'suite1',\n                    description: 'Jasmine',\n                    fullName: 'Jasmine',\n                    failedExpectations: [],\n                    deprecationWarnings: [],\n                    duration: null,\n                    location: {\n                        path: '/path/to/spec.js',\n                        line: 1,\n                        column: 1,\n                    },\n                });\n\n                reporter.suiteDone({\n                    id: 'suite1',\n                    description: 'Jasmine',\n                    fullName: 'Jasmine',\n                    failedExpectations: [],\n                    deprecationWarnings: [],\n                    duration: 0,\n                    location: {\n                        path: '/path/to/spec.js',\n                        line: 1,\n                        column: 1,\n                    },\n                    status: 'passed',\n                });\n\n                PickEvent.from(listener.events)\n                    .next(TestSuiteFinished,    event => expect(event).to.equal(\n                        new TestSuiteFinished(\n                            new TestSuiteDetails(\n                                new Name('Jasmine'),\n                                FileSystemLocation.fromJSON({\n                                    path: '/path/to/spec.js',\n                                    line: 1,\n                                    column: 1,\n                                }),\n                                CorrelationId.fromJSON('suite1'),\n                            ),\n                            new ExecutionSuccessful(),\n                            new Timestamp(now),\n                        ),\n                    ));\n            });\n\n            /**\n             * @test {SerenityReporterForJasmine#suiteStarted}\n             * @test {SerenityReporterForJasmine#suiteDone}\n             */\n            it('ends with an error, reporting the first error that has occurred', () => {\n                /*\n                 * A test suite will be marked as failing only when beforeAll or afterAll blocks are used.\n                 */\n                reporter.suiteStarted({\n                    id: 'suite1',\n                    description: 'a suite',\n                    fullName: 'a suite',\n                    failedExpectations: [],\n                    deprecationWarnings: [],\n                    duration: null,\n                    location: {\n                        path: '/path/to/spec.js',\n                        line: 9,\n                        column: 1,\n                    },\n                });\n\n                reporter.suiteDone({\n                    id: 'suite1',\n                    description: 'a suite',\n                    fullName: 'a suite',\n                    failedExpectations: [\n                        {\n                            matcherName: '',\n                            message: 'Failed: suite beforeAll',\n                            stack:\n                                'Error: Failed: suite beforeAll\\n    at <Jasmine>\\n    at UserContext.<anonymous> (/path/to/spec.js:11:9)\\n    at <Jasmine>',\n                            passed: false,\n                            expected: '',\n                            actual: '',\n                        }, {\n                            matcherName: '',\n                            message: 'Failed: suite afterAll',\n                            stack:\n                                'Error: Failed: suite afterAll\\n    at <Jasmine>\\n    at UserContext.<anonymous> (/path/to/spec.js:15:9)\\n    at <Jasmine>',\n                            passed: false,\n                            expected: '',\n                            actual: '',\n                        },\n                    ],\n                    deprecationWarnings: [],\n                    duration: 0,\n                    location:\n                        {\n                            path: '/path/to/spec.js',\n                            line: 9,\n                            column: 1,\n                        },\n                    status: 'failed',\n                });\n\n                PickEvent.from(listener.events)\n                    .next(TestSuiteFinished,    event => {\n                        const outcome = event.outcome as ExecutionFailedWithError;\n\n                        expect(outcome).to.be.instanceOf(ExecutionFailedWithError);\n                        expect(outcome.error.message).to.equal('Failed: suite beforeAll');\n                    });\n            });\n\n            /**\n             * @test {SerenityReporterForJasmine#suiteStarted}\n             * @test {SerenityReporterForJasmine#suiteDone}\n             */\n            it('is pending', () => {\n                reporter.suiteStarted({\n                    id: 'suite3',\n                    description: 'pending suite',\n                    fullName: 'pending suite',\n                    failedExpectations: [],\n                    deprecationWarnings: [],\n                    duration: null,\n                    location: {\n                        path: '/path/to/spec.js',\n                        line: 8,\n                        column: 5,\n                    },\n                });\n\n                reporter.suiteDone({\n                    id: 'suite3',\n                    description: 'pending suite',\n                    fullName: 'pending suite',\n                    failedExpectations: [],\n                    deprecationWarnings: [],\n                    duration: 0,\n                    location: {\n                        path: '/path/to/spec.js',\n                        line: 8,\n                        column: 5,\n                    },\n                    status: 'pending',\n                });\n\n                PickEvent.from(listener.events)\n                    .next(TestSuiteFinished,    event => {\n                        const outcome = event.outcome as ImplementationPending;\n\n                        expect(outcome).to.be.instanceOf(ImplementationPending);\n                        expect(outcome.error).to.be.instanceOf(ImplementationPendingError);\n                        expect(outcome.error.message).to.equal('');\n                    });\n            });\n        });\n\n        describe('the test spec', () => {\n\n            describe('starts and', () => {\n\n                beforeEach(async () => {\n                    reporter.suiteStarted({\n                        id: 'suite1',\n                        description: 'Jasmine',\n                        fullName: 'Jasmine',\n                        failedExpectations: [],\n                        deprecationWarnings: [],\n                        duration: null,\n                        location: {\n                            path: '/path/to/spec.js',\n                            line: 1,\n                            column: 1,\n                        },\n                    });\n\n                    reporter.suiteStarted({\n                        id: 'suite2',\n                        description: 'A scenario',\n                        fullName: 'Jasmine A scenario',\n                        failedExpectations: [],\n                        deprecationWarnings: [],\n                        duration: null,\n                        location: {\n                            path: '/path/to/spec.js',\n                            line: 3,\n                            column: 5,\n                        },\n                    });\n\n                    reporter.specStarted({\n                        id: 'spec0',\n                        description: 'passes',\n                        fullName: 'Jasmine A scenario passes',\n                        failedExpectations: [],\n                        passedExpectations: [],\n                        deprecationWarnings: [],\n                        pendingReason: '',\n                        duration: null,\n                        location: {\n                            path: '/path/to/spec.js',\n                            line: 5,\n                            column: 9,\n                        },\n                    });\n\n                    await reporter.specDone({\n                        id: 'spec0',\n                        description: 'passes',\n                        fullName: 'Jasmine A scenario passes',\n                        failedExpectations: [],\n                        passedExpectations:\n                            [{\n                                matcherName: 'toBe',\n                                message: 'Passed.',\n                                stack: '',\n                                passed: true,\n                            }],\n                        deprecationWarnings: [],\n                        pendingReason: '',\n                        duration: null,\n                        location: {\n                            path: '/path/to/spec.js',\n                            line: 5,\n                            column: 9,\n                        },\n                        status: 'passed',\n                    });\n\n                    reporter.suiteDone({\n                        id: 'suite2',\n                        description: 'A scenario',\n                        fullName: 'Jasmine A scenario',\n                        failedExpectations: [],\n                        deprecationWarnings: [],\n                        duration: 0,\n                        location: {\n                            path: '/path/to/spec.js',\n                            line: 3,\n                            column: 5,\n                        },\n                        status: 'passed',\n                    });\n\n                    reporter.suiteDone({\n                        id: 'suite1',\n                        description: 'Jasmine',\n                        fullName: 'Jasmine',\n                        failedExpectations: [],\n                        deprecationWarnings: [],\n                        duration: 0,\n                        location: {\n                            path: '/path/to/spec.js',\n                            line: 1,\n                            column: 1,\n                        },\n                        status: 'passed',\n                    });\n                });\n\n                /**\n                 * @test {SerenityReporterForJasmine#suiteStarted}\n                 * @test {SerenityReporterForJasmine#suiteDone}\n                 * @test {SerenityReporterForJasmine#specStarted}\n                 * @test {SerenityReporterForJasmine#specDone}\n                 */\n                it('derives the name of the scenario from the nested `describe` blocks', () => {\n                    PickEvent.from(listener.events)\n                        .next(SceneStarts,      event => expect(event.details.name.value).to.equal('A scenario passes'))\n                        .next(SceneFinished,    event => expect(event.details.name.value).to.equal('A scenario passes'));\n                });\n\n                /**\n                 * @test {SerenityReporterForJasmine#suiteStarted}\n                 * @test {SerenityReporterForJasmine#suiteDone}\n                 * @test {SerenityReporterForJasmine#specStarted}\n                 * @test {SerenityReporterForJasmine#specDone}\n                 */\n                it('derives the name of the feature from the outer-most `describe` block', () => {\n                    PickEvent.from(listener.events)\n                        .next(SceneTagged,      event => expect(event.tag).to.equal(new FeatureTag('Jasmine')));\n                });\n\n                /**\n                 * @test {SerenityReporterForJasmine#suiteStarted}\n                 * @test {SerenityReporterForJasmine#suiteDone}\n                 * @test {SerenityReporterForJasmine#specStarted}\n                 * @test {SerenityReporterForJasmine#specDone}\n                 */\n                it('detects the test runner', () => {\n                    PickEvent.from(listener.events)\n                        .next(TestRunnerDetected,   event => expect(event.name).to.equal(new Name('Jasmine')));\n                });\n            });\n\n            describe('ends and', () => {\n\n                beforeEach(() => {\n                    reporter.specStarted({\n                        id: 'spec0',\n                        description: 'scenario',\n                        fullName: 'scenario',\n                        failedExpectations: [],\n                        passedExpectations: [],\n                        deprecationWarnings: [],\n                        pendingReason: '',\n                        duration: null,\n                        location: { path: '/path/to/spec.js', line: 5, column: 9 },\n                    });\n                });\n\n                /**\n                 * @test {SerenityReporterForJasmine#specDone}\n                 */\n                it('has been excluded', async () => {\n                    await reporter.specDone({\n                        id: 'spec0',\n                        description: 'scenario',\n                        fullName: 'scenario',\n                        failedExpectations: [],\n                        passedExpectations: [],\n                        deprecationWarnings: [],\n                        pendingReason: '',\n                        duration: null,\n                        location: { path: '/path/to/spec.js', line: 5, column: 9 },\n                        status: 'excluded',\n                    });\n\n                    PickEvent.from(listener.events)\n                        .next(SceneFinished,    event => expect(event.outcome).to.equal(new ExecutionSkipped()));\n                });\n\n                /**\n                 * @test {SerenityReporterForJasmine#specDone}\n                 */\n                it('is marked as pending', async () => {\n                    await reporter.specDone({\n                        id: 'spec0',\n                        description: 'scenario',\n                        fullName: 'scenario',\n                        failedExpectations: [],\n                        passedExpectations: [],\n                        deprecationWarnings: [],\n                        pendingReason: 'Temporarily disabled with xit',\n                        duration: null,\n                        location: { path: '/path/to/spec.js', line: 5, column: 9 },\n                        status: 'pending',\n                    });\n\n                    PickEvent.from(listener.events)\n                        .next(SceneFinished,    event => {\n                            const outcome = event.outcome as ImplementationPending;\n                            expect(outcome).to.be.instanceOf(ImplementationPending);\n                            expect(outcome.error.message).to.equal('Temporarily disabled with xit');\n                        });\n                });\n\n                /**\n                 * @test {SerenityReporterForJasmine#specDone}\n                 */\n                it('has failed with an error', async () => {\n                    await reporter.specDone({\n                        id: 'spec0',\n                        description: 'scenario',\n                        fullName: 'scenario',\n                        failedExpectations:\n                         [ { matcherName: '',\n                             message: 'Error: Something happened',\n                             stack: 'Error: Something happened\\n    at UserContext.it (/path/to/spec.js:6:19)\\n',\n                             passed: false,\n                             expected: '',\n                             actual: '' } ],\n                        passedExpectations: [],\n                        deprecationWarnings: [],\n                        pendingReason: '',\n                        duration: null,\n                        location: { path: '/path/to/spec.js', line: 5, column: 9 },\n                        status: 'failed',\n                    });\n\n                    PickEvent.from(listener.events)\n                        .next(SceneFinished,    event => {\n                            const outcome = event.outcome as ExecutionFailedWithError;\n                            expect(outcome).to.be.instanceOf(ExecutionFailedWithError);\n                            expect(outcome.error).to.be.instanceOf(Error);\n                            expect(outcome.error.message).to.equal('Something happened');\n                        });\n                });\n\n                it('as compromised', async () => {\n                    await reporter.specDone({\n                        id: 'spec0',\n                        description: 'scenario',\n                        fullName: 'scenario',\n                        failedExpectations:\n                            [ { matcherName: '',\n                                message: 'TestCompromisedError: The API call has failed',\n                                stack: 'error properties: TestCompromisedError: undefined\\n    at <Jasmine>\\n',\n                                passed: false,\n                                expected: '',\n                                actual: '' } ],\n                        passedExpectations: [],\n                        deprecationWarnings: [],\n                        pendingReason: '',\n                        duration: null,\n                        location: { path: '/path/to/spec.js', line: 5, column: 9 },\n                        status: 'failed',\n                    });\n\n                    PickEvent.from(listener.events)\n                        .next(SceneFinished,    event => {\n                            const outcome = event.outcome as ExecutionCompromised;\n                            expect(outcome).to.be.instanceOf(ExecutionCompromised);\n                            expect(outcome.error).to.be.instanceOf(TestCompromisedError);\n                            expect(outcome.error.message).to.equal('The API call has failed');\n                        });\n                });\n\n                /**\n                 * @test {SerenityReporterForJasmine#specDone}\n                 */\n                it('has failed with no stack trace', async () => {\n                    await reporter.specDone({\n                        id: 'spec0',\n                        description: 'scenario',\n                        fullName: 'scenario',\n                        failedExpectations:\n                            [ { matcherName: '',\n                                message: 'Someone throws a string just because they can...',\n                                stack: null,\n                                passed: false,\n                                expected: '',\n                                actual: '' } ],\n                        passedExpectations: [],\n                        deprecationWarnings: [],\n                        pendingReason: '',\n                        duration: null,\n                        location: { path: '/path/to/spec.js', line: 5, column: 9 },\n                        status: 'failed',\n                    });\n\n                    PickEvent.from(listener.events)\n                        .next(SceneFinished,    event => {\n                            const outcome = event.outcome as ExecutionFailedWithError;\n                            expect(outcome).to.be.instanceOf(ExecutionFailedWithError);\n                            expect(outcome.error).to.be.instanceOf(Error);\n                            expect(outcome.error.message).to.equal('Someone throws a string just because they can...');\n                        });\n                });\n\n                /**\n                 * @test {SerenityReporterForJasmine#specDone}\n                 */\n                it('has failed with an assertion error', async () => {\n                    await reporter.specDone({\n                        id: 'spec0',\n                        description: 'scenario',\n                        fullName: 'scenario',\n                        failedExpectations:\n                            [ { matcherName: 'toEqual',\n                                message: 'Expected false to equal true.',\n                                stack: 'Error: Expected false to equal true.\\n    at <Jasmine>\\n    at UserContext.it (/path/to/spec.js:6:27)\\n    at <Jasmine>',\n                                passed: false,\n                                expected: true,\n                                actual: false } ],\n                        passedExpectations: [],\n                        deprecationWarnings: [],\n                        pendingReason: '',\n                        duration: null,\n                        location: { path: '/path/to/spec.js', line: 5, column: 9 },\n                        status: 'failed',\n                    });\n\n                    PickEvent.from(listener.events)\n                        .next(SceneFinished,    event => {\n                            const outcome = event.outcome as ExecutionFailedWithAssertionError;\n                            expect(outcome).to.be.instanceOf(ExecutionFailedWithAssertionError);\n\n                            const error = outcome.error as AssertionError;\n                            expect(error).to.be.instanceOf(AssertionError);\n                            expect(error.message).to.equal('Expected false to equal true.');\n                            expect(error.actual).to.equal(false);\n                            expect(error.expected).to.equal(true);\n                        });\n                });\n\n                /** @test {SerenityReporterForJasmine#specDone} */\n                it('has failed with multiple errors', async () => {\n                    // The failure with multiple errors could only happen when someone has\n                    // a bare-bones protractor/jasmine setup and uses Serenity/JS just for the reporting\n                    await reporter.specDone({\n                        id: 'spec0',\n                        description: 'scenario',\n                        fullName: 'scenario',\n                        failedExpectations: [ {\n                            matcherName: 'toEqual',\n                            message: 'Expected false to equal true.',\n                            stack: 'Error: Expected false to equal true.\\n    at <Jasmine>\\n    at UserContext.it (/path/to/spec.js:6:27)\\n    at <Jasmine>',\n                            passed: false,\n                            expected: true,\n                            actual: false,\n                        },  {\n                            matcherName: 'toEqual',\n                            message: 'Expected \"hello\" to equal \"hey\".',\n                            stack: 'Error: Expected \"hello\" to equal \"hey\".\\n    at <Jasmine>\\n    at UserContext.it (/path/to/spec.js:6:27)\\n    at <Jasmine>',\n                            passed: false,\n                            expected: 'hey',\n                            actual: 'hello',\n                        }],\n                        passedExpectations: [],\n                        deprecationWarnings: [],\n                        pendingReason: '',\n                        duration: null,\n                        location: { path: '/path/to/spec.js', line: 5, column: 9 },\n                        status: 'failed',\n                    });\n\n                    PickEvent.from(listener.events)\n                        .next(TaskStarts,   event => expect(event.details.name).to.equal(new Name('Expectation')))\n                        .next(TaskFinished, event => {\n                            const outcome = event.outcome as ExecutionFailedWithAssertionError;\n                            expect(outcome).to.be.instanceOf(ExecutionFailedWithAssertionError);\n\n                            const error = outcome.error as AssertionError;\n                            expect(error).to.be.instanceOf(AssertionError);\n                            expect(error.message).to.equal('Expected false to equal true.');\n                            expect(error.actual).to.equal(false);\n                            expect(error.expected).to.equal(true);\n                        })\n                        .next(TaskStarts,   event => expect(event.details.name).to.equal(new Name('Expectation')))\n                        .next(TaskFinished, event => {\n                            const outcome = event.outcome as ExecutionFailedWithAssertionError;\n                            expect(outcome).to.be.instanceOf(ExecutionFailedWithAssertionError);\n\n                            const error = outcome.error as AssertionError;\n                            expect(error).to.be.instanceOf(AssertionError);\n                            expect(error.message).to.equal('Expected \"hello\" to equal \"hey\".');\n                            expect(error.actual).to.equal('hello');\n                            expect(error.expected).to.equal('hey');\n                        })\n                        .next(SceneFinished, event => {\n                            const outcome = event.outcome as ExecutionFailedWithAssertionError;\n                            expect(outcome).to.be.instanceOf(ExecutionFailedWithAssertionError);\n\n                            const error = outcome.error as AssertionError;\n                            expect(error).to.be.instanceOf(AssertionError);\n                            expect(error.message).to.equal('Expected false to equal true.');\n                            expect(error.actual).to.equal(false);\n                            expect(error.expected).to.equal(true);\n                        });\n                });\n            });\n        });\n\n        describe('the `it` block is not nested within a `describe` block and', () => {\n\n            beforeEach(async () => {\n                reporter.specStarted({\n                    id: 'spec0',\n                    description: 'A scenario passes',\n                    fullName: 'A scenario passes',\n                    failedExpectations: [],\n                    passedExpectations: [],\n                    deprecationWarnings: [],\n                    pendingReason: '',\n                    duration: null,\n                    location: {\n                        path: '/path/to/spec.js',\n                        line: 5,\n                        column: 9,\n                    },\n                });\n\n                await reporter.specDone({\n                    id: 'spec0',\n                    description: 'A scenario passes',\n                    fullName: 'A scenario passes',\n                    failedExpectations: [],\n                    passedExpectations:\n                        [{\n                            matcherName: 'toBe',\n                            message: 'Passed.',\n                            stack: '',\n                            passed: true,\n                        }],\n                    deprecationWarnings: [],\n                    pendingReason: '',\n                    duration: null,\n                    location: {\n                        path: '/path/to/spec.js',\n                        line: 5,\n                        column: 9,\n                    },\n                    status: 'passed',\n                });\n            });\n\n            /**\n             * @test {SerenityReporterForJasmine#specStarted}\n             * @test {SerenityReporterForJasmine#specDone}\n             */\n            it('tags the feature as \"unknown\"', () => {\n                PickEvent.from(listener.events)\n                    .next(SceneTagged,      event => expect(event.tag).to.equal(new FeatureTag('Unknown feature')));\n            });\n\n            /**\n             * @test {SerenityReporterForJasmine#specStarted}\n             * @test {SerenityReporterForJasmine#specDone}\n             */\n            it('correctly derives the name of the spec', () => {\n                PickEvent.from(listener.events)\n                    .next(SceneStarts,      event => expect(event.details.name.value).to.equal('A scenario passes'))\n                    .next(SceneFinished,    event => expect(event.details.name.value).to.equal('A scenario passes'));\n            });\n        });\n    });\n\n    class Listener implements StageCrewMember {\n        public readonly events: DomainEvent[] = [];\n\n        constructor(private stage: Stage = null) {\n        }\n\n        assignedTo(stage: Stage): StageCrewMember {\n            this.stage = stage;\n            return this;\n        }\n\n        notifyOf(event: DomainEvent): void {\n            this.events.push(event);\n        }\n    }\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/spec/SerenityReporterForJasmine.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 329,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0",
    "access": null,
    "description": "SerenityReporterForJasmine",
    "lineNumber": 33,
    "testTargets": [
      "SerenityReporterForJasmine"
    ]
  },
  {
    "__docId__": 330,
    "kind": "test",
    "name": "describe1",
    "testId": 1,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1",
    "access": null,
    "description": "notifies Serenity when",
    "lineNumber": 49
  },
  {
    "__docId__": 331,
    "kind": "test",
    "name": "describe2",
    "testId": 2,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe2",
    "access": null,
    "description": "the test run",
    "lineNumber": 51
  },
  {
    "__docId__": 332,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe2",
    "testDepth": 3,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe2.it3",
    "access": null,
    "description": "starts",
    "lineNumber": 53,
    "testTargets": [
      "SerenityReporterForJasmine#jasmineStarted"
    ]
  },
  {
    "__docId__": 333,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe2",
    "testDepth": 3,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe2.it4",
    "access": null,
    "description": "ends",
    "lineNumber": 68,
    "testTargets": [
      "SerenityReporterForJasmine#jasmineDone"
    ]
  },
  {
    "__docId__": 334,
    "kind": "test",
    "name": "describe5",
    "testId": 5,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe5",
    "access": null,
    "description": "the test suite",
    "lineNumber": 86
  },
  {
    "__docId__": 335,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe5",
    "testDepth": 3,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe5.it6",
    "access": null,
    "description": "starts",
    "lineNumber": 89,
    "testTargets": [
      "SerenityReporterForJasmine#suiteStarted"
    ]
  },
  {
    "__docId__": 336,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe5",
    "testDepth": 3,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe5.it7",
    "access": null,
    "description": "ends",
    "lineNumber": 124,
    "testTargets": [
      "SerenityReporterForJasmine#suiteStarted",
      "SerenityReporterForJasmine#suiteDone"
    ]
  },
  {
    "__docId__": 337,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe5",
    "testDepth": 3,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe5.it8",
    "access": null,
    "description": "ends with an error, reporting the first error that has occurred",
    "lineNumber": 177,
    "testTargets": [
      "SerenityReporterForJasmine#suiteStarted",
      "SerenityReporterForJasmine#suiteDone"
    ]
  },
  {
    "__docId__": 338,
    "kind": "test",
    "name": "it9",
    "testId": 9,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe5",
    "testDepth": 3,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe5.it9",
    "access": null,
    "description": "is pending",
    "lineNumber": 242,
    "testTargets": [
      "SerenityReporterForJasmine#suiteStarted",
      "SerenityReporterForJasmine#suiteDone"
    ]
  },
  {
    "__docId__": 339,
    "kind": "test",
    "name": "describe10",
    "testId": 10,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10",
    "access": null,
    "description": "the test spec",
    "lineNumber": 283
  },
  {
    "__docId__": 340,
    "kind": "test",
    "name": "describe11",
    "testId": 11,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10",
    "testDepth": 3,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe11",
    "access": null,
    "description": "starts and",
    "lineNumber": 285
  },
  {
    "__docId__": 341,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe11",
    "testDepth": 4,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe11.it12",
    "access": null,
    "description": "derives the name of the scenario from the nested `describe` blocks",
    "lineNumber": 392,
    "testTargets": [
      "SerenityReporterForJasmine#suiteStarted",
      "SerenityReporterForJasmine#suiteDone",
      "SerenityReporterForJasmine#specStarted",
      "SerenityReporterForJasmine#specDone"
    ]
  },
  {
    "__docId__": 342,
    "kind": "test",
    "name": "it13",
    "testId": 13,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe11",
    "testDepth": 4,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe11.it13",
    "access": null,
    "description": "derives the name of the feature from the outer-most `describe` block",
    "lineNumber": 404,
    "testTargets": [
      "SerenityReporterForJasmine#suiteStarted",
      "SerenityReporterForJasmine#suiteDone",
      "SerenityReporterForJasmine#specStarted",
      "SerenityReporterForJasmine#specDone"
    ]
  },
  {
    "__docId__": 343,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe11",
    "testDepth": 4,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe11.it14",
    "access": null,
    "description": "detects the test runner",
    "lineNumber": 415,
    "testTargets": [
      "SerenityReporterForJasmine#suiteStarted",
      "SerenityReporterForJasmine#suiteDone",
      "SerenityReporterForJasmine#specStarted",
      "SerenityReporterForJasmine#specDone"
    ]
  },
  {
    "__docId__": 344,
    "kind": "test",
    "name": "describe15",
    "testId": 15,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10",
    "testDepth": 3,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15",
    "access": null,
    "description": "ends and",
    "lineNumber": 421
  },
  {
    "__docId__": 345,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15",
    "testDepth": 4,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15.it16",
    "access": null,
    "description": "has been excluded",
    "lineNumber": 440,
    "testTargets": [
      "SerenityReporterForJasmine#specDone"
    ]
  },
  {
    "__docId__": 346,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15",
    "testDepth": 4,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15.it17",
    "access": null,
    "description": "is marked as pending",
    "lineNumber": 461,
    "testTargets": [
      "SerenityReporterForJasmine#specDone"
    ]
  },
  {
    "__docId__": 347,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15",
    "testDepth": 4,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15.it18",
    "access": null,
    "description": "has failed with an error",
    "lineNumber": 486,
    "testTargets": [
      "SerenityReporterForJasmine#specDone"
    ]
  },
  {
    "__docId__": 348,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15",
    "testDepth": 4,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15.it19",
    "access": null,
    "description": "as compromised",
    "lineNumber": 515
  },
  {
    "__docId__": 349,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15",
    "testDepth": 4,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15.it20",
    "access": null,
    "description": "has failed with no stack trace",
    "lineNumber": 547,
    "testTargets": [
      "SerenityReporterForJasmine#specDone"
    ]
  },
  {
    "__docId__": 350,
    "kind": "test",
    "name": "it21",
    "testId": 21,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15",
    "testDepth": 4,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15.it21",
    "access": null,
    "description": "has failed with an assertion error",
    "lineNumber": 579,
    "testTargets": [
      "SerenityReporterForJasmine#specDone"
    ]
  },
  {
    "__docId__": 351,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15",
    "testDepth": 4,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe10.describe15.it22",
    "access": null,
    "description": "has failed with multiple errors",
    "lineNumber": 613,
    "testTargets": [
      "SerenityReporterForJasmine#specDone"
    ]
  },
  {
    "__docId__": 352,
    "kind": "test",
    "name": "describe23",
    "testId": 23,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe23",
    "access": null,
    "description": "the `it` block is not nested within a `describe` block and",
    "lineNumber": 680
  },
  {
    "__docId__": 353,
    "kind": "test",
    "name": "it24",
    "testId": 24,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe23",
    "testDepth": 3,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe23.it24",
    "access": null,
    "description": "tags the feature as \"unknown\"",
    "lineNumber": 727,
    "testTargets": [
      "SerenityReporterForJasmine#specStarted",
      "SerenityReporterForJasmine#specDone"
    ]
  },
  {
    "__docId__": 354,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe23",
    "testDepth": 3,
    "static": true,
    "longname": "spec/SerenityReporterForJasmine.spec.ts~describe0.describe1.describe23.it25",
    "access": null,
    "description": "correctly derives the name of the spec",
    "lineNumber": 736,
    "testTargets": [
      "SerenityReporterForJasmine#specStarted",
      "SerenityReporterForJasmine#specDone"
    ]
  },
  {
    "__docId__": 355,
    "kind": "testFile",
    "name": "spec/adapter/JasmineAdapter.spec.ts",
    "content": "import { expect } from '@integration/testing-tools';\nimport { ModuleLoader } from '@serenity-js/core/lib/io';\nimport * as sinon from 'sinon';\n\nimport { JasmineAdapter } from '../../src/adapter';\nimport { JasmineReporter } from '../../src/jasmine';\nimport { FakeJasmineRunner } from './FakeJasmineRunner';\n\n/** @test JasmineAdapter */\ndescribe('JasmineAdapter', () => {\n\n    const emptySuite = { getFullTitle: () => 'Top suite' };\n    function specCalled(fullName: string) {                 // eslint-disable-line unicorn/consistent-function-scoping\n        return {\n            getFullName() {\n                return fullName;\n            }\n        }\n    }\n\n    let loader: sinon.SinonStubbedInstance<ModuleLoader>;\n\n    beforeEach(() => {\n        loader = sinon.createStubInstance(ModuleLoader);\n\n        loader.require.withArgs('jasmine').returns(FakeJasmineRunner);\n    });\n\n    afterEach(() => {\n        FakeJasmineRunner.topSuite.reset();\n        FakeJasmineRunner.instance = undefined;\n    });\n\n    /** @test JasmineAdapter#run */\n    it('defaults to running tests sequentially rather than in a random order', async () => {\n\n        const\n            config = {},\n            specs  = [];\n\n        const adapter = new JasmineAdapter(config, loader);\n\n        FakeJasmineRunner.topSuite.returns(emptySuite)\n\n        await adapter.load(specs);\n\n        const result = adapter.run();\n\n        FakeJasmineRunner.instance.complete(true);\n\n        expect(FakeJasmineRunner.instance.loadConfig).to.have.been.calledWithMatch({\n            random: false,\n        });\n\n        return result;\n    });\n\n    /** @test JasmineAdapter#load */\n    it('loads configured requires and helpers', async () => {\n\n        const\n            helpers     = ['some-helper.js'],\n            requires    = ['ts-node/register'],\n            config      = {\n                helpers,\n                requires,\n            },\n            specs       = [];\n\n        const adapter = new JasmineAdapter(config, loader);\n\n        FakeJasmineRunner.topSuite.returns(emptySuite)\n\n        await adapter.load(specs);\n\n        expect(FakeJasmineRunner.instance.loadConfig).to.have.been.calledWithMatch({\n            ... config,\n            random: false,\n        });\n\n        expect(FakeJasmineRunner.instance.loadRequires).to.have.been.called;\n        expect(FakeJasmineRunner.instance.loadHelpers).to.have.been.called;\n    });\n\n    /** @test JasmineAdapter#run */\n    it('configures the default timeout interval if required', async () => {\n\n        const\n            defaultTimeoutInterval = 5000,\n            config = {\n                defaultTimeoutInterval,\n            },\n            specs  = [];\n\n        const adapter = new JasmineAdapter(config, loader);\n\n        FakeJasmineRunner.topSuite.returns(emptySuite)\n\n        await adapter.load(specs)\n        const result = adapter.run();\n\n        FakeJasmineRunner.instance.complete(true);\n\n        expect(FakeJasmineRunner.instance.jasmine.DEFAULT_TIMEOUT_INTERVAL).to.equal(defaultTimeoutInterval);\n\n        return result;\n    });\n\n    /** @test JasmineAdapter#run */\n    it('registers a Serenity/JS reporter by default', async () => {\n\n        const\n            specs  = [];\n\n        const adapter = new JasmineAdapter({}, loader);\n\n        FakeJasmineRunner.topSuite.returns(emptySuite)\n\n        await adapter.load(specs)\n        const result = adapter.run();\n\n        FakeJasmineRunner.instance.complete(true);\n\n        expect(FakeJasmineRunner.instance.addReporter).to.have.been.calledOnce\n\n        return result;\n    });\n\n    /** @test JasmineAdapter#run */\n    it('registers configured custom reporters', async () => {\n\n        const\n            additionalReporter: JasmineReporter = {},\n            config = {\n                reporters: [ additionalReporter ],\n            },\n            specs  = [];\n\n        const adapter = new JasmineAdapter(config, loader);\n\n        FakeJasmineRunner.topSuite.returns(emptySuite)\n\n        await adapter.load(specs)\n        const result = adapter.run();\n\n        FakeJasmineRunner.instance.complete(true);\n\n        expect(FakeJasmineRunner.instance.addReporter).to.have.been.calledTwice\n\n        expect(FakeJasmineRunner.instance.addReporter).to.have.been.calledWith(additionalReporter)\n\n        return result;\n    });\n\n    describe('when counting the number of scenarios to be executed', () => {\n\n        /** @test JasmineAdapter#scenarioCount */\n        it('recognises when there are no scenarios', () => {\n\n            const\n                defaultTimeoutInterval = 5000,\n                config = {\n                    defaultTimeoutInterval,\n                };\n\n            const adapter = new JasmineAdapter(config, loader);\n\n            FakeJasmineRunner.topSuite.returns(emptySuite)\n\n            expect(adapter.scenarioCount()).to.equal(0);\n        });\n\n        /** @test JasmineAdapter#scenarioCount */\n        it('recognises when there is a single spec', async () => {\n\n            const\n                defaultTimeoutInterval = 5000,\n                config = {\n                    defaultTimeoutInterval,\n                },\n                specs  = [ 'fake.spec.ts' ];\n\n            const adapter = new JasmineAdapter(config, loader);\n\n            FakeJasmineRunner.topSuite.returns({ children: [ specCalled('first spec') ] })\n\n            await adapter.load(specs)\n\n            expect(adapter.scenarioCount()).to.equal(1);\n        });\n\n        /** @test JasmineAdapter#scenarioCount */\n        it('recognises when there are multiple nested specs', async () => {\n\n            const\n                defaultTimeoutInterval = 5000,\n                config = {\n                    defaultTimeoutInterval,\n                },\n                specs  = [ 'fake.spec.ts' ];\n\n            const adapter = new JasmineAdapter(config, loader);\n\n            FakeJasmineRunner.topSuite.returns({\n                children: [\n                    specCalled('first spec'),\n                    {\n                        getFullName() {\n                            return 'nested describe';\n                        },\n                        children: specCalled('nested spec')\n                    }\n                ],\n            })\n\n            await adapter.load(specs)\n\n            expect(adapter.scenarioCount()).to.equal(2);\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/spec/adapter/JasmineAdapter.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 356,
    "kind": "test",
    "name": "describe26",
    "testId": 26,
    "memberof": "spec/adapter/JasmineAdapter.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/adapter/JasmineAdapter.spec.ts~describe26",
    "access": null,
    "description": "JasmineAdapter",
    "lineNumber": 10,
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 357,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "spec/adapter/JasmineAdapter.spec.ts~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "spec/adapter/JasmineAdapter.spec.ts~describe26.it27",
    "access": null,
    "description": "defaults to running tests sequentially rather than in a random order",
    "lineNumber": 53,
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 358,
    "kind": "test",
    "name": "it28",
    "testId": 28,
    "memberof": "spec/adapter/JasmineAdapter.spec.ts~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "spec/adapter/JasmineAdapter.spec.ts~describe26.it28",
    "access": null,
    "description": "loads configured requires and helpers",
    "lineNumber": 77,
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 359,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "spec/adapter/JasmineAdapter.spec.ts~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "spec/adapter/JasmineAdapter.spec.ts~describe26.it29",
    "access": null,
    "description": "configures the default timeout interval if required",
    "lineNumber": 104,
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 360,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "spec/adapter/JasmineAdapter.spec.ts~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "spec/adapter/JasmineAdapter.spec.ts~describe26.it30",
    "access": null,
    "description": "registers a Serenity/JS reporter by default",
    "lineNumber": 128,
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 361,
    "kind": "test",
    "name": "it31",
    "testId": 31,
    "memberof": "spec/adapter/JasmineAdapter.spec.ts~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "spec/adapter/JasmineAdapter.spec.ts~describe26.it31",
    "access": null,
    "description": "registers configured custom reporters",
    "lineNumber": 148,
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 362,
    "kind": "test",
    "name": "describe32",
    "testId": 32,
    "memberof": "spec/adapter/JasmineAdapter.spec.ts~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "spec/adapter/JasmineAdapter.spec.ts~describe26.describe32",
    "access": null,
    "description": "when counting the number of scenarios to be executed",
    "lineNumber": 173
  },
  {
    "__docId__": 363,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "spec/adapter/JasmineAdapter.spec.ts~describe26.describe32",
    "testDepth": 2,
    "static": true,
    "longname": "spec/adapter/JasmineAdapter.spec.ts~describe26.describe32.it33",
    "access": null,
    "description": "recognises when there are no scenarios",
    "lineNumber": 176,
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 364,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "spec/adapter/JasmineAdapter.spec.ts~describe26.describe32",
    "testDepth": 2,
    "static": true,
    "longname": "spec/adapter/JasmineAdapter.spec.ts~describe26.describe32.it34",
    "access": null,
    "description": "recognises when there is a single spec",
    "lineNumber": 192,
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 365,
    "kind": "test",
    "name": "it35",
    "testId": 35,
    "memberof": "spec/adapter/JasmineAdapter.spec.ts~describe26.describe32",
    "testDepth": 2,
    "static": true,
    "longname": "spec/adapter/JasmineAdapter.spec.ts~describe26.describe32.it35",
    "access": null,
    "description": "recognises when there are multiple nested specs",
    "lineNumber": 211,
    "testTargets": [
      "*"
    ]
  },
  {
    "__docId__": 366,
    "kind": "testFile",
    "name": "spec/monkeyPatched.spec.ts",
    "content": "import 'mocha';\n\nimport { expect } from '@integration/testing-tools';\nimport { TestCompromisedError } from '@serenity-js/core';\nimport * as sinon from 'sinon';\nimport serenityReporterForJasmine = require('../src');\n\ndescribe('@serenity-js/jasmine', () => {\n\n    let jasmine: any;\n    let attrs: any;\n\n    beforeEach(() => {\n        const env = {\n            beforeEach: sinon.spy(),\n            afterAll: sinon.spy(),\n        };\n\n        attrs = {\n            expectationResultFactory(fnAttrs) {\n                return {};\n            },\n        };\n\n        jasmine = {\n            Spec: function Spec() {\n                this.result = {};\n            },\n            Suite: function Suite() {\n                this.result = {};\n            },\n            getEnv: () => env,\n        };\n    });\n\n    describe('monkey-patches Jasmine', () => {\n\n        describe('so that the Spec', () => {\n\n            /**\n             * @test {bootstrap}\n             * @test {monkeyPatched}\n             */\n            it('defaults to an unknown location if the real one could not be determined', () => {\n                // detecting the real location is done in Jasmine integration tests\n                serenityReporterForJasmine(jasmine);\n\n                const spec = new jasmine.Spec(attrs);\n\n                expect(spec.result.location.path).to.equal('unknown');\n                expect(spec.result.location.line).to.equal(0);\n                expect(spec.result.location.column).to.equal(0);\n            });\n\n            /**\n             * @test {bootstrap}\n             * @test {monkeyPatched}\n             */\n            it('has all the static members of the original constructor function', () => {\n\n                jasmine.Spec.pendingSpecExceptionMessage = '=> marked Pending';\n\n                serenityReporterForJasmine(jasmine);\n\n                expect(jasmine.Spec.pendingSpecExceptionMessage).to.equal('=> marked Pending');\n            });\n\n            /**\n             * @test {bootstrap}\n             * @test {monkeyPatched}\n             */\n            it('has all the static members of the original constructor function', () => {\n\n                jasmine.Spec.pendingSpecExceptionMessage = '=> marked Pending';\n\n                serenityReporterForJasmine(jasmine);\n\n                expect(jasmine.Spec.pendingSpecExceptionMessage).to.equal('=> marked Pending');\n            });\n\n            it('correctly reports the stacktrace of an error', () => {\n                const error = new TestCompromisedError('DB is down', new Error('Connection error'));\n\n                serenityReporterForJasmine(jasmine);\n\n                const spec_ = new jasmine.Spec(attrs);\n\n                const result = attrs.expectationResultFactory({ passing: false, error });\n\n                const frames = result.stack.split('\\n');\n                expect(frames[0]).to.equal('TestCompromisedError: DB is down');\n                expect(frames).to.include('Caused by: Error: Connection error');\n            });\n        });\n\n        describe('so that the Suite', () => {\n\n            /**\n             * @test {bootstrap}\n             * @test {monkeyPatched}\n             */\n            it('defaults to an unknown location if the real one could not be determined', () => {\n                // detecting the real location is done in Jasmine integration tests\n                serenityReporterForJasmine(jasmine);\n\n                const suite = new jasmine.Suite(attrs);\n\n                expect(suite.result.location.path).to.equal('unknown');\n                expect(suite.result.location.line).to.equal(0);\n                expect(suite.result.location.column).to.equal(0);\n            });\n\n            it('correctly reports the stacktrace of an error', () => {\n                const error = new TestCompromisedError('DB is down', new Error('Connection error'));\n\n                serenityReporterForJasmine(jasmine);\n\n                const suite_ = new jasmine.Suite(attrs);\n\n                const result = attrs.expectationResultFactory({ passing: false, error });\n\n                const frames = result.stack.split('\\n');\n                expect(frames[0]).to.equal('TestCompromisedError: DB is down');\n                expect(frames).to.include('Caused by: Error: Connection error');\n            });\n        });\n    });\n});\n",
    "static": true,
    "longname": "/home/runner/work/serenity-js/serenity-js/packages/jasmine/spec/monkeyPatched.spec.ts",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 367,
    "kind": "test",
    "name": "describe36",
    "testId": 36,
    "memberof": "spec/monkeyPatched.spec.ts",
    "testDepth": 0,
    "static": true,
    "longname": "spec/monkeyPatched.spec.ts~describe36",
    "access": null,
    "description": "@serenity-js/jasmine",
    "lineNumber": 8
  },
  {
    "__docId__": 368,
    "kind": "test",
    "name": "describe37",
    "testId": 37,
    "memberof": "spec/monkeyPatched.spec.ts~describe36",
    "testDepth": 1,
    "static": true,
    "longname": "spec/monkeyPatched.spec.ts~describe36.describe37",
    "access": null,
    "description": "monkey-patches Jasmine",
    "lineNumber": 47
  },
  {
    "__docId__": 369,
    "kind": "test",
    "name": "describe38",
    "testId": 38,
    "memberof": "spec/monkeyPatched.spec.ts~describe36.describe37",
    "testDepth": 2,
    "static": true,
    "longname": "spec/monkeyPatched.spec.ts~describe36.describe37.describe38",
    "access": null,
    "description": "so that the Spec",
    "lineNumber": 49
  },
  {
    "__docId__": 370,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "spec/monkeyPatched.spec.ts~describe36.describe37.describe38",
    "testDepth": 3,
    "static": true,
    "longname": "spec/monkeyPatched.spec.ts~describe36.describe37.describe38.it39",
    "access": null,
    "description": "defaults to an unknown location if the real one could not be determined",
    "lineNumber": 55,
    "testTargets": [
      "bootstrap",
      "monkeyPatched"
    ]
  },
  {
    "__docId__": 371,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "spec/monkeyPatched.spec.ts~describe36.describe37.describe38",
    "testDepth": 3,
    "static": true,
    "longname": "spec/monkeyPatched.spec.ts~describe36.describe37.describe38.it40",
    "access": null,
    "description": "has all the static members of the original constructor function",
    "lineNumber": 70,
    "testTargets": [
      "bootstrap",
      "monkeyPatched"
    ]
  },
  {
    "__docId__": 372,
    "kind": "test",
    "name": "it41",
    "testId": 41,
    "memberof": "spec/monkeyPatched.spec.ts~describe36.describe37.describe38",
    "testDepth": 3,
    "static": true,
    "longname": "spec/monkeyPatched.spec.ts~describe36.describe37.describe38.it41",
    "access": null,
    "description": "has all the static members of the original constructor function",
    "lineNumber": 83,
    "testTargets": [
      "bootstrap",
      "monkeyPatched"
    ]
  },
  {
    "__docId__": 373,
    "kind": "test",
    "name": "it42",
    "testId": 42,
    "memberof": "spec/monkeyPatched.spec.ts~describe36.describe37.describe38",
    "testDepth": 3,
    "static": true,
    "longname": "spec/monkeyPatched.spec.ts~describe36.describe37.describe38.it42",
    "access": null,
    "description": "correctly reports the stacktrace of an error",
    "lineNumber": 92
  },
  {
    "__docId__": 374,
    "kind": "test",
    "name": "describe43",
    "testId": 43,
    "memberof": "spec/monkeyPatched.spec.ts~describe36.describe37",
    "testDepth": 2,
    "static": true,
    "longname": "spec/monkeyPatched.spec.ts~describe36.describe37.describe43",
    "access": null,
    "description": "so that the Suite",
    "lineNumber": 107
  },
  {
    "__docId__": 375,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "spec/monkeyPatched.spec.ts~describe36.describe37.describe43",
    "testDepth": 3,
    "static": true,
    "longname": "spec/monkeyPatched.spec.ts~describe36.describe37.describe43.it44",
    "access": null,
    "description": "defaults to an unknown location if the real one could not be determined",
    "lineNumber": 113,
    "testTargets": [
      "bootstrap",
      "monkeyPatched"
    ]
  },
  {
    "__docId__": 376,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "spec/monkeyPatched.spec.ts~describe36.describe37.describe43",
    "testDepth": 3,
    "static": true,
    "longname": "spec/monkeyPatched.spec.ts~describe36.describe37.describe43.it45",
    "access": null,
    "description": "correctly reports the stacktrace of an error",
    "lineNumber": 124
  }
]