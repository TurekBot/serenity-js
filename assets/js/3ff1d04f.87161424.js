"use strict";(self.webpackChunk_documentation_serenity_js_org=self.webpackChunk_documentation_serenity_js_org||[]).push([[93825],{457:e=>{e.exports=JSON.parse('[{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":2,"name":"@serenity-js/core/adapter","kind":2,"kindString":"Module","flags":{},"children":[{"id":1977,"name":"OutputStream","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder|StageCrewMemberBuilders"},{"kind":"text","text":" configured via "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.crew"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity.configure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.crew"}]},"children":[{"id":1978,"name":"write","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":12,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/adapter/OutputStream.ts#L12"}],"signatures":[{"id":1979,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1980,"name":"content","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[1978]}],"sources":[{"fileName":"packages/core/src/adapter/OutputStream.ts","line":11,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/adapter/OutputStream.ts#L11"}],"permalink":"/api/core-adapter/interface/OutputStream","nextId":1981},{"id":1981,"name":"TestRunnerAdapter","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes an adapter needed to run a given type of tests programmatically"}]},"children":[{"id":1982,"name":"load","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":13,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/adapter/TestRunnerAdapter.ts#L13"}],"signatures":[{"id":1983,"name":"load","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"parameters":[{"id":1984,"name":"pathsToScenarios","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":1985,"name":"scenarioCount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":21,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/adapter/TestRunnerAdapter.ts#L21"}],"signatures":[{"id":1986,"name":"scenarioCount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n If called before "},{"kind":"code","text":"`load`"}]}]},"type":{"type":"intrinsic","name":"number"}}]},{"id":1987,"name":"run","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":29,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/adapter/TestRunnerAdapter.ts#L29"}],"signatures":[{"id":1988,"name":"run","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}],"blockTags":[{"tag":"@throws","content":[{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n If called before "},{"kind":"code","text":"`load`"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":1989,"name":"successThreshold","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/adapter/TestRunnerAdapter.ts#L34"}],"signatures":[{"id":1990,"name":"successThreshold","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"type":{"type":"union","types":[{"type":"reference","name":"Outcome"},{"type":"reflection","declaration":{"id":1991,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1992,"name":"Code","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":36,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/adapter/TestRunnerAdapter.ts#L34"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1992]}],"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":34,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/adapter/TestRunnerAdapter.ts#L34"}]}}]}}]}],"groups":[{"title":"Methods","children":[1982,1985,1987,1989]}],"sources":[{"fileName":"packages/core/src/adapter/TestRunnerAdapter.ts","line":8,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/adapter/TestRunnerAdapter.ts#L8"}],"permalink":"/api/core-adapter/interface/TestRunnerAdapter","previousId":1977}],"groups":[{"title":"Integration","children":[1977,1981]}],"sources":[{"fileName":"packages/core/src/adapter/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/adapter/index.ts#L1"}],"permalink":"/api/core-adapter"},"urlSlug":"core-adapter"},{"index":false,"label":"Domain Events","reflection":{"id":3,"name":"@serenity-js/core/events","kind":2,"kindString":"Module","flags":{},"children":[{"id":1993,"name":"ActivityFinished","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" is finished."}]},"children":[{"id":2006,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2007,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2008,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2009,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2010,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2011,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2012,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":1994,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L13"}],"signatures":[{"id":1995,"name":"new ActivityFinished","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1996,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":1997,"name":"activityId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":1998,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ActivityDetails"}},{"id":1999,"name":"outcome","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Outcome"}},{"id":2000,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":1993,"name":"ActivityFinished"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2001,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L14"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2002,"name":"activityId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L15"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2003,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L16"}],"type":{"type":"reference","name":"ActivityDetails"}},{"id":2004,"name":"outcome","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L17"}],"type":{"type":"reference","name":"Outcome"}},{"id":2005,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}}],"groups":[{"title":"Methods","children":[2006,2009,2011]},{"title":"Constructors","children":[1994]},{"title":"Properties","children":[2001,2002,2003,2004,2005]}],"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":12,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L12"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"extendedBy":[{"type":"reference","id":2268,"name":"InteractionFinished"},{"type":"reference","id":2504,"name":"TaskFinished"}],"permalink":"/api/core-events/class/ActivityFinished","nextId":2013},{"id":2013,"name":"ActivityRelatedArtifactArchived","kind":128,"kindString":"Class","flags":{},"children":[{"id":2014,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":18,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityRelatedArtifactArchived.ts#L18"}],"signatures":[{"id":2015,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2016,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2013,"name":"ActivityRelatedArtifactArchived"},"overwrites":{"type":"reference","id":2083,"name":"ArtifactArchived.fromJSON"}}],"overwrites":{"type":"reference","id":2082,"name":"ArtifactArchived.fromJSON"}},{"id":2035,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2036,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2037,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2102,"name":"ArtifactArchived.equals"}}],"inheritedFrom":{"type":"reference","id":2101,"name":"ArtifactArchived.equals"}},{"id":2038,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2039,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2105,"name":"ArtifactArchived.toString"}}],"inheritedFrom":{"type":"reference","id":2104,"name":"ArtifactArchived.toString"}},{"id":2017,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":30,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityRelatedArtifactArchived.ts#L30"}],"signatures":[{"id":2018,"name":"new ActivityRelatedArtifactArchived","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2019,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2020,"name":"activityId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2021,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Name"}},{"id":2022,"name":"type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ArtifactType"}},{"id":2023,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Path"}},{"id":2024,"name":"artifactTimestamp","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1608,"name":"Timestamp"}},{"id":2025,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2013,"name":"ActivityRelatedArtifactArchived"},"overwrites":{"type":"reference","id":2086,"name":"ArtifactArchived.constructor"}}],"overwrites":{"type":"reference","id":2085,"name":"ArtifactArchived.constructor"}},{"id":2026,"name":"activityId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":32,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityRelatedArtifactArchived.ts#L32"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2027,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":43,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityRelatedArtifactArchived.ts#L43"}],"signatures":[{"id":2028,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","id":2099,"name":"ArtifactArchived.toJSON"}}],"overwrites":{"type":"reference","id":2098,"name":"ArtifactArchived.toJSON"}},{"id":2029,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":26,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L26"}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","id":2093,"name":"ArtifactArchived.sceneId"}},{"id":2030,"name":"name","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":27,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L27"}],"type":{"type":"reference","name":"Name"},"inheritedFrom":{"type":"reference","id":2094,"name":"ArtifactArchived.name"}},{"id":2031,"name":"type","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":28,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L28"}],"type":{"type":"reference","name":"ArtifactType"},"inheritedFrom":{"type":"reference","id":2095,"name":"ArtifactArchived.type"}},{"id":2032,"name":"path","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":29,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L29"}],"type":{"type":"reference","name":"Path"},"inheritedFrom":{"type":"reference","id":2096,"name":"ArtifactArchived.path"}},{"id":2033,"name":"artifactTimestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":30,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L30"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"inheritedFrom":{"type":"reference","id":2097,"name":"ArtifactArchived.artifactTimestamp"}},{"id":2034,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2100,"name":"ArtifactArchived.timestamp"}}],"groups":[{"title":"Methods","children":[2014,2035,2038,2027]},{"title":"Constructors","children":[2017]},{"title":"Properties","children":[2026,2029,2030,2031,2032,2033,2034]}],"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactArchived.ts","line":17,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityRelatedArtifactArchived.ts#L17"}],"extendedTypes":[{"type":"reference","id":2081,"name":"ArtifactArchived"}],"permalink":"/api/core-events/class/ActivityRelatedArtifactArchived","previousId":1993,"nextId":2040},{"id":2040,"name":"ActivityRelatedArtifactGenerated","kind":128,"kindString":"Class","flags":{},"children":[{"id":2041,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":13,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityRelatedArtifactGenerated.ts#L13"}],"signatures":[{"id":2042,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2043,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2040,"name":"ActivityRelatedArtifactGenerated"},"overwrites":{"type":"reference","id":2108,"name":"ArtifactGenerated.fromJSON"}}],"overwrites":{"type":"reference","id":2107,"name":"ArtifactGenerated.fromJSON"}},{"id":2056,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2057,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2058,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2121,"name":"ArtifactGenerated.equals"}}],"inheritedFrom":{"type":"reference","id":2120,"name":"ArtifactGenerated.equals"}},{"id":2059,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2060,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2124,"name":"ArtifactGenerated.toString"}}],"inheritedFrom":{"type":"reference","id":2123,"name":"ArtifactGenerated.toString"}},{"id":2061,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2062,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2126,"name":"ArtifactGenerated.toJSON"}}],"inheritedFrom":{"type":"reference","id":2125,"name":"ArtifactGenerated.toJSON"}},{"id":2044,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":23,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityRelatedArtifactGenerated.ts#L23"}],"signatures":[{"id":2045,"name":"new ActivityRelatedArtifactGenerated","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2046,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2047,"name":"activityId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2048,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Name"}},{"id":2049,"name":"artifact","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Artifact"}},{"id":2050,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2040,"name":"ActivityRelatedArtifactGenerated"},"overwrites":{"type":"reference","id":2111,"name":"ArtifactGenerated.constructor"}}],"overwrites":{"type":"reference","id":2110,"name":"ArtifactGenerated.constructor"}},{"id":2051,"name":"activityId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":25,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityRelatedArtifactGenerated.ts#L25"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2052,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":23,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactGenerated.ts#L23"}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","id":2116,"name":"ArtifactGenerated.sceneId"}},{"id":2053,"name":"name","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":24,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactGenerated.ts#L24"}],"type":{"type":"reference","name":"Name"},"inheritedFrom":{"type":"reference","id":2117,"name":"ArtifactGenerated.name"}},{"id":2054,"name":"artifact","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":25,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactGenerated.ts#L25"}],"type":{"type":"reference","name":"Artifact"},"inheritedFrom":{"type":"reference","id":2118,"name":"ArtifactGenerated.artifact"}},{"id":2055,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2119,"name":"ArtifactGenerated.timestamp"}}],"groups":[{"title":"Methods","children":[2041,2056,2059,2061]},{"title":"Constructors","children":[2044]},{"title":"Properties","children":[2051,2052,2053,2054,2055]}],"sources":[{"fileName":"packages/core/src/events/ActivityRelatedArtifactGenerated.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityRelatedArtifactGenerated.ts#L12"}],"extendedTypes":[{"type":"reference","id":2106,"name":"ArtifactGenerated"}],"permalink":"/api/core-events/class/ActivityRelatedArtifactGenerated","previousId":2013,"nextId":2063},{"id":2063,"name":"ActivityStarts","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Emitted when an "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" starts."}]},"children":[{"id":2074,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2075,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2076,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2077,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2078,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2079,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2080,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2064,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L13"}],"signatures":[{"id":2065,"name":"new ActivityStarts","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2066,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2067,"name":"activityId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2068,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ActivityDetails"}},{"id":2069,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2063,"name":"ActivityStarts"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2070,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L14"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2071,"name":"activityId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L15"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2072,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L16"}],"type":{"type":"reference","name":"ActivityDetails"}},{"id":2073,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}}],"groups":[{"title":"Methods","children":[2074,2077,2079]},{"title":"Constructors","children":[2064]},{"title":"Properties","children":[2070,2071,2072,2073]}],"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":12,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L12"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"extendedBy":[{"type":"reference","id":2291,"name":"InteractionStarts"},{"type":"reference","id":2527,"name":"TaskStarts"}],"permalink":"/api/core-events/class/ActivityStarts","previousId":2040,"nextId":2081},{"id":2081,"name":"ArtifactArchived","kind":128,"kindString":"Class","flags":{},"children":[{"id":2082,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":14,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L14"}],"signatures":[{"id":2083,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2084,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2081,"name":"ArtifactArchived"}}]},{"id":2101,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2102,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2103,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2104,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2105,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2085,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":25,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L25"}],"signatures":[{"id":2086,"name":"new ArtifactArchived","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2087,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2088,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Name"}},{"id":2089,"name":"type","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ArtifactType"}},{"id":2090,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Path"}},{"id":2091,"name":"artifactTimestamp","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1608,"name":"Timestamp"}},{"id":2092,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2081,"name":"ArtifactArchived"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2093,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":26,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L26"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2094,"name":"name","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":27,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L27"}],"type":{"type":"reference","name":"Name"}},{"id":2095,"name":"type","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":28,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L28"}],"type":{"type":"reference","name":"ArtifactType"}},{"id":2096,"name":"path","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":29,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L29"}],"type":{"type":"reference","name":"Path"}},{"id":2097,"name":"artifactTimestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":30,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L30"}],"type":{"type":"reference","id":1608,"name":"Timestamp"}},{"id":2098,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":42,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L42"}],"signatures":[{"id":2099,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"overwrites":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2100,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}}],"groups":[{"title":"Methods","children":[2082,2101,2104,2098]},{"title":"Constructors","children":[2085]},{"title":"Properties","children":[2093,2094,2095,2096,2097,2100]}],"sources":[{"fileName":"packages/core/src/events/ArtifactArchived.ts","line":13,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactArchived.ts#L13"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"extendedBy":[{"type":"reference","id":2013,"name":"ActivityRelatedArtifactArchived"}],"permalink":"/api/core-events/class/ArtifactArchived","previousId":2063,"nextId":2106},{"id":2106,"name":"ArtifactGenerated","kind":128,"kindString":"Class","flags":{},"children":[{"id":2107,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":13,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactGenerated.ts#L13"}],"signatures":[{"id":2108,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2109,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2106,"name":"ArtifactGenerated"}}]},{"id":2120,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2121,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2122,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2123,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2124,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2125,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2126,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2110,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":22,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactGenerated.ts#L22"}],"signatures":[{"id":2111,"name":"new ArtifactGenerated","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2112,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2113,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Name"}},{"id":2114,"name":"artifact","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Artifact"}},{"id":2115,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2106,"name":"ArtifactGenerated"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2116,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":23,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactGenerated.ts#L23"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2117,"name":"name","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":24,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactGenerated.ts#L24"}],"type":{"type":"reference","name":"Name"}},{"id":2118,"name":"artifact","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":25,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactGenerated.ts#L25"}],"type":{"type":"reference","name":"Artifact"}},{"id":2119,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}}],"groups":[{"title":"Methods","children":[2107,2120,2123,2125]},{"title":"Constructors","children":[2110]},{"title":"Properties","children":[2116,2117,2118,2119]}],"sources":[{"fileName":"packages/core/src/events/ArtifactGenerated.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ArtifactGenerated.ts#L12"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"extendedBy":[{"type":"reference","id":2040,"name":"ActivityRelatedArtifactGenerated"}],"permalink":"/api/core-events/class/ArtifactGenerated","previousId":2081,"nextId":2127},{"id":2127,"name":"AsyncOperationAborted","kind":128,"kindString":"Class","flags":{},"children":[{"id":2128,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":12,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationAborted.ts#L12"}],"signatures":[{"id":2129,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2130,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2127,"name":"AsyncOperationAborted"}}]},{"id":2139,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2140,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2141,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2142,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2143,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2144,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2145,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2131,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationAborted.ts#L20"}],"signatures":[{"id":2132,"name":"new AsyncOperationAborted","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2133,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Description"}},{"id":2134,"name":"correlationId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2135,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2127,"name":"AsyncOperationAborted"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2136,"name":"description","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":21,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationAborted.ts#L21"}],"type":{"type":"reference","name":"Description"}},{"id":2137,"name":"correlationId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationAborted.ts#L22"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2138,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}}],"groups":[{"title":"Methods","children":[2128,2139,2142,2144]},{"title":"Constructors","children":[2131]},{"title":"Properties","children":[2136,2137,2138]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationAborted.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationAborted.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/AsyncOperationAborted","previousId":2106,"nextId":2146},{"id":2146,"name":"AsyncOperationAttempted","kind":128,"kindString":"Class","flags":{},"children":[{"id":2147,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":12,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationAttempted.ts#L12"}],"signatures":[{"id":2148,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2149,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2146,"name":"AsyncOperationAttempted"}}]},{"id":2160,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2161,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2162,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2163,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2164,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2165,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2166,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2150,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":21,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationAttempted.ts#L21"}],"signatures":[{"id":2151,"name":"new AsyncOperationAttempted","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2152,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Name"}},{"id":2153,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Description"}},{"id":2154,"name":"correlationId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2155,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2146,"name":"AsyncOperationAttempted"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2156,"name":"name","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationAttempted.ts#L22"}],"type":{"type":"reference","name":"Name"}},{"id":2157,"name":"description","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":23,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationAttempted.ts#L23"}],"type":{"type":"reference","name":"Description"}},{"id":2158,"name":"correlationId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":24,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationAttempted.ts#L24"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2159,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}}],"groups":[{"title":"Methods","children":[2147,2160,2163,2165]},{"title":"Constructors","children":[2150]},{"title":"Properties","children":[2156,2157,2158,2159]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationAttempted.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationAttempted.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/AsyncOperationAttempted","previousId":2127,"nextId":2167},{"id":2167,"name":"AsyncOperationCompleted","kind":128,"kindString":"Class","flags":{},"children":[{"id":2168,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":12,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationCompleted.ts#L12"}],"signatures":[{"id":2169,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2170,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2167,"name":"AsyncOperationCompleted"}}]},{"id":2177,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2178,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2179,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2180,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2181,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2182,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2183,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2171,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":19,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationCompleted.ts#L19"}],"signatures":[{"id":2172,"name":"new AsyncOperationCompleted","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2173,"name":"correlationId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2174,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2167,"name":"AsyncOperationCompleted"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2175,"name":"correlationId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":20,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationCompleted.ts#L20"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2176,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}}],"groups":[{"title":"Methods","children":[2168,2177,2180,2182]},{"title":"Constructors","children":[2171]},{"title":"Properties","children":[2175,2176]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationCompleted.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationCompleted.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/AsyncOperationCompleted","previousId":2146,"nextId":2184},{"id":2184,"name":"AsyncOperationFailed","kind":128,"kindString":"Class","flags":{},"children":[{"id":2185,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":13,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationFailed.ts#L13"}],"signatures":[{"id":2186,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2187,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2184,"name":"AsyncOperationFailed"}}]},{"id":2198,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2199,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2200,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2201,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2202,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2188,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":21,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationFailed.ts#L21"}],"signatures":[{"id":2189,"name":"new AsyncOperationFailed","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2190,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}},{"id":2191,"name":"correlationId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2192,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2184,"name":"AsyncOperationFailed"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2193,"name":"error","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationFailed.ts#L22"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}},{"id":2194,"name":"correlationId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":23,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationFailed.ts#L23"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2195,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":31,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationFailed.ts#L31"}],"signatures":[{"id":2196,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"overwrites":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2197,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}}],"groups":[{"title":"Methods","children":[2185,2198,2201,2195]},{"title":"Constructors","children":[2188]},{"title":"Properties","children":[2193,2194,2197]}],"sources":[{"fileName":"packages/core/src/events/AsyncOperationFailed.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/AsyncOperationFailed.ts#L12"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/AsyncOperationFailed","previousId":2167,"nextId":2203},{"id":2203,"name":"BusinessRuleDetected","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Emitted by [@serenity-js/cucumber](/api/cucumber)\\nwhen a [business rule](https://cucumber.io/docs/gherkin/reference/#rule) is detected."}]},"children":[{"id":2204,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":15,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/BusinessRuleDetected.ts#L15"}],"signatures":[{"id":2205,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2206,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2203,"name":"BusinessRuleDetected"}}]},{"id":2217,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2218,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2219,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2220,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2221,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2222,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2223,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2207,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":24,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/BusinessRuleDetected.ts#L24"}],"signatures":[{"id":2208,"name":"new BusinessRuleDetected","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2209,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2210,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ScenarioDetails"}},{"id":2211,"name":"rule","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"BusinessRule"}},{"id":2212,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2203,"name":"BusinessRuleDetected"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2213,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":25,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/BusinessRuleDetected.ts#L25"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2214,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":26,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/BusinessRuleDetected.ts#L26"}],"type":{"type":"reference","name":"ScenarioDetails"}},{"id":2215,"name":"rule","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":27,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/BusinessRuleDetected.ts#L27"}],"type":{"type":"reference","name":"BusinessRule"}},{"id":2216,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}}],"groups":[{"title":"Methods","children":[2204,2217,2220,2222]},{"title":"Constructors","children":[2207]},{"title":"Properties","children":[2213,2214,2215,2216]}],"sources":[{"fileName":"packages/core/src/events/BusinessRuleDetected.ts","line":14,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/BusinessRuleDetected.ts#L14"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/BusinessRuleDetected","previousId":2184,"nextId":2224},{"id":2224,"name":"DomainEvent","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represents an internal domain event that occurs during test execution."}]},"children":[{"id":2229,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2230,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2231,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","name":"TinyType.equals"}},{"id":2232,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2233,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","name":"TinyType.toString"}},{"id":2234,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2235,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","name":"TinyType.toJSON"}},{"id":2228,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"..."}],"groups":[{"title":"Methods","children":[2229,2232,2234]},{"title":"Properties","children":[2228]}],"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":10,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L10"}],"extendedTypes":[{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","id":1993,"name":"ActivityFinished"},{"type":"reference","id":2063,"name":"ActivityStarts"},{"type":"reference","id":2081,"name":"ArtifactArchived"},{"type":"reference","id":2106,"name":"ArtifactGenerated"},{"type":"reference","id":2127,"name":"AsyncOperationAborted"},{"type":"reference","id":2146,"name":"AsyncOperationAttempted"},{"type":"reference","id":2167,"name":"AsyncOperationCompleted"},{"type":"reference","id":2184,"name":"AsyncOperationFailed"},{"type":"reference","id":2203,"name":"BusinessRuleDetected"},{"type":"reference","id":2249,"name":"FeatureNarrativeDetected"},{"type":"reference","id":2312,"name":"RetryableSceneDetected"},{"type":"reference","id":2329,"name":"SceneBackgroundDetected"},{"type":"reference","id":2350,"name":"SceneDescriptionDetected"},{"type":"reference","id":2369,"name":"SceneFinished"},{"type":"reference","id":2390,"name":"SceneFinishes"},{"type":"reference","id":2407,"name":"SceneParametersDetected"},{"type":"reference","id":2428,"name":"SceneSequenceDetected"},{"type":"reference","id":2447,"name":"SceneStarts"},{"type":"reference","id":2466,"name":"SceneTagged"},{"type":"reference","id":2485,"name":"SceneTemplateDetected"},{"type":"reference","id":2548,"name":"TestRunFinished"},{"type":"reference","id":2565,"name":"TestRunFinishes"},{"type":"reference","id":2580,"name":"TestRunnerDetected"},{"type":"reference","id":2599,"name":"TestRunStarts"},{"type":"reference","id":2614,"name":"TestSuiteFinished"},{"type":"reference","id":2633,"name":"TestSuiteStarts"}],"permalink":"/api/core-events/class/DomainEvent","previousId":2203,"nextId":2249},{"id":2236,"name":"EmitsDomainEvents","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" or a supporting class capable of telling\\nthe current wall clock time.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"}]},"children":[{"id":2237,"name":"currentSceneId","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":6,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/EmitsDomainEvents.ts#L6"}],"signatures":[{"id":2238,"name":"currentSceneId","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"CorrelationId"}}]},{"id":2239,"name":"assignNewActivityId","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":7,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/EmitsDomainEvents.ts#L7"}],"signatures":[{"id":2240,"name":"assignNewActivityId","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2241,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ActivityDetails"}}],"type":{"type":"reference","name":"CorrelationId"}}]},{"id":2242,"name":"announce","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":8,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/EmitsDomainEvents.ts#L8"}],"signatures":[{"id":2243,"name":"announce","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2244,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2224,"name":"DomainEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":2245,"name":"waitForNextCue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":9,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/EmitsDomainEvents.ts#L9"}],"signatures":[{"id":2246,"name":"waitForNextCue","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":2247,"name":"currentTime","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/TellsTime.ts#L18"}],"signatures":[{"id":2248,"name":"currentTime","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"type":{"type":"reference","id":1608,"name":"Timestamp"},"inheritedFrom":{"type":"reference","id":1656,"name":"TellsTime.currentTime"}}],"inheritedFrom":{"type":"reference","id":1655,"name":"TellsTime.currentTime"}}],"groups":[{"title":"Methods","children":[2237,2239,2242,2245,2247]}],"sources":[{"fileName":"packages/core/src/events/EmitsDomainEvents.ts","line":5,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/EmitsDomainEvents.ts#L5"}],"extendedTypes":[{"type":"reference","id":1654,"name":"TellsTime"}],"implementedBy":[{"type":"reference","id":1659,"name":"Serenity"},{"type":"reference","id":1863,"name":"Stage"}],"permalink":"/api/core-events/interface/EmitsDomainEvents","previousId":2633},{"id":2249,"name":"FeatureNarrativeDetected","kind":128,"kindString":"Class","flags":{},"children":[{"id":2250,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":12,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/FeatureNarrativeDetected.ts#L12"}],"signatures":[{"id":2251,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2252,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2249,"name":"FeatureNarrativeDetected"}}]},{"id":2261,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2262,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2263,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2264,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2265,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2266,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2267,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2260,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2253,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/FeatureNarrativeDetected.ts#L20"}],"signatures":[{"id":2254,"name":"new FeatureNarrativeDetected","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2255,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2256,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Description"}},{"id":2257,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2249,"name":"FeatureNarrativeDetected"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2258,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":21,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/FeatureNarrativeDetected.ts#L21"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2259,"name":"description","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/FeatureNarrativeDetected.ts#L22"}],"type":{"type":"reference","name":"Description"}}],"groups":[{"title":"Methods","children":[2250,2261,2264,2266]},{"title":"Properties","children":[2260,2258,2259]},{"title":"Constructors","children":[2253]}],"sources":[{"fileName":"packages/core/src/events/FeatureNarrativeDetected.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/FeatureNarrativeDetected.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/FeatureNarrativeDetected","previousId":2224,"nextId":2268},{"id":2268,"name":"InteractionFinished","kind":128,"kindString":"Class","flags":{},"children":[{"id":2269,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":12,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/InteractionFinished.ts#L12"}],"signatures":[{"id":2270,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2271,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2268,"name":"InteractionFinished"}}]},{"id":2284,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2285,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2286,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2007,"name":"ActivityFinished.equals"}}],"inheritedFrom":{"type":"reference","id":2006,"name":"ActivityFinished.equals"}},{"id":2287,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2288,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2010,"name":"ActivityFinished.toString"}}],"inheritedFrom":{"type":"reference","id":2009,"name":"ActivityFinished.toString"}},{"id":2289,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2290,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2012,"name":"ActivityFinished.toJSON"}}],"inheritedFrom":{"type":"reference","id":2011,"name":"ActivityFinished.toJSON"}},{"id":2272,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L13"}],"signatures":[{"id":2273,"name":"new InteractionFinished","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2274,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2275,"name":"activityId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2276,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ActivityDetails"}},{"id":2277,"name":"outcome","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Outcome"}},{"id":2278,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2268,"name":"InteractionFinished"},"inheritedFrom":{"type":"reference","id":1995,"name":"ActivityFinished.constructor"}}],"inheritedFrom":{"type":"reference","id":1994,"name":"ActivityFinished.constructor"}},{"id":2279,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L14"}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","id":2001,"name":"ActivityFinished.sceneId"}},{"id":2280,"name":"activityId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L15"}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","id":2002,"name":"ActivityFinished.activityId"}},{"id":2281,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L16"}],"type":{"type":"reference","name":"ActivityDetails"},"inheritedFrom":{"type":"reference","id":2003,"name":"ActivityFinished.details"}},{"id":2282,"name":"outcome","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L17"}],"type":{"type":"reference","name":"Outcome"},"inheritedFrom":{"type":"reference","id":2004,"name":"ActivityFinished.outcome"}},{"id":2283,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2005,"name":"ActivityFinished.timestamp"}}],"groups":[{"title":"Methods","children":[2269,2284,2287,2289]},{"title":"Constructors","children":[2272]},{"title":"Properties","children":[2279,2280,2281,2282,2283]}],"sources":[{"fileName":"packages/core/src/events/InteractionFinished.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/InteractionFinished.ts#L11"}],"extendedTypes":[{"type":"reference","id":1993,"name":"ActivityFinished"}],"permalink":"/api/core-events/class/InteractionFinished","previousId":2249,"nextId":2291},{"id":2291,"name":"InteractionStarts","kind":128,"kindString":"Class","flags":{},"children":[{"id":2292,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":11,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/InteractionStarts.ts#L11"}],"signatures":[{"id":2293,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2294,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2291,"name":"InteractionStarts"}}]},{"id":2305,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2306,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2307,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2075,"name":"ActivityStarts.equals"}}],"inheritedFrom":{"type":"reference","id":2074,"name":"ActivityStarts.equals"}},{"id":2308,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2309,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2078,"name":"ActivityStarts.toString"}}],"inheritedFrom":{"type":"reference","id":2077,"name":"ActivityStarts.toString"}},{"id":2310,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2311,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2080,"name":"ActivityStarts.toJSON"}}],"inheritedFrom":{"type":"reference","id":2079,"name":"ActivityStarts.toJSON"}},{"id":2295,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L13"}],"signatures":[{"id":2296,"name":"new InteractionStarts","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2297,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2298,"name":"activityId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2299,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ActivityDetails"}},{"id":2300,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2291,"name":"InteractionStarts"},"inheritedFrom":{"type":"reference","id":2065,"name":"ActivityStarts.constructor"}}],"inheritedFrom":{"type":"reference","id":2064,"name":"ActivityStarts.constructor"}},{"id":2301,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L14"}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","id":2070,"name":"ActivityStarts.sceneId"}},{"id":2302,"name":"activityId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L15"}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","id":2071,"name":"ActivityStarts.activityId"}},{"id":2303,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L16"}],"type":{"type":"reference","name":"ActivityDetails"},"inheritedFrom":{"type":"reference","id":2072,"name":"ActivityStarts.details"}},{"id":2304,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2073,"name":"ActivityStarts.timestamp"}}],"groups":[{"title":"Methods","children":[2292,2305,2308,2310]},{"title":"Constructors","children":[2295]},{"title":"Properties","children":[2301,2302,2303,2304]}],"sources":[{"fileName":"packages/core/src/events/InteractionStarts.ts","line":10,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/InteractionStarts.ts#L10"}],"extendedTypes":[{"type":"reference","id":2063,"name":"ActivityStarts"}],"permalink":"/api/core-events/class/InteractionStarts","previousId":2268,"nextId":2312},{"id":2312,"name":"RetryableSceneDetected","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Indicates that the test runner will retry running the test scenario upon failure."}]},"children":[{"id":2313,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":20,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/RetryableSceneDetected.ts#L20"}],"signatures":[{"id":2314,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Deserialises the event from a JSONObject"}]},"parameters":[{"id":2315,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2312,"name":"RetryableSceneDetected"}}]},{"id":2322,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2323,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2324,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2325,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2326,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2327,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2328,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2321,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2316,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":31,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/RetryableSceneDetected.ts#L31"}],"signatures":[{"id":2317,"name":"new RetryableSceneDetected","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2318,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2319,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2312,"name":"RetryableSceneDetected"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2320,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":32,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/RetryableSceneDetected.ts#L32"}],"type":{"type":"reference","name":"CorrelationId"}}],"groups":[{"title":"Methods","children":[2313,2322,2325,2327]},{"title":"Properties","children":[2321,2320]},{"title":"Constructors","children":[2316]}],"sources":[{"fileName":"packages/core/src/events/RetryableSceneDetected.ts","line":13,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/RetryableSceneDetected.ts#L13"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/RetryableSceneDetected","previousId":2291,"nextId":2329},{"id":2329,"name":"SceneBackgroundDetected","kind":128,"kindString":"Class","flags":{},"children":[{"id":2330,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":12,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneBackgroundDetected.ts#L12"}],"signatures":[{"id":2331,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2332,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2329,"name":"SceneBackgroundDetected"}}]},{"id":2343,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2344,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2345,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2346,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2347,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2348,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2349,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2342,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2333,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneBackgroundDetected.ts#L20"}],"signatures":[{"id":2334,"name":"new SceneBackgroundDetected","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2335,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2336,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Name"}},{"id":2337,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Description"}},{"id":2338,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2329,"name":"SceneBackgroundDetected"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2339,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":21,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneBackgroundDetected.ts#L21"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2340,"name":"name","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneBackgroundDetected.ts#L22"}],"type":{"type":"reference","name":"Name"}},{"id":2341,"name":"description","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":23,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneBackgroundDetected.ts#L23"}],"type":{"type":"reference","name":"Description"}}],"groups":[{"title":"Methods","children":[2330,2343,2346,2348]},{"title":"Properties","children":[2342,2339,2340,2341]},{"title":"Constructors","children":[2333]}],"sources":[{"fileName":"packages/core/src/events/SceneBackgroundDetected.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneBackgroundDetected.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/SceneBackgroundDetected","previousId":2312,"nextId":2350},{"id":2350,"name":"SceneDescriptionDetected","kind":128,"kindString":"Class","flags":{},"children":[{"id":2351,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":12,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneDescriptionDetected.ts#L12"}],"signatures":[{"id":2352,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2353,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2350,"name":"SceneDescriptionDetected"}}]},{"id":2362,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2363,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2364,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2365,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2366,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2367,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2368,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2361,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2354,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneDescriptionDetected.ts#L20"}],"signatures":[{"id":2355,"name":"new SceneDescriptionDetected","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2356,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2357,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Description"}},{"id":2358,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2350,"name":"SceneDescriptionDetected"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2359,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":21,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneDescriptionDetected.ts#L21"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2360,"name":"description","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneDescriptionDetected.ts#L22"}],"type":{"type":"reference","name":"Description"}}],"groups":[{"title":"Methods","children":[2351,2362,2365,2367]},{"title":"Properties","children":[2361,2359,2360]},{"title":"Constructors","children":[2354]}],"sources":[{"fileName":"packages/core/src/events/SceneDescriptionDetected.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneDescriptionDetected.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/SceneDescriptionDetected","previousId":2329,"nextId":2369},{"id":2369,"name":"SceneFinished","kind":128,"kindString":"Class","flags":{},"children":[{"id":2370,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":13,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneFinished.ts#L13"}],"signatures":[{"id":2371,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2372,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2369,"name":"SceneFinished"}}]},{"id":2383,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2384,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2385,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2386,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2387,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2388,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2389,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2382,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2373,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":22,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneFinished.ts#L22"}],"signatures":[{"id":2374,"name":"new SceneFinished","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2375,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2376,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ScenarioDetails"}},{"id":2377,"name":"outcome","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Outcome"}},{"id":2378,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2369,"name":"SceneFinished"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2379,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":23,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneFinished.ts#L23"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2380,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":24,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneFinished.ts#L24"}],"type":{"type":"reference","name":"ScenarioDetails"}},{"id":2381,"name":"outcome","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":25,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneFinished.ts#L25"}],"type":{"type":"reference","name":"Outcome"}}],"groups":[{"title":"Methods","children":[2370,2383,2386,2388]},{"title":"Properties","children":[2382,2379,2380,2381]},{"title":"Constructors","children":[2373]}],"sources":[{"fileName":"packages/core/src/events/SceneFinished.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneFinished.ts#L12"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/SceneFinished","previousId":2350,"nextId":2390},{"id":2390,"name":"SceneFinishes","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Emitted by a Serenity/JS test runner adapter, right before a test and all its associated test hooks finish.\\nTriggers any clean-up operations that might be required, such as discarding of the "},{"kind":"inline-tag","tag":"@apilink","text":"Discardable"},{"kind":"text","text":" abilities."}]},"children":[{"id":2391,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":15,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneFinishes.ts#L15"}],"signatures":[{"id":2392,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2393,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2390,"name":"SceneFinishes"}}]},{"id":2400,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2401,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2402,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2403,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2404,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2405,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2406,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2399,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2394,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":22,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneFinishes.ts#L22"}],"signatures":[{"id":2395,"name":"new SceneFinishes","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2396,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2397,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2390,"name":"SceneFinishes"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2398,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":23,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneFinishes.ts#L23"}],"type":{"type":"reference","name":"CorrelationId"}}],"groups":[{"title":"Methods","children":[2391,2400,2403,2405]},{"title":"Properties","children":[2399,2398]},{"title":"Constructors","children":[2394]}],"sources":[{"fileName":"packages/core/src/events/SceneFinishes.ts","line":14,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneFinishes.ts#L14"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/SceneFinishes","previousId":2369,"nextId":2407},{"id":2407,"name":"SceneParametersDetected","kind":128,"kindString":"Class","flags":{},"children":[{"id":2408,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":12,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneParametersDetected.ts#L12"}],"signatures":[{"id":2409,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2410,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2407,"name":"SceneParametersDetected"}}]},{"id":2421,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2422,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2423,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2424,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2425,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2426,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2427,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2420,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2411,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":21,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneParametersDetected.ts#L21"}],"signatures":[{"id":2412,"name":"new SceneParametersDetected","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2413,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2414,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ScenarioDetails"}},{"id":2415,"name":"parameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ScenarioParameters"}},{"id":2416,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2407,"name":"SceneParametersDetected"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2417,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneParametersDetected.ts#L22"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2418,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":23,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneParametersDetected.ts#L23"}],"type":{"type":"reference","name":"ScenarioDetails"}},{"id":2419,"name":"parameters","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":24,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneParametersDetected.ts#L24"}],"type":{"type":"reference","name":"ScenarioParameters"}}],"groups":[{"title":"Methods","children":[2408,2421,2424,2426]},{"title":"Properties","children":[2420,2417,2418,2419]},{"title":"Constructors","children":[2411]}],"sources":[{"fileName":"packages/core/src/events/SceneParametersDetected.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneParametersDetected.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/SceneParametersDetected","previousId":2390,"nextId":2428},{"id":2428,"name":"SceneSequenceDetected","kind":128,"kindString":"Class","flags":{},"children":[{"id":2429,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":12,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneSequenceDetected.ts#L12"}],"signatures":[{"id":2430,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2431,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2428,"name":"SceneSequenceDetected"}}]},{"id":2440,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2441,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2442,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2443,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2444,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2445,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2446,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2439,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2432,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneSequenceDetected.ts#L20"}],"signatures":[{"id":2433,"name":"new SceneSequenceDetected","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2434,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2435,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ScenarioDetails"}},{"id":2436,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2428,"name":"SceneSequenceDetected"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2437,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":21,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneSequenceDetected.ts#L21"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2438,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneSequenceDetected.ts#L22"}],"type":{"type":"reference","name":"ScenarioDetails"}}],"groups":[{"title":"Methods","children":[2429,2440,2443,2445]},{"title":"Properties","children":[2439,2437,2438]},{"title":"Constructors","children":[2432]}],"sources":[{"fileName":"packages/core/src/events/SceneSequenceDetected.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneSequenceDetected.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/SceneSequenceDetected","previousId":2407,"nextId":2447},{"id":2447,"name":"SceneStarts","kind":128,"kindString":"Class","flags":{},"children":[{"id":2448,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":12,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneStarts.ts#L12"}],"signatures":[{"id":2449,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2450,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2447,"name":"SceneStarts"}}]},{"id":2459,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2460,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2461,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2462,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2463,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2464,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2465,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2458,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2451,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneStarts.ts#L20"}],"signatures":[{"id":2452,"name":"new SceneStarts","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2453,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2454,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ScenarioDetails"}},{"id":2455,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2447,"name":"SceneStarts"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2456,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":21,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneStarts.ts#L21"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2457,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneStarts.ts#L22"}],"type":{"type":"reference","name":"ScenarioDetails"}}],"groups":[{"title":"Methods","children":[2448,2459,2462,2464]},{"title":"Properties","children":[2458,2456,2457]},{"title":"Constructors","children":[2451]}],"sources":[{"fileName":"packages/core/src/events/SceneStarts.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneStarts.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/SceneStarts","previousId":2428,"nextId":2466},{"id":2466,"name":"SceneTagged","kind":128,"kindString":"Class","flags":{},"children":[{"id":2467,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":12,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneTagged.ts#L12"}],"signatures":[{"id":2468,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2469,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2466,"name":"SceneTagged"}}]},{"id":2478,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2479,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2480,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2481,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2482,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2483,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2484,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2477,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2470,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":19,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneTagged.ts#L19"}],"signatures":[{"id":2471,"name":"new SceneTagged","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2472,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2473,"name":"tag","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Tag"}},{"id":2474,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2466,"name":"SceneTagged"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2475,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":20,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneTagged.ts#L20"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2476,"name":"tag","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":21,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneTagged.ts#L21"}],"type":{"type":"reference","name":"Tag"}}],"groups":[{"title":"Methods","children":[2467,2478,2481,2483]},{"title":"Properties","children":[2477,2475,2476]},{"title":"Constructors","children":[2470]}],"sources":[{"fileName":"packages/core/src/events/SceneTagged.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneTagged.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/SceneTagged","previousId":2447,"nextId":2485},{"id":2485,"name":"SceneTemplateDetected","kind":128,"kindString":"Class","flags":{},"children":[{"id":2486,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":12,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneTemplateDetected.ts#L12"}],"signatures":[{"id":2487,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2488,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2485,"name":"SceneTemplateDetected"}}]},{"id":2497,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2498,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2499,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2500,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2501,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2502,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2503,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2496,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2489,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneTemplateDetected.ts#L20"}],"signatures":[{"id":2490,"name":"new SceneTemplateDetected","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2491,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2492,"name":"template","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Description"}},{"id":2493,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2485,"name":"SceneTemplateDetected"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2494,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":21,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneTemplateDetected.ts#L21"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2495,"name":"template","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneTemplateDetected.ts#L22"}],"type":{"type":"reference","name":"Description"}}],"groups":[{"title":"Methods","children":[2486,2497,2500,2502]},{"title":"Properties","children":[2496,2494,2495]},{"title":"Constructors","children":[2489]}],"sources":[{"fileName":"packages/core/src/events/SceneTemplateDetected.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/SceneTemplateDetected.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/SceneTemplateDetected","previousId":2466,"nextId":2504},{"id":2504,"name":"TaskFinished","kind":128,"kindString":"Class","flags":{},"children":[{"id":2505,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":12,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TaskFinished.ts#L12"}],"signatures":[{"id":2506,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2507,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2504,"name":"TaskFinished"}}]},{"id":2520,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2521,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2522,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2007,"name":"ActivityFinished.equals"}}],"inheritedFrom":{"type":"reference","id":2006,"name":"ActivityFinished.equals"}},{"id":2523,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2524,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2010,"name":"ActivityFinished.toString"}}],"inheritedFrom":{"type":"reference","id":2009,"name":"ActivityFinished.toString"}},{"id":2525,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2526,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2012,"name":"ActivityFinished.toJSON"}}],"inheritedFrom":{"type":"reference","id":2011,"name":"ActivityFinished.toJSON"}},{"id":2508,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":13,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L13"}],"signatures":[{"id":2509,"name":"new TaskFinished","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2510,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2511,"name":"activityId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2512,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ActivityDetails"}},{"id":2513,"name":"outcome","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Outcome"}},{"id":2514,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2504,"name":"TaskFinished"},"inheritedFrom":{"type":"reference","id":1995,"name":"ActivityFinished.constructor"}}],"inheritedFrom":{"type":"reference","id":1994,"name":"ActivityFinished.constructor"}},{"id":2515,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":14,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L14"}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","id":2001,"name":"ActivityFinished.sceneId"}},{"id":2516,"name":"activityId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":15,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L15"}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","id":2002,"name":"ActivityFinished.activityId"}},{"id":2517,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":16,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L16"}],"type":{"type":"reference","name":"ActivityDetails"},"inheritedFrom":{"type":"reference","id":2003,"name":"ActivityFinished.details"}},{"id":2518,"name":"outcome","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityFinished.ts","line":17,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityFinished.ts#L17"}],"type":{"type":"reference","name":"Outcome"},"inheritedFrom":{"type":"reference","id":2004,"name":"ActivityFinished.outcome"}},{"id":2519,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2005,"name":"ActivityFinished.timestamp"}}],"groups":[{"title":"Methods","children":[2505,2520,2523,2525]},{"title":"Constructors","children":[2508]},{"title":"Properties","children":[2515,2516,2517,2518,2519]}],"sources":[{"fileName":"packages/core/src/events/TaskFinished.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TaskFinished.ts#L11"}],"extendedTypes":[{"type":"reference","id":1993,"name":"ActivityFinished"}],"permalink":"/api/core-events/class/TaskFinished","previousId":2485,"nextId":2527},{"id":2527,"name":"TaskStarts","kind":128,"kindString":"Class","flags":{},"children":[{"id":2528,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":11,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TaskStarts.ts#L11"}],"signatures":[{"id":2529,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2530,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2527,"name":"TaskStarts"}}]},{"id":2541,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2542,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2543,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2075,"name":"ActivityStarts.equals"}}],"inheritedFrom":{"type":"reference","id":2074,"name":"ActivityStarts.equals"}},{"id":2544,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2545,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2078,"name":"ActivityStarts.toString"}}],"inheritedFrom":{"type":"reference","id":2077,"name":"ActivityStarts.toString"}},{"id":2546,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2547,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2080,"name":"ActivityStarts.toJSON"}}],"inheritedFrom":{"type":"reference","id":2079,"name":"ActivityStarts.toJSON"}},{"id":2531,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":13,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L13"}],"signatures":[{"id":2532,"name":"new TaskStarts","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2533,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2534,"name":"activityId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2535,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ActivityDetails"}},{"id":2536,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2527,"name":"TaskStarts"},"inheritedFrom":{"type":"reference","id":2065,"name":"ActivityStarts.constructor"}}],"inheritedFrom":{"type":"reference","id":2064,"name":"ActivityStarts.constructor"}},{"id":2537,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":14,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L14"}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","id":2070,"name":"ActivityStarts.sceneId"}},{"id":2538,"name":"activityId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":15,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L15"}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","id":2071,"name":"ActivityStarts.activityId"}},{"id":2539,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/ActivityStarts.ts","line":16,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/ActivityStarts.ts#L16"}],"type":{"type":"reference","name":"ActivityDetails"},"inheritedFrom":{"type":"reference","id":2072,"name":"ActivityStarts.details"}},{"id":2540,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2073,"name":"ActivityStarts.timestamp"}}],"groups":[{"title":"Methods","children":[2528,2541,2544,2546]},{"title":"Constructors","children":[2531]},{"title":"Properties","children":[2537,2538,2539,2540]}],"sources":[{"fileName":"packages/core/src/events/TaskStarts.ts","line":10,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TaskStarts.ts#L10"}],"extendedTypes":[{"type":"reference","id":2063,"name":"ActivityStarts"}],"permalink":"/api/core-events/class/TaskStarts","previousId":2504,"nextId":2548},{"id":2548,"name":"TestRunFinished","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Emitted when all the test scenarios have finished running."}]},"children":[{"id":2549,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":14,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunFinished.ts#L14"}],"signatures":[{"id":2550,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2551,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2548,"name":"TestRunFinished"}}]},{"id":2558,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2559,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2560,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2561,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2562,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2563,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2564,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2557,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2552,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":21,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunFinished.ts#L21"}],"signatures":[{"id":2553,"name":"new TestRunFinished","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2554,"name":"outcome","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Outcome"}},{"id":2555,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2548,"name":"TestRunFinished"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2556,"name":"outcome","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunFinished.ts#L22"}],"type":{"type":"reference","name":"Outcome"}}],"groups":[{"title":"Methods","children":[2549,2558,2561,2563]},{"title":"Properties","children":[2557,2556]},{"title":"Constructors","children":[2552]}],"sources":[{"fileName":"packages/core/src/events/TestRunFinished.ts","line":13,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunFinished.ts#L13"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/TestRunFinished","previousId":2527,"nextId":2565},{"id":2565,"name":"TestRunFinishes","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Emitted when the last test in the test suite has finished running\\nand it\'s time for any last-minute reporting activities to take place."}]},"children":[{"id":2566,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":11,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunFinishes.ts#L11"}],"signatures":[{"id":2567,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2568,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":2565,"name":"TestRunFinishes"}}]},{"id":2573,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2574,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2575,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2576,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2577,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2578,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2579,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2572,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2569,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":17,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunFinishes.ts#L17"}],"signatures":[{"id":2570,"name":"new TestRunFinishes","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2571,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2565,"name":"TestRunFinishes"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"groups":[{"title":"Methods","children":[2566,2573,2576,2578]},{"title":"Properties","children":[2572]},{"title":"Constructors","children":[2569]}],"sources":[{"fileName":"packages/core/src/events/TestRunFinishes.ts","line":10,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunFinishes.ts#L10"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/TestRunFinishes","previousId":2548,"nextId":2599},{"id":2599,"name":"TestRunStarts","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Emitted when the very first test is about to start"}]},"children":[{"id":2600,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":10,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunStarts.ts#L10"}],"signatures":[{"id":2601,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2602,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":2599,"name":"TestRunStarts"}}]},{"id":2607,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2608,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2609,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2610,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2611,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2612,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2613,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2606,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2603,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":16,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunStarts.ts#L16"}],"signatures":[{"id":2604,"name":"new TestRunStarts","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2605,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2599,"name":"TestRunStarts"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"groups":[{"title":"Methods","children":[2600,2607,2610,2612]},{"title":"Properties","children":[2606]},{"title":"Constructors","children":[2603]}],"sources":[{"fileName":"packages/core/src/events/TestRunStarts.ts","line":9,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunStarts.ts#L9"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/TestRunStarts","previousId":2565,"nextId":2580},{"id":2580,"name":"TestRunnerDetected","kind":128,"kindString":"Class","flags":{},"children":[{"id":2581,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":12,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunnerDetected.ts#L12"}],"signatures":[{"id":2582,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2583,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2580,"name":"TestRunnerDetected"}}]},{"id":2592,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2593,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2594,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2595,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2596,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2597,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2598,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2591,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2584,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunnerDetected.ts#L20"}],"signatures":[{"id":2585,"name":"new TestRunnerDetected","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2586,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}},{"id":2587,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Name"}},{"id":2588,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2580,"name":"TestRunnerDetected"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2589,"name":"sceneId","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":21,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunnerDetected.ts#L21"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":2590,"name":"name","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunnerDetected.ts#L22"}],"type":{"type":"reference","name":"Name"}}],"groups":[{"title":"Methods","children":[2581,2592,2595,2597]},{"title":"Properties","children":[2591,2589,2590]},{"title":"Constructors","children":[2584]}],"sources":[{"fileName":"packages/core/src/events/TestRunnerDetected.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestRunnerDetected.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/TestRunnerDetected","previousId":2599,"nextId":2614},{"id":2614,"name":"TestSuiteFinished","kind":128,"kindString":"Class","flags":{},"children":[{"id":2615,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":13,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestSuiteFinished.ts#L13"}],"signatures":[{"id":2616,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2617,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2614,"name":"TestSuiteFinished"}}]},{"id":2626,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2627,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2628,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2629,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2630,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2631,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2632,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2625,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2618,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":21,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestSuiteFinished.ts#L21"}],"signatures":[{"id":2619,"name":"new TestSuiteFinished","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2620,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestSuiteDetails"}},{"id":2621,"name":"outcome","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Outcome"}},{"id":2622,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2614,"name":"TestSuiteFinished"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2623,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":22,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestSuiteFinished.ts#L22"}],"type":{"type":"reference","name":"TestSuiteDetails"}},{"id":2624,"name":"outcome","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":23,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestSuiteFinished.ts#L23"}],"type":{"type":"reference","name":"Outcome"}}],"groups":[{"title":"Methods","children":[2615,2626,2629,2631]},{"title":"Properties","children":[2625,2623,2624]},{"title":"Constructors","children":[2618]}],"sources":[{"fileName":"packages/core/src/events/TestSuiteFinished.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestSuiteFinished.ts#L12"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/TestSuiteFinished","previousId":2580,"nextId":2633},{"id":2633,"name":"TestSuiteStarts","kind":128,"kindString":"Class","flags":{},"children":[{"id":2634,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":12,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestSuiteStarts.ts#L12"}],"signatures":[{"id":2635,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2636,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":2633,"name":"TestSuiteStarts"}}]},{"id":2643,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":2644,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2645,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":2230,"name":"DomainEvent.equals"}}],"inheritedFrom":{"type":"reference","id":2229,"name":"DomainEvent.equals"}},{"id":2646,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":2647,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":2233,"name":"DomainEvent.toString"}}],"inheritedFrom":{"type":"reference","id":2232,"name":"DomainEvent.toString"}},{"id":2648,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":2649,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":2235,"name":"DomainEvent.toJSON"}}],"inheritedFrom":{"type":"reference","id":2234,"name":"DomainEvent.toJSON"}},{"id":2642,"name":"timestamp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/DomainEvent.ts","line":15,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/DomainEvent.ts#L15"}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"defaultValue":"...","inheritedFrom":{"type":"reference","id":2228,"name":"DomainEvent.timestamp"}},{"id":2637,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":19,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestSuiteStarts.ts#L19"}],"signatures":[{"id":2638,"name":"new TestSuiteStarts","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2639,"name":"details","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestSuiteDetails"}},{"id":2640,"name":"timestamp","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":2633,"name":"TestSuiteStarts"},"overwrites":{"type":"reference","name":"DomainEvent.constructor"}}],"overwrites":{"type":"reference","name":"DomainEvent.constructor"}},{"id":2641,"name":"details","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":20,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestSuiteStarts.ts#L20"}],"type":{"type":"reference","name":"TestSuiteDetails"}}],"groups":[{"title":"Methods","children":[2634,2643,2646,2648]},{"title":"Properties","children":[2642,2641]},{"title":"Constructors","children":[2637]}],"sources":[{"fileName":"packages/core/src/events/TestSuiteStarts.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/TestSuiteStarts.ts#L11"}],"extendedTypes":[{"type":"reference","id":2224,"name":"DomainEvent"}],"permalink":"/api/core-events/class/TestSuiteStarts","previousId":2614,"nextId":2236}],"groups":[{"title":"Events","children":[1993,2013,2040,2063,2081,2106,2127,2146,2167,2184,2203,2224,2249,2268,2291,2312,2329,2350,2369,2390,2407,2428,2447,2466,2485,2504,2527,2548,2565,2599,2580,2614,2633]},{"title":"Interfaces","children":[2236]}],"sources":[{"fileName":"packages/core/src/events/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/events/index.ts#L1"}],"permalink":"/api/core-events"},"urlSlug":"core-events"},{"index":true,"label":"index","reflection":{"id":1,"name":"@serenity-js/core","kind":2,"kindString":"Module","flags":{},"children":[{"id":1659,"name":"Serenity","kind":128,"kindString":"Class","flags":{},"children":[{"id":1663,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":35,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L35"}],"signatures":[{"id":1664,"name":"new Serenity","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1665,"name":"clock","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1483,"name":"Clock"},"defaultValue":"..."},{"id":1666,"name":"cwd","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"},"defaultValue":"..."}],"type":{"type":"reference","id":1659,"name":"Serenity"}}]},{"id":1672,"name":"configure","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":63,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L63"}],"signatures":[{"id":1673,"name":"configure","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures Serenity/JS. Every call to this function\\nreplaces the previous configuration provided,\\nso this function should be called exactly once\\nin your test suite."}]},"parameters":[{"id":1674,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":66,"name":"SerenityConfig"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1675,"name":"engage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":182,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L182"}],"signatures":[{"id":1676,"name":"engage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Re-configures Serenity/JS with a new "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":" of "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actors"},{"kind":"text","text":"\\nyou want to use in any subsequent calls to "},{"kind":"inline-tag","tag":"@apilink","text":"actorCalled"},{"kind":"text","text":".\\n\\nFor your convenience, use "},{"kind":"inline-tag","tag":"@apilink","text":"engage"},{"kind":"text","text":" function instead,\\nwhich provides an alternative to calling "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.whoCan"},{"kind":"text","text":" directly in your tests\\nand is typically invoked in a \\"before all\\" or \\"before each\\" hook of your test runner of choice.\\n\\nIf your implementation of the "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":" interface is stateless,\\nyou can invoke this function just once before your entire test suite is executed, see\\n- ["},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\\n- ["},{"kind":"code","text":"`before`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`BeforeAll`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\\n\\nHowever, if your "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":" holds state that you want to reset before each scenario,\\nit\'s better to invoke "},{"kind":"code","text":"`engage`"},{"kind":"text","text":" before each test using:\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`Before`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\\n\\n## Engaging a cast of actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast } from \'@serenity-js/core\';\\n\\nclass Actors implements Cast {\\n  prepare(actor: Actor) {\\n    return actor.whoCan(\\n      // ... abilities you\'d like the Actor to have\\n    );\\n  }\\n}\\n\\nengage(new Actors());\\n```"},{"kind":"text","text":"\\n\\n### Using with Mocha test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Jasmine test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport \'jasmine\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Cucumber.js test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"engage"}]},"parameters":[{"id":1677,"name":"actors","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1707,"name":"Cast"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1678,"name":"theActorCalled","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":246,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L246"}],"signatures":[{"id":1679,"name":"theActorCalled","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates or retrieves an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\ncalled "},{"kind":"code","text":"`name`"},{"kind":"text","text":" if one has already been instantiated.\\n\\nFor your convenience, use "},{"kind":"inline-tag","tag":"@apilink","text":"actorCalled"},{"kind":"text","text":" function instead.\\n\\n## Usage with Mocha\\n\\n"},{"kind":"code","text":"```typescript\\n  import { describe, it } from \'mocha\';\\n  import { actorCalled } from \'@serenity-js/core\';\\n\\n  describe(\'Feature\', () => {\\n\\n     it(\'should have some behaviour\', () =>\\n         actorCalled(\'James\').attemptsTo(\\n             // ... activities\\n         ))\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Usage with Jasmine\\n\\n"},{"kind":"code","text":"```typescript\\n  import \'jasmine\';\\n  import { actorCalled } from \'@serenity-js/core\';\\n\\n  describe(\'Feature\', () => {\\n\\n     it(\'should have some behaviour\', () =>\\n         actorCalled(\'James\').attemptsTo(\\n             // ... activities\\n         ))\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"engage"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"actorCalled"}]},"parameters":[{"id":1680,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the actor to instantiate or retrieve"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":587,"name":"Actor"}}]},{"id":1681,"name":"theActorInTheSpotlight","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":283,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L283"}],"signatures":[{"id":1682,"name":"theActorInTheSpotlight","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves an actor who was last instantiated or retrieved\\nusing "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity.theActorCalled"},{"kind":"text","text":".\\n\\nThis function is particularly useful when automating Cucumber scenarios.\\n\\nFor your convenience, use "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight"},{"kind":"text","text":" function instead.\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given, When } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n\\nWhen(/(?:he|she|they) browse their recent orders/, () =>\\n  actorInTheSpotlight().attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"engage"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"actorCalled"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"}]},"type":{"type":"reference","id":587,"name":"Actor"}}]},{"id":1683,"name":"announce","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":287,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L287"}],"signatures":[{"id":1684,"name":"announce","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1685,"name":"events","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":2224,"name":"DomainEvent"}}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","id":2243,"name":"EmitsDomainEvents.announce"}}],"implementationOf":{"type":"reference","id":2242,"name":"EmitsDomainEvents.announce"}},{"id":1686,"name":"currentTime","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":291,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L291"}],"signatures":[{"id":1687,"name":"currentTime","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"type":{"type":"reference","id":1608,"name":"Timestamp"},"implementationOf":{"type":"reference","id":2248,"name":"EmitsDomainEvents.currentTime"}}],"implementationOf":{"type":"reference","id":2247,"name":"EmitsDomainEvents.currentTime"}},{"id":1688,"name":"assignNewSceneId","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":295,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L295"}],"signatures":[{"id":1689,"name":"assignNewSceneId","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"CorrelationId"}}]},{"id":1690,"name":"currentSceneId","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":299,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L299"}],"signatures":[{"id":1691,"name":"currentSceneId","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"CorrelationId"},"implementationOf":{"type":"reference","id":2238,"name":"EmitsDomainEvents.currentSceneId"}}],"implementationOf":{"type":"reference","id":2237,"name":"EmitsDomainEvents.currentSceneId"}},{"id":1692,"name":"assignNewActivityId","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":303,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L303"}],"signatures":[{"id":1693,"name":"assignNewActivityId","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1694,"name":"activityDetails","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ActivityDetails"}}],"type":{"type":"reference","name":"CorrelationId"},"implementationOf":{"type":"reference","id":2240,"name":"EmitsDomainEvents.assignNewActivityId"}}],"implementationOf":{"type":"reference","id":2239,"name":"EmitsDomainEvents.assignNewActivityId"}},{"id":1695,"name":"createError","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":307,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L307"}],"signatures":[{"id":1696,"name":"createError","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1697,"name":"RE","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":348,"name":"RuntimeError"}}],"parameters":[{"id":1698,"name":"errorType","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1699,"name":"__type","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":307,"character":52,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L307"}],"signatures":[{"id":1700,"name":"new errorType","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1701,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","id":1697,"name":"RE"}}]}}},{"id":1702,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":147,"name":"ErrorOptions"}}],"type":{"type":"reference","id":1697,"name":"RE"}}]},{"id":1703,"name":"waitForNextCue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":314,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L314"}],"signatures":[{"id":1704,"name":"waitForNextCue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@package","content":[]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","id":2246,"name":"EmitsDomainEvents.waitForNextCue"}}],"implementationOf":{"type":"reference","id":2245,"name":"EmitsDomainEvents.waitForNextCue"}},{"id":1705,"name":"cwd","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/Serenity.ts","line":318,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L318"}],"signatures":[{"id":1706,"name":"cwd","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Path"}}]}],"groups":[{"title":"Constructors","children":[1663]},{"title":"Methods","children":[1672,1675,1678,1681,1683,1686,1688,1690,1692,1695,1703,1705]}],"sources":[{"fileName":"packages/core/src/Serenity.ts","line":21,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/Serenity.ts#L21"}],"implementedTypes":[{"type":"reference","id":2236,"name":"EmitsDomainEvents"}],"permalink":"/api/core/class/Serenity","previousId":483,"nextId":65},{"id":65,"name":"ClassDescription","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":" describes the Node module ID and optionally:\\n- a named export that you want to import\\n- a parameter that should be passed to the static "},{"kind":"code","text":"`fromJSON`"},{"kind":"text","text":" method if the imported type provides it.\\n\\n"},{"kind":"code","text":"`ClassDescription`"},{"kind":"text","text":" is used to describe the "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember|StageCrewMembers"},{"kind":"text","text":" passed to "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig"},{"kind":"text","text":".\\n\\nThe most basic class description is the name of a Node module that must provide a "},{"kind":"code","text":"`default`"},{"kind":"text","text":" export.\\nFor example, below definition would be interpreted as a request to import the "},{"kind":"code","text":"`default`"},{"kind":"text","text":" export from the "},{"kind":"code","text":"`@serenity-js/serenity-bdd`"},{"kind":"text","text":" module and instantiate it using its no-arg constructor:\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    `@serenity-js/serenity-bdd`\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nClass description can also include a named export to be imported. For example, below definition would be interpreted as a request\\nto import the "},{"kind":"code","text":"`SerenityBDDReporter`"},{"kind":"text","text":" type from "},{"kind":"code","text":"`@serenity-js/serenity-bdd`"},{"kind":"text","text":" and instantiate it using its no-arg constructor:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    `@serenity-js/serenity-bdd:SerenityBDDReporter`\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nHowever, not all types have no-arg constructors. In those cases, a type offering a "},{"kind":"code","text":"`static fromJSON(configParam)`"},{"kind":"text","text":" method can be described using a tuple\\nwhere the first item describes the Node module and optionally the class name, and the second item describes the "},{"kind":"code","text":"`configParam`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    [ `@serenity-js/core:ArtifactArchiver`, { outputDirectory: \'./target/site/serenity\' } ]\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\nNote that the class description could also describe a local Node module. This can be useful when you\'re writing a custom StageCrewMember implementation.\\nFor example, "},{"kind":"code","text":"`./my-reporter:MyReporter`"},{"kind":"text","text":" would be interpreted as a request to load the "},{"kind":"code","text":"`MyReporter`"},{"kind":"text","text":" type from "},{"kind":"code","text":"`./my-reporter`"},{"kind":"text","text":" file, located\\nrelative to the [working directory](https://nodejs.org/api/process.html#processcwd) of the current Node.js process."}]},"sources":[{"fileName":"packages/core/src/config/ClassDescription.ts","line":52,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/config/ClassDescription.ts#L52"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"tuple","elements":[{"type":"intrinsic","name":"string"}]},{"type":"tuple","elements":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}]}]},"permalink":"/api/core#ClassDescription","previousId":1659,"nextId":66},{"id":66,"name":"SerenityConfig","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Describes the configuration object accepted by the "},{"kind":"inline-tag","tag":"@apilink","text":"configure"},{"kind":"text","text":" function.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"configure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ClassDescription"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage.waitForNextCue"}]},"children":[{"id":67,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":68,"name":"new SerenityConfig","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":66,"name":"SerenityConfig"}}]},{"id":69,"name":"actors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":" of "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"s to be used when "},{"kind":"inline-tag","tag":"@apilink","text":"actorCalled"},{"kind":"text","text":"\\nand "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight"},{"kind":"text","text":" functions are called."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":26,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/config/SerenityConfig.ts#L26"}],"type":{"type":"reference","id":1707,"name":"Cast"}},{"id":70,"name":"crew","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder|StageCrewMemberBuilders"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember|StageCrewMembers"},{"kind":"text","text":"\\nto be notified of "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent|DomainEvents"},{"kind":"text","text":" that occur during the scenario execution.\\n\\nNote that the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" can also be configured using "},{"kind":"inline-tag","tag":"@apilink","text":"ClassDescription|ClassDescriptions"},{"kind":"text","text":".\\nThis is useful when you need to load the configuration from a static "},{"kind":"code","text":"`json`"},{"kind":"text","text":" file, or when the test runner doesn\'t support\\nproviding class instances in configuration (e.g. Playwright Test)."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":36,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/config/SerenityConfig.ts#L36"}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","id":1938,"name":"StageCrewMember"},{"type":"reference","id":1945,"typeArguments":[{"type":"reference","id":1781,"name":"ListensToDomainEvents"}],"name":"StageCrewMemberBuilder"},{"type":"reference","id":65,"name":"ClassDescription"}]}}},{"id":71,"name":"cueTimeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum amount of time between "},{"kind":"inline-tag","tag":"@apilink","text":"SceneFinishes"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"SceneFinished"},{"kind":"text","text":" events\\nthat Serenity/JS should wait for any post-scenario\\nasync operations to complete. Those include generating the screenshots,\\nsaving reports to disk, "},{"kind":"inline-tag","tag":"@apilink","text":"Discardable|dismissing the actors"},{"kind":"text","text":", and so on.\\n\\nDefaults to 5 seconds.\\n\\n**Please note** that this is not\\na scenario timeout, which should be configured in your test runner."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":49,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/config/SerenityConfig.ts#L49"}],"type":{"type":"reference","id":1511,"name":"Duration"}},{"id":72,"name":"interactionTimeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum default amount of time allowed for interactions such as "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.until"},{"kind":"text","text":"\\nto complete.\\n\\nDefaults to 5 seconds, can be overridden per interaction.\\n\\n**Please note** that this is not\\na scenario timeout, which should be configured in your test runner.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.until"}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":63,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/config/SerenityConfig.ts#L63"}],"type":{"type":"reference","id":1511,"name":"Duration"}},{"id":73,"name":"diffFormatter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"inline-tag","tag":"@apilink","text":"DiffFormatter"},{"kind":"text","text":" that should be used by the "},{"kind":"inline-tag","tag":"@apilink","text":"ErrorFactory"},{"kind":"text","text":" and the ability to "},{"kind":"inline-tag","tag":"@apilink","text":"RaiseErrors"},{"kind":"text","text":"\\nwhen generating diffs included in "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":" objects.\\n\\nBy default, Serenity/JS uses "},{"kind":"inline-tag","tag":"@apilink","text":"NoOpDiffFormatter"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":71,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/config/SerenityConfig.ts#L71"}],"type":{"type":"reference","id":170,"name":"DiffFormatter"}},{"id":74,"name":"outputStream","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder|StageCrewMemberBuilders"},{"kind":"text","text":"\\n\\nDefaults to ["},{"kind":"code","text":"`process.stdout`"},{"kind":"text","text":"](https://nodejs.org/api/process.html#process_process_stdout)."}]},"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":78,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/config/SerenityConfig.ts#L78"}],"type":{"type":"reference","id":1977,"name":"OutputStream"}}],"groups":[{"title":"Constructors","children":[67]},{"title":"Properties","children":[69,70,71,72,73,74]}],"sources":[{"fileName":"packages/core/src/config/SerenityConfig.ts","line":20,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/config/SerenityConfig.ts#L20"}],"permalink":"/api/core/class/SerenityConfig","previousId":65,"nextId":482},{"id":125,"name":"ErrorFactory","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates Serenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":" objects based on provided "},{"kind":"inline-tag","tag":"@apilink","text":"ErrorOptions|configuration"},{"kind":"text","text":"."}]},"children":[{"id":126,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":21,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorFactory.ts#L21"}],"signatures":[{"id":127,"name":"new ErrorFactory","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":128,"name":"formatter","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":170,"name":"DiffFormatter"},"defaultValue":"..."}],"type":{"type":"reference","id":125,"name":"ErrorFactory"}}]},{"id":130,"name":"create","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorFactory.ts#L24"}],"signatures":[{"id":131,"name":"create","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":132,"name":"RE","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":348,"name":"RuntimeError"}}],"parameters":[{"id":133,"name":"errorType","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":134,"name":"__type","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":24,"character":47,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorFactory.ts#L24"}],"signatures":[{"id":135,"name":"new errorType","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":136,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","id":132,"name":"RE"}}]}}},{"id":137,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":147,"name":"ErrorOptions"}}],"type":{"type":"reference","id":132,"name":"RE"}}]}],"groups":[{"title":"Constructors","children":[126]},{"title":"Methods","children":[130]}],"sources":[{"fileName":"packages/core/src/errors/ErrorFactory.ts","line":19,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorFactory.ts#L19"}],"permalink":"/api/core/class/ErrorFactory","previousId":947,"nextId":147},{"id":147,"name":"ErrorOptions","kind":256,"kindString":"Interface","flags":{},"children":[{"id":148,"name":"message","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":8,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorOptions.ts#L8"}],"type":{"type":"intrinsic","name":"string"}},{"id":149,"name":"location","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":9,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorOptions.ts#L9"}],"type":{"type":"reference","name":"FileSystemLocation"}},{"id":150,"name":"expectation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":10,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorOptions.ts#L10"}],"type":{"type":"reference","id":1068,"name":"ExpectationDetails"}},{"id":151,"name":"diff","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorOptions.ts#L11"}],"type":{"type":"reflection","declaration":{"id":152,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":153,"name":"expected","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":12,"character":8,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorOptions.ts#L12"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":154,"name":"actual","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":13,"character":8,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorOptions.ts#L13"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Properties","children":[153,154]}],"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":11,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorOptions.ts#L11"}]}}},{"id":155,"name":"cause","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":15,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorOptions.ts#L15"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"groups":[{"title":"Properties","children":[148,149,150,151,155]}],"sources":[{"fileName":"packages/core/src/errors/ErrorOptions.ts","line":7,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorOptions.ts#L7"}],"permalink":"/api/core/interface/ErrorOptions","previousId":125,"nextId":75},{"id":75,"name":"ErrorSerialiser","kind":128,"kindString":"Class","flags":{},"children":[{"id":80,"name":"serialise","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":19,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorSerialiser.ts#L19"}],"signatures":[{"id":81,"name":"serialise","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":82,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":83,"name":"registerErrorTypes","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorSerialiser.ts#L36"}],"signatures":[{"id":84,"name":"registerErrorTypes","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":85,"name":"types","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":86,"name":"__type","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":36,"character":46,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorSerialiser.ts#L36"}],"signatures":[{"id":87,"name":"new types","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":88,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}]}}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":89,"name":"deserialise","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":44,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorSerialiser.ts#L44"}],"signatures":[{"id":90,"name":"deserialise","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":91,"name":"serialised","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}]}}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}]},{"id":114,"name":"deserialiseFromStackTrace","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":78,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorSerialiser.ts#L78"}],"signatures":[{"id":115,"name":"deserialiseFromStackTrace","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":116,"name":"stack","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}]},{"id":117,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":118,"name":"new ErrorSerialiser","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":75,"name":"ErrorSerialiser"}}]}],"groups":[{"title":"Methods","children":[80,83,89,114]},{"title":"Constructors","children":[117]}],"sources":[{"fileName":"packages/core/src/errors/ErrorSerialiser.ts","line":7,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorSerialiser.ts#L7"}],"permalink":"/api/core/class/ErrorSerialiser","previousId":147,"nextId":119},{"id":119,"name":"ErrorStackParser","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"A thin wrapper around error-stack-parser module\\n\\n## Learn more\\n- [Error stack parser](https://www.npmjs.com/package/error-stack-parser)"}]},"children":[{"id":120,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":121,"name":"new ErrorStackParser","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":119,"name":"ErrorStackParser"}}]},{"id":122,"name":"parse","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":12,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorStackParser.ts#L12"}],"signatures":[{"id":123,"name":"parse","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":124,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"array","elementType":{"type":"reference","name":"StackFrame","qualifiedName":"StackFrame","package":"stackframe"}}}]}],"groups":[{"title":"Constructors","children":[120]},{"title":"Methods","children":[122]}],"sources":[{"fileName":"packages/core/src/errors/ErrorStackParser.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/ErrorStackParser.ts#L11"}],"permalink":"/api/core/class/ErrorStackParser","previousId":75,"nextId":453},{"id":453,"name":"RaiseErrors","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" that enables an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to create a Serenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":"\\nfrom within a custom "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\nThe stack trace of an error created this way includes the filesystem location pointing to where the interaction was invoked,\\nwhich makes debugging any failures easier.\\n\\n:::info Pro tip\\nThe ability to "},{"kind":"code","text":"`RaiseErrors`"},{"kind":"text","text":" is given to all Serenity/JS actors by default, so you don\'t need to configure it explicitly.\\n:::\\n\\n## Raising an error\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Interaction, LogicError, RaiseErrors } from \'@serenity-js/core\'\\nimport isPathInside from \'is-path-inside\'\\nimport { unlink } from \'fs/promises\'\\n\\nconst RemoveFile = (pathToFile: string) =>\\n  Interaction.where(`#actor removes a file at ${ pathToFile }`, async actor => {\\n\\n    if (! isPathInside(pathToFile, process.cwd())) {\\n\\n      throw RaiseErrors.as(actor).create(LogicError, {\\n        message: `Removing files outside the current working directory is not allowed`\\n        diff: {\\n          expected: process.cwd(),\\n          actual: pathToFile,\\n        }\\n      })\\n    }\\n\\n    await unlink(pathToFile);\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ErrorOptions"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ErrorFactory"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AssertionError"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ConfigurationError"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TestCompromisedError"}]},"children":[{"id":459,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":54,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/RaiseErrors.ts#L54"}],"signatures":[{"id":460,"name":"new RaiseErrors","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":461,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1863,"name":"Stage"}}],"type":{"type":"reference","id":453,"name":"RaiseErrors"},"overwrites":{"type":"reference","id":490,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","id":489,"name":"Ability.constructor"}},{"id":463,"name":"create","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/RaiseErrors.ts#L58"}],"signatures":[{"id":464,"name":"create","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":465,"name":"RE","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":348,"name":"RuntimeError"}}],"parameters":[{"id":466,"name":"errorType","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":467,"name":"__type","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":58,"character":47,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/RaiseErrors.ts#L58"}],"signatures":[{"id":468,"name":"new errorType","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":469,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","id":465,"name":"RE"}}]}}},{"id":470,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":147,"name":"ErrorOptions"}}],"type":{"type":"reference","id":465,"name":"RE"}}]}],"groups":[{"title":"Constructors","children":[459]},{"title":"Methods","children":[463]}],"sources":[{"fileName":"packages/core/src/errors/RaiseErrors.ts","line":53,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/RaiseErrors.ts#L53"}],"extendedTypes":[{"type":"reference","id":483,"name":"Ability"}],"permalink":"/api/core/class/RaiseErrors","previousId":119,"nextId":156},{"id":156,"name":"AnsiDiffFormatter","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@apilink","text":"DiffFormatter"},{"kind":"text","text":" that uses [ANSI escape codes](https://en.wikipedia.org/wiki/ANSI_escape_code)\\nto format the output."}]},"children":[{"id":157,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":27,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/AnsiDiffFormatter.ts#L27"}],"signatures":[{"id":158,"name":"new AnsiDiffFormatter","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`AnsiDiffFormatter`"},{"kind":"text","text":", configured with colour support options for [Chalk](https://github.com/chalk/chalk).\\nWhen no "},{"kind":"code","text":"`chalkOptions`"},{"kind":"text","text":" object is provided, Chalk will auto-detect colour support automatically based on the execution environment.\\n\\nAvailable colour support levels:\\n- "},{"kind":"code","text":"`0`"},{"kind":"text","text":" - All colours disabled.\\n- "},{"kind":"code","text":"`1`"},{"kind":"text","text":" - Basic 16 colours support.\\n- "},{"kind":"code","text":"`2`"},{"kind":"text","text":" - ANSI 256 colours support.\\n- "},{"kind":"code","text":"`3`"},{"kind":"text","text":" - Truecolor - 16 million colours support."}]},"parameters":[{"id":159,"name":"chalkOptions","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Options","qualifiedName":"chalk.Options","package":"chalk"}}],"type":{"type":"reference","id":156,"name":"AnsiDiffFormatter"}}]},{"id":161,"name":"expected","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":31,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/AnsiDiffFormatter.ts#L31"}],"signatures":[{"id":162,"name":"expected","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":163,"name":"line","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","id":172,"name":"DiffFormatter.expected"}}],"implementationOf":{"type":"reference","id":171,"name":"DiffFormatter.expected"}},{"id":164,"name":"received","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":35,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/AnsiDiffFormatter.ts#L35"}],"signatures":[{"id":165,"name":"received","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":166,"name":"line","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","id":175,"name":"DiffFormatter.received"}}],"implementationOf":{"type":"reference","id":174,"name":"DiffFormatter.received"}},{"id":167,"name":"unchanged","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":39,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/AnsiDiffFormatter.ts#L39"}],"signatures":[{"id":168,"name":"unchanged","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":169,"name":"line","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","id":178,"name":"DiffFormatter.unchanged"}}],"implementationOf":{"type":"reference","id":177,"name":"DiffFormatter.unchanged"}}],"groups":[{"title":"Constructors","children":[157]},{"title":"Methods","children":[161,164,167]}],"sources":[{"fileName":"packages/core/src/errors/diff/AnsiDiffFormatter.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/AnsiDiffFormatter.ts#L12"}],"implementedTypes":[{"type":"reference","id":170,"name":"DiffFormatter"}],"permalink":"/api/core/class/AnsiDiffFormatter","previousId":453,"nextId":170},{"id":170,"name":"DiffFormatter","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Formats text representing expected, received, and unchanged lines of a diff\\nproduced by the "},{"kind":"inline-tag","tag":"@apilink","text":"ErrorFactory"},{"kind":"text","text":", so that they can be presented to a developer\\nin a visually distinctive way."}]},"children":[{"id":171,"name":"expected","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":9,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/DiffFormatter.ts#L9"}],"signatures":[{"id":172,"name":"expected","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":173,"name":"line","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":174,"name":"received","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":10,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/DiffFormatter.ts#L10"}],"signatures":[{"id":175,"name":"received","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":176,"name":"line","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":177,"name":"unchanged","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/DiffFormatter.ts#L11"}],"signatures":[{"id":178,"name":"unchanged","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":179,"name":"line","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[171,174,177]}],"sources":[{"fileName":"packages/core/src/errors/diff/DiffFormatter.ts","line":8,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/DiffFormatter.ts#L8"}],"implementedBy":[{"type":"reference","id":156,"name":"AnsiDiffFormatter"},{"type":"reference","id":180,"name":"NoOpDiffFormatter"}],"permalink":"/api/core/interface/DiffFormatter","previousId":156,"nextId":180},{"id":180,"name":"NoOpDiffFormatter","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"A no-op "},{"kind":"inline-tag","tag":"@apilink","text":"DiffFormatter"},{"kind":"text","text":" that produces output identical to input."}]},"children":[{"id":181,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":182,"name":"new NoOpDiffFormatter","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":180,"name":"NoOpDiffFormatter"}}]},{"id":183,"name":"expected","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":9,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/NoOpDiffFormatter.ts#L9"}],"signatures":[{"id":184,"name":"expected","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":185,"name":"line","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","id":172,"name":"DiffFormatter.expected"}}],"implementationOf":{"type":"reference","id":171,"name":"DiffFormatter.expected"}},{"id":186,"name":"received","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":13,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/NoOpDiffFormatter.ts#L13"}],"signatures":[{"id":187,"name":"received","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":188,"name":"line","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","id":175,"name":"DiffFormatter.received"}}],"implementationOf":{"type":"reference","id":174,"name":"DiffFormatter.received"}},{"id":189,"name":"unchanged","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":17,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/NoOpDiffFormatter.ts#L17"}],"signatures":[{"id":190,"name":"unchanged","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":191,"name":"line","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"},"implementationOf":{"type":"reference","id":178,"name":"DiffFormatter.unchanged"}}],"implementationOf":{"type":"reference","id":177,"name":"DiffFormatter.unchanged"}}],"groups":[{"title":"Constructors","children":[181]},{"title":"Methods","children":[183,186,189]}],"sources":[{"fileName":"packages/core/src/errors/diff/NoOpDiffFormatter.ts","line":8,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/diff/NoOpDiffFormatter.ts#L8"}],"implementedTypes":[{"type":"reference","id":170,"name":"DiffFormatter"}],"permalink":"/api/core/class/NoOpDiffFormatter","previousId":170,"nextId":192},{"id":192,"name":"AssertionError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an assertion has failed."}]},"children":[{"id":193,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":13,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/AssertionError.ts#L13"}],"signatures":[{"id":194,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":195,"name":"serialised","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":192,"name":"AssertionError"}}]},{"id":215,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":372,"name":"RuntimeError.name"}},{"id":216,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":373,"name":"RuntimeError.message"}},{"id":217,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":374,"name":"RuntimeError.stack"}},{"id":206,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":28,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/AssertionError.ts#L28"}],"signatures":[{"id":207,"name":"new AssertionError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":208,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error and the difference between the expected and actual values"}]},"type":{"type":"intrinsic","name":"string"}},{"id":209,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":192,"name":"AssertionError"},"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","name":"RuntimeError.constructor"}},{"id":210,"name":"cause","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L78"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","id":367,"name":"RuntimeError.cause"}},{"id":211,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L94"}],"signatures":[{"id":212,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":369,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","id":368,"name":"RuntimeError.toString"}},{"id":213,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L98"}],"signatures":[{"id":214,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","id":371,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","id":370,"name":"RuntimeError.toJSON"}}],"groups":[{"title":"Methods","children":[193,211,213]},{"title":"Properties","children":[215,216,217,210]},{"title":"Constructors","children":[206]}],"sources":[{"fileName":"packages/core/src/errors/model/AssertionError.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/AssertionError.ts#L11"}],"extendedTypes":[{"type":"reference","id":348,"name":"RuntimeError"}],"permalink":"/api/core/class/AssertionError","previousId":180,"nextId":218},{"id":218,"name":"ConfigurationError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that a test framework or test suite configuration error occurred."}]},"children":[{"id":219,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":13,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/ConfigurationError.ts#L13"}],"signatures":[{"id":220,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":221,"name":"serialised","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":218,"name":"ConfigurationError"}}]},{"id":241,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":372,"name":"RuntimeError.name"}},{"id":242,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":373,"name":"RuntimeError.message"}},{"id":243,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":374,"name":"RuntimeError.stack"}},{"id":232,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":28,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/ConfigurationError.ts#L28"}],"signatures":[{"id":233,"name":"new ConfigurationError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":234,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":235,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":218,"name":"ConfigurationError"},"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","name":"RuntimeError.constructor"}},{"id":236,"name":"cause","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L78"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","id":367,"name":"RuntimeError.cause"}},{"id":237,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L94"}],"signatures":[{"id":238,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":369,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","id":368,"name":"RuntimeError.toString"}},{"id":239,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L98"}],"signatures":[{"id":240,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","id":371,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","id":370,"name":"RuntimeError.toJSON"}}],"groups":[{"title":"Methods","children":[219,237,239]},{"title":"Properties","children":[241,242,243,236]},{"title":"Constructors","children":[232]}],"sources":[{"fileName":"packages/core/src/errors/model/ConfigurationError.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/ConfigurationError.ts#L11"}],"extendedTypes":[{"type":"reference","id":348,"name":"RuntimeError"}],"permalink":"/api/core/class/ConfigurationError","previousId":192,"nextId":244},{"id":244,"name":"ImplementationPendingError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" attempted to perform\\na "},{"kind":"inline-tag","tag":"@apilink","text":"Task"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":" that hasn\'t been implemented yet.\\n\\n## A pending Task\\n\\n"},{"kind":"code","text":"```ts\\nimport { Task } from \'@serenity-js/core\'\\n\\n// A pending Task is one that encapsulates no other activities\\nconst Authenticate = () =>\\n  Task.where(`#actor authenticates with the service up a test database` )\\n```"},{"kind":"text","text":"\\n\\n## A pending Interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Interaction } from \'@serenity-js/core\'\\n\\n// A pending Interaction is one that doesn\'t perform any action\\nconst DoubleClick = () =>\\n  Interaction.where(`#actor double-clicks`)\\n```"}]},"children":[{"id":245,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":34,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/ImplementationPendingError.ts#L34"}],"signatures":[{"id":246,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":247,"name":"serialised","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":244,"name":"ImplementationPendingError"}}]},{"id":267,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":372,"name":"RuntimeError.name"}},{"id":268,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":373,"name":"RuntimeError.message"}},{"id":269,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":374,"name":"RuntimeError.stack"}},{"id":258,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":49,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/ImplementationPendingError.ts#L49"}],"signatures":[{"id":259,"name":"new ImplementationPendingError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":260,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":261,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":244,"name":"ImplementationPendingError"},"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","name":"RuntimeError.constructor"}},{"id":262,"name":"cause","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L78"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","id":367,"name":"RuntimeError.cause"}},{"id":263,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L94"}],"signatures":[{"id":264,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":369,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","id":368,"name":"RuntimeError.toString"}},{"id":265,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L98"}],"signatures":[{"id":266,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","id":371,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","id":370,"name":"RuntimeError.toJSON"}}],"groups":[{"title":"Methods","children":[245,263,265]},{"title":"Properties","children":[267,268,269,262]},{"title":"Constructors","children":[258]}],"sources":[{"fileName":"packages/core/src/errors/model/ImplementationPendingError.ts","line":32,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/ImplementationPendingError.ts#L32"}],"extendedTypes":[{"type":"reference","id":348,"name":"RuntimeError"}],"permalink":"/api/core/class/ImplementationPendingError","previousId":218,"nextId":270},{"id":270,"name":"ListItemNotFoundError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":", a "},{"kind":"inline-tag","tag":"@apilink","text":"Task"},{"kind":"text","text":" or a test scenario\\ncan\'t be executed due to no items are found in a list.\\n\\nFor example, it\'s not possible to get the first() or the last() item of a list\\nif the list is empty."}]},"children":[{"id":271,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":17,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/ListItemNotFoundError.ts#L17"}],"signatures":[{"id":272,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":273,"name":"serialised","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":270,"name":"ListItemNotFoundError"}}]},{"id":293,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":372,"name":"RuntimeError.name"}},{"id":294,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":373,"name":"RuntimeError.message"}},{"id":295,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":374,"name":"RuntimeError.stack"}},{"id":284,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":32,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/ListItemNotFoundError.ts#L32"}],"signatures":[{"id":285,"name":"new ListItemNotFoundError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":286,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":287,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"ListItemNotFoundError"},{"kind":"text","text":", if any"}]},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":270,"name":"ListItemNotFoundError"},"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","name":"RuntimeError.constructor"}},{"id":288,"name":"cause","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L78"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","id":367,"name":"RuntimeError.cause"}},{"id":289,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L94"}],"signatures":[{"id":290,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":369,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","id":368,"name":"RuntimeError.toString"}},{"id":291,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L98"}],"signatures":[{"id":292,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","id":371,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","id":370,"name":"RuntimeError.toJSON"}}],"groups":[{"title":"Methods","children":[271,289,291]},{"title":"Properties","children":[293,294,295,288]},{"title":"Constructors","children":[284]}],"sources":[{"fileName":"packages/core/src/errors/model/ListItemNotFoundError.ts","line":15,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/ListItemNotFoundError.ts#L15"}],"extendedTypes":[{"type":"reference","id":348,"name":"RuntimeError"}],"permalink":"/api/core/class/ListItemNotFoundError","previousId":244,"nextId":296},{"id":296,"name":"LogicError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":", a "},{"kind":"inline-tag","tag":"@apilink","text":"Task"},{"kind":"text","text":" or a test scenario\\ncan\'t be executed due to a logical error.\\n\\nFor example, it\'s not possible to assert on the last HTTP Response if the request\\nhasn\'t been performed yet."}]},"children":[{"id":297,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":17,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/LogicError.ts#L17"}],"signatures":[{"id":298,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":299,"name":"serialised","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":296,"name":"LogicError"}}]},{"id":319,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":372,"name":"RuntimeError.name"}},{"id":320,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":373,"name":"RuntimeError.message"}},{"id":321,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":374,"name":"RuntimeError.stack"}},{"id":310,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":32,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/LogicError.ts#L32"}],"signatures":[{"id":311,"name":"new LogicError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":312,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":313,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":296,"name":"LogicError"},"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","name":"RuntimeError.constructor"}},{"id":314,"name":"cause","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L78"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","id":367,"name":"RuntimeError.cause"}},{"id":315,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L94"}],"signatures":[{"id":316,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":369,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","id":368,"name":"RuntimeError.toString"}},{"id":317,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L98"}],"signatures":[{"id":318,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","id":371,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","id":370,"name":"RuntimeError.toJSON"}}],"groups":[{"title":"Methods","children":[297,315,317]},{"title":"Properties","children":[319,320,321,314]},{"title":"Constructors","children":[310]}],"sources":[{"fileName":"packages/core/src/errors/model/LogicError.ts","line":15,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/LogicError.ts#L15"}],"extendedTypes":[{"type":"reference","id":348,"name":"RuntimeError"}],"permalink":"/api/core/class/LogicError","previousId":270,"nextId":322},{"id":322,"name":"OperationInterruptedError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that a "},{"kind":"inline-tag","tag":"@apilink","text":"Scheduler|scheduled operation"},{"kind":"text","text":"\\nhas been stopped before it was completed."}]},"children":[{"id":323,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":14,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/OperationInterruptedError.ts#L14"}],"signatures":[{"id":324,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":325,"name":"serialised","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":322,"name":"OperationInterruptedError"}}]},{"id":345,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":372,"name":"RuntimeError.name"}},{"id":346,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":373,"name":"RuntimeError.message"}},{"id":347,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":374,"name":"RuntimeError.stack"}},{"id":336,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":32,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/OperationInterruptedError.ts#L32"}],"signatures":[{"id":337,"name":"new OperationInterruptedError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":338,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":339,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":322,"name":"OperationInterruptedError"},"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","name":"RuntimeError.constructor"}},{"id":340,"name":"cause","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L78"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","id":367,"name":"RuntimeError.cause"}},{"id":341,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L94"}],"signatures":[{"id":342,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":369,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","id":368,"name":"RuntimeError.toString"}},{"id":343,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L98"}],"signatures":[{"id":344,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","id":371,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","id":370,"name":"RuntimeError.toJSON"}}],"groups":[{"title":"Methods","children":[323,341,343]},{"title":"Properties","children":[345,346,347,340]},{"title":"Constructors","children":[336]}],"sources":[{"fileName":"packages/core/src/errors/model/OperationInterruptedError.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/OperationInterruptedError.ts#L12"}],"extendedTypes":[{"type":"reference","id":348,"name":"RuntimeError"}],"permalink":"/api/core/class/OperationInterruptedError","previousId":296,"nextId":348},{"id":348,"name":"RuntimeError","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Base class for custom errors that may occur during execution of a test scenario.\\n\\n## Defining a custom error\\n\\n"},{"kind":"code","text":"```ts\\nimport { RuntimeError } from \'@serenity-js/core\'\\n\\nexport class CustomError extends RuntimeError {\\n  constructor(message: string, cause?: Error) {\\n      super(CustomError, message, cause);\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Wrapping a sync error\\n\\n"},{"kind":"code","text":"```ts\\ntry {\\n    operationThatMightThrowAnError();\\n} catch(error) {\\n    // catch and re-throw\\n    throw new CustomError(\'operationThatMightThrowAnError has failed\', error);\\n}\\n```"},{"kind":"text","text":"\\n\\n## Wrapping an async error\\n\\n"},{"kind":"code","text":"```ts\\noperationThatMightRejectAPromise()\\n  .catch(error => {\\n    // catch and re-throw\\n    throw new CustomError(\'operationThatMightThrowAnError has failed\', error)\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Registering a custom error with "},{"kind":"inline-tag","tag":"@apilink","text":"ErrorSerialiser"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { RuntimeError } from \'@serenity-js/core\'\\nimport { ErrorSerialiser } from \'@serenity-js/core/lib/io\'\\n\\nexport class CustomError extends RuntimeError {\\n\\n   static fromJSON(serialised: JSONObject): CustomError {\\n        const error = new CustomError(\\n            serialised.message as string,\\n            ErrorSerialiser.deserialise(serialised.cause as string | undefined),\\n        );\\n\\n        error.stack = serialised.stack as string;\\n\\n        return error;\\n    }\\n\\n  constructor(message: string, cause?: Error) {\\n      super(CustomError, message, cause);\\n  }\\n}\\n\\nErrorSerialiser.registerErrorTypes(CustomError)\\n```"}]},"children":[{"id":372,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Error.name"}},{"id":373,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Error.message"}},{"id":374,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Error.stack"}},{"id":367,"name":"cause","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L78"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}},{"id":368,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L94"}],"signatures":[{"id":369,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}}]},{"id":370,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L98"}],"signatures":[{"id":371,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"}}]}],"groups":[{"title":"Properties","children":[372,373,374,367]},{"title":"Methods","children":[368,370]}],"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":68,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L68"}],"extendedTypes":[{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}],"extendedBy":[{"type":"reference","id":192,"name":"AssertionError"},{"type":"reference","id":218,"name":"ConfigurationError"},{"type":"reference","id":244,"name":"ImplementationPendingError"},{"type":"reference","id":270,"name":"ListItemNotFoundError"},{"type":"reference","id":296,"name":"LogicError"},{"type":"reference","id":322,"name":"OperationInterruptedError"},{"type":"reference","id":375,"name":"TestCompromisedError"},{"type":"reference","id":401,"name":"TimeoutExpiredError"},{"type":"reference","id":427,"name":"UnknownError"}],"permalink":"/api/core/class/RuntimeError","previousId":322,"nextId":375},{"id":375,"name":"TestCompromisedError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that the test can\'t be performed due to an issue with a downstream dependency.\\nFor example, it makes no sense to run a full-stack integration test if we already know that\\nthe database server is down.\\n\\n## Throwing a TestCompromisedError from a custom Interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Interaction } from \'@serenity-js/core\';\\n\\nconst SetUpTestDatabase = () =>\\n  Interaction.where(`#actor sets up a test database`, actor => {\\n    return SomeCustomDatabaseSpecificAbility.as(actor).setUpTestDatabase().catch(error => {\\n      throw new TestCompromisedError(\'Could not set up the test database\', error)\\n    })\\n})\\n```"}]},"children":[{"id":376,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":28,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/TestCompromisedError.ts#L28"}],"signatures":[{"id":377,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":378,"name":"serialised","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":375,"name":"TestCompromisedError"}}]},{"id":398,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":372,"name":"RuntimeError.name"}},{"id":399,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":373,"name":"RuntimeError.message"}},{"id":400,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":374,"name":"RuntimeError.stack"}},{"id":393,"name":"cause","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L78"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","id":367,"name":"RuntimeError.cause"}},{"id":394,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L94"}],"signatures":[{"id":395,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":369,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","id":368,"name":"RuntimeError.toString"}},{"id":396,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L98"}],"signatures":[{"id":397,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","id":371,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","id":370,"name":"RuntimeError.toJSON"}},{"id":389,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":43,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/TestCompromisedError.ts#L43"}],"signatures":[{"id":390,"name":"new TestCompromisedError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":391,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":392,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":375,"name":"TestCompromisedError"},"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"groups":[{"title":"Methods","children":[376,394,396]},{"title":"Properties","children":[398,399,400,393]},{"title":"Constructors","children":[389]}],"sources":[{"fileName":"packages/core/src/errors/model/TestCompromisedError.ts","line":26,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/TestCompromisedError.ts#L26"}],"extendedTypes":[{"type":"reference","id":348,"name":"RuntimeError"}],"permalink":"/api/core/class/TestCompromisedError","previousId":348,"nextId":401},{"id":401,"name":"TimeoutExpiredError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":", a "},{"kind":"inline-tag","tag":"@apilink","text":"Task"},{"kind":"text","text":" or a test scenario\\ntook longer to execute than the expected timeout."}]},"children":[{"id":402,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":14,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/TimeoutExpiredError.ts#L14"}],"signatures":[{"id":403,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":404,"name":"serialised","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":401,"name":"TimeoutExpiredError"}}]},{"id":424,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":372,"name":"RuntimeError.name"}},{"id":425,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":373,"name":"RuntimeError.message"}},{"id":426,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":374,"name":"RuntimeError.stack"}},{"id":419,"name":"cause","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L78"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","id":367,"name":"RuntimeError.cause"}},{"id":420,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L94"}],"signatures":[{"id":421,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":369,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","id":368,"name":"RuntimeError.toString"}},{"id":422,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L98"}],"signatures":[{"id":423,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","id":371,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","id":370,"name":"RuntimeError.toJSON"}},{"id":415,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":32,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/TimeoutExpiredError.ts#L32"}],"signatures":[{"id":416,"name":"new TimeoutExpiredError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":417,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":418,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":401,"name":"TimeoutExpiredError"},"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"groups":[{"title":"Methods","children":[402,420,422]},{"title":"Properties","children":[424,425,426,419]},{"title":"Constructors","children":[415]}],"sources":[{"fileName":"packages/core/src/errors/model/TimeoutExpiredError.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/TimeoutExpiredError.ts#L12"}],"extendedTypes":[{"type":"reference","id":348,"name":"RuntimeError"}],"permalink":"/api/core/class/TimeoutExpiredError","previousId":375,"nextId":427},{"id":427,"name":"UnknownError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown to indicate that an unknown error has occurred."}]},"children":[{"id":428,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":13,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/UnknownError.ts#L13"}],"signatures":[{"id":429,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":430,"name":"serialised","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":427,"name":"UnknownError"}}]},{"id":450,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":372,"name":"RuntimeError.name"}},{"id":451,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":373,"name":"RuntimeError.message"}},{"id":452,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":374,"name":"RuntimeError.stack"}},{"id":445,"name":"cause","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":78,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L78"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","id":367,"name":"RuntimeError.cause"}},{"id":446,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L94"}],"signatures":[{"id":447,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":369,"name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","id":368,"name":"RuntimeError.toString"}},{"id":448,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/RuntimeError.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/RuntimeError.ts#L98"}],"signatures":[{"id":449,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","id":371,"name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","id":370,"name":"RuntimeError.toJSON"}},{"id":441,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":28,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/UnknownError.ts#L28"}],"signatures":[{"id":442,"name":"new UnknownError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":443,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"}},{"id":444,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The root cause of this "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":", if any"}]},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":427,"name":"UnknownError"},"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"groups":[{"title":"Methods","children":[428,446,448]},{"title":"Properties","children":[450,451,452,445]},{"title":"Constructors","children":[441]}],"sources":[{"fileName":"packages/core/src/errors/model/UnknownError.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/errors/model/UnknownError.ts#L11"}],"extendedTypes":[{"type":"reference","id":348,"name":"RuntimeError"}],"permalink":"/api/core/class/UnknownError","previousId":401,"nextId":1002},{"id":482,"name":"serenity","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Serenity object is the root object of the Serenity/JS framework."}]},"sources":[{"fileName":"packages/core/src/instance.ts","line":14,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/instance.ts#L14"}],"type":{"type":"reference","id":1659,"name":"Serenity"},"defaultValue":"...","permalink":"/api/core#serenity","previousId":66,"nextId":471},{"id":471,"name":"configure","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/instance.ts","line":32,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/instance.ts#L32"}],"signatures":[{"id":472,"name":"configure","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures Serenity/JS. Every call to this function\\nreplaces the previous configuration provided,\\nso this function should be called exactly once\\nin your test suite.\\n\\nThis function is an alias for "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity.configure"},{"kind":"text","text":".\\n\\n:::tip configure vs engage\\n * If you want to retain the configuration but reset the "},{"kind":"inline-tag","tag":"@apilink","text":"Cast|cast of actors"},{"kind":"text","text":", use "},{"kind":"inline-tag","tag":"@apilink","text":"engage"},{"kind":"text","text":" instead.\\n:::"}]},"parameters":[{"id":473,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":66,"name":"SerenityConfig"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/core/function/configure","previousId":482,"nextId":474},{"id":474,"name":"engage","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/instance.ts","line":145,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/instance.ts#L145"}],"signatures":[{"id":475,"name":"engage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Re-configures Serenity/JS with a new "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":" of "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actors"},{"kind":"text","text":"\\nyou want to use in any subsequent calls to "},{"kind":"inline-tag","tag":"@apilink","text":"actorCalled"},{"kind":"text","text":".\\n\\nThis function is an alias for "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity.engage"},{"kind":"text","text":",\\nwhich provides an alternative to calling "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.whoCan"},{"kind":"text","text":" directly in your tests\\nand is typically invoked in a \\"before all\\" or \\"before each\\" hook of your test runner of choice.\\n\\n:::tip configure vs engage\\nCalling "},{"kind":"inline-tag","tag":"@apilink","text":"engage"},{"kind":"text","text":" replaces the currently configured "},{"kind":"inline-tag","tag":"@apilink","text":"Cast|cast of actors"},{"kind":"text","text":",\\nbut doesn\'t affect any other configuration.\\nIf you want to reset the Serenity/JS configuration completely, use "},{"kind":"inline-tag","tag":"@apilink","text":"configure"},{"kind":"text","text":" instead.\\n:::\\n\\nIf your implementation of the "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":" interface is stateless,\\nyou can invoke this function just once before your entire test suite is executed, see\\n- ["},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeAll) in Jasmine,\\n- ["},{"kind":"code","text":"`before`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`BeforeAll`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#beforeall--afterall) in Cucumber.js\\n\\nHowever, if your "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":" holds state that you want to reset before each scenario,\\nit\'s better to invoke "},{"kind":"code","text":"`engage`"},{"kind":"text","text":" before each test using:\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://jasmine.github.io/api/3.6/global.html#beforeEach) in Jasmine\\n- ["},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":"](https://mochajs.org/#hooks) in Mocha,\\n- ["},{"kind":"code","text":"`Before`"},{"kind":"text","text":"](https://github.com/cucumber/cucumber-js/blob/master/docs/support_files/hooks.md#hooks) in Cucumber.js\\n\\n## Engaging a cast of actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast } from \'@serenity-js/core\';\\n\\nclass Actors implements Cast {\\n  prepare(actor: Actor) {\\n    return actor.whoCan(\\n      // ... abilities you\'d like the Actor to have\\n    );\\n  }\\n}\\n\\nengage(new Actors());\\n```"},{"kind":"text","text":"\\n\\n### Using with Mocha test runner\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\n\\nbeforeEach(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Jasmine test runner\\n\\n"},{"kind":"code","text":"```typescript\\nimport \'jasmine\'\\n\\ndescribe(\'My feature\', () => {\\n  beforeEach(() => engage(new Actors()))\\n\\n\\n})\\n```"},{"kind":"text","text":"\\n\\n### Using with Cucumber.js test runner\\n\\nEngage "},{"kind":"code","text":"`Actors`"},{"kind":"text","text":" [before](https://github.com/cucumber/cucumber-js/blob/main/docs/support_files/hooks.md)\\neach test scenario:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\nEngage "},{"kind":"code","text":"`Actors`"},{"kind":"text","text":" before scenarios with [specific tags](https://github.com/cucumber/cucumber-js/blob/main/docs/support_files/hooks.md#tagged-hooks):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(\'@web\', () => engage(new Actors()))\\n```"},{"kind":"text","text":"\\n\\n### Using with Playwright Test runner\\n\\n[Serenity/JS Playwright Test module](/api/playwright-test) will configure the cast on your behalf,\\nso you don\'t need to call "},{"kind":"inline-tag","tag":"@apilink","text":"engage"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\n\\ndescribe(\'My feature\', () => {\\n\\n  this.use({\\n    actors: new Actors()\\n  })\\n\\n  // test scenarios\\n\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity.engage"}]},"parameters":[{"id":476,"name":"actors","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1707,"name":"Cast"}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/core/function/engage","previousId":471,"nextId":1707},{"id":477,"name":"actorCalled","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/instance.ts","line":232,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/instance.ts#L232"}],"signatures":[{"id":478,"name":"actorCalled","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates or retrieves an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\ncalled "},{"kind":"code","text":"`name`"},{"kind":"text","text":" if one has already been instantiated.\\n\\nThis method is an alias for "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity.theActorCalled"},{"kind":"text","text":".\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, async (name: string) => {\\n  await actorCalled(name).attemptsTo(\\n    // ... activities\\n  )\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Jasmine\\n\\n"},{"kind":"code","text":"```typescript\\nimport \'jasmine\';\\nimport { actorCalled } from \'@serenity-js/core\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async () {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Mocha\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it } from \'mocha\';\\nimport { actorCalled } from \'@serenity-js/core\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async () => {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Usage with Playwright Test\\n\\nWhen using [Serenity/JS with Playwright Test](/api/playwright-test/), you should use either\\nthe default ["},{"kind":"code","text":"`actor`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) fixture\\nor the injected ["},{"kind":"code","text":"`actorCalled`"},{"kind":"text","text":"](/api/playwright-test/interface/SerenityFixtures/#actorCalled) function\\ninstead of importing it from "},{"kind":"code","text":"`@serenity-js/core`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it } from \'@serenity-js/playwright-test\';\\n\\ndescribe(\'Feature\', () => {\\n\\n    it(\'should have some behaviour\', async ({ actorCalled }) => {\\n        await actorCalled(\'James\').attemptsTo(\\n            // ... activities\\n        )\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"engage"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity.theActorCalled"}]},"parameters":[{"id":479,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the actor to instantiate or retrieve"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":587,"name":"Actor"}}],"permalink":"/api/core/function/actorCalled","previousId":960,"nextId":480},{"id":480,"name":"actorInTheSpotlight","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/instance.ts","line":270,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/instance.ts#L270"}],"signatures":[{"id":481,"name":"actorInTheSpotlight","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves an actor who was last instantiated or retrieved\\nusing "},{"kind":"inline-tag","tag":"@apilink","text":"actorCalled"},{"kind":"text","text":".\\n\\nThis function is particularly useful when automating Cucumber scenarios.\\n\\nThis function is an alias for "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity.theActorInTheSpotlight"},{"kind":"text","text":".\\n\\n## Usage with Cucumber\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Given, When } from \'@cucumber/cucumber\';\\n\\nGiven(/(.*?) is a registered user/, (name: string) =>\\n  actorCalled(name).attemptsTo(\\n    // ... activities\\n  ))\\n\\nWhen(/(?:he|she|they) browse their recent orders/, () =>\\n  actorInTheSpotlight().attemptsTo(\\n    // ... activities\\n  ))\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"engage"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"actorCalled"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"}]},"type":{"type":"reference","id":587,"name":"Actor"}}],"permalink":"/api/core/function/actorInTheSpotlight","previousId":477,"nextId":518},{"id":56,"name":"format","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/io/format.ts","line":61,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/io/format.ts#L61"}],"signatures":[{"id":57,"name":"format","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"inline-tag","tag":"@apilink","text":"format"},{"kind":"text","text":" is a factory function returning\\na [tag function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals)\\nthat produces a human-readable description of a template containing\\none or more "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable|Answerables"},{"kind":"text","text":".\\n\\nTypically, you\'ll want to use "},{"kind":"inline-tag","tag":"@apilink","text":"d"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"f"},{"kind":"text","text":" shorthands instead:\\n- the "},{"kind":"inline-tag","tag":"@apilink","text":"d"},{"kind":"text","text":" function works best for generating a **description** of a parameterised "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":"\\n- the "},{"kind":"inline-tag","tag":"@apilink","text":"f"},{"kind":"text","text":" function is better suited for debugging.\\n\\n## Using "},{"kind":"code","text":"`format`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { format, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nformat({ markQuestions: true }) `actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n\\nformat({ markQuestions: false }) `actor answers ${ question() }`\\n // returns: actor answers some question\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`d`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { d, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nd`actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`f`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { f, Question } from \'@serenity-js/core\'\\n\\nconst someQuestion = () =>\\n  Question.about(\'some question\', actor => \'some value\')\\n\\nf`actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n\\nformat({ markQuestions: false }) `actor answers ${ question() }`\\n // returns: actor answers <<some question>>\\n```"}]},"parameters":[{"id":58,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"code","text":"`markQuestions`"},{"kind":"text","text":": boolean - if set to true, descriptions of questions passed in as arguments will be surrounded with double angled brackets, i.e. "},{"kind":"code","text":"`<<description>>`"}]},"type":{"type":"reflection","declaration":{"id":59,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":60,"name":"markQuestions","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/io/format.ts","line":61,"character":33,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/io/format.ts#L61"}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[60]}],"sources":[{"fileName":"packages/core/src/io/format.ts","line":61,"character":31,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/io/format.ts#L61"}]}}}],"type":{"type":"reflection","declaration":{"id":61,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/io/format.ts","line":61,"character":60,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/io/format.ts#L61"}],"signatures":[{"id":62,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":63,"name":"templates","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TemplateStringsArray","qualifiedName":"TemplateStringsArray","package":"typescript"}},{"id":64,"name":"placeholders","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":641,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Answerable"}}}],"type":{"type":"intrinsic","name":"string"}}]}}}],"permalink":"/api/core/function/format","previousId":834,"nextId":52},{"id":52,"name":"f","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/io/format.ts","line":73,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/io/format.ts#L73"}],"signatures":[{"id":53,"name":"f","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":54,"name":"templates","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TemplateStringsArray","qualifiedName":"TemplateStringsArray","package":"typescript"}},{"id":55,"name":"placeholders","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/core/function/f","previousId":56,"nextId":48},{"id":48,"name":"d","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/io/format.ts","line":76,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/io/format.ts#L76"}],"signatures":[{"id":49,"name":"d","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":50,"name":"templates","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TemplateStringsArray","qualifiedName":"TemplateStringsArray","package":"typescript"}},{"id":51,"name":"placeholders","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"intrinsic","name":"string"}}],"permalink":"/api/core/function/d","previousId":52,"nextId":641},{"id":569,"name":"Activity","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Activities** represents "},{"kind":"inline-tag","tag":"@apilink","text":"Task|tasks"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interactions"},{"kind":"text","text":" to be performed by an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":".\\n\\nLearn more about:\\n- [Performing activities at multiple levels](/handbook/design/screenplay-pattern#performing-activities-at-multiple-levels)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- [Command design pattern on Wikipedia](https://en.wikipedia.org/wiki/Command_pattern)"}]},"children":[{"id":574,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":26,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L26"}],"signatures":[{"id":575,"name":"new Activity","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":576,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":577,"name":"location","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FileSystemLocation"},"defaultValue":"..."}],"type":{"type":"reference","id":569,"name":"Activity"}}]},{"id":580,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":37,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L37"}],"signatures":[{"id":581,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"}}]},{"id":582,"name":"performAs","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":52,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L52"}],"signatures":[{"id":583,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":"."}]},"parameters":[{"id":584,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"type":{"type":"union","types":[{"type":"reference","id":559,"name":"UsesAbilities"},{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":564,"name":"PerformsActivities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":585,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":62,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L62"}],"signatures":[{"id":586,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[574]},{"title":"Methods","children":[580,582,585]}],"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":20,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L20"}],"extendedBy":[{"type":"reference","id":728,"name":"Interaction"},{"type":"reference","id":1382,"name":"Task"}],"permalink":"/api/core/class/Activity","previousId":1364,"nextId":587},{"id":587,"name":"Actor","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"**Actors** represent **people** and **external systems** interacting with the system under test.\\nTheir role is to perform "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|activities"},{"kind":"text","text":" that demonstrate how to accomplish a given goal.\\n\\nActors are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|Abilities"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|Interactions"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Task|Tasks"},{"kind":"text","text":", and "},{"kind":"inline-tag","tag":"@apilink","text":"Question|Questions"},{"kind":"text","text":".\\nActors are also the first thing you see in a typical Serenity/JS test scenario.\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|Abilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|Activities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|Interactions"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Task|Tasks"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Question|Questions"},{"kind":"text","text":"\\n\\n## Representing people and systems as actors\\n\\nTo use a Serenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":", all you need is to say their name:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\')\\n// returns: Actor\\n```"},{"kind":"text","text":"\\n\\nSerenity/JS actors perform within the scope of a test scenario, so the first time you invoke "},{"kind":"inline-tag","tag":"@apilink","text":"actorCalled"},{"kind":"text","text":",\\nSerenity/JS instantiates a new actor from the default "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":" of actors (or any custom cast you might have "},{"kind":"inline-tag","tag":"@apilink","text":"configured|configured"},{"kind":"text","text":").\\nAny subsequent invocations of this function within the scope of the same test scenario retrieve the already instantiated actor, identified by their name.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nactorCalled(\'Alice\')    // instantiates Alice\\nactorCalled(\'Bob\')      // instantiates Bob\\nactorCalled(\'Alice\')    // retrieves Alice, since she\'s already been instantiated\\n```"},{"kind":"text","text":"\\n\\nSerenity/JS scenarios can involve as many or as few actors as you need to model the given business workflow.\\nFor example, you might want to use **multiple actors** in test scenarios that model how **different people** perform different parts of a larger business process, such as reviewing and approving a loan application.\\nIt is also quite common to introduce **supporting actors** to perform **administrative tasks**, like setting up test data and environment, or **audit tasks**, like checking the logs or messages emitted to a message queue\\nby the system under test.\\n\\n:::info The Stan Lee naming convention\\nActor names can be much more than just simple identifiers like "},{"kind":"code","text":"`Alice`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Bob`"},{"kind":"text","text":". While you can give your actors any names you like, a good convention to follow is to give them\\nnames indicating the [personae](https://articles.uie.com/goodwin_interview/) they represent or the role they play in the system.\\n\\nJust like the characters in [Stan Lee](https://en.wikipedia.org/wiki/Stan_Lee) graphic novels,\\nactors in Serenity/JS test scenarios are often given alliterate names as a mnemonic device.\\nNames like \\"Adam the Admin\\", \\"Edna the Editor\\", \\"Trevor the Traveller\\", are far more memorable than a generic \\"UI user\\" or \\"API user\\".\\nThey\'re also much easier for people to associate with the context, constraints, and affordances of the given actor.\\n:::"}]},"children":[{"id":588,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Actor.ts#L94"}],"signatures":[{"id":589,"name":"new Actor","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":590,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":591,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1863,"name":"Stage"}},{"id":592,"name":"abilities","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":483,"name":"Ability"}},"defaultValue":"[]"}],"type":{"type":"reference","id":587,"name":"Actor"}}]},{"id":594,"name":"name","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":95,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Actor.ts#L95"}],"type":{"type":"intrinsic","name":"string"}},{"id":596,"name":"abilityTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":117,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Actor.ts#L117"}],"signatures":[{"id":597,"name":"abilityTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves actor\'s "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" of "},{"kind":"code","text":"`abilityType`"},{"kind":"text","text":", or one that extends "},{"kind":"code","text":"`abilityType`"},{"kind":"text","text":".\\n\\nPlease note that this method performs an "},{"kind":"inline-tag","tag":"@apilink","text":"instanceof"},{"kind":"text","text":" check against abilities\\ngiven to this actor via "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.whoCan"},{"kind":"text","text":".\\n\\nPlease also note that "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.whoCan"},{"kind":"text","text":" performs the same check when abilities are assigned to the actor\\nto ensure the actor has at most one instance of a given ability type."}]},"typeParameter":[{"id":598,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":483,"name":"Ability"}}],"parameters":[{"id":599,"name":"abilityType","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":491,"typeArguments":[{"type":"reference","id":598,"name":"T"}],"name":"AbilityType"}}],"type":{"type":"reference","id":598,"name":"T"},"implementationOf":{"type":"reference","id":561,"name":"UsesAbilities.abilityTo"}}],"implementationOf":{"type":"reference","id":560,"name":"UsesAbilities.abilityTo"}},{"id":600,"name":"attemptsTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":138,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Actor.ts#L138"}],"signatures":[{"id":601,"name":"attemptsTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the actor to attempt to perform a number of "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|activities"},{"kind":"text","text":",\\nso either "},{"kind":"inline-tag","tag":"@apilink","text":"Task|Tasks"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|Interactions"},{"kind":"text","text":"),\\none by one."}]},"parameters":[{"id":602,"name":"activities","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":569,"name":"Activity"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"PerformsActivities.attemptsTo"}}],"implementationOf":{"type":"reference","id":565,"name":"PerformsActivities.attemptsTo"}},{"id":603,"name":"whoCan","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":159,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Actor.ts#L159"}],"signatures":[{"id":604,"name":"whoCan","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Gives this Actor a list of "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|abilities"},{"kind":"text","text":" they can use\\nto interact with the system under test or the test environment."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The actor with newly gained abilities"}]},{"tag":"@throws","content":[{"kind":"inline-tag","tag":"@apilink","text":"ConfigurationError"},{"kind":"text","text":"\\n Throws a ConfigurationError if the actor already has an ability of this type."}]}]},"parameters":[{"id":605,"name":"abilities","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"A vararg list of abilities to give the actor"}]},"type":{"type":"array","elementType":{"type":"reference","id":483,"name":"Ability"}}}],"type":{"type":"reference","id":587,"name":"Actor"},"implementationOf":{"type":"reference","id":520,"name":"CanHaveAbilities.whoCan"}}],"implementationOf":{"type":"reference","id":519,"name":"CanHaveAbilities.whoCan"}},{"id":606,"name":"answer","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":172,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Actor.ts#L172"}],"signatures":[{"id":607,"name":"answer","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The answer to the Answerable"}]}]},"typeParameter":[{"id":608,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":609,"name":"answerable","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" to answer (resolve the value of)."}]},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":608,"name":"T"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":608,"name":"T"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","id":949,"name":"AnswersQuestions.answer"}}],"implementationOf":{"type":"reference","id":948,"name":"AnswersQuestions.answer"}},{"id":610,"name":"collect","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":182,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Actor.ts#L182"}],"signatures":[{"id":611,"name":"collect","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Announce collection of an "},{"kind":"inline-tag","tag":"@apilink","text":"Artifact"},{"kind":"text","text":" so that it can be picked up by a "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":"."}]},"parameters":[{"id":612,"name":"artifact","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Artifact"}},{"id":613,"name":"name","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Name"}]}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","id":647,"name":"CollectsArtifacts.collect"}}],"implementationOf":{"type":"reference","id":646,"name":"CollectsArtifacts.collect"}},{"id":614,"name":"currentTime","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":195,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Actor.ts#L195"}],"signatures":[{"id":615,"name":"currentTime","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns current time."}]},"type":{"type":"reference","id":1608,"name":"Timestamp"},"implementationOf":{"type":"reference","id":1656,"name":"TellsTime.currentTime"}}],"implementationOf":{"type":"reference","id":1655,"name":"TellsTime.currentTime"}},{"id":616,"name":"dismiss","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":203,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Actor.ts#L203"}],"signatures":[{"id":617,"name":"dismiss","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the actor to invoke "},{"kind":"inline-tag","tag":"@apilink","text":"Discardable.discard"},{"kind":"text","text":" method on any\\n"},{"kind":"inline-tag","tag":"@apilink","text":"Discardable"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" it\'s been configured with."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":618,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":217,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Actor.ts#L217"}],"signatures":[{"id":619,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a human-readable, string representation of this actor and their abilities.\\n\\n**PRO TIP:** To get the name of the actor, use "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.name"}]},"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[588]},{"title":"Properties","children":[594]},{"title":"Methods","children":[596,600,603,606,610,614,616,618]}],"sources":[{"fileName":"packages/core/src/screenplay/Actor.ts","line":85,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Actor.ts#L85"}],"implementedTypes":[{"type":"reference","id":564,"name":"PerformsActivities"},{"type":"reference","id":559,"name":"UsesAbilities"},{"type":"reference","id":518,"typeArguments":[{"type":"reference","id":587,"name":"Actor"}],"name":"CanHaveAbilities"},{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":645,"name":"CollectsArtifacts"},{"type":"reference","id":1654,"name":"TellsTime"}],"permalink":"/api/core/class/Actor","previousId":569,"nextId":728},{"id":641,"name":"Answerable","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"A union type that provides a convenient way to represent any value\\nthat can be resolved by "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.answer"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/Answerable.ts","line":9,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Answerable.ts#L9"}],"typeParameters":[{"id":642,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"union","types":[{"type":"reference","id":859,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":642,"name":"T"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"},{"type":"reference","id":859,"typeArguments":[{"type":"reference","id":642,"name":"T"}],"name":"Question"},{"type":"reference","typeArguments":[{"type":"reference","id":642,"name":"T"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},{"type":"reference","id":642,"name":"T"}]},"permalink":"/api/core#Answerable","previousId":48,"nextId":643},{"id":643,"name":"Answered","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes the type of answer a given "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" would\\nresolve to when given to "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.answer"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```ts\\nAnswered<Answerable<T>> === T\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/Answered.ts","line":13,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Answered.ts#L13"}],"typeParameters":[{"id":644,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","id":644,"name":"T"},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","id":644,"name":"T"},"falseType":{"type":"conditional","checkType":{"type":"reference","id":644,"name":"T"},"extendsType":{"type":"union","types":[{"type":"reference","id":859,"typeArguments":[{"type":"reference","typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"},{"type":"reference","id":859,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question"},{"type":"reference","typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]},"trueType":{"type":"reference","typeArguments":[{"type":"reference","name":"A"}],"name":"Awaited","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype","qualifiedName":"Awaited","package":"typescript"},"falseType":{"type":"reference","id":644,"name":"T"}}},"permalink":"/api/core#Answered","previousId":641,"nextId":856},{"id":728,"name":"Interaction","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Interactions** are low-level "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|activities"},{"kind":"text","text":" that encapsulate\\na handful of instructions for an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" on how to use their "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|abilities"},{"kind":"text","text":"\\nto perform an individual interaction with the given interface of the system under test.\\n\\n:::tip Tasks or interactions?\\nBecause of their low-level nature, interactions are named using the vocabulary of the [solution domain](https://blog.mattwynne.net/2013/01/17/the-problem-with-solutions/),\\nand represent an individual interaction with the given interface, e.g. "},{"kind":"inline-tag","tag":"@apilink","text":"Click"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Enter"},{"kind":"text","text":", or "},{"kind":"inline-tag","tag":"@apilink","text":"Send"},{"kind":"text","text":".\\n\\nInteractions follow the [Single Responsibility Principle](https://en.wikipedia.org/wiki/Single_responsibility_principle) which means that they do _one thing and one thing only_.\\nIf you\'re considering implementing an \\"interaction\\" that performs more than one logical activity, e.g. checks if the button is visible and then clicks on it if is,\\nconsider using separate interactions for separate responsibilities and then composing them using a "},{"kind":"inline-tag","tag":"@apilink","text":"Task|task"},{"kind":"text","text":".\\n:::\\n\\nInteractions are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|Actors"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|Abilities"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Question|Questions"},{"kind":"text","text":", and "},{"kind":"inline-tag","tag":"@apilink","text":"Task|Tasks"},{"kind":"text","text":".\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|Abilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|Activities"},{"kind":"text","text":"\\n\\n## Writing a custom interaction\\n\\n[Serenity/JS modules](/handbook/about/architecture) ship with dozens of interactions to help you compose your test scenarios.\\nHowever, if you need to interact with a non-standard interface, or want to create a flavour of a given interaction that behaves slightly differently than the built-in version,\\nyou can easily create your own implementations using the "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction.where"},{"kind":"text","text":" factory method.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Interaction } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\n\\nexport const ClearLocalStorage = () =>\\n  Interaction.where(`#actor clears local storage`, async (actor: Actor) => {\\n    // Interaction to ClearLocalStorage directly uses Actor\'s ability to BrowseTheWeb\\n    const page: Page = await BrowseTheWeb.as(actor).currentPage()\\n    await page.executeScript(() => window.localStorage.clear())\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Using a custom interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'In\xeas\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    ClearLocalStorage(), // reported as \\"In\xeas clears local storage\\"\\n  )\\n```"}]},"children":[{"id":729,"name":"where","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":78,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Interaction.ts#L78"}],"signatures":[{"id":730,"name":"where","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":731,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Description to be used when reporting this interaction, for example "},{"kind":"code","text":"`#actor clears local storage`"},{"kind":"text","text":".\\n Note that "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" will be replaced with the name of the actor performing this interaction."}]},"type":{"type":"intrinsic","name":"string"}},{"id":732,"name":"interaction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":733,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":80,"character":21,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Interaction.ts#L80"}],"signatures":[{"id":734,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":735,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":559,"name":"UsesAbilities"},{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":645,"name":"CollectsArtifacts"}]}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","id":728,"name":"Interaction"}}]},{"id":739,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":26,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L26"}],"signatures":[{"id":740,"name":"new Interaction","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":741,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":742,"name":"location","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FileSystemLocation"},"defaultValue":"..."}],"type":{"type":"reference","id":728,"name":"Interaction"},"inheritedFrom":{"type":"reference","id":575,"name":"Activity.constructor"}}],"inheritedFrom":{"type":"reference","id":574,"name":"Activity.constructor"}},{"id":748,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":37,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L37"}],"signatures":[{"id":749,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":581,"name":"Activity.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":580,"name":"Activity.instantiationLocation"}},{"id":750,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":62,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L62"}],"signatures":[{"id":751,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":586,"name":"Activity.toString"}}],"inheritedFrom":{"type":"reference","id":585,"name":"Activity.toString"}},{"id":743,"name":"performAs","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":96,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Interaction.ts#L96"}],"signatures":[{"id":744,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":745,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":559,"name":"UsesAbilities"},{"type":"reference","id":947,"name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":583,"name":"Activity.performAs"}}],"overwrites":{"type":"reference","id":582,"name":"Activity.performAs"}}],"groups":[{"title":"Methods","children":[729,748,750,743]},{"title":"Constructors","children":[739]}],"sources":[{"fileName":"packages/core/src/screenplay/Interaction.ts","line":69,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Interaction.ts#L69"}],"extendedTypes":[{"type":"reference","id":569,"name":"Activity"}],"extendedBy":[{"type":"reference","id":650,"name":"Debug"},{"type":"reference","id":701,"name":"Log"},{"type":"reference","id":1448,"name":"WaitUntil"}],"permalink":"/api/core/class/Interaction","previousId":587,"nextId":859},{"id":856,"name":"Optional","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"code","text":"`Optional`"},{"kind":"text","text":" is a container object, which holds a value that may or may not be \\"present\\",\\n\\nThe meaning of being \\"present\\" depends on the context and typically means a value that:\\n- is other than "},{"kind":"code","text":"`null`"},{"kind":"text","text":" or "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":"\\n- is retrievable, so retrieving it doesn\'t throw any errors\\n\\nAdditionally, "},{"kind":"code","text":"`Optional`"},{"kind":"text","text":" can also have a context-specific meaning. For example, "},{"kind":"code","text":"`Optional#isPresent()`"},{"kind":"text","text":":\\n- in the context of a "},{"kind":"code","text":"`PageElement`"},{"kind":"text","text":" means that the element exists in the DOM.\\n- in the context of a "},{"kind":"code","text":"`ModalWindow`"},{"kind":"text","text":" means that the modal window is open.\\n- in the case of a REST API response, "},{"kind":"code","text":"`LastResponse.body().books[0].author.name.isPresent()`"},{"kind":"text","text":"\\n  will inform us if a given entry exists (so "},{"kind":"code","text":"`books[0].author.name`"},{"kind":"text","text":"),\\n  and if all the links of the property chain leading to the entry of interest exist too\\n  (so "},{"kind":"code","text":"`books`"},{"kind":"text","text":" is present, and so is "},{"kind":"code","text":"`books[0]`"},{"kind":"text","text":", "},{"kind":"code","text":"`books[0].author`"},{"kind":"text","text":", "},{"kind":"code","text":"`books[0].author.name`"},{"kind":"text","text":")."}]},"children":[{"id":857,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":25,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Optional.ts#L25"}],"signatures":[{"id":858,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the optional value\\nis present, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"type":{"type":"reference","id":641,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Answerable"}}]}],"groups":[{"title":"Methods","children":[857]}],"sources":[{"fileName":"packages/core/src/screenplay/Optional.ts","line":20,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Optional.ts#L20"}],"permalink":"/api/core/interface/Optional","previousId":643,"nextId":927},{"id":859,"name":"Question","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Questions** describe how "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actors"},{"kind":"text","text":" should query the system under test or the test environment to retrieve some information.\\n\\nQuestions are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|Actors"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|Abilities"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|Interactions"},{"kind":"text","text":", and "},{"kind":"inline-tag","tag":"@apilink","text":"Task|Tasks"},{"kind":"text","text":".\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|Abilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":"\\n\\n## Implementing a basic custom Question\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n const LastItemOf = <T>(list: T[]): Question<T> =>\\n   Question.about(\'last item from the list\', (actor: AnswersQuestions & UsesAbilities) => {\\n     return list[list.length - 1]\\n   });\\n\\n await actorCalled(\'Quentin\').attemptsTo(\\n   Ensure.that(LastItemFrom([1,2,3]), equals(3)),\\n )\\n```"},{"kind":"text","text":"\\n\\n## Implementing a Question that uses an Ability\\n\\nJust like the "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interactions"},{"kind":"text","text":", a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":"\\nalso can use "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|abilities"},{"kind":"text","text":".\\n\\nHere, we use the ability to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" to retrieve a property of\\nan HTTP response.\\n\\n"},{"kind":"code","text":"```ts\\n import { AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\n import { CallAnApi } from \'@serenity-js/rest\'\\n\\n const TextOfLastResponseStatus = () =>\\n   Question.about<number>(`the text of the last response status`, actor => {\\n     return CallAnApi.as(actor).mapLastResponse(response => response.statusText)\\n   })\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"LastResponse"},{"kind":"text","text":"\\n\\n## Mapping answers to other questions\\n\\nApart from retrieving information, "},{"kind":"inline-tag","tag":"@apilink","text":"Question|questions"},{"kind":"text","text":" can be used to transform information retrieved by other questions.\\n\\nHere, we use the factory method "},{"kind":"inline-tag","tag":"@apilink","text":"Question.about"},{"kind":"text","text":" to produce a question that makes the received "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":"\\nanswer "},{"kind":"inline-tag","tag":"@apilink","text":"LastResponse.status"},{"kind":"text","text":" and then compare it against some expected value.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, AnswersQuestions, UsesAbilities, Question } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst RequestWasSuccessful = () =>\\n  Question.about<number>(`the text of the last response status`, actor => {\\n    return LastResponse.status().answeredBy(actor) === 200;\\n  });\\n\\nawait actorCalled(\'Quentin\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'));\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(RequestWasSuccessful(), isTrue()),\\n  );\\n```"},{"kind":"text","text":"\\n\\nNote that the above example is for demonstration purposes only, Serenity/JS provides an easier way to\\nverify the response status of the "},{"kind":"inline-tag","tag":"@apilink","text":"LastResponse"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Quentin\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'));\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  );\\n```"}]},"children":[{"id":860,"name":"about","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":130,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L130"},{"fileName":"packages/core/src/screenplay/Question.ts","line":136,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L136"},{"fileName":"packages/core/src/screenplay/Question.ts","line":141,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L141"}],"signatures":[{"id":861,"name":"about","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Factory method that simplifies the process of defining custom questions.\\n\\n#### Defining a custom question\\n\\n"},{"kind":"code","text":"```ts\\nimport { Question } from \'@serenity-js/core\'\\n\\nconst EnvVariable = (name: string) =>\\n  Question.about(`the ${ name } env variable`, actor => process.env[name])\\n```"}]},"typeParameter":[{"id":862,"name":"Answer_Type","kind":131072,"kindString":"Type parameter","flags":{}},{"id":863,"name":"Supported_Context_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":864,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":865,"name":"body","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":866,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":132,"character":14,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L132"}],"signatures":[{"id":867,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":868,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":559,"name":"UsesAbilities"}]}}],"type":{"type":"union","types":[{"type":"reference","id":862,"name":"Answer_Type"},{"type":"reference","typeArguments":[{"type":"reference","id":862,"name":"Answer_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}},{"id":869,"name":"metaQuestionBody","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":870,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":133,"character":26,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L133"}],"signatures":[{"id":871,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":872,"name":"answerable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":863,"name":"Supported_Context_Type"}],"name":"Answerable"}}],"type":{"type":"union","types":[{"type":"reference","id":859,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":862,"name":"Answer_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"},{"type":"reference","id":859,"typeArguments":[{"type":"reference","id":862,"name":"Answer_Type"}],"name":"Question"}]}}]}}}],"type":{"type":"reference","id":944,"typeArguments":[{"type":"reference","id":863,"name":"Supported_Context_Type"},{"type":"reference","typeArguments":[{"type":"reference","id":862,"name":"Answer_Type"}],"name":"Awaited","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype","qualifiedName":"Awaited","package":"typescript"}],"name":"MetaQuestionAdapter"}},{"id":873,"name":"about","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":874,"name":"Answer_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":875,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":876,"name":"body","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":877,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":138,"character":14,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L138"}],"signatures":[{"id":878,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":879,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":559,"name":"UsesAbilities"}]}}],"type":{"type":"union","types":[{"type":"reference","id":874,"name":"Answer_Type"},{"type":"reference","typeArguments":[{"type":"reference","id":874,"name":"Answer_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":874,"name":"Answer_Type"}],"name":"Awaited","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype","qualifiedName":"Awaited","package":"typescript"}],"name":"QuestionAdapter"}}]},{"id":880,"name":"fromObject","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":217,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L217"}],"signatures":[{"id":881,"name":"fromObject","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" that recursively resolves\\nany "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" fields of the provided object,\\nincluding "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" fields of "},{"kind":"inline-tag","tag":"@apilink","text":"WithAnswerableProperties|nested objects"},{"kind":"text","text":".\\n\\nOptionally, the method accepts "},{"kind":"code","text":"`overrides`"},{"kind":"text","text":" to be shallow-merged with the fields of the original "},{"kind":"code","text":"`source`"},{"kind":"text","text":",\\nproducing a new merged object.\\n\\nOverrides are applied from left to right, with subsequent objects overwriting property assignments of the previous ones.\\n\\n#### Resolving an object recursively using "},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { Send, PostRequest } from \'@serenity-js/rest\'\\nimport { By, Text, PageElement } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Daisy\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n  .attemptsTo(\\n    Send.a(\\n      PostRequest.to(\'/products/2\')\\n        .with(\\n          Question.fromObject({\\n            name: Text.of(PageElement.located(By.css(\'.name\'))),\\n          })\\n        )\\n      )\\n  );\\n```"},{"kind":"text","text":"\\n\\n#### Merging objects using "},{"kind":"code","text":"`Question.fromObject`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Question } from \'@serenity-js/core\'\\n import { Send, PostRequest } from \'@serenity-js/rest\'\\n import { By, Text, PageElement } from \'@serenity-js/web\'\\n\\n await actorCalled(\'Daisy\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n   .attemptsTo(\\n     Send.a(\\n       PostRequest.to(\'/products/2\')\\n         .with(\\n           Question.fromObject({\\n             name: Text.of(PageElement.located(By.css(\'.name\'))),\\n             quantity: undefined,\\n           }, {\\n             quantity: 2,\\n           })\\n         )\\n       )\\n   );\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"WithAnswerableProperties"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"RecursivelyAnswered"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"}]},"typeParameter":[{"id":882,"name":"Source_Type","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":883,"name":"source","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":1657,"typeArguments":[{"type":"reference","id":882,"name":"Source_Type"}],"name":"WithAnswerableProperties"}],"name":"Answerable"}},{"id":884,"name":"overrides","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":641,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":1657,"typeArguments":[{"type":"reference","id":882,"name":"Source_Type"}],"name":"WithAnswerableProperties"}],"name":"Partial","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype","qualifiedName":"Partial","package":"typescript"}],"name":"Answerable"}}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"reference","id":1380,"typeArguments":[{"type":"reference","id":882,"name":"Source_Type"}],"name":"RecursivelyAnswered"}],"name":"QuestionAdapter"}}]},{"id":885,"name":"isAQuestion","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":244,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L244"}],"signatures":[{"id":886,"name":"isAQuestion","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the value is a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":"."}]},"typeParameter":[{"id":887,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":888,"name":"maybeQuestion","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeQuestion","asserts":false,"targetType":{"type":"reference","id":859,"typeArguments":[{"type":"reference","id":887,"name":"T"}],"name":"Question"}}}]},{"id":889,"name":"isAMetaQuestion","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":255,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L255"}],"signatures":[{"id":890,"name":"isAMetaQuestion","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if the value is a "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"},{"kind":"text","text":"."}]},"typeParameter":[{"id":891,"name":"CT","kind":131072,"kindString":"Type parameter","flags":{}},{"id":892,"name":"RQT","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":859,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question"}}],"parameters":[{"id":893,"name":"maybeMetaQuestion","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to check"}]},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeMetaQuestion","asserts":false,"targetType":{"type":"reference","id":1356,"typeArguments":[{"type":"reference","id":891,"name":"CT"},{"type":"reference","id":892,"name":"RQT"}],"name":"MetaQuestion"}}}]},{"id":908,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":909,"name":"new Question","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":910,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reference","id":859,"typeArguments":[{"type":"reference","id":910,"name":"T"}],"name":"Question"}}]},{"id":911,"name":"toString","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":394,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L394"}],"signatures":[{"id":912,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the description of the subject of this "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}}]},{"id":913,"name":"describedAs","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":401,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L401"}],"signatures":[{"id":914,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Changes the description of this question\'s subject."}]},"parameters":[{"id":915,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":859,"typeArguments":[{"type":"reference","id":910,"name":"T"}],"name":"Question"}}]},{"id":916,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":407,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L407"}],"signatures":[{"id":917,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to use their "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|abilities"},{"kind":"text","text":"\\nto answer this question."}]},"parameters":[{"id":918,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":559,"name":"UsesAbilities"}]}}],"type":{"type":"reference","id":910,"name":"T"}}]},{"id":919,"name":"as","kind":2048,"kindString":"Method","flags":{"isPublic":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":419,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L419"}],"signatures":[{"id":920,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":921,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":922,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":923,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":419,"character":26,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L419"}],"signatures":[{"id":924,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":925,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":910,"name":"T"}],"name":"Awaited","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype","qualifiedName":"Awaited","package":"typescript"}}],"type":{"type":"union","types":[{"type":"reference","id":921,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":921,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"reference","id":921,"name":"O"}],"name":"QuestionAdapter"}}]}],"groups":[{"title":"Methods","children":[860,880,885,889,911,913,916,919]},{"title":"Constructors","children":[908]}],"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":112,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L112"}],"typeParameters":[{"id":926,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedBy":[{"type":"reference","id":1149,"name":"List"}],"permalink":"/api/core/class/Question","previousId":728,"nextId":1382},{"id":927,"name":"QuestionAdapterFieldDecorator","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes an object recursively wrapped in "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" proxies, so that:\\n- both methods and fields of the wrapped object can be used as "},{"kind":"inline-tag","tag":"@apilink","text":"Question|questions"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"Interactions|interactions"},{"kind":"text","text":"\\n- method parameters of the wrapped object will accept "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable|Answerable<T>"}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":442,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L442"}],"typeParameters":[{"id":938,"name":"Original_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"mapped","parameter":"Field","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","id":938,"name":"Original_Type"},{"type":"typeOperator","operator":"keyof","target":{"type":"reference","typeArguments":[{"type":"reference","id":938,"name":"Original_Type"}],"name":"QuestionStatement"}}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"}},"templateType":{"type":"conditional","checkType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Field"},"objectType":{"type":"reference","id":938,"name":"Original_Type"}},"extendsType":{"type":"reflection","declaration":{"id":928,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":445,"character":37,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L445"}],"signatures":[{"id":929,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":930,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"inferred","name":"OriginalParameters"}}],"type":{"type":"inferred","name":"OriginalMethodResult"}}]}},"trueType":{"type":"conditional","checkType":{"type":"reference","name":"Field"},"extendsType":{"type":"literal","value":"replace"},"trueType":{"type":"reflection","declaration":{"id":931,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":448,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L448"}],"signatures":[{"id":932,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":933,"name":"searchValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"RegExp","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp","qualifiedName":"RegExp","package":"typescript"}]}],"name":"Answerable"}},{"id":934,"name":"replaceValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter"}}]}},"falseType":{"type":"reflection","declaration":{"id":935,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":451,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L451"}],"signatures":[{"id":936,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":937,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"mapped","parameter":"P","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","name":"OriginalParameters"}},"templateType":{"type":"reference","id":641,"typeArguments":[{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"P"},"objectType":{"type":"reference","name":"OriginalParameters"}}],"name":"Awaited","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype","qualifiedName":"Awaited","package":"typescript"}],"name":"Answerable"}}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"OriginalMethodResult"}],"name":"Awaited","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype","qualifiedName":"Awaited","package":"typescript"}],"name":"QuestionAdapter"}}]}}},"falseType":{"type":"conditional","checkType":{"type":"indexedAccess","indexType":{"type":"reference","name":"Field"},"objectType":{"type":"reference","id":938,"name":"Original_Type"}},"extendsType":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"bigint"},{"type":"intrinsic","name":"boolean"},{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"symbol"},{"type":"intrinsic","name":"object"}]},"trueType":{"type":"reference","id":939,"typeArguments":[{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"Field"},"objectType":{"type":"reference","id":938,"name":"Original_Type"}}],"name":"Awaited","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype","qualifiedName":"Awaited","package":"typescript"}],"name":"QuestionAdapter"},"falseType":{"type":"intrinsic","name":"any"}}}},"permalink":"/api/core#QuestionAdapterFieldDecorator","previousId":856,"nextId":939},{"id":939,"name":"QuestionAdapter","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"A union type representing a proxy object returned by "},{"kind":"inline-tag","tag":"@apilink","text":"Question.about"},{"kind":"text","text":".\\n\\n"},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" proxies the methods and fields of the wrapped object recursively,\\nallowing them to be used as either a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":" or an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":468,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L468"}],"typeParameters":[{"id":943,"name":"Answer_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"intersection","types":[{"type":"reference","id":859,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":943,"name":"Answer_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"},{"type":"reference","id":728,"name":"Interaction"},{"type":"reflection","declaration":{"id":940,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":941,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":471,"character":8,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L471"}],"signatures":[{"id":942,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":859,"typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}}]}],"groups":[{"title":"Methods","children":[941]}],"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":471,"character":6,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L471"}]}},{"type":"reference","id":927,"typeArguments":[{"type":"reference","id":943,"name":"Answer_Type"}],"name":"QuestionAdapterFieldDecorator"}]},"permalink":"/api/core#QuestionAdapter","previousId":927,"nextId":944},{"id":944,"name":"MetaQuestionAdapter","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"An extension of "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":", that in addition to proxying methods and fields\\nof the wrapped object can also act as a "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":480,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L480"}],"typeParameters":[{"id":945,"name":"Context_Type","kind":131072,"kindString":"Type parameter","flags":{}},{"id":946,"name":"Answer_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"intersection","types":[{"type":"reference","id":939,"typeArguments":[{"type":"reference","id":946,"name":"Answer_Type"}],"name":"QuestionAdapter"},{"type":"reference","id":1356,"typeArguments":[{"type":"reference","id":945,"name":"Context_Type"},{"type":"reference","id":939,"typeArguments":[{"type":"reference","id":946,"name":"Answer_Type"}],"name":"QuestionAdapter"}],"name":"MetaQuestion"}]},"permalink":"/api/core#MetaQuestionAdapter","previousId":939,"nextId":1380},{"id":1380,"name":"RecursivelyAnswered","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes a recursively resolved plain JavaScript "},{"kind":"inline-tag","tag":"@apilink","text":"WithAnswerableProperties"},{"kind":"text","text":".\\n\\nTypically, used in conjunction with "},{"kind":"inline-tag","tag":"@apilink","text":"Question.fromObject"},{"kind":"text","text":".\\n\\n## Using "},{"kind":"code","text":"`RecursivelyAnswered`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  actorCalled, notes, q, Question, QuestionAdapter, WithAnswerableProperties\\n} from \'@serenity-js/core\';\\n\\ninterface RequestConfiguration {\\n  headers: Record<string, string>;\\n}\\n\\nconst requestConfiguration: WithAnswerableProperties<RequestConfiguration> = {\\n  headers: {\\n    Authorization: q`Bearer ${ notes().get(\'authDetails\').token }`\\n  }\\n}\\n\\nconst question: QuestionAdapter<RequestConfiguration> =\\n  Question.fromObject<RequestConfiguration>(requestConfiguration)\\n\\nconst answer = await actorCalled(\'Annie\').answer(question);\\n\\nconst a1: RequestConfiguration = answer;\\nconst a2: RecursivelyAnswered<WithAnswerableProperties<RequestConfiguration>> = answer;\\n\\n// RequestConfiguration === RecursivelyAnswered<WithAnswerableProperties<RequestConfiguration>>\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/RecursivelyAnswered.ts","line":38,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/RecursivelyAnswered.ts#L38"}],"typeParameters":[{"id":1381,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","id":1381,"name":"T"},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","id":1381,"name":"T"},"falseType":{"type":"conditional","checkType":{"type":"reference","id":1381,"name":"T"},"extendsType":{"type":"union","types":[{"type":"reference","id":859,"typeArguments":[{"type":"reference","typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"},{"type":"reference","id":859,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question"},{"type":"reference","typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]},"trueType":{"type":"reference","id":1380,"typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"A"}],"name":"Awaited","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#awaitedtype","qualifiedName":"Awaited","package":"typescript"}],"name":"RecursivelyAnswered"},"falseType":{"type":"conditional","checkType":{"type":"reference","id":1381,"name":"T"},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":1381,"name":"T"}},"templateType":{"type":"reference","id":1380,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"K"},"objectType":{"type":"reference","id":1381,"name":"T"}}],"name":"RecursivelyAnswered"}},"falseType":{"type":"reference","id":1381,"name":"T"}}}},"permalink":"/api/core#RecursivelyAnswered","previousId":944,"nextId":1657},{"id":1382,"name":"Task","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Tasks** model **"},{"kind":"inline-tag","tag":"@apilink","text":"Activity|sequences of activities"},{"kind":"text","text":"**\\nand help you capture meaningful steps of an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" workflow\\nin your domain.\\n\\nTypically, tasks correspond to higher-level, business domain-specific activities\\nlike to "},{"kind":"code","text":"`BookAPlaneTicket`"},{"kind":"text","text":", "},{"kind":"code","text":"`PlaceATrade`"},{"kind":"text","text":", "},{"kind":"code","text":"`TransferFunds`"},{"kind":"text","text":", and so on.\\nHowever, higher-level tasks can and should be composed of lower-level tasks.\\nFor example, a task to "},{"kind":"code","text":"`SignUp`"},{"kind":"text","text":" could be composed of tasks to "},{"kind":"code","text":"`ProvideUsername`"},{"kind":"text","text":" and "},{"kind":"code","text":"`ProvidePassword`"},{"kind":"text","text":".\\n\\nThe lowest-level tasks in your abstraction hierarchy should be composed of "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interactions"},{"kind":"text","text":".\\nFor example, a low-level task to "},{"kind":"code","text":"`ProvideUsername`"},{"kind":"text","text":" could be composed of an interaction to "},{"kind":"inline-tag","tag":"@apilink","text":"Enter"},{"kind":"text","text":" the value\\ninto a form field and "},{"kind":"inline-tag","tag":"@apilink","text":"Press"},{"kind":"text","text":" the "},{"kind":"inline-tag","tag":"@apilink","text":"Key.Enter"},{"kind":"text","text":".\\n\\nTasks are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|Actors"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|Abilities"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|Interactions"},{"kind":"text","text":", and "},{"kind":"inline-tag","tag":"@apilink","text":"Question|Questions"},{"kind":"text","text":".\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- [User-Centred Design: How a 50 year old technique became the key to scalable test automation](https://janmolak.com/user-centred-design-how-a-50-year-old-technique-became-the-key-to-scalable-test-automation-66a658a36555)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|Actors"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|Activities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|Interactions"},{"kind":"text","text":"\\n\\n## Defining a task\\n\\n"},{"kind":"code","text":"```ts\\nimport { Answerable, Task, d } from \'@serenity-js/core\'\\nimport { By, Click, Enter, PageElement, Press, Key } from \'@serenity-js/web\'\\n\\nconst SignIn = (username: Answerable<string>, password: Answerable<string>) =>\\n  Task.where(d`#actor signs is as ${ username }`,\\n    Enter.theValue(username).into(PageElement.located(By.id(\'username\'))),\\n    Enter.theValue(password).into(PageElement.located(By.id(\'password\'))),\\n    Press.the(Key.Enter),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Defining a not implemented task\\n\\nNote that calling "},{"kind":"inline-tag","tag":"@apilink","text":"Task.where"},{"kind":"text","text":" method without providing the sequence of "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|activities"},{"kind":"text","text":"\\nproduces a Task that\'s marked as \\"pending\\" in the test report.\\n\\nThis feature is useful when you want to quickly write down a task that will be needed in the scenario,\\nbut you\'re not yet sure what activities it will involve.\\n\\n"},{"kind":"code","text":"```ts\\nimport { Task } from \'@serenity-js/core\'\\n\\nconst SignUp = () =>\\n    Task.where(`#actor signs up for a newsletter`) // no activities provided\\n                                                   // => task marked as pending\\n```"},{"kind":"text","text":"\\n\\n## Composing activities into tasks\\n\\nThe purpose of **tasks** is to help you capture domain vocabulary by **associating domain meaning** with a **sequence of activities**.\\nFrom the implementation perspective, tasks help you give a **meaningful description** to such sequence\\nand provide a way to **easily reuse activities across your code base**.\\n\\n:::tip Remember\\n**Tasks** associate **domain meaning** with a sequence of **lower-level activities** and provide a mechanism for **code reuse**.\\n:::\\n\\nFor example, a task to _find a flight connection from London to New York_ could be modelled as a sequence of the following lower-level activities:\\n- specify origin city of \\"London\\"\\n- specify destination city of \\"New York\\"\\n\\nThe easiest way to implement such task, and any custom Serenity/JS task for this matter, is to use the "},{"kind":"inline-tag","tag":"@apilink","text":"Task.where"},{"kind":"text","text":" method to compose the lower-level activities:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task } from \'@serenity-js/core\'\\n\\nconst findFlight = (originCity: string, destinationCity: string) =>\\n    Task.where(`#actors finds a flight from ${ originCity } to ${ destinationCity }`,   // task goal\\n        specifyOriginCity(originCity),                                                  // activities\\n        specifyDestinationCity(originCity),\\n    )\\n```"},{"kind":"text","text":"\\n\\nFurthermore, if the actor was interacting with a web UI, a task to _specify origin city_ could again be composed of other activities:\\n- click on the "},{"kind":"code","text":"`origin airport`"},{"kind":"text","text":" widget\\n- enter city name of "},{"kind":"code","text":"`London`"},{"kind":"text","text":"\\n- pick the first suggested airport from the list\\n\\nConversely, a task to _specify destination city_ could be composed of:\\n- click on the "},{"kind":"code","text":"`destination airport`"},{"kind":"text","text":" widget\\n- enter city name of "},{"kind":"code","text":"`New York`"},{"kind":"text","text":"\\n- pick the first suggested airport from the list\\n\\nConveniently, [Serenity/JS modules](/handbook/about/architecture) provide low-level activities that\\nallow actors to interact with the various interfaces of the system under test.\\nFor example, [Serenity/JS Web module](/api/web) ships with activities such as "},{"kind":"inline-tag","tag":"@apilink","text":"Click"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"Enter"},{"kind":"text","text":",\\nwhich we can incorporate into our task definitions just like any other activities:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task } from \'@serenity-js/core\'\\nimport { Click, Enter, Key, Press } from \'@serenity-js/web\'\\n\\nimport { FlightFinder } from \'./ui/flight-finder\'\\n\\nconst specifyOriginCity = (originCity: string) =>\\n    Task.where(`#actor specifies origin city of ${ originCity }`,\\n        Click.on(FlightFinder.originAirport),\\n        Enter.theValue(originCity).into(FlightFinder.originAirport),\\n        Press.the(Key.ArrowDown, Key.Enter).into(FlightFinder.originAirport),\\n    )\\n\\nconst specifyDestinationCity = (destinationCity: string) =>\\n    Task.where(`#actor specifies destination city of ${ destinationCity }`,\\n        Click.on(FlightFinder.destinationAirport),\\n        Enter.theValue(destinationCity).into(FlightFinder.destinationAirport),\\n        Press.the(Key.ArrowDown, Key.Enter).into(FlightFinder.destinationAirport),\\n    )\\n```"},{"kind":"text","text":"\\n\\nAs you can already see, tasks to _specify origin city_ and _specify destination city_ are almost identical,\\nsave for the name of the widget and the text value the actor is supposed to enter.\\nSerenity/JS **task-based code reuse model** means that we can clean up such duplicated implementation\\nby **extracting a parameterised task**, in this case called "},{"kind":"code","text":"`specifyCity`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Task } from \'@serenity-js/core\'\\nimport { Click, Enter, Key, PageElement, Press } from \'@serenity-js/web\'\\n\\nimport { FlightFinder } from \'./ui/flight-finder\'\\n\\nconst specifyOriginCity = (originCity: string) =>\\n    Task.where(`#actor specifies origin city of ${ originCity }`,\\n        specifyCity(originCity, FlightFinder.originAirport)\\n    )\\n\\nconst specifyDestinationCity = (destinationCity: string) =>\\n    Task.where(`#actor specifies destination city of ${ destinationCity }`,\\n        specifyCity(destinationCity, FlightFinder.destinationAirport),\\n    )\\n\\nconst specifyCity = (cityName: string, widget: PageElement) =>\\n    Task.where(`#actor specifies city of ${ cityName } in ${ widget }`,\\n        Click.on(widget),\\n        Enter.theValue(cityName).into(widget),\\n        Press.the(Key.ArrowDown, Key.Enter).into(widget),\\n    )\\n```"},{"kind":"text","text":"\\n\\nAs you work with Serenity/JS, you\'ll notice that the ideas of **functional decomposition**, so thinking of tasks as sequences of lower-level activities,\\nas well as **functional composition**, so implementing reusable activities and composing them into higher-level tasks,\\nare at the heart of the Screenplay Pattern. You\'ll also notice that the entire Serenity/JS framework does it best to help your team follow this approach.\\n\\n:::info The power of the Serenity/JS task-based code reuse model\\nWhat makes the Serenity/JS task-based code reuse model so **powerful at scale** is the observation that:\\n- for most software systems, a vast number of **diverse test scenarios** can be composed of a relatively **small number of high-level activities**\\n- all **high-level activities** can be composed of a relatively **small number of lower-level activities**\\n- in a reasonably consistently-designed software system, most lower-level activities tend to be similar and rather consistent across the various aspects of a given interface.\\nIn particular, **there are only so many ways** one can interact with a UI button or send an HTTP request to a web service.\\n\\nWhat this means in practice is that by investing your time in properly designing **relatively few reusable tasks**\\nto test your system, you give your team a **significant productivity boost** and **leverage** when producing high-level test scenarios.\\n\\nOn top of that, this design approach results not only in **simpler test scenarios** that reduce\\nthe [cognitive load](https://en.wikipedia.org/wiki/Cognitive_load) on the reader as they require them to process\\nthe scenario only one level of abstraction at the time.\\nIt also allows for the test to **take shortcuts** in well-defined points of the workflow - use a REST API request to create\\na test user account instead of going through the registration form.\\n:::"}]},"children":[{"id":1383,"name":"where","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":185,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Task.ts#L185"}],"signatures":[{"id":1384,"name":"where","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A factory method that makes defining custom tasks more convenient."}]},"parameters":[{"id":1385,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A description to be used when reporting this task"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1386,"name":"activities","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of lower-level activities that constitute this task"}]},"type":{"type":"array","elementType":{"type":"reference","id":569,"name":"Activity"}}}],"type":{"type":"reference","id":1382,"name":"Task"}}]},{"id":1390,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":26,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L26"}],"signatures":[{"id":1391,"name":"new Task","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1392,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1393,"name":"location","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FileSystemLocation"},"defaultValue":"..."}],"type":{"type":"reference","id":1382,"name":"Task"},"inheritedFrom":{"type":"reference","id":575,"name":"Activity.constructor"}}],"inheritedFrom":{"type":"reference","id":574,"name":"Activity.constructor"}},{"id":1399,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":37,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L37"}],"signatures":[{"id":1400,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":581,"name":"Activity.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":580,"name":"Activity.instantiationLocation"}},{"id":1401,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":62,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L62"}],"signatures":[{"id":1402,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":586,"name":"Activity.toString"}}],"inheritedFrom":{"type":"reference","id":585,"name":"Activity.toString"}},{"id":1394,"name":"performAs","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":201,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Task.ts#L201"}],"signatures":[{"id":1395,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Task"},{"kind":"text","text":"."}]},"parameters":[{"id":1396,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"}]},"type":{"type":"reference","id":564,"name":"PerformsActivities"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":583,"name":"Activity.performAs"}}],"overwrites":{"type":"reference","id":582,"name":"Activity.performAs"}}],"groups":[{"title":"Methods","children":[1383,1399,1401,1394]},{"title":"Constructors","children":[1390]}],"sources":[{"fileName":"packages/core/src/screenplay/Task.ts","line":174,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Task.ts#L174"}],"extendedTypes":[{"type":"reference","id":569,"name":"Activity"}],"extendedBy":[{"type":"reference","id":960,"name":"Check"}],"permalink":"/api/core/class/Task","previousId":859,"nextId":483},{"id":1657,"name":"WithAnswerableProperties","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes a plain JavaScript object with "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" properties.\\nTypically, used in conjunction with "},{"kind":"inline-tag","tag":"@apilink","text":"RecursivelyAnswered"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"Question.fromObject"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  actorCalled, notes, q, Question, QuestionAdapter, WithAnswerableProperties\\n} from \'@serenity-js/core\';\\n\\ninterface RequestConfiguration {\\n  headers: Record<string, string>;\\n}\\n\\nconst requestConfiguration: WithAnswerableProperties<RequestConfiguration> = {\\n  headers: {\\n    Authorization: q`Bearer ${ notes().get(\'authDetails\').token }`\\n  }\\n}\\n\\nconst question: QuestionAdapter<RequestConfiguration> =\\n    Question.fromObject<RequestConfiguration>(requestConfiguration)\\n\\nconst answer: RequestConfiguration = await actorCalled(\'Annie\').answer(question);\\n```"}]},"sources":[{"fileName":"packages/core/src/screenplay/WithAnswerableProperties.ts","line":31,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/WithAnswerableProperties.ts#L31"}],"typeParameters":[{"id":1658,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"conditional","checkType":{"type":"reference","id":1658,"name":"T"},"extendsType":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"undefined"}]},"trueType":{"type":"reference","id":1658,"name":"T"},"falseType":{"type":"conditional","checkType":{"type":"reference","id":1658,"name":"T"},"extendsType":{"type":"union","types":[{"type":"reference","id":859,"typeArguments":[{"type":"reference","typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"},{"type":"reference","id":859,"typeArguments":[{"type":"inferred","name":"A"}],"name":"Question"},{"type":"reference","typeArguments":[{"type":"inferred","name":"A"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]},"trueType":{"type":"reference","id":641,"typeArguments":[{"type":"reference","name":"A"}],"name":"Answerable"},"falseType":{"type":"conditional","checkType":{"type":"reference","id":1658,"name":"T"},"extendsType":{"type":"intrinsic","name":"object"},"trueType":{"type":"mapped","parameter":"K","parameterType":{"type":"typeOperator","operator":"keyof","target":{"type":"reference","id":1658,"name":"T"}},"templateType":{"type":"reference","id":1657,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"K"},"objectType":{"type":"reference","id":1658,"name":"T"}}],"name":"WithAnswerableProperties"}},"falseType":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":1658,"name":"T"}],"name":"Answerable"}}}},"permalink":"/api/core#WithAnswerableProperties","previousId":1380,"nextId":952},{"id":483,"name":"Ability","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"**Abilities** enable "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actors"},{"kind":"text","text":"\\nto perform "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interactions"},{"kind":"text","text":" with the system under test\\nand answer "},{"kind":"inline-tag","tag":"@apilink","text":"Question|questions"},{"kind":"text","text":" about its state.\\n\\nFrom the technical perspective, **abilities** act as **wrappers** around any **integration libraries** required\\nto communicate with the external interfaces of system under test,\\nsuch as "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb|web browser drivers"},{"kind":"text","text":" or a "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi|HTTP client"},{"kind":"text","text":".\\nThey also enable [portability](/handbook/design/portable-test-code)\\nof your test code across such integration libraries.\\n\\nAbilities are the core building block of the [Screenplay Pattern](/handbook/design/screenplay-pattern),\\nalong with "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|Actors"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|Interactions"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Question|Questions"},{"kind":"text","text":", and "},{"kind":"inline-tag","tag":"@apilink","text":"Task|Tasks"},{"kind":"text","text":".\\n\\n![Screenplay Pattern](/images/design/serenity-js-screenplay-pattern.png)\\n\\nLearn more about:\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|Actors"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast|Configuring actors using Casts"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|Interactions"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Question|Questions"},{"kind":"text","text":"\\n- [Web testing](/handbook/web-testing/)\\n- [API testing](/handbook/api-testing/)\\n- [Mobile testing](/handbook/mobile-testing/)\\n\\n## Giving actors the abilities to interact\\n\\nSerenity/JS actors are capable of interacting with **any interface** of the system under test,\\nbe it a [web UI](/handbook/web-testing/), a [mobile app](/handbook/mobile-testing/), a [web service](/handbook/api-testing/),\\nor "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|anything else"},{"kind":"text","text":" that a Node.js program can talk to.\\nThis flexibility is enabled by a mechanism called _**abilities**_\\nand achieved without introducing any unnecessary dependencies to your code base thanks to the [modular architecture](/handbook/about/architecture) of Serenity/JS.\\n\\n:::tip Remember\\n**Actors** have **abilities** that enable them to **perform interactions** and **answer questions**.\\n:::\\n\\nFrom the technical perspective, an **ability** is an [adapter](https://en.wikipedia.org/wiki/Adapter_pattern)\\naround an interface-specific integration library, such as a web browser driver, an HTTP client, a database client, and so on.\\nYou give an actor an ability, and it\'s the ability\'s responsibility to provide a consistent API around the integration library and deal with any of its quirks.\\nAbilities **encapsulate integration libraries** and handle their "},{"kind":"inline-tag","tag":"@apilink","text":"Initialisable|configuration and initialisation"},{"kind":"text","text":",\\nthe process of "},{"kind":"inline-tag","tag":"@apilink","text":"Discardable|freeing up any resources"},{"kind":"text","text":" they hold,\\nas well as managing any state associated with the library.\\n\\n### Portable interactions with web interfaces\\n\\nTo make your Serenity/JS actors interact with web interfaces,\\nyou call the ["},{"kind":"code","text":"`Actor.whoCan`"},{"kind":"text","text":"](/api/core/class/Actor#whoCan) method and give them an implementation of the ability to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb),\\nspecific to your web integration tool of choice.\\n\\nNote how "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithWebdriverIO"},{"kind":"text","text":", and "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithProtractor"},{"kind":"text","text":"\\nall **extend** the base ability to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":".\\n\\n#### Playwright Test\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'   // Serenity/JS integration module\\nimport { chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })              // integration library\\n\\nactorCalled(\'Trevor\')                                                  // generic actor\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))                   // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n#### WebdriverIO\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\' // Serenity/JS integration module\\n\\nactorCalled(\'Trevor\')                                                  // generic actor\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))                  // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n#### Protractor\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor } from \'@serenity-js/protractor\'   // Serenity/JS integration module\\nimport { protractor } from \'protractor\'                                // integration library\\n\\nactorCalled(\'Trevor\')                                                  // generic actor\\n  .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))        // tool-specific ability\\n```"},{"kind":"text","text":"\\n\\n### Retrieving an ability\\n\\nUse "},{"kind":"inline-tag","tag":"@apilink","text":"Ability.as"},{"kind":"text","text":" to retrieve an ability in a custom "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":" implementation.\\n\\nHere, "},{"kind":"code","text":"`Ability`"},{"kind":"text","text":" can be the integration library-specific class, for example "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":",\\nor its library-agnostic parent class, like "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":".\\n\\nTo make your code portable across the various integration libraries, retrieve the ability\\nusing the library-agnostic parent class:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWeb } from \'@serenity-js/web\' // Serenity/JS web module\\n\\nconst actor    = actorCalled(\'Trevor\')\\nconst ability  = await BrowseTheWeb.as(actor)   // retrieve implementation of BrowseTheWeb\\n```"},{"kind":"text","text":"\\n\\nAs you can already see, providing **encapsulation** and a **cleaner API** around the integration libraries are not the only reasons why you\'d want to use the abilities.\\n\\nAnother reason is that the Serenity/JS implementation of the Screenplay Pattern lets you **completely decouple the actor from the integration libraries**\\nand make the abilities of the same type **interchangeable**.\\nFor example, [Serenity/JS web modules](/handbook/web-testing/serenity-js-web-modules) offer an abstraction that lets you switch between web integration libraries\\nas vastly different as Selenium, WebdriverIO, or Playwright without having to change _anything whatsoever_ in your test scenarios.\\n\\nWhat this means is that your test code can become [portable and reusable across projects and teams](/handbook/design/portable-test-code),\\neven if they don\'t use the same low-level integration tools. It also helps you to **avoid vendor lock-in**, as you can wrap any third-party integration library\\ninto an ability and swap it out for another implementation if you need to.\\n\\nHowever, Serenity/JS **doesn\'t prevent you** from using the integration libraries directly.\\nWhen you need to, you can use a library-specific ability like "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":"\\nto trade portability for access to library-specific low-level methods:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright, PlaywrightPage } from \'@serenity-js/playwright\'\\n\\nconst actor          = actorCalled(\'Trevor\')\\nconst ability        = await BrowseTheWebWithPlaywright.as(actor)\\nconst page           = (await ability.currentPage()) as PlaywrightPage;\\nconst playwrightPage = await page.nativePage();\\n// use any Playwright-specific APIs on playwrightPage\\n```"},{"kind":"text","text":"\\n\\n:::warning Using integration library-specific APIs reduces portability\\nWhile Serenity/JS provides you with escape hatches and ways to access the low-level APIs of your integration libraries,\\ndoing so can reduce the portability of your code. Only do it when you have a good reason to trade portability for low-level access.\\n:::\\n\\n\\n## Associating actors with data\\n\\nOne more reason to use abilities is that abilities can also help you to **associate actors with data** they need to perform their activities.\\nFor example, a commonly used ability is one to ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes), which allows your actors to start the test scenario\\nequipped with some data set, or record information about what they see in the test scenario so that they can act upon it later:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n  emailAddress: string;\\n}\\n\\nawait actorCalled(\'Trevor\')\\n  .whoCan(\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Trevor\',\\n      lastName: \'Traveller\',\\n      emailAddress: \'Trevor.Traveller@example.org\',\\n    }))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Actors with multiple abilities\\n\\nOf course, an actor can have **any number of abilities** they need to play their role.\\nFor example, it is quite common for an actor to be able to ["},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"](/api/web/class/BrowseTheWeb), ["},{"kind":"code","text":"`TakeNotes`"},{"kind":"text","text":"](/api/core/class/TakeNotes), and ["},{"kind":"code","text":"`CallAnApi`"},{"kind":"text","text":"](/api/rest/class/CallAnApi):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Notepad, TakeNotes } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\nimport { chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\nconst baseURL = \'https://example.org\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n  emailAddress: string;\\n}\\n\\nawait actorCalled(\'Trevor\')\\n  .whoCan(\\n      BrowseTheWebWithPlaywright.using(browser, { baseURL }),\\n      CallAnApi.at(`${ baseURL }/api`),\\n      TakeNotes.using(Notepad.with<MyNotes>({\\n          firstName: \'Trevor\',\\n          lastName: \'Traveller\',\\n          emailAddress: \'Trevor.Traveller@example.org\',\\n      }))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Writing custom abilities\\n\\nIf your system under test provides a type of interface that Serenity/JS doesn\'t support yet,\\nyou might want to implement a custom "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":", as well as "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interactions"},{"kind":"text","text":"\\nand "},{"kind":"inline-tag","tag":"@apilink","text":"Question|questions"},{"kind":"text","text":" to interact with it.\\n\\nThe best way to start with that is for you to review the examples in the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|Screenplay Pattern API docs"},{"kind":"text","text":",\\nas well as the [Serenity/JS code base on GitHub](https://github.com/serenity-js/serenity-js/tree/main/packages).\\nAlso note that all the [Serenity/JS modules](/handbook/about/architecture)\\nhave their automated tests written in such a way to not only provide an **extremely high test coverage** for the framework itself,\\nbut to be **accessible** and act as a **reference implementation for you** to create your own integrations.\\n\\nIf you believe that the custom integration you\'ve developed could benefit the wider Serenity/JS community,\\nplease consider open-sourcing it yourself, or [contributing it](/contributing) to the main framework.\\n\\n[![Join Serenity/JS Community Chat](https://img.shields.io/badge/Chat-Serenity%2FJS%20Community-FBD30B?logo=matrix)](https://matrix.to/#/#serenity-js:gitter.im)\\n\\n### Defining a custom ability to "},{"kind":"code","text":"`MakePhoneCalls`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability, actorCalled, Interaction } from \'@serenity-js/core\'\\n\\nclass MakePhoneCalls extends Ability {\\n\\n  // A static method is typically used to inject a client of a given interface\\n  // and instantiate the ability, for example:\\n  //   actorCalled(\'Phil\').whoCan(MakePhoneCalls.using(phone))\\n  static using(phone: Phone) {\\n    return new MakePhoneCalls(phone);\\n  }\\n\\n  // Abilities can hold state, for example: the client of a given interface,\\n  // additional configuration, or the result of the last interaction with a given interface.\\n  protected constructor(private readonly phone: Phone) {\\n  }\\n\\n  // Abilities expose methods that enable Interactions to call the system under test,\\n  // and Questions to retrieve information about its state.\\n  dial(phoneNumber: string): Promise<void> {\\n    // ...\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a custom interaction using the custom ability\\n\\n"},{"kind":"code","text":"```ts\\n// A custom interaction using the actor\'s ability:\\nconst Call = (phoneNumber: string) =>\\n  Interaction.where(`#actor calls ${ phoneNumber }`, async actor => {\\n    await MakePhoneCalls.as(actor).dial(phoneNumber)\\n  })\\n```"},{"kind":"text","text":"\\n\\n### Using the custom ability and interaction in a test scenario\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Connie\')\\n  .whoCan(MakePhoneCalls.using(phone))\\n  .attemptsTo(\\n    Call(phoneNumber)\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using auto-initialisable and auto-discardable abilities\\n\\nAbilities that rely on resources that need to be initialised before they can be used,\\nor discarded before the actor is dismissed can implement the "},{"kind":"inline-tag","tag":"@apilink","text":"Initialisable"},{"kind":"text","text":"\\nor "},{"kind":"inline-tag","tag":"@apilink","text":"Discardable"},{"kind":"text","text":" interfaces, respectively.\\n\\n### Defining a custom ability to "},{"kind":"code","text":"`QueryPostgresDB`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport {\\n  Ability, actorCalled, Discardable, Initialisable, Question, UsesAbilities,\\n} from \'@serenity-js/core\'\\n\\n// Some low-level interface-specific client we want the Actor to use,\\n// for example a PostgreSQL database client:\\nconst { Client } = require(\'pg\');\\n\\n// A custom Ability to give an Actor access to the low-level client:\\nclass QueryPostgresDB\\n  extends Ability\\n  implements Initialisable, Discardable\\n{\\n  constructor(private readonly client) {\\n  }\\n\\n  // Invoked by Serenity/JS upon the first invocation of `actor.attemptsTo`\\n  initialise(): Promise<void> | void {\\n    return this.client.connect();\\n  }\\n\\n  // Used to ensure that the Ability is not initialised more than once\\n  isInitialised(): boolean {\\n    return this.client._connected;\\n  }\\n\\n  // Discards any resources the Ability uses when the Actor is dismissed,\\n  // so when the Stage receives a SceneFinishes event for scenario-scoped actor,\\n  // or TestRunFinishes for cross-scenario-scoped actors\\n  discard(): Promise<void> | void {\\n    return this.client.end();\\n  }\\n\\n  // Any custom integration APIs the Ability, should make available to the Actor.\\n  // Here, we want the ability to enable the actor to query the database.\\n  query(query: string) {\\n    return this.client.query(query);\\n  }\\n\\n  // ... other custom integration APIs\\n}\\n```"},{"kind":"text","text":"\\n\\n### Defining a custom question using the custom ability\\n\\n"},{"kind":"code","text":"```ts\\n// A custom Question to allow the Actor query the database\\nconst CurrentDBUser = () =>\\n  Question.about(\'current db user\', actor =>\\n    QueryPostgresDB.as(actor)\\n      .query(\'SELECT current_user\')\\n      .then(result => result.rows[0].current_user)\\n  );\\n```"},{"kind":"text","text":"\\n\\n### Using the custom ability and question in a test scenario\\n\\n"},{"kind":"code","text":"```ts\\n// Example test scenario where the Actor uses the Ability to QueryPostgresDB\\n// to assert on the username the connection has been established with\\n\\nimport { describe, it } from \'mocha\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ndescribe(\'Serenity/JS\', () => {\\n  it(\'can initialise and discard abilities automatically\', () =>\\n    actorCalled(\'Debbie\')\\n      .whoCan(new QueryPostgresDB(new Client()))\\n      .attemptsTo(\\n        Ensure.that(CurrentDBUser(), equals(\'jan\'))\\n      ))\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AbilityType"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Initialisable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Discardable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TakeNotes"}]},"children":[{"id":484,"name":"as","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":397,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/Ability.ts#L397"}],"signatures":[{"id":485,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Used to access an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" of the given type\\nfrom within the "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":" classes.\\n\\n#### Retrieving an ability in an interaction definition\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Interaction } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\n\\nexport const ClearLocalStorage = () =>\\n  Interaction.where(`#actor clears local storage`, async (actor: Actor) => {\\n    const browseTheWeb: BrowseTheWeb = BrowseTheWeb.as(actor)    // retrieve an ability\\n    const page: Page = await browseTheWeb.currentPage()\\n    await page.executeScript(() => window.localStorage.clear())\\n  })\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving an ability in a question definition\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Question } from \'@serenity-js/core\'\\nimport { BrowseTheWeb, Page } from \'@serenity-js/web\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nconst LocalStorage = {\\n  numberOfItems: () =>\\n    Question.about<number>(`number of items in local storage`, async (actor: Actor) => {\\n      const browseTheWeb: BrowseTheWeb = BrowseTheWeb.as(actor)    // retrieve an ability\\n      const page: Page = await browseTheWeb.currentPage()\\n      return page.executeScript(() => window.localStorage.length)\\n    })\\n}\\n```"}]},"typeParameter":[{"id":486,"name":"A","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":483,"name":"Ability"}}],"parameters":[{"id":487,"name":"this","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":491,"typeArguments":[{"type":"reference","name":"A"}],"name":"AbilityType"}},{"id":488,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":559,"name":"UsesAbilities"}}],"type":{"type":"reference","name":"A"}}]},{"id":489,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":490,"name":"new Ability","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":483,"name":"Ability"}}]}],"groups":[{"title":"Methods","children":[484]},{"title":"Constructors","children":[489]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Ability.ts","line":358,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/Ability.ts#L358"}],"extendedBy":[{"type":"reference","id":453,"name":"RaiseErrors"},{"type":"reference","id":496,"name":"AnswerQuestions"},{"type":"reference","id":531,"name":"PerformActivities"},{"type":"reference","id":837,"name":"TakeNotes"},{"type":"reference","id":1403,"name":"ScheduleWork"}],"permalink":"/api/core/class/Ability","previousId":1382,"nextId":1659},{"id":491,"name":"AbilityType","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":45,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/AbilityType.ts#L45"}],"typeParameters":[{"id":495,"name":"A","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":483,"name":"Ability"}}],"type":{"type":"reflection","declaration":{"id":492,"name":"__type","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AbilityType.ts","line":46,"character":5,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/AbilityType.ts#L46"}],"signatures":[{"id":493,"name":"__type","kind":16384,"kindString":"Constructor signature","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"An interface describing the static access method that every "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" class\\nneeds to provide in order to be accessible from within the "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interactions"},{"kind":"text","text":".\\n\\n#### Retrieving an ability from an interaction\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ability, actorCalled, Interaction } from \'@serenity-js/core\';\\n\\nclass MakePhoneCalls extends Ability {\\n  static using(phone: Phone) {\\n    return new MakePhoneCalls(phone);\\n  }\\n\\n  protected constructor(private readonly phone: Phone) {\\n  }\\n\\n  // some method that allows us to interact with the external interface of the system under test\\n  dial(phoneNumber: string): Promise<void> {\\n    // ...\\n  }\\n}\\n\\nconst Call = (phoneNumber: string) =>\\n  Interaction.where(`#actor calls ${ phoneNumber }`, async actor => {\\n    await MakePhoneCalls.as(actor).dial(phoneNumber)\\n  });\\n\\nawait actorCalled(\'Connie\')\\n  .whoCan(MakePhoneCalls.using(phone))\\n  .attemptsTo(\\n    Call(phoneNumber),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"}]},"parameters":[{"id":494,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","id":495,"name":"A"}}]}},"permalink":"/api/core#AbilityType","nextId":496},{"id":496,"name":"AnswerQuestions","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"This "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" enables an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to resolve the value of a given "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":".\\n\\n"},{"kind":"inline-tag","tag":"@apilink","text":"AnswerQuestions"},{"kind":"text","text":" is used internally by "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.answer"},{"kind":"text","text":", and it is unlikely you\'ll ever need to use it directly in your code.\\nThat is, unless you\'re building a custom Serenity/JS extension and want to override the default behaviour of the framework,\\nin which case you should check out the [Contributor\'s Guide](/contributing)."}]},"children":[{"id":510,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":17,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/AnswerQuestions.ts#L17"}],"signatures":[{"id":511,"name":"new AnswerQuestions","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":512,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":559,"name":"UsesAbilities"}]}}],"type":{"type":"reference","id":496,"name":"AnswerQuestions"},"overwrites":{"type":"reference","id":490,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","id":489,"name":"Ability.constructor"}},{"id":514,"name":"answer","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":21,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/AnswerQuestions.ts#L21"}],"signatures":[{"id":515,"name":"answer","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":516,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":517,"name":"answerable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":516,"name":"T"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":516,"name":"T"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Constructors","children":[510]},{"title":"Methods","children":[514]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/AnswerQuestions.ts","line":16,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/AnswerQuestions.ts#L16"}],"extendedTypes":[{"type":"reference","id":483,"name":"Ability"}],"permalink":"/api/core/class/AnswerQuestions","previousId":491,"nextId":523},{"id":518,"name":"CanHaveAbilities","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" who can have an "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" to perform some "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":".\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"}]},"children":[{"id":519,"name":"whoCan","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":19,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/CanHaveAbilities.ts#L19"}],"signatures":[{"id":520,"name":"whoCan","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Assigns an "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" or several abilities to the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"}]},"parameters":[{"id":521,"name":"abilities","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":483,"name":"Ability"}}}],"type":{"type":"reference","id":522,"name":"Returned_Type"}}]}],"groups":[{"title":"Methods","children":[519]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/CanHaveAbilities.ts","line":14,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/CanHaveAbilities.ts#L14"}],"typeParameters":[{"id":522,"name":"Returned_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"reference","id":559,"name":"UsesAbilities"}}],"implementedBy":[{"type":"reference","id":587,"name":"Actor"}],"permalink":"/api/core/interface/CanHaveAbilities","previousId":480,"nextId":559},{"id":523,"name":"Discardable","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"An interface to be implemented by any "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" that needs to free up\\nthe resources it uses, e.g. disconnect from a database.\\n\\nThis "},{"kind":"inline-tag","tag":"@apilink","text":"Discardable.discard"},{"kind":"text","text":" method is invoked directly by the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":", and indirectly by "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":":\\n- when "},{"kind":"inline-tag","tag":"@apilink","text":"SceneFinishes"},{"kind":"text","text":", for actors instantiated after "},{"kind":"inline-tag","tag":"@apilink","text":"SceneStarts"},{"kind":"text","text":" - e.g. within a test scenario or in a \\"before each\\" hook\\n- when "},{"kind":"inline-tag","tag":"@apilink","text":"TestRunFinishes"},{"kind":"text","text":", for actors instantiated before "},{"kind":"inline-tag","tag":"@apilink","text":"SceneStarts"},{"kind":"text","text":" - e.g. in a \\"before all\\" hook\\n\\nNote that events such as "},{"kind":"inline-tag","tag":"@apilink","text":"SceneFinishes"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"TestRunFinishes"},{"kind":"text","text":" are emitted by Serenity/JS test runner adapters,\\nsuch as "},{"kind":"code","text":"`@serenity-js/cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`@serenity-js/mocha`"},{"kind":"text","text":", "},{"kind":"code","text":"`@serenity-js/jasmine`"},{"kind":"text","text":", and so on.\\nConsult their respective readmes to learn how to register them with your test runner of choice.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AbilityType"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Initialisable"}]},"children":[{"id":524,"name":"discard","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":25,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/Discardable.ts#L25"}],"signatures":[{"id":525,"name":"discard","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Discards the resources associated with this ability."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}],"groups":[{"title":"Methods","children":[524]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Discardable.ts","line":20,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/Discardable.ts#L20"}],"implementedBy":[{"type":"reference","id":1403,"name":"ScheduleWork"}],"permalink":"/api/core/interface/Discardable","previousId":496,"nextId":526},{"id":526,"name":"Initialisable","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"An interface to be implemented by any "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" that needs to initialise\\nthe resources it uses, e.g. establish a database connection.\\n\\nThe "},{"kind":"inline-tag","tag":"@apilink","text":"Initialisable.initialise"},{"kind":"text","text":" method is invoked whenever "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.attemptsTo"},{"kind":"text","text":" method is called,\\nbut **only when** "},{"kind":"inline-tag","tag":"@apilink","text":"Initialisable.isInitialised"},{"kind":"text","text":" returns false. This is to avoid initialising abilities more than once.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AbilityType"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Discardable"}]},"children":[{"id":527,"name":"initialise","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":24,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/Initialisable.ts#L24"}],"signatures":[{"id":528,"name":"initialise","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Initialises the ability. Invoked whenever "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.attemptsTo"},{"kind":"text","text":" method is called,\\nbut **only when** "},{"kind":"inline-tag","tag":"@apilink","text":"Initialisable.isInitialised"},{"kind":"text","text":" returns false.\\n\\nMake sure to implement "},{"kind":"inline-tag","tag":"@apilink","text":"Initialisable.isInitialised"},{"kind":"text","text":" so that it returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen the ability has been successfully initialised."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]},{"id":529,"name":"isInitialised","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":33,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/Initialisable.ts#L33"}],"signatures":[{"id":530,"name":"isInitialised","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Should return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when all the resources that the given ability needs\\nhave been initialised. Should return "},{"kind":"code","text":"`false`"},{"kind":"text","text":" if the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" should\\ninitialise them again when "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.attemptsTo"},{"kind":"text","text":" is called."}],"blockTags":[{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"boolean"}}]}],"groups":[{"title":"Methods","children":[527,529]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/Initialisable.ts","line":15,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/Initialisable.ts#L15"}],"permalink":"/api/core/interface/Initialisable","previousId":523,"nextId":531},{"id":531,"name":"PerformActivities","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" that enables an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform a given "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":".\\n\\n"},{"kind":"inline-tag","tag":"@apilink","text":"PerformActivities"},{"kind":"text","text":" is used internally by "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.perform"},{"kind":"text","text":", and it is unlikely you\'ll ever need to use it directly in your code.\\nThat is, unless you\'re building a custom Serenity/JS extension and want to override the default behaviour of the framework,\\nin which case you should check out the [Contributor\'s Guide](/contributing)."}]},"children":[{"id":537,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":34,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/PerformActivities.ts#L34"}],"signatures":[{"id":538,"name":"new PerformActivities","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":539,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":564,"name":"PerformsActivities"},{"type":"reflection","declaration":{"id":540,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":541,"name":"name","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":35,"character":57,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/PerformActivities.ts#L35"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[541]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":35,"character":55,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/PerformActivities.ts#L35"}]}}]}},{"id":542,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2236,"name":"EmitsDomainEvents"}}],"type":{"type":"reference","id":531,"name":"PerformActivities"},"overwrites":{"type":"reference","id":490,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","id":489,"name":"Ability.constructor"}},{"id":547,"name":"perform","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":41,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/PerformActivities.ts#L41"}],"signatures":[{"id":548,"name":"perform","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":549,"name":"activity","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":569,"name":"Activity"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Constructors","children":[537]},{"title":"Methods","children":[547]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/PerformActivities.ts","line":33,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/PerformActivities.ts#L33"}],"extendedTypes":[{"type":"reference","id":483,"name":"Ability"}],"permalink":"/api/core/class/PerformActivities","previousId":526,"nextId":650},{"id":559,"name":"UsesAbilities","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" who can use their "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|abilities"},{"kind":"text","text":" to perform an "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":"\\nor answer a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":".\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"}]},"children":[{"id":560,"name":"abilityTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":23,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/UsesAbilities.ts#L23"}],"signatures":[{"id":561,"name":"abilityTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Provides access to the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" to do something"}]},"typeParameter":[{"id":562,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":483,"name":"Ability"}}],"parameters":[{"id":563,"name":"doSomething","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The type of ability to look up, e.g. "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"}]},"type":{"type":"reference","id":491,"typeArguments":[{"type":"reference","id":562,"name":"T"}],"name":"AbilityType"}}],"type":{"type":"reference","id":562,"name":"T"}}]}],"groups":[{"title":"Methods","children":[560]}],"sources":[{"fileName":"packages/core/src/screenplay/abilities/UsesAbilities.ts","line":15,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/abilities/UsesAbilities.ts#L15"}],"implementedBy":[{"type":"reference","id":587,"name":"Actor"}],"permalink":"/api/core/interface/UsesAbilities","previousId":518,"nextId":564},{"id":564,"name":"PerformsActivities","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" who can perform a sequence of "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|Activities"},{"kind":"text","text":",\\nsuch as "},{"kind":"inline-tag","tag":"@apilink","text":"Task|tasks"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interactions"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Task"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"}]},"children":[{"id":565,"name":"attemptsTo","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/activities/PerformsActivities.ts#L20"}],"type":{"type":"reflection","declaration":{"id":566,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":20,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/activities/PerformsActivities.ts#L20"}],"signatures":[{"id":567,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Makes the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" attempt to perform a sequence of "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|Activities"},{"kind":"text","text":"."}]},"parameters":[{"id":568,"name":"activities","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":569,"name":"Activity"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}}}],"groups":[{"title":"Properties","children":[565]}],"sources":[{"fileName":"packages/core/src/screenplay/activities/PerformsActivities.ts","line":15,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/activities/PerformsActivities.ts#L15"}],"implementedBy":[{"type":"reference","id":587,"name":"Actor"}],"permalink":"/api/core/interface/PerformsActivities","previousId":559,"nextId":645},{"id":645,"name":"CollectsArtifacts","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" who can collect "},{"kind":"inline-tag","tag":"@apilink","text":"Artifact|Artifacts"},{"kind":"text","text":", such as "},{"kind":"inline-tag","tag":"@apilink","text":"Photo|Photos"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"JSONData"},{"kind":"text","text":",\\nwhile the scenario is being executed\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Artifact"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"}]},"children":[{"id":646,"name":"collect","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":24,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/artifacts/CollectsArtifacts.ts#L24"}],"signatures":[{"id":647,"name":"collect","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Makes the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" collect an "},{"kind":"inline-tag","tag":"@apilink","text":"Artifact"},{"kind":"text","text":" so that it can be included in the test report."}]},"parameters":[{"id":648,"name":"artifact","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The artifact to be collected, such as "},{"kind":"inline-tag","tag":"@apilink","text":"JSONData"}]},"type":{"type":"reference","name":"Artifact"}},{"id":649,"name":"name","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The name of the artifact to make it easy to recognise in the test report"}]},"type":{"type":"reference","name":"Name"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[646]}],"sources":[{"fileName":"packages/core/src/screenplay/artifacts/CollectsArtifacts.ts","line":13,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/artifacts/CollectsArtifacts.ts#L13"}],"implementedBy":[{"type":"reference","id":587,"name":"Actor"}],"permalink":"/api/core/interface/CollectsArtifacts","previousId":564,"nextId":947},{"id":650,"name":"Debug","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" to evaluate and "},{"kind":"inline-tag","tag":"@apilink","text":"Log|log"},{"kind":"text","text":" the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" values.\\n\\nSince this interaction **accepts a callback function** that receives the evaluated results,\\nthe best way to use it is while **running the test scenario via a Node.js debugger**.\\nSee the links below to learn how to do it in popular IDEs.\\n\\n## Debugging Answerable values\\n\\n"},{"kind":"inline-tag","tag":"@apilink","text":"Debug.values"},{"kind":"text","text":" accepts a callback function that receives an array of "},{"kind":"inline-tag","tag":"@apilink","text":"DebuggingResult"},{"kind":"text","text":" objects,\\nas well as the result of evaluating each provided "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable|answerable"},{"kind":"text","text":" with "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.answer"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Debug } from \'@serenity-js/core\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\n// Running the below through the Node.js debugger makes the actor resolve the provided values\\n// and return them to the debugger function, where you can investigate their contents,\\n// or inspect any Errors the evaluation has resulted with.\\nawait actorCalled(\'Debbie\').attemptsTo(\\n    Navigate.to(\'http://example.org\'),\\n    Debug.values((results, title, url) => {\\n        // set a breakpoint here to view `results`, `title` and `url` in your IDE debugger\\n    }, Page.current().title(), Page.current().url()), // accepts multiple values\\n);\\n```"},{"kind":"text","text":"\\n\\n## Accessing Playwright Page\\n\\n[Playwright Test for VSCode](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright)\\nprovides features that allow for [experimenting with web UI locators](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright#tune-locators)\\nwhile the test is paused at breakpoint.\\n\\nSince this functionality is specific to [Playwright](/api/playwright), you can use it by passing "},{"kind":"inline-tag","tag":"@apilink","text":"PlaywrightPage.current|`PlaywrightPage.current().nativePage()`"},{"kind":"text","text":"\\nto Serenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"Debug.values"},{"kind":"text","text":". Also make sure to name the evaluated value "},{"kind":"code","text":"`page`"},{"kind":"text","text":", as this is the variable name that the Playwright VSCode extension expects.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled, Debug } from \'@serenity-js/core\'\\nimport { PlaywrightPage } from \'@serenity-js/playwright\'\\n\\n// Running the below through the Node.js debugger makes the actor resolve the provided values\\n// and return them to the debugger function, where you can investigate their contents,\\n// or inspect any Errors the evaluation has resulted with.\\nawait actorCalled(\'Debbie\').attemptsTo(\\n    Navigate.to(\'http://example.org\'),\\n    Debug.values((results, page) => {\\n        // set a breakpoint here to use Playwright locator debugging features\\n        page.locator(\'.example-css-class\')\\n        // note that you can change this selector while having the test paused at breakpoint\\n    }, PlaywrightPage.current().nativePage()),\\n);\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Node.js debugging - Getting started](https://nodejs.org/en/docs/guides/debugging-getting-started/)\\n- [Node.js debugging in VS Code](https://code.visualstudio.com/docs/nodejs/nodejs-debugging)\\n- [Running and debugging Node.js in WebStorm](https://www.jetbrains.com/help/webstorm/running-and-debugging-node-js.html)\\n- [Playwright Test for VSCode](https://marketplace.visualstudio.com/items?itemName=ms-playwright.playwright)"}]},"children":[{"id":651,"name":"values","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":86,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/debugging/Debug.ts#L86"}],"signatures":[{"id":652,"name":"values","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" to evaluate the provided "},{"kind":"code","text":"`values`"},{"kind":"text","text":",\\nlog the results, and then pass them to your "},{"kind":"code","text":"`debuggerFunction`"},{"kind":"text","text":".\\n\\nTo use this interaction, run your test scenario in the Node.js debugger\\nand set a breakpoint inside the "},{"kind":"code","text":"`debuggerFunction`"},{"kind":"text","text":"."}]},"typeParameter":[{"id":653,"name":"Values","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":654,"name":"debuggerFunction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":655,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":86,"character":79,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/debugging/Debug.ts#L86"}],"signatures":[{"id":656,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":657,"name":"results","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"mapped","parameter":"Index","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","id":696,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"Index"},"objectType":{"type":"reference","id":653,"name":"Values"}}],"name":"DebuggingResult"}}},{"id":658,"name":"answers","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"mapped","parameter":"Index","parameterType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]},"templateType":{"type":"reference","id":643,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","name":"Index"},"objectType":{"type":"reference","id":653,"name":"Values"}}],"name":"Answered"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}},{"id":659,"name":"values","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":653,"name":"Values"}}],"type":{"type":"reference","id":728,"name":"Interaction"}}]},{"id":691,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":37,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L37"}],"signatures":[{"id":692,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":749,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":748,"name":"Interaction.instantiationLocation"}},{"id":693,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":62,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L62"}],"signatures":[{"id":694,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":751,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","id":750,"name":"Interaction.toString"}},{"id":686,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":121,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/debugging/Debug.ts#L121"}],"signatures":[{"id":687,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":688,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":559,"name":"UsesAbilities"},{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":645,"name":"CollectsArtifacts"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":744,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","id":743,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[651,691,693,686]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/Debug.ts","line":74,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/debugging/Debug.ts#L74"}],"typeParameters":[{"id":695,"name":"Values","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":641,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Answerable"}}}],"extendedTypes":[{"type":"reference","id":728,"name":"Interaction"}],"permalink":"/api/core/class/Debug","previousId":531,"nextId":696},{"id":696,"name":"DebuggingResult","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"An interface describing debugging data received by the callback function passed to "},{"kind":"inline-tag","tag":"@apilink","text":"Debug.values"},{"kind":"text","text":"."}]},"children":[{"id":697,"name":"description","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":7,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/debugging/DebuggingResult.ts#L7"}],"type":{"type":"intrinsic","name":"string"}},{"id":698,"name":"value","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":8,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/debugging/DebuggingResult.ts#L8"}],"type":{"type":"reference","id":700,"name":"T"}},{"id":699,"name":"error","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":9,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/debugging/DebuggingResult.ts#L9"}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"groups":[{"title":"Properties","children":[697,698,699]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/DebuggingResult.ts","line":6,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/debugging/DebuggingResult.ts#L6"}],"typeParameters":[{"id":700,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"permalink":"/api/core/interface/DebuggingResult","previousId":650,"nextId":701},{"id":701,"name":"Log","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CollectsArtifacts|collect"},{"kind":"text","text":" arbitrary static values and answers to "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable|Answerables"},{"kind":"text","text":",\\nso that they can be sent to the "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember|StageCrewMembers"},{"kind":"text","text":"\\nand printed to the terminal by the "},{"kind":"inline-tag","tag":"@apilink","text":"ConsoleReporter"},{"kind":"text","text":"\\nor attached to the HTML report by the "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityBDDReporter"},{"kind":"text","text":".\\n\\n## Logging static and "},{"kind":"code","text":"`Answerable`"},{"kind":"text","text":" values\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log } from \'@serenity-js/core\'\\nimport { Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Laura\').attemptsTo(\\n  Log.the(\'Current page\', Page.current().title(), Page.current().url()),\\n)\\n```"}]},"children":[{"id":702,"name":"the","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":40,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/debugging/Log.ts#L40"}],"signatures":[{"id":703,"name":"the","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a new "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"Log"},{"kind":"text","text":"\\n\\nNote that this method accepts [variable number of arguments](https://www.typescriptlang.org/docs/handbook/functions.html#rest-parameters),\\nso that you can easily log several values at the same time."}]},"parameters":[{"id":704,"name":"items","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The items to be logged"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","id":728,"name":"Interaction"}}]},{"id":724,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":37,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L37"}],"signatures":[{"id":725,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":749,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":748,"name":"Interaction.instantiationLocation"}},{"id":726,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":62,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L62"}],"signatures":[{"id":727,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":751,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","id":750,"name":"Interaction.toString"}},{"id":719,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":57,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/debugging/Log.ts#L57"}],"signatures":[{"id":720,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":721,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":559,"name":"UsesAbilities"},{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":645,"name":"CollectsArtifacts"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":744,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","id":743,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[702,724,726,719]}],"sources":[{"fileName":"packages/core/src/screenplay/debugging/Log.ts","line":29,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/debugging/Log.ts#L29"}],"extendedTypes":[{"type":"reference","id":728,"name":"Interaction"}],"permalink":"/api/core/class/Log","previousId":696,"nextId":960},{"id":752,"name":"ChainableSetter","kind":256,"kindString":"Interface","flags":{},"children":[{"id":753,"name":"set","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":8,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/ChainableSetter.ts#L8"}],"signatures":[{"id":754,"name":"set","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":755,"name":"K","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":756,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":755,"name":"K"}},{"id":757,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":755,"name":"K"},"objectType":{"type":"reference","id":758,"name":"T"}}],"name":"Answerable"}}],"type":{"type":"intersection","types":[{"type":"reference","id":752,"typeArguments":[{"type":"reference","id":758,"name":"T"}],"name":"ChainableSetter"},{"type":"reference","id":728,"name":"Interaction"}]}}]}],"groups":[{"title":"Methods","children":[753]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/ChainableSetter.ts","line":7,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/ChainableSetter.ts#L7"}],"typeParameters":[{"id":758,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"implementedBy":[{"type":"reference","id":804,"name":"NotepadAdapter"}],"permalink":"/api/core/interface/ChainableSetter","previousId":1131,"nextId":759},{"id":759,"name":"Notepad","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Stores notes recorded by an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":".\\n\\nSee "},{"kind":"inline-tag","tag":"@apilink","text":"TakeNotes"},{"kind":"text","text":" and [notes](/api/core/function/notes) for more usage examples.\\n\\n## Sharing a notepad between actors\\n\\n"},{"kind":"code","text":"```ts\\nimport { Actor, Cast, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  auth: {\\n    username: string;\\n    password: string;\\n  }\\n}\\n\\nexport class Actors implements Cast {\\n\\n  // initialise a shared notepad when the Actors class is initialised\\n  private readonly sharedNotepad = Notepad.with<MyNotes>({\\n    auth: {\\n      username: \'test-user\',\\n      password: \'SuperSecretP@ssword!\',\\n    }\\n  });\\n\\n  prepare(actor: Actor): Actor {\\n    switch (actor.name) {\\n      case \'Alice\':\\n      case \'Bob\':\\n        // Alice and Bob will share their notepad\\n        return actor.whoCan(TakeNotes.using(this.sharedNotepad));\\n      default:\\n        // other actors will get their own notepads\\n        return actor.whoCan(TakeNotes.using(Notepad.empty<AuthCredentials>()));\\n    }\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TakeNotes"},{"kind":"text","text":"\\n- [notes](/api/core/function/notes)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"}]},"children":[{"id":760,"name":"empty","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":61,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/Notepad.ts#L61"}],"signatures":[{"id":761,"name":"empty","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a new empty Notepad."}]},"typeParameter":[{"id":762,"name":"N","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"type":{"type":"reference","id":759,"typeArguments":[{"type":"reference","id":762,"name":"N"}],"name":"Notepad"}}]},{"id":763,"name":"with","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":100,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/Notepad.ts#L100"}],"signatures":[{"id":764,"name":"with","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a new Notepad with an initial state.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  personalDetails: {\\n    firstName: string;\\n    lastName: string;\\n  }\\n}\\n\\nactorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(\\n      Notepad.with<MyNotes>({\\n        personalDetails: {\\n          firstName: \'Leonard\',\\n          lastName: \'McLaud\',\\n        }\\n      })\\n    )\\n  )\\n  .attemptsTo(\\n    Ensure.that(\\n      notes<MyNotes>().get(\'personalDetails\').firstName,\\n      equals(\'Leonard\')\\n    ),\\n  )\\n```"}]},"typeParameter":[{"id":765,"name":"N","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"parameters":[{"id":766,"name":"notes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":765,"name":"N"}}],"type":{"type":"reference","id":759,"typeArguments":[{"type":"reference","id":765,"name":"N"}],"name":"Notepad"}}]},{"id":767,"name":"notes","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":113,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/Notepad.ts#L113"}],"signatures":[{"id":768,"name":"notes","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" that simplifies access to the notes\\nstored in this notepad. Allows the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to record, read, and remove notes.\\n\\n#### Learn more\\n- [notes](/api/core/function/notes)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TakeNotes"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad"}]},"typeParameter":[{"id":769,"name":"N","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"type":{"type":"reference","id":804,"typeArguments":[{"type":"reference","id":769,"name":"N"}],"name":"NotepadAdapter"}}]},{"id":796,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":797,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":798,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","name":"TinyType.equals"}},{"id":799,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":800,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","name":"TinyType.toString"}},{"id":801,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":802,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","name":"TinyType.toJSON"}},{"id":775,"name":"has","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":136,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/Notepad.ts#L136"}],"signatures":[{"id":776,"name":"has","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" exists in the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"code","text":"`true`"},{"kind":"text","text":" if the note exists, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise"}]}]},"typeParameter":[{"id":777,"name":"Subject","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":778,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","id":777,"name":"Subject"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":779,"name":"get","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":153,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/Notepad.ts#L153"}],"signatures":[{"id":780,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves a note, identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":", from the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The value of the previously recorded note."}]},{"tag":"@throws","content":[{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n Throws a "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":" if the note with a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":"\\n has never been recorded."}]}]},"typeParameter":[{"id":781,"name":"Subject","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":782,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","id":781,"name":"Subject"}}],"type":{"type":"indexedAccess","indexType":{"type":"reference","id":781,"name":"Subject"},"objectType":{"type":"reference","name":"Notes"}}}]},{"id":783,"name":"set","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":170,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/Notepad.ts#L170"}],"signatures":[{"id":784,"name":"set","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Stores a given "},{"kind":"code","text":"`value`"},{"kind":"text","text":" uniquely identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" in the notepad."}]},"typeParameter":[{"id":785,"name":"Subject","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":786,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","id":785,"name":"Subject"}},{"id":787,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to record."}]},"type":{"type":"indexedAccess","indexType":{"type":"reference","id":785,"name":"Subject"},"objectType":{"type":"reference","name":"Notes"}}}],"type":{"type":"reference","id":759,"typeArguments":[{"type":"reference","name":"Notes"}],"name":"Notepad"}}]},{"id":788,"name":"delete","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":184,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/Notepad.ts#L184"}],"signatures":[{"id":789,"name":"delete","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Removes the note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" from the notepad."}],"blockTags":[{"tag":"@returns","content":[{"kind":"code","text":"`true`"},{"kind":"text","text":" if the item in the Notepad object existed and has been removed,\\n "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"typeParameter":[{"id":790,"name":"Subject","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":791,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":790,"name":"Subject"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":792,"name":"clear","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":194,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/Notepad.ts#L194"}],"signatures":[{"id":793,"name":"clear","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Deletes all the notes stored in this notepad."}]},"type":{"type":"intrinsic","name":"void"}}]},{"id":794,"name":"size","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":205,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/Notepad.ts#L205"}],"signatures":[{"id":795,"name":"size","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the number of notes stored in the notepad."}]},"type":{"type":"intrinsic","name":"number"}}]}],"groups":[{"title":"Methods","children":[760,763,767,796,799,801,775,779,783,788,792,794]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/Notepad.ts","line":56,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/Notepad.ts#L56"}],"typeParameters":[{"id":803,"name":"Notes","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"extendedTypes":[{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Notepad","previousId":752,"nextId":804},{"id":804,"name":"NotepadAdapter","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style adapter for the "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad"},{"kind":"text","text":",\\nthat makes it easier for the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actors"},{"kind":"text","text":" to access its APIs.\\n\\nSee "},{"kind":"inline-tag","tag":"@apilink","text":"TakeNotes"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"notes"},{"kind":"text","text":" for more examples."}]},"children":[{"id":805,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":806,"name":"new NotepadAdapter","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":807,"name":"Notes","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"type":{"type":"reference","id":804,"typeArguments":[{"type":"reference","id":807,"name":"Notes"}],"name":"NotepadAdapter"}}]},{"id":808,"name":"has","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":35,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/NotepadAdapter.ts#L35"}],"signatures":[{"id":809,"name":"has","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" exists in the notepad.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad.has"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Question that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the note exists, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise"}]}]},"typeParameter":[{"id":810,"name":"Subject","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":811,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","id":810,"name":"Subject"}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter"}}]},{"id":812,"name":"get","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":57,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/NotepadAdapter.ts#L57"}],"signatures":[{"id":813,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves a note, identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":", from the notepad.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad.get"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"The value of the previously recorded note."}]},{"tag":"@throws","content":[{"kind":"text","text":"Throws a "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":" if the note with a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":"\\n has never been recorded."}]}]},"typeParameter":[{"id":814,"name":"Subject","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":815,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","id":814,"name":"Subject"}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":814,"name":"Subject"},"objectType":{"type":"reference","id":807,"name":"Notes"}}],"name":"QuestionAdapter"}}]},{"id":816,"name":"set","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":109,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/NotepadAdapter.ts#L109"}],"signatures":[{"id":817,"name":"set","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves a given "},{"kind":"code","text":"`Answerable<value>`"},{"kind":"text","text":" and stores it in the notepad,\\nuniquely identified by its "},{"kind":"code","text":"`subject`"},{"kind":"text","text":".\\n\\n**Pro tip:** calls to "},{"kind":"code","text":"`set`"},{"kind":"text","text":" can be chained and result in an accumulation\\nof values to be recorded in the "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad"},{"kind":"text","text":".\\nThose values are resolved and recorded when the "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"\\nreturned by this method is performed by an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":".\\n\\nIf a note identified by a given "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" is set multiple times,\\nthe last call wins.\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, notes, TakeNotes } from \'@serenity-js/core\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n interface MyNotes {\\n     stringNote: string;\\n     numberNote: number;\\n }\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad<MyNotes>());\\n  .attemptsTo(\\n\\n    notes<MyNotes>()\\n      .set(\'stringNote\', \'example\')\\n      .set(\'numberNote\', Promise.resolve(42))\\n      .set(\'stringNote\', \'another example\'),\\n\\n    Ensure.equal(notes().toJSON(), {\\n      firstNote: \'another example\',\\n      secondNote: 42,\\n    })\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad.set"}]},"typeParameter":[{"id":818,"name":"Subject","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":819,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A subject (name) that uniquely identifies a given note"}]},"type":{"type":"reference","id":818,"name":"Subject"}},{"id":820,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The value to record"}]},"type":{"type":"reference","id":641,"typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":818,"name":"Subject"},"objectType":{"type":"reference","id":807,"name":"Notes"}}],"name":"Answerable"}}],"type":{"type":"intersection","types":[{"type":"reference","id":752,"typeArguments":[{"type":"reference","id":807,"name":"Notes"}],"name":"ChainableSetter"},{"type":"reference","id":728,"name":"Interaction"}]},"implementationOf":{"type":"reference","id":754,"name":"ChainableSetter.set"}}],"implementationOf":{"type":"reference","id":753,"name":"ChainableSetter.set"}},{"id":821,"name":"delete","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":179,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/NotepadAdapter.ts#L179"}],"signatures":[{"id":822,"name":"delete","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Removes the note identified by "},{"kind":"code","text":"`subject`"},{"kind":"text","text":" from the notepad.\\n\\n#### Using as an "},{"kind":"code","text":"`Interaction`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, Log, notes } from \'@serenity-js/core\'\\nimport { isPresent } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n\\n    notes<MyNotes>().delete(\'myNote\'),\\n\\n    Check.whether(notes<MyNotes>().get(\'myNote\'), isPresent())\\n      .andIfSo(\\n        Log.the(\'myNote is present\'),\\n      )\\n      .otherwise(\\n        Log.the(\'myNote was deleted\'),\\n      )\\n  )\\n  // logs: myNote was deleted\\n```"},{"kind":"text","text":"\\n\\n#### Using as a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, Log, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n\\n    Check.whether(notes<MyNotes>().delete(\'myNote\'), isTrue())\\n      .andIfSo(\\n        Log.the(\'myNote was deleted\'),\\n      )\\n      .otherwise(\\n        Log.the(\'myNote could not be deleted because it was not set\'),\\n      )\\n  )\\n  // logs: myNote was deleted\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad.delete"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"When used as a "},{"kind":"code","text":"`Question`"},{"kind":"text","text":", resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the item in the Notepad object existed and has been removed,\\n "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]}]},"typeParameter":[{"id":823,"name":"Subject","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":824,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":823,"name":"Subject"}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"QuestionAdapter"}}]},{"id":825,"name":"clear","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":209,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/NotepadAdapter.ts#L209"}],"signatures":[{"id":826,"name":"clear","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Deletes all the notes stored in this notepad.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n    Log.the(notes<MyNotes>().size()),   // emits 1\\n    notes<MyNotes>().clear(),\\n    Log.the(notes<MyNotes>().size()),   // emits 0\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad.clear"}]},"type":{"type":"reference","id":728,"name":"Interaction"}}]},{"id":827,"name":"size","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":238,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/NotepadAdapter.ts#L238"}],"signatures":[{"id":828,"name":"size","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the number of notes stored in the notepad.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\nimport { isTrue } from \'@serenity-js/assertions\'\\n\\ninterface MyNotes {\\n  myNote: string;\\n}\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.empty<MyNotes>()))\\n  .attemptsTo(\\n    Log.the(notes<MyNotes>().size()),   // emits 0\\n    notes<MyNotes>().set(\'myNote\', \'example value\'),\\n    Log.the(notes<MyNotes>().size()),   // emits 1\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad.size"}]},"type":{"type":"reference","id":939,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter"}}]},{"id":829,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":275,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/NotepadAdapter.ts#L275"}],"signatures":[{"id":830,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces a "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" that resolves to a "},{"kind":"code","text":"`JSONObject`"},{"kind":"text","text":"\\nrepresenting the resolved notes stored in the notepad.\\n\\nNote that serialisation to JSON will simplify some data types that might not be serialisable by default,\\nbut are commonly used in data structures representing actor\'s notes.\\nFor example a "},{"kind":"inline-tag","tag":"@apilink","text":"Map"},{"kind":"text","text":" will be serialised as a regular JSON object, a "},{"kind":"inline-tag","tag":"@apilink","text":"Set"},{"kind":"text","text":" will be serialised as "},{"kind":"inline-tag","tag":"@apilink","text":"Array"},{"kind":"text","text":".\\n\\nAdditionally, notepad assumes that the data structure you use it with does not contain cyclic references.\\n\\nTo learn more about the serialisation mechanism used by the notepad, please refer to [TinyTypes documentation](https://jan-molak.github.io/tiny-types/).\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, notes } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Alice\')\\n  .whoCan(TakeNotes.using(Notepad.with({\\n    aSet: new Set([\'apples\', \'bananas\', \'cucumbers\']),\\n    aPromisedValue: Promise.resolve(42),\\n    aString: \'example\'\\n  })))\\n  .attemptsTo(\\n    Log.the(notes().toJSON()),\\n  )\\n  // emits: {\\n  //    aSet: [\'apples\', \'bananas\', \'cucumbers\']\\n  //    aPromisedValue: 42,\\n  //    aString: \'example\',\\n  // }\\n```"}]},"type":{"type":"reference","id":939,"typeArguments":[{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}],"name":"QuestionAdapter"}}]},{"id":831,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":284,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/NotepadAdapter.ts#L284"}],"signatures":[{"id":832,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Constructors","children":[805]},{"title":"Methods","children":[808,812,816,821,825,827,829,831]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/NotepadAdapter.ts","line":21,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/NotepadAdapter.ts#L21"}],"typeParameters":[{"id":833,"name":"Notes","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"implementedTypes":[{"type":"reference","id":752,"typeArguments":[{"type":"reference","id":807,"name":"Notes"}],"name":"ChainableSetter"}],"permalink":"/api/core/class/NotepadAdapter","previousId":759,"nextId":837},{"id":837,"name":"TakeNotes","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" that enables an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to remember information\\nto be recalled during a test scenario.\\n\\nUnder the hood, "},{"kind":"inline-tag","tag":"@apilink","text":"TakeNotes"},{"kind":"text","text":" uses a "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad"},{"kind":"text","text":", which state\\ncan be populated both during initialisation or while the test scenario is executed.\\nPopulating the notepad when it\'s initialised can be useful to associate authentication credentials\\nor personal details with a given actor, while dynamic recording of notes during a test scenario\\ncan be useful when the data to be recorded is not known upfront - for example when we want\\nthe actor to remember a JWT stored in the browser and then use it when sending API requests.\\n\\n**Pro tip:** "},{"kind":"inline-tag","tag":"@apilink","text":"TakeNotes"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"notes"},{"kind":"text","text":" can be typed\\nusing [TypeScript generics](https://www.typescriptlang.org/docs/handbook/2/generics.html)\\nto help you avoid typos when specifying note names.\\n\\nSee [notes](/api/core/function/notes) and "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad"},{"kind":"text","text":" for more usage examples.\\n\\n## Remembering and retrieving a value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad())\\n  .attemptsTo(\\n    notes().set(\'my_note\', \'some value\'),\\n    Log.the(notes().get(\'my_note\')),\\n    // emits \'some value\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using generics\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\n interface MyNotes {\\n   personalDetails: {\\n     firstName: string;\\n     lastName: string;\\n   }\\n }\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad<MyNotes>())\\n  .attemptsTo(\\n    Log.the(notes<MyNotes>().has(\'personalDetails\')),\\n    // emits false\\n\\n    Log.the(notes<MyNotes>().get(\'personalDetails\').isPresent()),\\n    // emits false\\n\\n    notes<MyNotes>().set(\'personalDetails\', { firstName: \'Leonard\', lastName: \'McLaud\' }),\\n\\n    Log.the(notes<MyNotes>().has(\'personalDetails\')),\\n    // emits true\\n\\n    Log.the(notes<MyNotes>().get(\'personalDetails\').isPresent()),\\n    // emits true\\n\\n    Log.the(notes().get(\'personalDetails\').firstName),\\n    // emits \'Leonard\'\\n\\n    Log.the(notes().get(\'personalDetails\').firstName.toLocaleUpperCase()),\\n    // emits \'LEONARD\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Populating the notepad with initial state\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Note, Notepad, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  firstName: string;\\n  lastName: string;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(Notepad.with<MyNotes>({\\n      firstName: \'Leonard\',\\n      lastName: \'McLaud\',\\n    }))\\n  )\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'lastName\', \'Shelby\'),\\n    Log.the(notes().get(\'firstName\')),\\n    // emits \'Leonard\'\\n\\n    Log.the(notes().get(\'lastName\')),\\n    // emits \'Shelby\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Recording a dynamic note\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { By, Text, PageElement } from \'@serenity-js/web\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\'\\n\\ninterface OnlineShoppingNotes {\\n  promoCode: string;\\n}\\n\\nconst promoCodeBanner = () =>\\n  PageElement.located(By.css(\'[data-testid=\\"promo-code\\"]\'))\\n    .describedAs(\'promo code\');\\n\\nconst promoCodeInput = () =>\\n  PageElement.located(By.css(\'[data-testid=\\"promo-code-input\\"]\'))\\n    .describedAs(\'promo code field\');\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    BrowseTheWebWithWebdriverIO.using(browser),\\n    TakeNotes.using(Notepad.empty<OnlineShoppingNotes>())\\n  )\\n  .attemptsTo(\\n    notes<OnlineShoppingNotes>().set(\'promoCode\', Text.of(promoCode()),\\n    // ...\\n    Enter.theValue(notes<OnlineShoppingNotes>().get(\'promoCode\'))\\n      .into(promoCodeInput())\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Clearing a notepad before each test scenario (Mocha)\\n\\n"},{"kind":"code","text":"```ts\\nimport \'mocha\';\\n\\nbeforeEach(() =>\\n  actorCalled(\'Leonard\')\\n    .attemptsTo(\\n      notes().clear(),\\n    ))\\n```"},{"kind":"text","text":"\\n\\n## Clearing a notepad before each test scenario (Cucumber)\\n\\n"},{"kind":"code","text":"```ts\\nimport { Before } from \'@cucumber/cucumber\'\\n\\nBefore(() =>\\n  actorCalled(\'Leonard\')\\n    .attemptsTo(\\n      notes().clear(),\\n    ));\\n```"},{"kind":"text","text":"\\n\\n## Importing notes from an API response\\n\\n"},{"kind":"code","text":"```ts\\n // given an example API:\\n //   GET /generate-test-user\\n // which returns:\\n //   { \\"first_name\\": \\"Leonard\\", \\"last_name\\": \\"Shelby\\" }\\n\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, Send } from \'@serenity-js/rest\'\\n\\ninterface PersonalDetails {\\n  first_name: string;\\n  last_name: string;\\n}\\n\\ninterface MyNotes {\\n  personalDetails?: PersonalDetails;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    CallAnApi.at(\'https://api.example.org/\'),\\n    TakeNotes.using(Notepad.empty<MyNotes>())\\n  )\\n  .attemptsTo(\\n     Send.a(GetRequest.to(\'/generate-test-user\')),\\n     notes<MyNotes>().set(\'personalDetails\', LastResponse.body<PersonalDetails>()),\\n\\n     Log.the(notes<MyNotes>().get(\'personalDetails\').first_name),    // emits \'Leonard\'\\n     Log.the(notes<MyNotes>().get(\'personalDetails\').last_name),     // emits \'Shelby\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using the QuestionAdapter\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, Notepad, notes, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface AuthCredentials {\\n  username?: string;\\n  password?: string;\\n}\\n\\ninterface MyNotes {\\n  auth: AuthCredentials;\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(\\n    TakeNotes.using(\\n      Notepad.with<MyNotes>({     // typed initial state\\n        auth: {\\n          username: \'leonard@example.org\',\\n          password: \'SuperSecretP@ssword!\',\\n        }\\n      })\\n    )\\n  )\\n  .attemptsTo(\\n    Log.the(\\n      notes<MyNotes>()          // typed notes\\n        .get(\'auth\')            // returns QuestionAdapter<AuthCredentials>\\n        .password               // returns QuestionAdapter<string>\\n        .charAt(0)\\n        .toLocaleLowerCase(),   // emits \\"s\\"\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [notes](/api/core/function/notes)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad"}]},"children":[{"id":838,"name":"usingAnEmptyNotepad","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":237,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/TakeNotes.ts#L237"}],"signatures":[{"id":839,"name":"usingAnEmptyNotepad","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Initialises an "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"TakeNotes"},{"kind":"text","text":" with "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad.empty"},{"kind":"text","text":"."}]},"typeParameter":[{"id":840,"name":"N","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"type":{"type":"reference","id":837,"typeArguments":[{"type":"reference","id":840,"name":"N"}],"name":"TakeNotes"}}]},{"id":841,"name":"using","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":247,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/TakeNotes.ts#L247"}],"signatures":[{"id":842,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Initialises an "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"TakeNotes"},{"kind":"text","text":" using\\na "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad.with"},{"kind":"text","text":" some initial state."}]},"typeParameter":[{"id":843,"name":"N","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"parameters":[{"id":844,"name":"notepad","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":759,"typeArguments":[{"type":"reference","id":843,"name":"N"}],"name":"Notepad"}}],"type":{"type":"reference","id":837,"typeArguments":[{"type":"reference","id":843,"name":"N"}],"name":"TakeNotes"}}]},{"id":850,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/TakeNotes.ts#L254"}],"signatures":[{"id":851,"name":"new TakeNotes","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":852,"name":"Notes_Type","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"parameters":[{"id":853,"name":"notepad","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":759,"typeArguments":[{"type":"reference","id":852,"name":"Notes_Type"}],"name":"Notepad"}}],"type":{"type":"reference","id":837,"typeArguments":[{"type":"reference","id":852,"name":"Notes_Type"}],"name":"TakeNotes"},"overwrites":{"type":"reference","id":490,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","id":489,"name":"Ability.constructor"}},{"id":854,"name":"notepad","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":254,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/TakeNotes.ts#L254"}],"type":{"type":"reference","id":759,"typeArguments":[{"type":"reference","id":852,"name":"Notes_Type"}],"name":"Notepad"}}],"groups":[{"title":"Methods","children":[838,841]},{"title":"Constructors","children":[850]},{"title":"Properties","children":[854]}],"sources":[{"fileName":"packages/core/src/screenplay/notes/TakeNotes.ts","line":232,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/TakeNotes.ts#L232"}],"typeParameters":[{"id":855,"name":"Notes_Type","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"extendedTypes":[{"type":"reference","id":483,"name":"Ability"}],"permalink":"/api/core/class/TakeNotes","previousId":804,"nextId":834},{"id":834,"name":"notes","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/notes/notes.ts","line":118,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/notes/notes.ts#L118"}],"signatures":[{"id":835,"name":"notes","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Alias for "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad.notes"},{"kind":"text","text":".\\n\\n**Pro tip:** "},{"kind":"code","text":"`notes<T>().get(subject)`"},{"kind":"text","text":" returns a "},{"kind":"inline-tag","tag":"@apilink","text":"NotepadAdapter"},{"kind":"text","text":" to make accessing the APIs\\nof the underlying type easier. Check "},{"kind":"inline-tag","tag":"@apilink","text":"NotepadAdapter"},{"kind":"text","text":" for more examples.\\n\\n## Working with untyped notes\\n\\nYou can use "},{"kind":"code","text":"`notes<T>()`"},{"kind":"text","text":" without parameterising it with an [interface](https://www.typescriptlang.org/docs/handbook/interfaces.html)\\ndescribing the structure of your notes.\\n\\n**Note:** this approach _is not type-safe_ and the type-safe alternative presented below should be used in most cases.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\';\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.usingAnEmptyNotepad())\\n  .attemptsTo(\\n    notes().set(\'my_note\', \'some value\'),\\n\\n    Log.the(notes().get(\'my_note\')),\\n    // emits \\"some value\\"\\n\\n    Log.the(notes().get(\'my_note\').toLocaleUpperCase()),\\n    // emits \\"SOME VALUE\\"\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Working with typed notes\\n\\nThe **recommended** way to use "},{"kind":"code","text":"`notes<T>()`"},{"kind":"text","text":" is to parameterise it\\nwith an [interface](https://www.typescriptlang.org/docs/handbook/interfaces.html)\\ndescribing the structure of your notes.\\n\\n**Note:** this approach _is type-safe_.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\';\\n\\ninterface MyNotes {\\n  username: string;\\n  token?: string;     // optional value\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.with<MyNotes>({\\n    username: \'Leonard.McLaud@example.org\',\\n  }))\\n  .attemptsTo(\\n    notes<MyNotes>().set(\'token\', \'my-auth-token\')\\n\\n    Log.the(notes<MyNotes>().get(\'token\').length),\\n    // emits 13\\n\\n    Log.the(notes<MyNotes>().get(\'username\').toLocaleLowerCase()),\\n    // emits \'leonard.mclaud@example.org\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Checking if a note is present\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check, notes, TakeNotes } from \'@serenity-js/core\'\\nimport { isPresent } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.empty()))\\n  .attemptsTo(\\n    Check.whether(notes().get(\'token\'), isPresent())\\n     .andIfSo(\\n       Authenticate.using(notes().get(\'token\')),\\n     )\\n     .otherwise(\\n       SignIn.using(\'username\', \'password\'),\\n     )\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Working with complex data structures\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Log, notes, TakeNotes } from \'@serenity-js/core\'\\n\\ninterface MyNotes {\\n  recordedItems: string[];\\n}\\n\\nawait actorCalled(\'Leonard\')\\n  .whoCan(TakeNotes.using(Notepad.with<MyNotes>({\\n    recordedItems: [],\\n  }))\\n  .attemptsTo(\\n     // push 3 items\\n     notes().get(\'recordedItems\').push(\'apples\'),\\n     notes().get(\'recordedItems\').push(\'cucumbers\'),\\n     notes().get(\'recordedItems\').push(\'bananas\'),\\n\\n     // use QuestionAdapter to access Array.sort()\\n     notes().get(\'recordedItems\').sort(),\\n\\n     Log.the(notes().get(\'recordedItems\')),\\n     // emits \'apples\', \'bananas\', \'cucumbers\'\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"NotepadAdapter"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad.notes"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"}]},"typeParameter":[{"id":836,"name":"N","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"type":{"type":"reference","id":804,"typeArguments":[{"type":"reference","id":836,"name":"N"}],"name":"NotepadAdapter"}}],"permalink":"/api/core/function/notes","previousId":837,"nextId":56},{"id":947,"name":"AnswersQuestions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" who can answer a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":" about the system under test.\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"}]},"children":[{"id":948,"name":"answer","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":19,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/AnswersQuestions.ts#L19"}],"signatures":[{"id":949,"name":"answer","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Makes the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" evaluate an "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\nand return the value it holds."}]},"typeParameter":[{"id":950,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":951,"name":"answerable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":950,"name":"T"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":950,"name":"T"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Methods","children":[948]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/AnswersQuestions.ts","line":13,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/AnswersQuestions.ts#L13"}],"implementedBy":[{"type":"reference","id":587,"name":"Actor"}],"permalink":"/api/core/interface/AnswersQuestions","previousId":645,"nextId":125},{"id":952,"name":"ChainableMetaQuestion","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"A chainable meta-question is a "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"},{"kind":"text","text":" that can be answered\\nin the context of another "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":",\\nand form a chain of transformations.\\n\\n"},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion|Meta questions"},{"kind":"text","text":" are typically used when filtering a "},{"kind":"inline-tag","tag":"@apilink","text":"List"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"List"}]},"children":[{"id":953,"name":"of","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":29,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/ChainableMetaQuestion.ts#L29"}],"signatures":[{"id":954,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" in the context of another "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\nand returns another "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" ready for further chaining.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"List"}]},"parameters":[{"id":955,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":958,"name":"Supported_Context_Type"}],"name":"Answerable"}}],"type":{"type":"intersection","types":[{"type":"reference","id":959,"name":"Returned_Question_Type"},{"type":"reference","id":952,"typeArguments":[{"type":"reference","id":958,"name":"Supported_Context_Type"},{"type":"reference","id":959,"name":"Returned_Question_Type"}],"name":"ChainableMetaQuestion"}]},"overwrites":{"type":"reference","id":1358,"name":"MetaQuestion.of"}}],"overwrites":{"type":"reference","id":1357,"name":"MetaQuestion.of"}},{"id":956,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/MetaQuestion.ts#L36"}],"signatures":[{"id":957,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of this "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"},{"kind":"text","text":",\\ntypically involving the description of the subject.\\n\\nFor example, a description of a meta question obout \\"the text of an element\\"\\nwould be "},{"kind":"code","text":"`text of ${ element.toString() }`"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":1361,"name":"MetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","id":1360,"name":"MetaQuestion.toString"}}],"groups":[{"title":"Methods","children":[953,956]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/ChainableMetaQuestion.ts","line":17,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/ChainableMetaQuestion.ts#L17"}],"typeParameters":[{"id":958,"name":"Supported_Context_Type","kind":131072,"kindString":"Type parameter","flags":{}},{"id":959,"name":"Returned_Question_Type","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":859,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question"}}],"extendedTypes":[{"type":"reference","id":1356,"typeArguments":[{"type":"reference","id":958,"name":"Supported_Context_Type"},{"type":"intersection","types":[{"type":"reference","id":959,"name":"Returned_Question_Type"},{"type":"reference","id":952,"typeArguments":[{"type":"reference","id":958,"name":"Supported_Context_Type"},{"type":"reference","id":959,"name":"Returned_Question_Type"}],"name":"ChainableMetaQuestion"}]}],"name":"MetaQuestion"}],"implementedBy":[{"type":"reference","id":1248,"name":"MetaList"}],"permalink":"/api/core/interface/ChainableMetaQuestion","previousId":1657,"nextId":1149},{"id":960,"name":"Check","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"A [flow control statement](https://en.wikipedia.org/wiki/Control_flow)\\nthat enables an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to decide between two alternate series of "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|activities"},{"kind":"text","text":".\\n\\nThink of it as a Screenplay Pattern equivalent of the traditional "},{"kind":"code","text":"`if`"},{"kind":"text","text":" statement.\\n\\n## Choose between two alternative sequences of activities\\n\\n"},{"kind":"code","text":"```ts\\nimport { equals } from \'@serenity-js/assertions\'\\nimport { actorCalled, Check } from \'@serenity-js/core\'\\n\\nawait actorCalled(\'Chuck\').attemptsTo(\\n  Check.whether(process.env.MODE, equals(\'prod\'))\\n    .andIfSo(\\n      LogInAsProdUser(),\\n    )\\n    .otherwise(\\n      LogInAsTestUser(),\\n    )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Perform a sequence of activities when a condition is met\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check } from \'@serenity-js/core\'\\nimport { isVisible } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Chuck\').attemptsTo(\\n  Check.whether(CookieConsentBanner(), isVisible())\\n    .andIfSo(\\n        AcceptNecessaryCookies(),\\n    )\\n)\\n```"}]},"children":[{"id":961,"name":"whether","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Check.ts#L51"}],"signatures":[{"id":962,"name":"whether","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":963,"name":"Actual_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":964,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":963,"name":"Actual_Type"}],"name":"Answerable"}},{"id":965,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1008,"typeArguments":[{"type":"reference","id":963,"name":"Actual_Type"}],"name":"Expectation"}}],"type":{"type":"reflection","declaration":{"id":966,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":967,"name":"andIfSo","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":107,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Check.ts#L51"}],"type":{"type":"reflection","declaration":{"id":968,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":116,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Check.ts#L51"}],"signatures":[{"id":969,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":970,"name":"activities","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":569,"name":"Activity"}}}],"type":{"type":"reference","id":960,"typeArguments":[{"type":"reference","id":963,"name":"Actual_Type"}],"name":"Check"}}]}}}],"groups":[{"title":"Properties","children":[967]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":51,"character":105,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Check.ts#L51"}]}}}]},{"id":997,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":37,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L37"}],"signatures":[{"id":998,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":1400,"name":"Task.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":1399,"name":"Task.instantiationLocation"}},{"id":999,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":62,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L62"}],"signatures":[{"id":1000,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":1402,"name":"Task.toString"}}],"inheritedFrom":{"type":"reference","id":1401,"name":"Task.toString"}},{"id":989,"name":"otherwise","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":71,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Check.ts#L71"}],"signatures":[{"id":990,"name":"otherwise","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":991,"name":"alternativeActivities","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|activities"},{"kind":"text","text":" to perform when the "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" is not met."}]},"type":{"type":"array","elementType":{"type":"reference","id":569,"name":"Activity"}}}],"type":{"type":"reference","id":1382,"name":"Task"}}]},{"id":992,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":78,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Check.ts#L78"}],"signatures":[{"id":993,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Task"},{"kind":"text","text":"."}]},"parameters":[{"id":994,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"}]},"type":{"type":"intersection","types":[{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":564,"name":"PerformsActivities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":1395,"name":"Task.performAs"}}],"overwrites":{"type":"reference","id":1394,"name":"Task.performAs"}}],"groups":[{"title":"Methods","children":[961,997,999,989,992]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Check.ts","line":49,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Check.ts#L49"}],"typeParameters":[{"id":1001,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","id":1382,"name":"Task"}],"permalink":"/api/core/class/Check","previousId":701,"nextId":477},{"id":1002,"name":"Predicate","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":11,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L11"}],"typeParameters":[{"id":1007,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reflection","declaration":{"id":1003,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":11,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L11"}],"signatures":[{"id":1004,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1005,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":947,"name":"AnswersQuestions"}},{"id":1006,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":1007,"name":"Actual"}],"name":"Answerable"}}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"reference","id":1131,"name":"ExpectationOutcome"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},{"type":"reference","id":1131,"name":"ExpectationOutcome"}]}}]}},"permalink":"/api/core#Predicate","previousId":427,"nextId":1008},{"id":1008,"name":"Expectation","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Defines an expectation to be used with "},{"kind":"inline-tag","tag":"@apilink","text":"@apilink Wait.until"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Check.whether"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Ensure.that"},{"kind":"text","text":"\\nand as part of the Page Element Query Language with "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements.where"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"List.where"},{"kind":"text","text":"."}]},"children":[{"id":1009,"name":"define","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":109,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L109"}],"signatures":[{"id":1010,"name":"define","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A factory method to that makes defining custom "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectations"},{"kind":"text","text":" easier\\n\\n#### Defining a custom expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { Expectation } from \'@serenity-js/core\'\\nimport { PageElement } from \'@serenity-js/web\'\\n\\nconst isEmpty = Expectation.define(\\n  \'isEmpty\',         // name of the expectation function to be used when producing an AssertionError\\n  \'become empty\',    // human-readable description of the relationship between expected and actual values\\n  async (actual: PageElement) => {\\n    const value = await actual.value();\\n    return value.length === 0;\\n  }\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in an assertion\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Clear, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Clear.the(nameField()),\\n  Ensure.that(nameField(), isEmpty())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a control flow statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Check, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Check.whether(nameField(), isEmpty())\\n    .andIfSo(\\n      Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a synchronisation statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n\\n  Wait.upTo(Duration.ofSeconds(2))\\n    .until(nameField(), not(isEmpty())),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ensure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Check"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Wait"}]},"typeParameter":[{"id":1011,"name":"Actual_Type","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1012,"name":"PredicateArguments","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"unknown"}}}],"parameters":[{"id":1013,"name":"functionName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Name of the expectation function to be used when producing an "},{"kind":"inline-tag","tag":"@apilink","text":"AssertionError"}]},"type":{"type":"intrinsic","name":"string"}},{"id":1014,"name":"relationship","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the relationship between the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" values.\\n Used when reporting "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|activities"},{"kind":"text","text":" performed by an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":1015,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":111,"character":23,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L111"}],"signatures":[{"id":1016,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1017,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1012,"name":"PredicateArguments"}],"name":"AnswerableArguments"}}],"type":{"type":"intrinsic","name":"string"}}]}}]}},{"id":1018,"name":"predicate","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1019,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":112,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L112"}],"signatures":[{"id":1020,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1021,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1011,"name":"Actual_Type"}},{"id":1022,"name":"predicateArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":1012,"name":"PredicateArguments"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reflection","declaration":{"id":1023,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":113,"character":7,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L113"}],"signatures":[{"id":1024,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A factory method to that makes defining custom "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectations"},{"kind":"text","text":" easier\\n\\n#### Defining a custom expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { Expectation } from \'@serenity-js/core\'\\nimport { PageElement } from \'@serenity-js/web\'\\n\\nconst isEmpty = Expectation.define(\\n  \'isEmpty\',         // name of the expectation function to be used when producing an AssertionError\\n  \'become empty\',    // human-readable description of the relationship between expected and actual values\\n  async (actual: PageElement) => {\\n    const value = await actual.value();\\n    return value.length === 0;\\n  }\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in an assertion\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Clear, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Clear.the(nameField()),\\n  Ensure.that(nameField(), isEmpty())\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a control flow statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Check, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Check.whether(nameField(), isEmpty())\\n    .andIfSo(\\n      Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Using a custom expectation in a synchronisation statement\\n\\n"},{"kind":"code","text":"```ts\\nimport { not } from \'@serenity-js/assertions\'\\nimport { actorCalled, Duration, Wait } from \'@serenity-js/core\'\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst nameField = () =>\\n  PageElement.located(By.css(\'[data-test-id=\\"name\\"]\')).describedAs(\'name field\');\\n\\nawait actorCalled(\'Izzy\').attemptsTo(\\n  Enter.theValue(actorInTheSpotlight().name).into(nameField()),\\n\\n  Wait.upTo(Duration.ofSeconds(2))\\n    .until(nameField(), not(isEmpty())),\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ensure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Check"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Wait"}]},"parameters":[{"id":1025,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":1012,"name":"PredicateArguments"}],"name":"AnswerableArguments"}}],"type":{"type":"reference","id":1008,"typeArguments":[{"type":"reference","id":1011,"name":"Actual_Type"}],"name":"Expectation"}}]}}}]},{"id":1026,"name":"thatActualShould","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":172,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L172"}],"signatures":[{"id":1027,"name":"thatActualShould","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Used to define a simple "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":"\\n\\n#### Simple parameterised expectation\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Expectation } from \'@serenity-js/core\'\\n import { Ensure } from \'@serenity-js/assertions\'\\n\\n function isDivisibleBy(expected: Answerable<number>): Expectation<number> {\\n     return Expectation.thatActualShould<number, number>(\'have value divisible by\', expected)\\n         .soThat((actualValue, expectedValue) => actualValue % expectedValue === 0);\\n }\\n\\n await actorCalled(\'Erica\').attemptsTo(\\n     Ensure.that(4, isDivisibleBy(2)),\\n )\\n```"}]},"typeParameter":[{"id":1028,"name":"Expected_Type","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1029,"name":"Actual_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1030,"name":"relationshipName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Name of the relationship between the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":". Use format "},{"kind":"code","text":"`have value <adjective>`"},{"kind":"text","text":"\\n so that the description works in both positive and negative contexts, e.g. "},{"kind":"code","text":"`Waited until 5 does have value greater than 2`"},{"kind":"text","text":",\\n "},{"kind":"code","text":"`Expected 5 to not have value greater than 2`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}},{"id":1031,"name":"expectedValue","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":1028,"name":"Expected_Type"}],"name":"Answerable"}}],"type":{"type":"reflection","declaration":{"id":1032,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1033,"name":"soThat","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":173,"character":8,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L173"}],"type":{"type":"reflection","declaration":{"id":1034,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":173,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L173"}],"signatures":[{"id":1035,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1036,"name":"simplifiedPredicate","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1037,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":173,"character":38,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L173"}],"signatures":[{"id":1038,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1039,"name":"actualValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1029,"name":"Actual_Type"}},{"id":1040,"name":"expectedValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1028,"name":"Expected_Type"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"boolean"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","id":1008,"typeArguments":[{"type":"reference","id":1029,"name":"Actual_Type"}],"name":"Expectation"}}]}}}],"groups":[{"title":"Properties","children":[1033]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":172,"character":126,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L172"}]}}}]},{"id":1041,"name":"to","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":228,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L228"}],"signatures":[{"id":1042,"name":"to","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Used to compose "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectations"},{"kind":"text","text":".\\n\\n#### Composing "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectations"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation } from \'@serenity-js/core\'\\nimport { Ensure, and, or, isGreaterThan, isLessThan, equals  } from \'@serenity-js/assertions\'\\n\\nfunction isWithin(lowerBound: number, upperBound: number) {\\n  return Expectation\\n    .to(`have value within ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(isGreaterThan(lowerBound), equals(lowerBound)),\\n        or(isLessThan(upperBound), equals(upperBound)),\\n      )\\n    )\\n }\\n\\n await actorCalled(\'Erica\').attemptsTo(\\n     Ensure.that(5, isWithin(3, 6)),\\n )\\n```"}]},"typeParameter":[{"id":1043,"name":"Actual_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1044,"name":"relationshipName","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Name of the relationship between the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":". Use format "},{"kind":"code","text":"`have value <adjective>`"},{"kind":"text","text":"\\n so that the description works in both positive and negative contexts, e.g. "},{"kind":"code","text":"`Waited until 5 does have value greater than 2`"},{"kind":"text","text":",\\n "},{"kind":"code","text":"`Expected 5 to not have value greater than 2`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reflection","declaration":{"id":1045,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1046,"name":"soThatActual","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":229,"character":8,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L229"}],"type":{"type":"reflection","declaration":{"id":1047,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":229,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L229"}],"signatures":[{"id":1048,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1049,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1008,"typeArguments":[{"type":"reference","id":1043,"name":"Actual_Type"}],"name":"Expectation"}}],"type":{"type":"reference","id":1008,"typeArguments":[{"type":"reference","id":1043,"name":"Actual_Type"}],"name":"Expectation"}}]}}}],"groups":[{"title":"Properties","children":[1046]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":228,"character":54,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L228"}]}}}]},{"id":1059,"name":"isMetFor","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":258,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L258"}],"signatures":[{"id":1060,"name":"isMetFor","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" that resolves to "},{"kind":"inline-tag","tag":"@apilink","text":"ExpectationOutcome"},{"kind":"text","text":"\\nindicating that the "},{"kind":"inline-tag","tag":"@apilink","text":"ExpectationMet|expectation was met"},{"kind":"text","text":"\\nor that the "},{"kind":"inline-tag","tag":"@apilink","text":"ExpectationNotMet|expectation was not met"}]},"parameters":[{"id":1061,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","name":"Actual"}],"name":"Answerable"}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"reference","id":1131,"name":"ExpectationOutcome"}],"name":"QuestionAdapter"}}]},{"id":1062,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":265,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L265"}],"signatures":[{"id":1063,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":1064,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":1008,"typeArguments":[{"type":"reference","name":"Actual"}],"name":"Expectation"}}]},{"id":1065,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":273,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L273"}],"signatures":[{"id":1066,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[1009,1026,1041,1059,1062,1065]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Expectation.ts","line":22,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Expectation.ts#L22"}],"typeParameters":[{"id":1067,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"permalink":"/api/core/class/Expectation","previousId":1002,"nextId":1068},{"id":1149,"name":"List","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style wrapper around "},{"kind":"inline-tag","tag":"@apilink","text":"Array"},{"kind":"text","text":"\\nand array-like structures - see "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements"},{"kind":"text","text":"."}]},"children":[{"id":1150,"name":"of","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":22,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L22"},{"fileName":"packages/core/src/screenplay/questions/List.ts","line":23,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L23"},{"fileName":"packages/core/src/screenplay/questions/List.ts","line":24,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L24"}],"signatures":[{"id":1151,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1152,"name":"IT","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1153,"name":"CT","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1154,"name":"RQT","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","id":859,"typeArguments":[{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1152,"name":"IT"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"},{"type":"reference","id":859,"typeArguments":[{"type":"array","elementType":{"type":"reference","id":1152,"name":"IT"}}],"name":"Question"}]}}],"parameters":[{"id":1155,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"Object"}}],"type":{"type":"reference","id":1248,"typeArguments":[{"type":"reference","id":1153,"name":"CT"},{"type":"reference","id":1152,"name":"IT"}],"name":"MetaList"}},{"id":1156,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1157,"name":"IT","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1158,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"array","elementType":{"type":"reference","id":1157,"name":"IT"}}],"name":"Answerable"}}],"type":{"type":"reference","id":1149,"typeArguments":[{"type":"reference","id":1157,"name":"IT"}],"name":"List"}}]},{"id":1240,"name":"as","kind":2048,"kindString":"Method","flags":{"isPublic":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":419,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L419"}],"signatures":[{"id":1241,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":1242,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1243,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1244,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":419,"character":26,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L419"}],"signatures":[{"id":1245,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1246,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":1199,"name":"Item_Type"}}}],"type":{"type":"union","types":[{"type":"reference","id":921,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":921,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"reference","id":921,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","id":920,"name":"Question.as"}}],"inheritedFrom":{"type":"reference","id":919,"name":"Question.as"}},{"id":1197,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":32,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L32"}],"signatures":[{"id":1198,"name":"new List","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":1199,"name":"Item_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1200,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"array","elementType":{"type":"reference","id":1199,"name":"Item_Type"}}],"name":"Answerable"}}],"type":{"type":"reference","id":1149,"typeArguments":[{"type":"reference","id":1199,"name":"Item_Type"}],"name":"List"},"overwrites":{"type":"reference","id":909,"name":"Question.constructor"}}],"overwrites":{"type":"reference","id":908,"name":"Question.constructor"}},{"id":1203,"name":"forEach","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L36"}],"signatures":[{"id":1204,"name":"forEach","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1205,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1206,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L36"}],"signatures":[{"id":1207,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1208,"name":"current","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1352,"typeArguments":[{"type":"reference","id":1199,"name":"Item_Type"}],"name":"CurrentItem"}},{"id":1209,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1210,"name":"items","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":1199,"name":"Item_Type"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","id":1382,"name":"Task"}}]},{"id":1211,"name":"eachMappedTo","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":40,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L40"}],"signatures":[{"id":1212,"name":"eachMappedTo","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1213,"name":"Mapped_Item_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1214,"name":"question","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1356,"typeArguments":[{"type":"reference","id":1199,"name":"Item_Type"},{"type":"reference","id":859,"typeArguments":[{"type":"union","types":[{"type":"reference","id":1213,"name":"Mapped_Item_Type"},{"type":"reference","typeArguments":[{"type":"reference","id":1213,"name":"Mapped_Item_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}],"name":"Question"}],"name":"MetaQuestion"}}],"type":{"type":"reference","id":1149,"typeArguments":[{"type":"reference","id":1213,"name":"Mapped_Item_Type"}],"name":"List"}}]},{"id":1215,"name":"where","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":44,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L44"}],"signatures":[{"id":1216,"name":"where","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1217,"name":"Answer_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1218,"name":"question","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1356,"typeArguments":[{"type":"reference","id":1199,"name":"Item_Type"},{"type":"reference","id":859,"typeArguments":[{"type":"union","types":[{"type":"reference","id":1217,"name":"Answer_Type"},{"type":"reference","typeArguments":[{"type":"reference","id":1217,"name":"Answer_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}],"name":"Question"}],"name":"MetaQuestion"}},{"id":1219,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1008,"typeArguments":[{"type":"reference","id":1217,"name":"Answer_Type"}],"name":"Expectation"}}],"type":{"type":"reference","id":1149,"typeArguments":[{"type":"reference","id":1199,"name":"Item_Type"}],"name":"List"}}]},{"id":1220,"name":"count","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":49,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L49"}],"signatures":[{"id":1221,"name":"count","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":939,"typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter"}}]},{"id":1222,"name":"first","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":51,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L51"}],"signatures":[{"id":1223,"name":"first","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":939,"typeArguments":[{"type":"reference","id":1199,"name":"Item_Type"}],"name":"QuestionAdapter"}}]},{"id":1224,"name":"last","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":53,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L53"}],"signatures":[{"id":1225,"name":"last","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":939,"typeArguments":[{"type":"reference","id":1199,"name":"Item_Type"}],"name":"QuestionAdapter"}}]},{"id":1226,"name":"nth","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":55,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L55"}],"signatures":[{"id":1227,"name":"nth","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1228,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"reference","id":1199,"name":"Item_Type"}],"name":"QuestionAdapter"}}]},{"id":1229,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L57"}],"signatures":[{"id":1230,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to use their "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|abilities"},{"kind":"text","text":"\\nto answer this question."}]},"parameters":[{"id":1231,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":559,"name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1199,"name":"Item_Type"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":917,"name":"Question.answeredBy"}}],"overwrites":{"type":"reference","id":916,"name":"Question.answeredBy"}},{"id":1232,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":67,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L67"}],"signatures":[{"id":1233,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Changes the description of this question\'s subject."}]},"parameters":[{"id":1234,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":1149,"typeArguments":[{"type":"reference","id":1199,"name":"Item_Type"}],"name":"List"},"overwrites":{"type":"reference","id":914,"name":"Question.describedAs"}}],"overwrites":{"type":"reference","id":913,"name":"Question.describedAs"}},{"id":1235,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":72,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L72"}],"signatures":[{"id":1236,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the description of the subject of this "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","id":912,"name":"Question.toString"}}],"overwrites":{"type":"reference","id":911,"name":"Question.toString"}}],"groups":[{"title":"Methods","children":[1150,1240,1203,1211,1215,1220,1222,1224,1226,1229,1232,1235]},{"title":"Constructors","children":[1197]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":19,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L19"}],"typeParameters":[{"id":1247,"name":"Item_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","id":859,"typeArguments":[{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1199,"name":"Item_Type"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}],"extendedBy":[{"type":"reference","id":1248,"name":"MetaList"}],"permalink":"/api/core/class/List","previousId":952,"nextId":1248},{"id":1248,"name":"MetaList","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style wrapper around\\na "},{"kind":"inline-tag","tag":"@apilink","text":"ChainableMetaQuestion"},{"kind":"text","text":" representing a collection\\nthat can be resolved in "},{"kind":"code","text":"`Supported_Context_Type`"},{"kind":"text","text":" of another "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":".\\n\\nFor example, "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements.located"},{"kind":"text","text":" returns "},{"kind":"code","text":"`MetaList<PageElement>`"},{"kind":"text","text":",\\nwhich allows for the collection of page elements to be resolved in the context\\nof dynamically-provided root element.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { By, PageElements, PageElement } from \'@serenity-js/web\'\\n\\nconst firstLabel = () =>\\n  PageElements.located(By.css(\'label\'))\\n     .first()\\n     .describedAs(\'first label\')\\n\\nconst exampleForm = () =>\\n  PageElement.located(By.css(\'form#example1\'))\\n     .describedAs(\'example form\')\\n\\nconst anotherExampleForm = () =>\\n  PageElement.located(By.css(\'form#example2\'))\\n     .describedAs(\'another example form\')\\n\\n// Next, you can compose the above questions dynamically with various \\"contexts\\":\\n//   firstLabel().of(exampleForm())\\n//   firstLabel().of(anotherExampleForm())\\n```"}]},"children":[{"id":1343,"name":"as","kind":2048,"kindString":"Method","flags":{"isPublic":true},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":419,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L419"}],"signatures":[{"id":1344,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":1345,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1346,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1347,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Question.ts","line":419,"character":26,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Question.ts#L419"}],"signatures":[{"id":1348,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1349,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":1299,"name":"Item_Type"}}}],"type":{"type":"union","types":[{"type":"reference","id":921,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":921,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"reference","id":921,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","id":1241,"name":"List.as"}}],"inheritedFrom":{"type":"reference","id":1240,"name":"List.as"}},{"id":1324,"name":"forEach","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L36"}],"signatures":[{"id":1325,"name":"forEach","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1326,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1327,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":36,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L36"}],"signatures":[{"id":1328,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1329,"name":"current","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1352,"typeArguments":[{"type":"reference","id":1299,"name":"Item_Type"}],"name":"CurrentItem"}},{"id":1330,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":1331,"name":"items","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":1299,"name":"Item_Type"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","id":1382,"name":"Task"},"inheritedFrom":{"type":"reference","id":1204,"name":"List.forEach"}}],"inheritedFrom":{"type":"reference","id":1203,"name":"List.forEach"}},{"id":1332,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":57,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L57"}],"signatures":[{"id":1333,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to use their "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|abilities"},{"kind":"text","text":"\\nto answer this question."}]},"parameters":[{"id":1334,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":947,"name":"AnswersQuestions"},{"type":"reference","id":559,"name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":1299,"name":"Item_Type"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":1230,"name":"List.answeredBy"}}],"inheritedFrom":{"type":"reference","id":1229,"name":"List.answeredBy"}},{"id":1335,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":67,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L67"}],"signatures":[{"id":1336,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Changes the description of this question\'s subject."}]},"parameters":[{"id":1337,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":1248,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"},{"type":"reference","id":1299,"name":"Item_Type"}],"name":"MetaList"},"inheritedFrom":{"type":"reference","id":1233,"name":"List.describedAs"}}],"inheritedFrom":{"type":"reference","id":1232,"name":"List.describedAs"}},{"id":1338,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":72,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L72"}],"signatures":[{"id":1339,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of this "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"},{"kind":"text","text":",\\ntypically involving the description of the subject.\\n\\nFor example, a description of a meta question obout \\"the text of an element\\"\\nwould be "},{"kind":"code","text":"`text of ${ element.toString() }`"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":1236,"name":"List.toString"},"implementationOf":{"type":"reference","id":957,"name":"ChainableMetaQuestion.toString"}}],"inheritedFrom":{"type":"reference","id":1235,"name":"List.toString"},"implementationOf":{"type":"reference","id":956,"name":"ChainableMetaQuestion.toString"}},{"id":1296,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":199,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L199"}],"signatures":[{"id":1297,"name":"new MetaList","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":1298,"name":"Supported_Context_Type","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1299,"name":"Item_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1300,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"Object"}}],"type":{"type":"reference","id":1248,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"},{"type":"reference","id":1299,"name":"Item_Type"}],"name":"MetaList"},"overwrites":{"type":"reference","id":1198,"name":"List.constructor"}}],"overwrites":{"type":"reference","id":1197,"name":"List.constructor"}},{"id":1302,"name":"of","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":205,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L205"}],"signatures":[{"id":1303,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" in the context of another "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\nand returns another "},{"kind":"code","text":"`ChainableMetaQuestion`"},{"kind":"text","text":" ready for further chaining.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"List"}]},"parameters":[{"id":1304,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"}],"name":"Answerable"}}],"type":{"type":"reference","id":1248,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"},{"type":"reference","id":1299,"name":"Item_Type"}],"name":"MetaList"},"implementationOf":{"type":"reference","id":954,"name":"ChainableMetaQuestion.of"}}],"implementationOf":{"type":"reference","id":953,"name":"ChainableMetaQuestion.of"}},{"id":1305,"name":"eachMappedTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":211,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L211"}],"signatures":[{"id":1306,"name":"eachMappedTo","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1307,"name":"Mapped_Item_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1308,"name":"question","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1356,"typeArguments":[{"type":"reference","id":1299,"name":"Item_Type"},{"type":"reference","id":859,"typeArguments":[{"type":"union","types":[{"type":"reference","id":1307,"name":"Mapped_Item_Type"},{"type":"reference","typeArguments":[{"type":"reference","id":1307,"name":"Mapped_Item_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}],"name":"Question"}],"name":"MetaQuestion"}}],"type":{"type":"reference","id":1248,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"},{"type":"reference","id":1307,"name":"Mapped_Item_Type"}],"name":"MetaList"},"overwrites":{"type":"reference","id":1212,"name":"List.eachMappedTo"}}],"overwrites":{"type":"reference","id":1211,"name":"List.eachMappedTo"}},{"id":1309,"name":"where","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":219,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L219"}],"signatures":[{"id":1310,"name":"where","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1311,"name":"Answer_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1312,"name":"question","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1356,"typeArguments":[{"type":"reference","id":1299,"name":"Item_Type"},{"type":"reference","id":859,"typeArguments":[{"type":"union","types":[{"type":"reference","id":1311,"name":"Answer_Type"},{"type":"reference","typeArguments":[{"type":"reference","id":1311,"name":"Answer_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}],"name":"Question"}],"name":"MetaQuestion"}},{"id":1313,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1008,"typeArguments":[{"type":"reference","id":1311,"name":"Answer_Type"}],"name":"Expectation"}}],"type":{"type":"reference","id":1248,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"},{"type":"reference","id":1299,"name":"Item_Type"}],"name":"MetaList"},"overwrites":{"type":"reference","id":1216,"name":"List.where"}}],"overwrites":{"type":"reference","id":1215,"name":"List.where"}},{"id":1314,"name":"count","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":228,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L228"}],"signatures":[{"id":1315,"name":"count","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":944,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"},{"type":"intrinsic","name":"number"}],"name":"MetaQuestionAdapter"},"overwrites":{"type":"reference","id":1221,"name":"List.count"}}],"overwrites":{"type":"reference","id":1220,"name":"List.count"}},{"id":1316,"name":"first","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":238,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L238"}],"signatures":[{"id":1317,"name":"first","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":944,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"},{"type":"reference","id":1299,"name":"Item_Type"}],"name":"MetaQuestionAdapter"},"overwrites":{"type":"reference","id":1223,"name":"List.first"}}],"overwrites":{"type":"reference","id":1222,"name":"List.first"}},{"id":1318,"name":"last","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":253,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L253"}],"signatures":[{"id":1319,"name":"last","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":944,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"},{"type":"reference","id":1299,"name":"Item_Type"}],"name":"MetaQuestionAdapter"},"overwrites":{"type":"reference","id":1225,"name":"List.last"}}],"overwrites":{"type":"reference","id":1224,"name":"List.last"}},{"id":1320,"name":"nth","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":268,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L268"}],"signatures":[{"id":1321,"name":"nth","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1322,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":944,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"},{"type":"reference","id":1299,"name":"Item_Type"}],"name":"MetaQuestionAdapter"},"overwrites":{"type":"reference","id":1227,"name":"List.nth"}}],"overwrites":{"type":"reference","id":1226,"name":"List.nth"}}],"groups":[{"title":"Methods","children":[1343,1324,1332,1335,1338,1302,1305,1309,1314,1316,1318,1320]},{"title":"Constructors","children":[1296]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":195,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L195"}],"typeParameters":[{"id":1350,"name":"Supported_Context_Type","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1351,"name":"Item_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","id":1149,"typeArguments":[{"type":"reference","id":1299,"name":"Item_Type"}],"name":"List"}],"implementedTypes":[{"type":"reference","id":952,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"},{"type":"reference","id":1248,"typeArguments":[{"type":"reference","id":1298,"name":"Supported_Context_Type"},{"type":"reference","id":1299,"name":"Item_Type"}],"name":"MetaList"}],"name":"ChainableMetaQuestion"}],"permalink":"/api/core/class/MetaList","previousId":1149,"nextId":1352},{"id":1352,"name":"CurrentItem","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1353,"name":"item","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":434,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L434"}],"type":{"type":"reference","id":1355,"name":"Item_Type"}},{"id":1354,"name":"actor","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":435,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L435"}],"type":{"type":"reference","id":587,"name":"Actor"}}],"groups":[{"title":"Properties","children":[1353,1354]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/List.ts","line":433,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/List.ts#L433"}],"typeParameters":[{"id":1355,"name":"Item_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"permalink":"/api/core/interface/CurrentItem","previousId":1248,"nextId":1356},{"id":1356,"name":"MetaQuestion","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"A meta-question is a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":" that can be answered\\nin the context of another "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":",\\ntypically to transform its value.\\n\\nFor example, the question "},{"kind":"inline-tag","tag":"@apilink","text":"Text.of"},{"kind":"text","text":" can be answered in the context\\nof a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" to return its text content.\\n\\n"},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion|Meta questions"},{"kind":"text","text":" are typically used when filtering a "},{"kind":"inline-tag","tag":"@apilink","text":"List"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"List"}]},"children":[{"id":1357,"name":"of","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":27,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/MetaQuestion.ts#L27"}],"signatures":[{"id":1358,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Answers the given "},{"kind":"code","text":"`MetaQuestion`"},{"kind":"text","text":" in the context of another "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"List"}]},"parameters":[{"id":1359,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":1362,"name":"Supported_Context_Type"}],"name":"Answerable"}}],"type":{"type":"reference","id":1363,"name":"Returned_Question_Type"}}]},{"id":1360,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":36,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/MetaQuestion.ts#L36"}],"signatures":[{"id":1361,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of this "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"},{"kind":"text","text":",\\ntypically involving the description of the subject.\\n\\nFor example, a description of a meta question obout \\"the text of an element\\"\\nwould be "},{"kind":"code","text":"`text of ${ element.toString() }`"}]},"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[1357,1360]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/MetaQuestion.ts","line":19,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/MetaQuestion.ts#L19"}],"typeParameters":[{"id":1362,"name":"Supported_Context_Type","kind":131072,"kindString":"Type parameter","flags":{}},{"id":1363,"name":"Returned_Question_Type","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":859,"typeArguments":[{"type":"intrinsic","name":"unknown"}],"name":"Question"}}],"extendedBy":[{"type":"reference","id":952,"name":"ChainableMetaQuestion"}],"permalink":"/api/core/interface/MetaQuestion","previousId":1352,"nextId":1368},{"id":1368,"name":"Unanswered","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"A placeholder value signifying that a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":"\\nhas not been answered by an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" when producing an "},{"kind":"inline-tag","tag":"@apilink","text":"ExpectationOutcome"},{"kind":"text","text":".\\nThis happens when Serenity/JS decides that answering a given question\\nwon\'t affect the outcome.\\n\\nFor example, making the actor answer questions about the expected value\\nand the actual value of each list item is unnecessary if we already know that the list itself is empty."}]},"children":[{"id":1369,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":1370,"name":"new Unanswered","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":1368,"name":"Unanswered"},"inheritedFrom":{"type":"reference","name":"TinyType.constructor"}}],"inheritedFrom":{"type":"reference","name":"TinyType.constructor"}},{"id":1377,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":1378,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":1379,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","name":"TinyType.equals"}},{"id":1375,"name":"[custom]","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":17,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Unanswered.ts#L17"}],"signatures":[{"id":1376,"name":"[custom]","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"}}]},{"id":1371,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":21,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Unanswered.ts#L21"}],"signatures":[{"id":1372,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"TinyType.toString"}}],"overwrites":{"type":"reference","name":"TinyType.toString"}},{"id":1373,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":25,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Unanswered.ts#L25"}],"signatures":[{"id":1374,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"overwrites":{"type":"reference","name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","name":"TinyType.toJSON"}}],"groups":[{"title":"Constructors","children":[1369]},{"title":"Methods","children":[1377,1375,1371,1373]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/Unanswered.ts","line":16,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/Unanswered.ts#L16"}],"extendedTypes":[{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Unanswered","previousId":1356,"nextId":1364},{"id":1068,"name":"ExpectationDetails","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Used with "},{"kind":"inline-tag","tag":"@apilink","text":"ExpectationOutcome"},{"kind":"text","text":" to describe an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" and the arguments it\'s been executed with."}]},"children":[{"id":1069,"name":"of","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":15,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L15"}],"signatures":[{"id":1070,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1071,"name":"functionName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1072,"name":"functionArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},{"type":"reference","id":1068,"name":"ExpectationDetails"},{"type":"reference","id":1368,"name":"Unanswered"}]}}}],"type":{"type":"reference","id":1068,"name":"ExpectationDetails"}}]},{"id":1073,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":19,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L19"}],"signatures":[{"id":1074,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1075,"name":"o","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"}}],"type":{"type":"reference","id":1068,"name":"ExpectationDetails"}}]},{"id":1092,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":1093,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":1094,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","name":"TinyType.equals"}},{"id":1080,"name":"name","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":36,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L36"}],"type":{"type":"reference","name":"Name"}},{"id":1081,"name":"args","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":37,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L37"}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},{"type":"reference","id":1068,"name":"ExpectationDetails"},{"type":"reference","id":1368,"name":"Unanswered"}]}}},{"id":1082,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":44,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L44"}],"signatures":[{"id":1083,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"TinyType.toString"}}],"overwrites":{"type":"reference","name":"TinyType.toString"}},{"id":1084,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L54"}],"signatures":[{"id":1085,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reflection","declaration":{"id":1086,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1087,"name":"name","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L54"}],"type":{"type":"intrinsic","name":"string"}},{"id":1088,"name":"args","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":30,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L54"}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":1089,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1090,"name":"type","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":44,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L54"}],"type":{"type":"intrinsic","name":"string"}},{"id":1091,"name":"value","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":58,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L54"}],"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"}}],"groups":[{"title":"Properties","children":[1090,1091]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L54"}]}}}}],"groups":[{"title":"Properties","children":[1087,1088]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":54,"character":14,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L54"}]}},"overwrites":{"type":"reference","name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","name":"TinyType.toJSON"}}],"groups":[{"title":"Methods","children":[1069,1073,1092,1082,1084]},{"title":"Properties","children":[1080,1081]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts","line":13,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationDetails.ts#L13"}],"extendedTypes":[{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/ExpectationDetails","previousId":1008,"nextId":1095},{"id":1095,"name":"ExpectationMet","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Indicates that an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" was met."}]},"children":[{"id":1106,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":1107,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":1108,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":1143,"name":"ExpectationOutcome.equals"}}],"inheritedFrom":{"type":"reference","id":1142,"name":"ExpectationOutcome.equals"}},{"id":1109,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":1110,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":1146,"name":"ExpectationOutcome.toString"}}],"inheritedFrom":{"type":"reference","id":1145,"name":"ExpectationOutcome.toString"}},{"id":1111,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":1112,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":1148,"name":"ExpectationOutcome.toJSON"}}],"inheritedFrom":{"type":"reference","id":1147,"name":"ExpectationOutcome.toJSON"}},{"id":1096,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L12"}],"signatures":[{"id":1097,"name":"new ExpectationMet","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1098,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1099,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1068,"name":"ExpectationDetails"}},{"id":1100,"name":"expected","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":1101,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","id":1095,"name":"ExpectationMet"},"inheritedFrom":{"type":"reference","id":1133,"name":"ExpectationOutcome.constructor"}}],"inheritedFrom":{"type":"reference","id":1132,"name":"ExpectationOutcome.constructor"}},{"id":1102,"name":"message","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L13"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":1138,"name":"ExpectationOutcome.message"}},{"id":1103,"name":"expectation","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L14"}],"type":{"type":"reference","id":1068,"name":"ExpectationDetails"},"inheritedFrom":{"type":"reference","id":1139,"name":"ExpectationOutcome.expectation"}},{"id":1104,"name":"expected","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","id":1140,"name":"ExpectationOutcome.expected"}},{"id":1105,"name":"actual","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L16"}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","id":1141,"name":"ExpectationOutcome.actual"}}],"groups":[{"title":"Methods","children":[1106,1109,1111]},{"title":"Constructors","children":[1096]},{"title":"Properties","children":[1102,1103,1104,1105]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationMet.ts","line":8,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationMet.ts#L8"}],"extendedTypes":[{"type":"reference","id":1131,"name":"ExpectationOutcome"}],"permalink":"/api/core/class/ExpectationMet","previousId":1068,"nextId":1113},{"id":1113,"name":"ExpectationNotMet","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Indicates that an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" was not met."}]},"children":[{"id":1124,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":1125,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":1126,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":1143,"name":"ExpectationOutcome.equals"}}],"inheritedFrom":{"type":"reference","id":1142,"name":"ExpectationOutcome.equals"}},{"id":1127,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":1128,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":1146,"name":"ExpectationOutcome.toString"}}],"inheritedFrom":{"type":"reference","id":1145,"name":"ExpectationOutcome.toString"}},{"id":1129,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":1130,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":1148,"name":"ExpectationOutcome.toJSON"}}],"inheritedFrom":{"type":"reference","id":1147,"name":"ExpectationOutcome.toJSON"}},{"id":1114,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L12"}],"signatures":[{"id":1115,"name":"new ExpectationNotMet","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1116,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1117,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1068,"name":"ExpectationDetails"}},{"id":1118,"name":"expected","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":1119,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","id":1113,"name":"ExpectationNotMet"},"inheritedFrom":{"type":"reference","id":1133,"name":"ExpectationOutcome.constructor"}}],"inheritedFrom":{"type":"reference","id":1132,"name":"ExpectationOutcome.constructor"}},{"id":1120,"name":"message","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L13"}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":1138,"name":"ExpectationOutcome.message"}},{"id":1121,"name":"expectation","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L14"}],"type":{"type":"reference","id":1068,"name":"ExpectationDetails"},"inheritedFrom":{"type":"reference","id":1139,"name":"ExpectationOutcome.expectation"}},{"id":1122,"name":"expected","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","id":1140,"name":"ExpectationOutcome.expected"}},{"id":1123,"name":"actual","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L16"}],"type":{"type":"intrinsic","name":"unknown"},"inheritedFrom":{"type":"reference","id":1141,"name":"ExpectationOutcome.actual"}}],"groups":[{"title":"Methods","children":[1124,1127,1129]},{"title":"Constructors","children":[1114]},{"title":"Properties","children":[1120,1121,1122,1123]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationNotMet.ts","line":8,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationNotMet.ts#L8"}],"extendedTypes":[{"type":"reference","id":1131,"name":"ExpectationOutcome"}],"permalink":"/api/core/class/ExpectationNotMet","previousId":1095,"nextId":1131},{"id":1131,"name":"ExpectationOutcome","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"An outcome of an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":",\\nwhich could be either "},{"kind":"inline-tag","tag":"@apilink","text":"ExpectationMet|met"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"ExpectationNotMet|not met"},{"kind":"text","text":"."}]},"children":[{"id":1142,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":1143,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":1144,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","name":"TinyType.equals"}},{"id":1145,"name":"toString","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":79,"character":4}],"signatures":[{"id":1146,"name":"toString","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to its string representation"}]},{"tag":"@returns","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"TinyType.toString"}}],"inheritedFrom":{"type":"reference","name":"TinyType.toString"}},{"id":1147,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":1148,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","name":"TinyType.toJSON"}},{"id":1132,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":12,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L12"}],"signatures":[{"id":1133,"name":"new ExpectationOutcome","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1134,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":1135,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1068,"name":"ExpectationDetails"}},{"id":1136,"name":"expected","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}},{"id":1137,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"reference","id":1131,"name":"ExpectationOutcome"},"overwrites":{"type":"reference","name":"TinyType.constructor"}}],"overwrites":{"type":"reference","name":"TinyType.constructor"}},{"id":1138,"name":"message","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":13,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L13"}],"type":{"type":"intrinsic","name":"string"}},{"id":1139,"name":"expectation","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":14,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L14"}],"type":{"type":"reference","id":1068,"name":"ExpectationDetails"}},{"id":1140,"name":"expected","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":15,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L15"}],"type":{"type":"intrinsic","name":"unknown"}},{"id":1141,"name":"actual","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":16,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L16"}],"type":{"type":"intrinsic","name":"unknown"}}],"groups":[{"title":"Methods","children":[1142,1145,1147]},{"title":"Constructors","children":[1132]},{"title":"Properties","children":[1138,1139,1140,1141]}],"sources":[{"fileName":"packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/expectations/ExpectationOutcome.ts#L11"}],"extendedTypes":[{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","id":1095,"name":"ExpectationMet"},{"type":"reference","id":1113,"name":"ExpectationNotMet"}],"permalink":"/api/core/class/ExpectationOutcome","previousId":1113,"nextId":752},{"id":1364,"name":"q","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/questions/q.ts","line":67,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/questions/q.ts#L67"}],"signatures":[{"id":1365,"name":"q","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A Serenity/JS Screenplay Pattern-flavour\\nof a [tagged template literal](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates),\\n"},{"kind":"code","text":"`q`"},{"kind":"text","text":" is a tag function capable of resolving any "},{"kind":"code","text":"`Answerable<string>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`Answerable<number>`"},{"kind":"text","text":"\\nyou parametrise it with, and returning a "},{"kind":"code","text":"`QuestionAdapter<string>`"},{"kind":"text","text":".\\n\\nUse "},{"kind":"code","text":"`q`"},{"kind":"text","text":" to concatenate "},{"kind":"code","text":"`string`"},{"kind":"text","text":" and "},{"kind":"code","text":"`number`"},{"kind":"text","text":" values returned from synchronous an asynchronous sources.\\n\\n## Interpolating questions\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\nimport { Text } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using a custom description\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`.describedAs(\'/articles/:id\')\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Transforming the interpolated string\\n\\nThe mechanism presented below relies on "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```ts\\nimport { q, actorCalled } from \'@serenity-js/core\'\\nimport { Send, DeleteRequest } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Alice\').attemptsTo(\\n  Send.a(DeleteRequest.to(\\n    q `/articles/${ Text.of(Article.id()) }`.toLocaleLowerCase()\\n  ))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Question.describedAs"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"}]},"parameters":[{"id":1366,"name":"templates","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TemplateStringsArray","qualifiedName":"TemplateStringsArray","package":"typescript"}},{"id":1367,"name":"parameters","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":641,"typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Answerable"}}}],"type":{"type":"reference","id":939,"typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter"}}],"permalink":"/api/core/function/q","previousId":1368,"nextId":569},{"id":1654,"name":"TellsTime","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" or a supporting class capable of telling\\nthe current wall clock time.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"}]},"children":[{"id":1655,"name":"currentTime","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":18,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/TellsTime.ts#L18"}],"signatures":[{"id":1656,"name":"currentTime","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"type":{"type":"reference","id":1608,"name":"Timestamp"}}]}],"groups":[{"title":"Methods","children":[1655]}],"sources":[{"fileName":"packages/core/src/screenplay/time/TellsTime.ts","line":14,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/TellsTime.ts#L14"}],"extendedBy":[{"type":"reference","id":2236,"name":"EmitsDomainEvents"}],"implementedBy":[{"type":"reference","id":587,"name":"Actor"},{"type":"reference","id":1953,"name":"StageManager"}],"permalink":"/api/core/interface/TellsTime","previousId":1821,"nextId":1403},{"id":1403,"name":"ScheduleWork","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" that enables an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to schedule a callback function\\nto be executed with a delay, or until some condition is met.\\n\\nUsed internally by the "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"Wait"},{"kind":"text","text":"."}],"modifierTags":["@experimental"]},"children":[{"id":1409,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/abilities/ScheduleWork.ts#L20"}],"signatures":[{"id":1410,"name":"new ScheduleWork","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1411,"name":"clock","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1483,"name":"Clock"}},{"id":1412,"name":"interactionTimeout","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reference","id":1403,"name":"ScheduleWork"},"overwrites":{"type":"reference","id":490,"name":"Ability.constructor"}}],"overwrites":{"type":"reference","id":489,"name":"Ability.constructor"}},{"id":1414,"name":"repeatUntil","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":29,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/abilities/ScheduleWork.ts#L29"}],"signatures":[{"id":1415,"name":"repeatUntil","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1416,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1417,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1504,"typeArguments":[{"type":"reference","id":1416,"name":"Result"}],"name":"DelayedCallback"}},{"id":1418,"name":"limits","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1568,"typeArguments":[{"type":"reference","id":1416,"name":"Result"}],"name":"RepeatUntilLimits"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1416,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":1419,"name":"waitFor","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":36,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/abilities/ScheduleWork.ts#L36"}],"signatures":[{"id":1420,"name":"waitFor","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1421,"name":"delay","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":1422,"name":"discard","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":40,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/abilities/ScheduleWork.ts#L40"}],"signatures":[{"id":1423,"name":"discard","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Discards the resources associated with this ability."}]},"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","id":525,"name":"Discardable.discard"}}],"implementationOf":{"type":"reference","id":524,"name":"Discardable.discard"}}],"groups":[{"title":"Constructors","children":[1409]},{"title":"Methods","children":[1414,1419,1422]}],"sources":[{"fileName":"packages/core/src/screenplay/time/abilities/ScheduleWork.ts","line":16,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/abilities/ScheduleWork.ts#L16"}],"extendedTypes":[{"type":"reference","id":483,"name":"Ability"}],"implementedTypes":[{"type":"reference","id":523,"name":"Discardable"}],"permalink":"/api/core/class/ScheduleWork","previousId":1654,"nextId":1424},{"id":1424,"name":"Wait","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"code","text":"`Wait`"},{"kind":"text","text":" is a synchronisation statement that instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":"\\nto wait before proceeding with their next "},{"kind":"inline-tag","tag":"@apilink","text":"Activity|activity"},{"kind":"text","text":",\\neither for a set "},{"kind":"inline-tag","tag":"@apilink","text":"Duration|duration"},{"kind":"text","text":", or until a given "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" is met.\\n\\nYou can configure the timeout of the interaction to "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.until"},{"kind":"text","text":":\\n- globally, using "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.interactionTimeout"},{"kind":"text","text":"\\n- locally, on a per-interaction basis using "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.upTo"},{"kind":"text","text":"\\n\\n:::tip Portable waiting\\nSerenity/JS implements "},{"kind":"code","text":"`Wait`"},{"kind":"text","text":" from scratch, so that the behaviour is consistent no matter the integration tool you use (Playwright, WebdriverIO, Selenium, etc.)\\nor the type of testing you do (Web, REST API, component testing, etc.)\\n:::\\n\\n## Wait with Web-based tests\\n\\n### Example widget\\n\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n    After about 1 second, the text will change from \'Loading...\' to \'Ready!\'\\n--\x3e\\n<h1 id=\\"status\\">Loading...</h1>\\n<script>\\n    (function () {\\n        setTimeout(function () {\\n            document.getElementById(\'status\').textContent = \'Ready!\'\\n        }, 1000);\\n    })();\\n<\/script>\\n```"},{"kind":"text","text":"\\n\\n### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nclass App {\\n  static status = () =>\\n     Text.of(PageElement.located(By.id(\'status\'))\\n         .describedAs(\'status widget\'))\\n }\\n```"},{"kind":"text","text":"\\n\\n### Waiting for a set duration\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Duration, Wait } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'In\xeas\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n      Wait.for(Duration.ofMilliseconds(1_500)),\\n      Ensure.that(App.status(), equals(\'Ready!\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n**Please note** that while the above implementation works,\\nthis approach is inefficient because at best\\nthe actor might wait too long and at worst the test\\nmight become \\"flaky\\" if any external interference\\n(like network glitches, animations taking a bit too long etc.)\\nmakes the actor wait not long enough.\\n\\n### Waiting until a condition is met\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst browser = await chromium.launch({ headless: true })\\n\\nawait actorCalled(\'Wendy\')\\n    .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n    .attemptsTo(\\n        Wait.until(App.status(), equals(\'Ready!\')),\\n        // app is ready, proceed with the scenario\\n    );\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"`Wait.until`"},{"kind":"text","text":" makes the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" keep asking the "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":",\\nin this case "},{"kind":"code","text":"`Text.of(App.status)`"},{"kind":"text","text":", until the answer meets\\nthe expectation, or a timeout expires (default: 5s).\\n\\n**Please note** that both Ensure and Wait can be used with\\nthe same expectations, like "},{"kind":"code","text":"`equals`"},{"kind":"text","text":" or "},{"kind":"code","text":"`includes`"},{"kind":"text","text":".\\n\\n### Changing the default timeout\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled, Duration, Wait } from \'@serenity-js/core\';\\n import { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\';\\n import { equals } from \'@serenity-js/assertions\';\\n import { Browser, chromium } from \'playwright\';\\n\\n const browser: Browser = await chromium.launch({ headless: true });\\n\\n await actorCalled(\'Polly\')\\n     .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n     .attemptsTo(\\n         Wait.upTo(Duration.ofSeconds(3))\\n             .until(App.status(), equals(\'Ready!\')),\\n         // app is ready, proceed with the scenario\\n     );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.interactionTimeout"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Duration"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"}]},"children":[{"id":1425,"name":"minimumTimeout","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum timeout that can be used with "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.until"},{"kind":"text","text":",\\ndefaults to 250 milliseconds,"}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":139,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L139"}],"type":{"type":"reference","id":1511,"name":"Duration"},"defaultValue":"..."},{"id":1426,"name":"defaultPollingInterval","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The amount of time "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.until"},{"kind":"text","text":" should wait between condition checks,\\ndefaults to 500ms.\\n\\nUse "},{"kind":"inline-tag","tag":"@apilink","text":"WaitUntil.pollingEvery"},{"kind":"text","text":" to override it for a given interaction."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":149,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L149"}],"type":{"type":"reference","id":1511,"name":"Duration"},"defaultValue":"..."},{"id":1427,"name":"minimumPollingInterval","kind":1024,"kindString":"Property","flags":{"isStatic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Minimum polling interval of 50ms between condition checks, used with "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.until"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":154,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L154"}],"type":{"type":"reference","id":1511,"name":"Duration"},"defaultValue":"..."},{"id":1428,"name":"for","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":163,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L163"}],"signatures":[{"id":1429,"name":"for","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"\\nconfigured to wait for a set duration."}]},"parameters":[{"id":1430,"name":"duration","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A set duration the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" should wait for before proceeding."}]},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":1511,"name":"Duration"}],"name":"Answerable"}}],"type":{"type":"reference","id":728,"name":"Interaction"}}]},{"id":1431,"name":"upTo","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":175,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L175"}],"signatures":[{"id":1432,"name":"upTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"\\nconfigured to wait until the answer to the question "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":",\\nor the "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" expires."}]},"parameters":[{"id":1433,"name":"timeout","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Custom timeout to override "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.interactionTimeout"}]},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reflection","declaration":{"id":1434,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1435,"name":"until","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":175,"character":38,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L175"}],"type":{"type":"reflection","declaration":{"id":1436,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":175,"character":45,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L175"}],"signatures":[{"id":1437,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1438,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1439,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":1438,"name":"Actual"}],"name":"Answerable"}},{"id":1440,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1008,"typeArguments":[{"type":"reference","id":1438,"name":"Actual"}],"name":"Expectation"}}],"type":{"type":"reference","id":1448,"typeArguments":[{"type":"reference","id":1438,"name":"Actual"}],"name":"WaitUntil"}}]}}}],"groups":[{"title":"Properties","children":[1435]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":175,"character":36,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L175"}]}}}]},{"id":1441,"name":"until","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":195,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L195"}],"signatures":[{"id":1442,"name":"until","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":" configured to\\npoll every "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.defaultPollingInterval"},{"kind":"text","text":" for the result of the provided\\nquestion ("},{"kind":"code","text":"`actual`"},{"kind":"text","text":") until it meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":",\\nor the timeout expires."}]},"typeParameter":[{"id":1443,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1444,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" that the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" will keep answering\\n until the answer meets the "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" provided, or the timeout expires."}]},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":1443,"name":"Actual"}],"name":"Answerable"}},{"id":1445,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" to be met before proceeding"}]},"type":{"type":"reference","id":1008,"typeArguments":[{"type":"reference","id":1443,"name":"Actual"}],"name":"Expectation"}}],"type":{"type":"reference","id":1448,"typeArguments":[{"type":"reference","id":1443,"name":"Actual"}],"name":"WaitUntil"}}]},{"id":1446,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":1447,"name":"new Wait","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":1424,"name":"Wait"}}]}],"groups":[{"title":"Properties","children":[1425,1426,1427]},{"title":"Methods","children":[1428,1431,1441]},{"title":"Constructors","children":[1446]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":133,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L133"}],"permalink":"/api/core/class/Wait","previousId":1403,"nextId":1448},{"id":1448,"name":"WaitUntil","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Synchronisation statement that instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to wait before proceeding until a given "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" is met.\\n\\n:::tip\\nTo instantiate "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"WaitUntil"},{"kind":"text","text":", use the factory method "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.until"},{"kind":"text","text":".\\n:::\\n\\n## Learn more\\n* "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.until"}]},"children":[{"id":1478,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":37,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L37"}],"signatures":[{"id":1479,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":749,"name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":748,"name":"Interaction.instantiationLocation"}},{"id":1480,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/Activity.ts","line":62,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/Activity.ts#L62"}],"signatures":[{"id":1481,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":751,"name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","id":750,"name":"Interaction.toString"}},{"id":1459,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":228,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L228"}],"signatures":[{"id":1460,"name":"new WaitUntil","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":1461,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1462,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":641,"typeArguments":[{"type":"reference","id":1461,"name":"Actual"}],"name":"Answerable"}},{"id":1463,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1008,"typeArguments":[{"type":"reference","id":1461,"name":"Actual"}],"name":"Expectation"}},{"id":1464,"name":"pollingInterval","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}},{"id":1465,"name":"timeout","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reference","id":1448,"typeArguments":[{"type":"reference","id":1461,"name":"Actual"}],"name":"WaitUntil"},"overwrites":{"type":"reference","id":740,"name":"Interaction.constructor"}}],"overwrites":{"type":"reference","id":739,"name":"Interaction.constructor"}},{"id":1470,"name":"pollingEvery","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":253,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L253"}],"signatures":[{"id":1471,"name":"pollingEvery","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configure how frequently the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" should check if the answer meets the expectation.\\n\\nNote that the polling interval defines the delay between subsequent attempts\\nto evaluate the expected value, and doesn\'t include the amount of time\\nit take the actor to evaluate the value itself."}]},"parameters":[{"id":1472,"name":"interval","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reference","id":728,"name":"Interaction"}}]},{"id":1473,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":260,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L260"}],"signatures":[{"id":1474,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":1475,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":559,"name":"UsesAbilities"},{"type":"reference","id":947,"name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":744,"name":"Interaction.performAs"}}],"overwrites":{"type":"reference","id":743,"name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[1478,1480,1470,1473]},{"title":"Constructors","children":[1459]}],"sources":[{"fileName":"packages/core/src/screenplay/time/activities/Wait.ts","line":227,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/activities/Wait.ts#L227"}],"typeParameters":[{"id":1482,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","id":728,"name":"Interaction"}],"permalink":"/api/core/class/WaitUntil","previousId":1424,"nextId":1483},{"id":1483,"name":"Clock","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@apilink","text":"Clock"},{"kind":"text","text":" tells the time. This abstraction allows Serenity/JS to have a single place\\nin the framework responsible for telling the time, and one that can be easily mocked for internal testing.\\n\\n"},{"kind":"code","text":"```ts\\nconst now: Timestamp = new Clock().now()\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Timestamp"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Duration"}]},"children":[{"id":1485,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Clock.ts#L24"}],"signatures":[{"id":1486,"name":"new Clock","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1487,"name":"checkTime","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1488,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":24,"character":44,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Clock.ts#L24"}],"signatures":[{"id":1489,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"Date","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date","qualifiedName":"Date","package":"typescript"}}]}},"defaultValue":"..."}],"type":{"type":"reference","id":1483,"name":"Clock"}}]},{"id":1494,"name":"setAhead","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":35,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Clock.ts#L35"}],"signatures":[{"id":1495,"name":"setAhead","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the clock ahead to force early resolution of promises\\nreturned by "},{"kind":"inline-tag","tag":"@apilink","text":"Clock.waitFor"},{"kind":"text","text":";\\n\\nUseful for test purposes to avoid unnecessary delays."}]},"parameters":[{"id":1496,"name":"duration","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1497,"name":"tick","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":44,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Clock.ts#L44"}],"signatures":[{"id":1498,"name":"tick","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that resolves after one tick of the clock.\\n\\nUseful for test purposes to avoid unnecessary delays."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":1499,"name":"now","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":51,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Clock.ts#L51"}],"signatures":[{"id":1500,"name":"now","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns current time"}]},"type":{"type":"reference","id":1608,"name":"Timestamp"}}]},{"id":1501,"name":"waitFor","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":60,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Clock.ts#L60"}],"signatures":[{"id":1502,"name":"waitFor","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that will be resolved after the given duration"}]},"parameters":[{"id":1503,"name":"duration","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Constructors","children":[1485]},{"title":"Methods","children":[1494,1497,1499,1501]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Clock.ts","line":20,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Clock.ts#L20"}],"permalink":"/api/core/class/Clock","previousId":1448,"nextId":1504},{"id":1504,"name":"DelayedCallback","kind":256,"kindString":"Interface","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":6,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/DelayedCallback.ts#L6"}],"typeParameters":[{"id":1505,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}}],"signatures":[{"id":1506,"name":"DelayedCallback","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1507,"name":"stats","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1508,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1509,"name":"currentTime","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":14,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/DelayedCallback.ts#L7"}],"type":{"type":"reference","id":1608,"name":"Timestamp"}},{"id":1510,"name":"i","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":38,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/DelayedCallback.ts#L7"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1509,1510]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/DelayedCallback.ts","line":7,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/DelayedCallback.ts#L7"}]}}}],"type":{"type":"union","types":[{"type":"reference","id":1505,"name":"Result"},{"type":"reference","typeArguments":[{"type":"reference","id":1505,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}],"permalink":"/api/core/interface/DelayedCallback","previousId":1483,"nextId":1511},{"id":1511,"name":"Duration","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents a duration in milliseconds between two "},{"kind":"inline-tag","tag":"@apilink","text":"Timestamp|timestamps"},{"kind":"text","text":"."}]},"children":[{"id":1517,"name":"ofMilliseconds","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":17,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L17"}],"signatures":[{"id":1518,"name":"ofMilliseconds","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1519,"name":"milliseconds","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":1511,"name":"Duration"}}]},{"id":1520,"name":"ofSeconds","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":18,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L18"}],"signatures":[{"id":1521,"name":"ofSeconds","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1522,"name":"seconds","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":1511,"name":"Duration"}}]},{"id":1523,"name":"ofMinutes","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":19,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L19"}],"signatures":[{"id":1524,"name":"ofMinutes","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1525,"name":"minutes","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":1511,"name":"Duration"}}]},{"id":1526,"name":"ofHours","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":20,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L20"}],"signatures":[{"id":1527,"name":"ofHours","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1528,"name":"hours","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":1511,"name":"Duration"}}]},{"id":1529,"name":"ofDays","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":21,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L21"}],"signatures":[{"id":1530,"name":"ofDays","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1531,"name":"days","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":1511,"name":"Duration"}}]},{"id":1532,"name":"ofYears","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":22,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L22"}],"signatures":[{"id":1533,"name":"ofYears","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1534,"name":"years","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":1511,"name":"Duration"}}]},{"id":1535,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L24"}],"signatures":[{"id":1536,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1537,"name":"__namedParameters","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1538,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1539,"name":"milliseconds","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":40,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L24"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[1539]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":24,"character":38,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L24"}]}}}],"type":{"type":"reference","id":1511,"name":"Duration"}}]},{"id":1565,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":1566,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":1567,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","name":"TinyType.equals"}},{"id":1540,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":28,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L28"}],"signatures":[{"id":1541,"name":"new Duration","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1542,"name":"milliseconds","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":1511,"name":"Duration"},"overwrites":{"type":"reference","name":"TinyType.constructor"}}],"overwrites":{"type":"reference","name":"TinyType.constructor"}},{"id":1544,"name":"isLessThan","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":33,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L33"}],"signatures":[{"id":1545,"name":"isLessThan","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1546,"name":"another","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1547,"name":"isLessThanOrEqualTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":37,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L37"}],"signatures":[{"id":1548,"name":"isLessThanOrEqualTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1549,"name":"another","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1550,"name":"isGreaterThan","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":41,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L41"}],"signatures":[{"id":1551,"name":"isGreaterThan","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1552,"name":"another","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1553,"name":"isGreaterThanOrEqualTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":45,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L45"}],"signatures":[{"id":1554,"name":"isGreaterThanOrEqualTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1555,"name":"another","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1556,"name":"plus","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":49,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L49"}],"signatures":[{"id":1557,"name":"plus","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1558,"name":"another","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reference","id":1511,"name":"Duration"}}]},{"id":1559,"name":"inMilliseconds","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":53,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L53"}],"signatures":[{"id":1560,"name":"inMilliseconds","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"number"}}]},{"id":1561,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":57,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L57"}],"signatures":[{"id":1562,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"TinyType.toString"}}],"overwrites":{"type":"reference","name":"TinyType.toString"}},{"id":1563,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":75,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L75"}],"signatures":[{"id":1564,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"JSONObject","qualifiedName":"JSONObject","package":"tiny-types"},"overwrites":{"type":"reference","name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","name":"TinyType.toJSON"}}],"groups":[{"title":"Methods","children":[1517,1520,1523,1526,1529,1532,1535,1565,1544,1547,1550,1553,1556,1559,1561,1563]},{"title":"Constructors","children":[1540]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Duration.ts","line":9,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Duration.ts#L9"}],"extendedTypes":[{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Duration","previousId":1504,"nextId":1568},{"id":1568,"name":"RepeatUntilLimits","kind":256,"kindString":"Interface","flags":{},"children":[{"id":1569,"name":"exitCondition","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/RepeatUntilLimits.ts#L7"}],"type":{"type":"reflection","declaration":{"id":1570,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":7,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/RepeatUntilLimits.ts#L7"}],"signatures":[{"id":1571,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1572,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1584,"name":"Result"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":1573,"name":"maxInvocations","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":8,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/RepeatUntilLimits.ts#L8"}],"type":{"type":"intrinsic","name":"number"}},{"id":1574,"name":"delayBetweenInvocations","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/RepeatUntilLimits.ts#L9"}],"type":{"type":"reflection","declaration":{"id":1575,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":9,"character":30,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/RepeatUntilLimits.ts#L9"}],"signatures":[{"id":1576,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1577,"name":"i","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":1511,"name":"Duration"}}]}}},{"id":1578,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":10,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/RepeatUntilLimits.ts#L10"}],"type":{"type":"reference","id":1511,"name":"Duration"}},{"id":1579,"name":"errorHandler","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/RepeatUntilLimits.ts#L11"}],"type":{"type":"reflection","declaration":{"id":1580,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":11,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/RepeatUntilLimits.ts#L11"}],"signatures":[{"id":1581,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1582,"name":"error","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}},{"id":1583,"name":"result","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":1584,"name":"Result"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[1569,1573,1574,1578,1579]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/RepeatUntilLimits.ts","line":6,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/RepeatUntilLimits.ts#L6"}],"typeParameters":[{"id":1584,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}}],"permalink":"/api/core/interface/RepeatUntilLimits","previousId":1511,"nextId":1585},{"id":1585,"name":"Scheduler","kind":128,"kindString":"Class","flags":{},"children":[{"id":1586,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Scheduler.ts#L20"}],"signatures":[{"id":1587,"name":"new Scheduler","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1588,"name":"clock","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1483,"name":"Clock"}},{"id":1589,"name":"interactionTimeout","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The maximum amount of time to give to a callback to complete before throwing an error"}]},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reference","id":1585,"name":"Scheduler"}}]},{"id":1593,"name":"after","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":32,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Scheduler.ts#L32"}],"signatures":[{"id":1594,"name":"after","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Schedules a callback function to be invoked after a delay"}]},"typeParameter":[{"id":1595,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1596,"name":"delay","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}},{"id":1597,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1504,"typeArguments":[{"type":"reference","id":1595,"name":"Result"}],"name":"DelayedCallback"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1595,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":1598,"name":"waitFor","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":48,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Scheduler.ts#L48"}],"signatures":[{"id":1599,"name":"waitFor","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":" to be resolved after a "},{"kind":"code","text":"`delay`"}]},"parameters":[{"id":1600,"name":"delay","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":1601,"name":"repeatUntil","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":67,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Scheduler.ts#L67"}],"signatures":[{"id":1602,"name":"repeatUntil","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Schedules a callback function to be repeated, according to configured limits."}]},"typeParameter":[{"id":1603,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1604,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1504,"typeArguments":[{"type":"reference","id":1603,"name":"Result"}],"name":"DelayedCallback"}},{"id":1605,"name":"limits","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1568,"typeArguments":[{"type":"reference","id":1603,"name":"Result"}],"name":"RepeatUntilLimits"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":1603,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":1606,"name":"stop","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":96,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Scheduler.ts#L96"}],"signatures":[{"id":1607,"name":"stop","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Constructors","children":[1586]},{"title":"Methods","children":[1593,1598,1601,1606]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Scheduler.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Scheduler.ts#L11"}],"permalink":"/api/core/class/Scheduler","previousId":1568,"nextId":1608},{"id":1608,"name":"Timestamp","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents a point in time.\\n\\n"},{"kind":"code","text":"`Timestamp`"},{"kind":"text","text":" makes it easier for Serenity/JS to work with information related to time, like "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent|domain events"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Duration"},{"kind":"text","text":"\\n- [Date](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date)"}]},"children":[{"id":1609,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":18,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L18"}],"signatures":[{"id":1610,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1611,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":1608,"name":"Timestamp"}}]},{"id":1612,"name":"fromTimestampInSeconds","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":22,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L22"}],"signatures":[{"id":1613,"name":"fromTimestampInSeconds","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1614,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":1608,"name":"Timestamp"}}]},{"id":1615,"name":"fromTimestampInMilliseconds","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":26,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L26"}],"signatures":[{"id":1616,"name":"fromTimestampInMilliseconds","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1617,"name":"v","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":1608,"name":"Timestamp"}}]},{"id":1651,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":1652,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":1653,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","name":"TinyType.equals"}},{"id":1618,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":30,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L30"}],"signatures":[{"id":1619,"name":"new Timestamp","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1620,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Date","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date","qualifiedName":"Date","package":"typescript"},"defaultValue":"..."}],"type":{"type":"reference","id":1608,"name":"Timestamp"},"overwrites":{"type":"reference","name":"TinyType.constructor"}}],"overwrites":{"type":"reference","name":"TinyType.constructor"}},{"id":1621,"name":"value","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":30,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L30"}],"type":{"type":"reference","name":"Date","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date","qualifiedName":"Date","package":"typescript"},"defaultValue":"..."},{"id":1622,"name":"diff","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":35,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L35"}],"signatures":[{"id":1623,"name":"diff","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1624,"name":"another","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"reference","id":1511,"name":"Duration"}}]},{"id":1625,"name":"plus","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":40,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L40"}],"signatures":[{"id":1626,"name":"plus","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1627,"name":"duration","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reference","id":1608,"name":"Timestamp"}}]},{"id":1628,"name":"less","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":45,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L45"}],"signatures":[{"id":1629,"name":"less","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1630,"name":"duration","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reference","id":1608,"name":"Timestamp"}}]},{"id":1631,"name":"isBefore","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":50,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L50"}],"signatures":[{"id":1632,"name":"isBefore","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1633,"name":"another","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1634,"name":"isBeforeOrEqual","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":55,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L55"}],"signatures":[{"id":1635,"name":"isBeforeOrEqual","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1636,"name":"another","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1637,"name":"isAfter","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":60,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L60"}],"signatures":[{"id":1638,"name":"isAfter","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1639,"name":"another","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1640,"name":"isAfterOrEqual","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":65,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L65"}],"signatures":[{"id":1641,"name":"isAfterOrEqual","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1642,"name":"another","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1608,"name":"Timestamp"}}],"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1643,"name":"toMilliseconds","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":70,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L70"}],"signatures":[{"id":1644,"name":"toMilliseconds","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"number"}}]},{"id":1645,"name":"toSeconds","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":74,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L74"}],"signatures":[{"id":1646,"name":"toSeconds","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"number"}}]},{"id":1647,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":78,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L78"}],"signatures":[{"id":1648,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"TinyType.toJSON"}}],"overwrites":{"type":"reference","name":"TinyType.toJSON"}},{"id":1649,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":82,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L82"}],"signatures":[{"id":1650,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"TinyType.toString"}}],"overwrites":{"type":"reference","name":"TinyType.toString"}}],"groups":[{"title":"Methods","children":[1609,1612,1615,1651,1622,1625,1628,1631,1634,1637,1640,1643,1645,1647,1649]},{"title":"Constructors","children":[1618]},{"title":"Properties","children":[1621]}],"sources":[{"fileName":"packages/core/src/screenplay/time/models/Timestamp.ts","line":17,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/screenplay/time/models/Timestamp.ts#L17"}],"extendedTypes":[{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}],"permalink":"/api/core/class/Timestamp","previousId":1585},{"id":1707,"name":"Cast","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS uses the concept of a _**cast of actors**_ to centralise the process of configuring the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actors"},{"kind":"text","text":" and assigning their "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|abilities"},{"kind":"text","text":".\\n\\nWhen you invoke "},{"kind":"inline-tag","tag":"@apilink","text":"actorCalled"},{"kind":"text","text":" for the first time in a test scenario,\\nSerenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|instantiates a new actor"},{"kind":"text","text":"\\nand passes it through the "},{"kind":"inline-tag","tag":"@apilink","text":"Cast.prepare"},{"kind":"text","text":" method.\\nSpecifying a **custom cast** gives you an opportunity to configure the actor with the abilities\\nthey need before it\'s returned to the caller,\\nor configure the actors differently **depending on their name**.\\nIt also helps you to avoid having to configure abilities individually in every test scenario.\\n\\n:::tip Remember\\nA **cast** is responsible for assigning **abilities** to **actors** in a central location.\\n:::\\n\\n## Configuring a cast of actors for the entire test suite\\n\\nWhen working with relatively **simple scenarios** where all the actors should always receive the same set of abilities,\\nyou can "},{"kind":"inline-tag","tag":"@apilink","text":"configure"},{"kind":"text","text":" Serenity/JS to use a generic "},{"kind":"inline-tag","tag":"@apilink","text":"Cast.where"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Cast, configure } from \'@serenity-js/core\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\nconfigure({\\n  actors: Cast.where(actor => actor.whoCan(\\n    CallAnApi.at(\'http://api.example.org\'),\\n    // other abilities\\n  ))\\n})\\n```"},{"kind":"text","text":"\\n\\nIf you\'re using Serenity/JS with one of the [supported test runners](/handbook/test-runners/),\\nyou might prefer to use your test runner\'s native configuration mechanism\\ninstead of invoking "},{"kind":"inline-tag","tag":"@apilink","text":"configure"},{"kind":"text","text":" explicitly.\\n\\n:::tip configure vs engage\\nCalling "},{"kind":"inline-tag","tag":"@apilink","text":"configure"},{"kind":"text","text":" resets the entire Serenity/JS configuration\\nand should be done exactly once in your entire test suite.\\nIf you want to retain the configuration but reset the cast, use "},{"kind":"inline-tag","tag":"@apilink","text":"engage"},{"kind":"text","text":" instead.\\n:::\\n\\nLearn more about configuring Serenity/JS with:\\n- [Cucumber.js](/handbook/test-runners/cucumber)\\n- [Jasmine](/handbook/test-runners/jasmine)\\n- [Mocha](/handbook/test-runners/mocha)\\n- [Playwright Test](/handbook/test-runners/playwright-test)\\n- [Protractor](/handbook/test-runners/protractor)\\n- [WebdriverIO](/handbook/test-runners/webdriverio)\\n\\n## Engaging a cast of actors for the specific scenario\\n\\nIf you want to retain Serenity/JS configuration, but set a different "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":"\\nfor the given test scenario you should use "},{"kind":"inline-tag","tag":"@apilink","text":"engage"},{"kind":"text","text":" instead of "},{"kind":"inline-tag","tag":"@apilink","text":"configure"},{"kind":"text","text":".\\n\\nThis approach is useful for example when your entire test suite is dedicated to interacting with the system\\nunder test via its REST APIs, and you have a handful of scenarios that need a web browser.\\n\\n"},{"kind":"code","text":"```ts\\nimport { describe, beforeEach } from \'mocha\'\\nimport { engage, Cast } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\ndescribe(\'My UI feature\', () => {\\n  beforeEach(async () => {\\n    const browser = await chromium.launch({ headless: true })\\n    engage(Cast.where(actor => actor.whoCan(BrowseTheWebWithPlaywright.using(browser))))\\n  })\\n\\n  // test scenarios\\n})\\n```"},{"kind":"text","text":"\\n\\n## Writing custom casts for complex scenarios\\n\\nIn **complex scenarios** that involve multiple **actors with different abilities**,\\nyou should create a custom implementation of the "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":".\\n\\nExamples of such scenarios include those where actors use separate browser instances, interact with different REST APIs,\\nor start with different data in their "},{"kind":"inline-tag","tag":"@apilink","text":"Notepad|notepads"},{"kind":"text","text":".\\n\\n### Defining a custom cast of actors interacting with a Web UI\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { engage, Actor, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright, PlaywrightOptions } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nexport class UIActors implements Cast {\\n  constructor(\\n    private readonly browser: Browser,\\n    private readonly options?: PlaywrightOptions,\\n  ) {\\n  }\\n\\n  prepare(actor: Actor): Actor {\\n    return actor.whoCan(\\n      BrowseTheWebWithPlaywright.using(this.browser, this.options),\\n    )\\n  }\\n}\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n  engage(new UIActors(browser));\\n});\\n```"},{"kind":"text","text":"\\n\\n### Preparing actors differently based on their name\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { actorCalled, engage, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nclass Actors implements Cast {\\n  constructor(\\n    private readonly browser: Browser,\\n    private readonly options: PlaywrightOptions,\\n  ) {\\n  }\\n\\n  prepare(actor: Actor) {\\n    switch (actor.name) {\\n      case \'James\':\\n        return actor.whoCan(BrowseTheWebWithPlaywright.using(this.browser, this.options));\\n      default:\\n        return actor.whoCan(CallAnApi.at(this.options.baseURL));\\n    }\\n  }\\n}\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n  engage(new Actors(browser, { baseURL: \'https://example.org\' }));\\n});\\n\\nactorCalled(\'James\') // returns an actor using a browser\\nactorCalled(\'Alice\') // returns an actor interacting with an API\\n```"}]},"children":[{"id":1708,"name":"where","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Cast.ts#L158"}],"signatures":[{"id":1709,"name":"where","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a generic "},{"kind":"code","text":"`Cast`"},{"kind":"text","text":" implementation, where new actors receive the abilities\\nconfigured by the "},{"kind":"code","text":"`prepareFunction`"},{"kind":"text","text":"."}]},"parameters":[{"id":1710,"name":"prepareFunction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1711,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":158,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Cast.ts#L158"}],"signatures":[{"id":1712,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1713,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":587,"name":"Actor"}}],"type":{"type":"reference","id":587,"name":"Actor"}}]}}}],"type":{"type":"reference","id":1707,"name":"Cast"}}]},{"id":1714,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":1715,"name":"new Cast","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":1707,"name":"Cast"}}]},{"id":1716,"name":"prepare","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":174,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Cast.ts#L174"}],"signatures":[{"id":1717,"name":"prepare","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" instantiated when "},{"kind":"inline-tag","tag":"@apilink","text":"Stage.actor"},{"kind":"text","text":" is invoked."}]},"parameters":[{"id":1718,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"engage"}]},"type":{"type":"reference","id":587,"name":"Actor"}}],"type":{"type":"reference","id":587,"name":"Actor"}}]}],"groups":[{"title":"Methods","children":[1708,1716]},{"title":"Constructors","children":[1714]}],"sources":[{"fileName":"packages/core/src/stage/Cast.ts","line":150,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Cast.ts#L150"}],"permalink":"/api/core/class/Cast","previousId":474,"nextId":1781},{"id":1781,"name":"ListensToDomainEvents","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" that can listen and react to "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent|DomainEvents"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"configure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.crew"}]},"children":[{"id":1782,"name":"notifyOf","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/ListensToDomainEvents.ts#L23"}],"signatures":[{"id":1783,"name":"notifyOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Handles "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent"},{"kind":"text","text":" objects emitted by the "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":"\\nthat this "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" is assigned to."}]},"parameters":[{"id":1784,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2224,"name":"DomainEvent"}}],"type":{"type":"intrinsic","name":"void"}}]}],"groups":[{"title":"Methods","children":[1782]}],"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":15,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/ListensToDomainEvents.ts#L15"}],"extendedBy":[{"type":"reference","id":1938,"name":"StageCrewMember"}],"permalink":"/api/core/interface/ListensToDomainEvents","previousId":1707,"nextId":1863},{"id":1863,"name":"Stage","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Stage is the place where "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actors"},{"kind":"text","text":" perform.\\n\\nIn more technical terms, the Stage is the main event bus propagating "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent|DomainEvents"},{"kind":"text","text":"\\nto "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|Actors"},{"kind":"text","text":" it instantiates and "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember|StageCrewMembers"},{"kind":"text","text":" that have been registered with it.\\n\\nIt is unlikely that you\'ll ever need to interact with the "},{"kind":"code","text":"`Stage`"},{"kind":"text","text":" directly in your tests. Instead, you\'ll use functions like\\n"},{"kind":"inline-tag","tag":"@apilink","text":"actorCalled"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"configure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"engage"}]},"children":[{"id":1865,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":73,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L73"}],"signatures":[{"id":1866,"name":"new Stage","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1867,"name":"cast","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1707,"name":"Cast"}},{"id":1868,"name":"manager","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1953,"name":"StageManager"}},{"id":1869,"name":"errors","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":125,"name":"ErrorFactory"}},{"id":1870,"name":"clock","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1483,"name":"Clock"}},{"id":1871,"name":"interactionTimeout","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}}],"type":{"type":"reference","id":1863,"name":"Stage"}}]},{"id":1886,"name":"theActorCalled","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":92,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L92"}],"signatures":[{"id":1887,"name":"theActorCalled","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"An alias for "},{"kind":"inline-tag","tag":"@apilink","text":"Stage.actor"}]},"parameters":[{"id":1888,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":587,"name":"Actor"}}]},{"id":1889,"name":"actor","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":103,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L103"}],"signatures":[{"id":1890,"name":"actor","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a new "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" or fetches an existing one\\nidentified by their name if they\'ve already been instantiated."}]},"parameters":[{"id":1891,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Case-sensitive name of the Actor, e.g. "},{"kind":"code","text":"`Alice`"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":587,"name":"Actor"}}]},{"id":1892,"name":"theActorInTheSpotlight","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":140,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L140"}],"signatures":[{"id":1893,"name":"theActorInTheSpotlight","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the last "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" instantiated via "},{"kind":"inline-tag","tag":"@apilink","text":"Stage.actor"},{"kind":"text","text":".\\nUseful when you don\'t can\'t or choose not to reference the actor by their name."}],"blockTags":[{"tag":"@throws","content":[{"kind":"text","text":"If no "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" has been activated yet"}]}]},"type":{"type":"reference","id":587,"name":"Actor"}}]},{"id":1894,"name":"theShowHasStarted","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":151,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L151"}],"signatures":[{"id":1895,"name":"theShowHasStarted","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if there is an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" in the spotlight, "},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"type":{"type":"intrinsic","name":"boolean"}}]},{"id":1896,"name":"engage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":161,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L161"}],"signatures":[{"id":1897,"name":"engage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the Stage to prepare "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|Actors"},{"kind":"text","text":"\\ninstantiated via "},{"kind":"inline-tag","tag":"@apilink","text":"Stage.actor"},{"kind":"text","text":" using the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":"."}]},"parameters":[{"id":1898,"name":"actors","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1707,"name":"Cast"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1899,"name":"assign","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":173,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L173"}],"signatures":[{"id":1900,"name":"assign","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Assigns listeners to be notified of "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent|DomainEvents"},{"kind":"text","text":"\\nemitted via "},{"kind":"inline-tag","tag":"@apilink","text":"Stage.announce"},{"kind":"text","text":".s"}]},"parameters":[{"id":1901,"name":"listeners","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":1781,"name":"ListensToDomainEvents"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1902,"name":"announce","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":183,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L183"}],"signatures":[{"id":1903,"name":"announce","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Notifies all the assigned listeners of the events,\\nemitting them one by one."}]},"parameters":[{"id":1904,"name":"events","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":2224,"name":"DomainEvent"}}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","id":2243,"name":"EmitsDomainEvents.announce"}}],"implementationOf":{"type":"reference","id":2242,"name":"EmitsDomainEvents.announce"}},{"id":1908,"name":"currentTime","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":211,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L211"}],"signatures":[{"id":1909,"name":"currentTime","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns current time. This method should be used whenever\\n"},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent"},{"kind":"text","text":" objects are instantiated by you programmatically."}]},"type":{"type":"reference","id":1608,"name":"Timestamp"},"implementationOf":{"type":"reference","id":2248,"name":"EmitsDomainEvents.currentTime"}}],"implementationOf":{"type":"reference","id":2247,"name":"EmitsDomainEvents.currentTime"}},{"id":1910,"name":"assignNewSceneId","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":226,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L226"}],"signatures":[{"id":1911,"name":"assignNewSceneId","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates and remembers a "},{"kind":"inline-tag","tag":"@apilink","text":"CorrelationId"},{"kind":"text","text":"\\nfor the current scene.\\n\\nThis method should be used in custom test runner adapters\\nwhen instantiating a "},{"kind":"inline-tag","tag":"@apilink","text":"SceneStarts"},{"kind":"text","text":" event.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage.currentSceneId"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"CorrelationId"}]},"type":{"type":"reference","name":"CorrelationId"}}]},{"id":1912,"name":"currentSceneId","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":239,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L239"}],"signatures":[{"id":1913,"name":"currentSceneId","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"inline-tag","tag":"@apilink","text":"CorrelationId"},{"kind":"text","text":" for the current scene.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage.assignNewSceneId"}]},"type":{"type":"reference","name":"CorrelationId"},"implementationOf":{"type":"reference","id":2238,"name":"EmitsDomainEvents.currentSceneId"}}],"implementationOf":{"type":"reference","id":2237,"name":"EmitsDomainEvents.currentSceneId"}},{"id":1914,"name":"assignNewActivityId","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":253,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L253"}],"signatures":[{"id":1915,"name":"assignNewActivityId","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates and remembers a "},{"kind":"inline-tag","tag":"@apilink","text":"CorrelationId"},{"kind":"text","text":"\\nfor the current "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":".\\n\\nThis method should be used in custom test runner adapters\\nwhen instantiating the "},{"kind":"inline-tag","tag":"@apilink","text":"ActivityStarts"},{"kind":"text","text":" event.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage.currentActivityId"}]},"parameters":[{"id":1916,"name":"activityDetails","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ActivityDetails"}}],"type":{"type":"reference","name":"CorrelationId"},"implementationOf":{"type":"reference","id":2240,"name":"EmitsDomainEvents.assignNewActivityId"}}],"implementationOf":{"type":"reference","id":2239,"name":"EmitsDomainEvents.assignNewActivityId"}},{"id":1917,"name":"currentActivityId","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":268,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L268"}],"signatures":[{"id":1918,"name":"currentActivityId","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"inline-tag","tag":"@apilink","text":"CorrelationId"},{"kind":"text","text":" for the current "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage.assignNewSceneId"}]},"type":{"type":"reference","name":"CorrelationId"}}]},{"id":1919,"name":"waitForNextCue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":284,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L284"}],"signatures":[{"id":1920,"name":"waitForNextCue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a Promise that will be resolved when any asynchronous\\npost-processing activities performed by Serenity/JS are completed.\\n\\nInvoked in Serenity/JS test runner adapters to inform the test runner when\\nthe scenario has finished and when it\'s safe for the test runner to proceed\\nwith the next test, or finish execution."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","id":2246,"name":"EmitsDomainEvents.waitForNextCue"}}],"implementationOf":{"type":"reference","id":2245,"name":"EmitsDomainEvents.waitForNextCue"}},{"id":1921,"name":"createError","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":288,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L288"}],"signatures":[{"id":1922,"name":"createError","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1923,"name":"RE","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":348,"name":"RuntimeError"}}],"parameters":[{"id":1924,"name":"errorType","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1925,"name":"__type","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":288,"character":52,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L288"}],"signatures":[{"id":1926,"name":"new errorType","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1927,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","id":1923,"name":"RE"}}]}}},{"id":1928,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":147,"name":"ErrorOptions"}}],"type":{"type":"reference","id":1923,"name":"RE"}}]}],"groups":[{"title":"Constructors","children":[1865]},{"title":"Methods","children":[1886,1889,1892,1894,1896,1899,1902,1908,1910,1912,1914,1917,1919,1921]}],"sources":[{"fileName":"packages/core/src/stage/Stage.ts","line":39,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/Stage.ts#L39"}],"implementedTypes":[{"type":"reference","id":2236,"name":"EmitsDomainEvents"}],"permalink":"/api/core/class/Stage","previousId":1781,"nextId":1938},{"id":1938,"name":"StageCrewMember","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"You can think of the "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" as an in-memory microservice that reacts to "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent|domain events"},{"kind":"text","text":",\\npublished by the "},{"kind":"inline-tag","tag":"@apilink","text":"StageManager"},{"kind":"text","text":", and originally emitted by "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actors"},{"kind":"text","text":" performing activities and Serenity/JS\\ntest runner adapters notifying the framework about test scenario-specific events like "},{"kind":"inline-tag","tag":"@apilink","text":"SceneStarts"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"SceneFinishes"},{"kind":"text","text":".\\n\\nEvery "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" receives a reference to the "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":",\\nand therefore "},{"kind":"inline-tag","tag":"@apilink","text":"StageManager"},{"kind":"text","text":" as well, which enables them to emit "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent"},{"kind":"text","text":"s back.\\n\\nThis interface is useful when you\'re interested in implementing custom Serenity/JS reporters or supporting services.\\n\\n## Implementing a custom StageCrewMember\\n\\n"},{"kind":"code","text":"```ts\\nimport { Stage, StageCrewMember } from \'@serenity-js/core\'\\nimport * as events from \'@serenity-js/core/lib/events\'\\nimport { ArbitraryTag } from \'@serenity-js/core/lib/model\'\\n\\nexport class TestRunnerTagger implements StageCrewMember {\\n\\n  static using(tagName: string) {\\n    return new TestRunnerTagger(tagName);\\n  }\\n\\n  protected constructor(\\n    private readonly tagName: string,\\n    private stage?: Stage,\\n  ) {\\n  }\\n\\n  assignedTo(stage: Stage): StageCrewMember {\\n    this.stage = stage;\\n    return this;\\n  }\\n\\n  notifyOf(event: events.DomainEvent): void {\\n    if (event instanceof events.TestRunnerDetected) {\\n      this.stage.announce(\\n        new events.SceneTagged(\\n          this.stage.currentSceneId(),\\n          new ArbitraryTag(this.tagName),\\n          this.stage.currentTime()\\n        )\\n      )\\n    }\\n  }\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using the custom StageCrewMember\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    TestRunnerTagger.using(`Node:${ process.version }`),\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.crew"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"configure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ListensToDomainEvents"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent"}]},"children":[{"id":1942,"name":"notifyOf","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/ListensToDomainEvents.ts","line":23,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/ListensToDomainEvents.ts#L23"}],"signatures":[{"id":1943,"name":"notifyOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Handles "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent"},{"kind":"text","text":" objects emitted by the "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":"\\nthat this "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" is assigned to."}]},"parameters":[{"id":1944,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2224,"name":"DomainEvent"}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":1783,"name":"ListensToDomainEvents.notifyOf"}}],"inheritedFrom":{"type":"reference","id":1782,"name":"ListensToDomainEvents.notifyOf"}},{"id":1939,"name":"assignedTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":78,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageCrewMember.ts#L78"}],"signatures":[{"id":1940,"name":"assignedTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Assigns a "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":" to this "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"}]},"parameters":[{"id":1941,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1863,"name":"Stage"}}],"type":{"type":"reference","id":1938,"name":"StageCrewMember"}}]}],"groups":[{"title":"Methods","children":[1942,1939]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMember.ts","line":73,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageCrewMember.ts#L73"}],"extendedTypes":[{"type":"reference","id":1781,"name":"ListensToDomainEvents"}],"implementedBy":[{"type":"reference","id":1719,"name":"ArtifactArchiver"},{"type":"reference","id":1762,"name":"StreamReporter"}],"permalink":"/api/core/interface/StageCrewMember","previousId":1863,"nextId":1945},{"id":1945,"name":"StageCrewMemberBuilder","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Use a "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder"},{"kind":"text","text":" to configure complex "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" objects.\\n\\nUseful when you\'re interested in implementing custom reporters with multiple configuration options.\\nSee "},{"kind":"inline-tag","tag":"@apilink","text":"ConsoleReporter"},{"kind":"text","text":" for an example.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilderDependencies"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.crew"}]},"children":[{"id":1946,"name":"build","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":23,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageCrewMemberBuilder.ts#L23"}],"signatures":[{"id":1947,"name":"build","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":", giving it access to shared dependencies\\nsuch as "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"OutputStream"}]},"parameters":[{"id":1948,"name":"dependencies","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1950,"name":"StageCrewMemberBuilderDependencies"}}],"type":{"type":"reference","id":1949,"name":"T"}}]}],"groups":[{"title":"Methods","children":[1946]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilder.ts","line":17,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageCrewMemberBuilder.ts#L17"}],"typeParameters":[{"id":1949,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":1781,"name":"ListensToDomainEvents"},"default":{"type":"reference","id":1781,"name":"ListensToDomainEvents"}}],"permalink":"/api/core/interface/StageCrewMemberBuilder","previousId":1938,"nextId":1950},{"id":1950,"name":"StageCrewMemberBuilderDependencies","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Dependencies injected by "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity.configure"},{"kind":"text","text":" into "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder.build"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder"}]},"children":[{"id":1951,"name":"stage","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":13,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageCrewMemberBuilderDependencies.ts#L13"}],"type":{"type":"reference","id":1863,"name":"Stage"}},{"id":1952,"name":"outputStream","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":14,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageCrewMemberBuilderDependencies.ts#L14"}],"type":{"type":"reference","id":1977,"name":"OutputStream"}}],"groups":[{"title":"Properties","children":[1951,1952]}],"sources":[{"fileName":"packages/core/src/stage/StageCrewMemberBuilderDependencies.ts","line":12,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageCrewMemberBuilderDependencies.ts#L12"}],"permalink":"/api/core/interface/StageCrewMemberBuilderDependencies","previousId":1945,"nextId":1953},{"id":1953,"name":"StageManager","kind":128,"kindString":"Class","flags":{},"children":[{"id":1954,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":14,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageManager.ts#L14"}],"signatures":[{"id":1955,"name":"new StageManager","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1956,"name":"cueTimeout","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1511,"name":"Duration"}},{"id":1957,"name":"clock","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1483,"name":"Clock"}}],"type":{"type":"reference","id":1953,"name":"StageManager"}}]},{"id":1962,"name":"register","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":18,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageManager.ts#L18"}],"signatures":[{"id":1963,"name":"register","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1964,"name":"subscribers","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":1781,"name":"ListensToDomainEvents"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1965,"name":"deregister","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":22,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageManager.ts#L22"}],"signatures":[{"id":1966,"name":"deregister","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1967,"name":"subscriber","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1781,"name":"ListensToDomainEvents"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1968,"name":"notifyOf","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":26,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageManager.ts#L26"}],"signatures":[{"id":1969,"name":"notifyOf","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1970,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2224,"name":"DomainEvent"}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1971,"name":"waitForAsyncOperationsToComplete","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":32,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageManager.ts#L32"}],"signatures":[{"id":1972,"name":"waitForAsyncOperationsToComplete","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":1973,"name":"waitForNextCue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":52,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageManager.ts#L52"}],"signatures":[{"id":1974,"name":"waitForNextCue","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":1975,"name":"currentTime","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":69,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageManager.ts#L69"}],"signatures":[{"id":1976,"name":"currentTime","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns current wall clock time."}]},"type":{"type":"reference","id":1608,"name":"Timestamp"},"implementationOf":{"type":"reference","id":1656,"name":"TellsTime.currentTime"}}],"implementationOf":{"type":"reference","id":1655,"name":"TellsTime.currentTime"}}],"groups":[{"title":"Constructors","children":[1954]},{"title":"Methods","children":[1962,1965,1968,1971,1973,1975]}],"sources":[{"fileName":"packages/core/src/stage/StageManager.ts","line":10,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/StageManager.ts#L10"}],"implementedTypes":[{"type":"reference","id":1654,"name":"TellsTime"}],"permalink":"/api/core/class/StageManager","previousId":1950,"nextId":1719},{"id":1719,"name":"ArtifactArchiver","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Stores any "},{"kind":"inline-tag","tag":"@apilink","text":"Artifact|artifacts"},{"kind":"text","text":" emitted via "},{"kind":"inline-tag","tag":"@apilink","text":"ArtifactGenerated"},{"kind":"text","text":" events on the "},{"kind":"inline-tag","tag":"@apilink","text":"FileSystem"},{"kind":"text","text":".\\n\\n## Registering "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { ArtifactArchiver, configure } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.storingArtifactsAt(`/target/site/serenity`),\\n  ]\\n  // other Serenity/JS config\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n  testDir: \'./spec\',\\n\\n  reporter: [\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        \'@serenity-js/serenity-bdd\',\\n        [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n        [ \'@serenity-js/core:StreamReporter\', { outputFile: \'target/events.ndjson\' }]\\n      ]\\n      // other Serenity/JS config\\n    }]\\n  ],\\n  // other Playwright Test config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n     \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n    ]\\n    // other Serenity/JS config\\n  },\\n  // other WebdriverIO config\\n}\\n```"}]},"children":[{"id":1720,"name":"storingArtifactsAt","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":111,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts#L111"}],"signatures":[{"id":1721,"name":"storingArtifactsAt","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" storing artifacts in a given "},{"kind":"code","text":"`destination`"},{"kind":"text","text":".\\nThe "},{"kind":"code","text":"`destination`"},{"kind":"text","text":" directory will be created automatically and recursively if it doesn\'t exist."}]},"parameters":[{"id":1722,"name":"destination","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","id":1938,"name":"StageCrewMember"}}]},{"id":1723,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":125,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts#L125"}],"signatures":[{"id":1724,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"code","text":"`ArtifactArchiver`"},{"kind":"text","text":" storing artifacts in a given "},{"kind":"code","text":"`outputDirectory`"},{"kind":"text","text":".\\nThe "},{"kind":"code","text":"`outputDirectory`"},{"kind":"text","text":" will be created automatically and recursively if it doesn\'t exist."}]},"parameters":[{"id":1725,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1726,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1727,"name":"outputDirectory","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":125,"character":30,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts#L125"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1727]}],"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":125,"character":28,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts#L125"}]}}}],"type":{"type":"reference","id":1938,"name":"StageCrewMember"}}]},{"id":1728,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":136,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts#L136"}],"signatures":[{"id":1729,"name":"new ArtifactArchiver","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1730,"name":"fileSystem","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FileSystem","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/API/FileSystem"}},{"id":1731,"name":"stage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" should be assigned to"}]},"type":{"type":"reference","id":1863,"name":"Stage"}}],"type":{"type":"reference","id":1719,"name":"ArtifactArchiver"}}]},{"id":1734,"name":"assignedTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":142,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts#L142"}],"signatures":[{"id":1735,"name":"assignedTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Assigns a "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":" to this "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"}]},"parameters":[{"id":1736,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1863,"name":"Stage"}}],"type":{"type":"reference","id":1938,"name":"StageCrewMember"},"implementationOf":{"type":"reference","id":1940,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","id":1939,"name":"StageCrewMember.assignedTo"}},{"id":1737,"name":"notifyOf","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":157,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts#L157"}],"signatures":[{"id":1738,"name":"notifyOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Handles "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent"},{"kind":"text","text":" objects emitted by the "},{"kind":"inline-tag","tag":"@apilink","text":"StageManager"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"}]},{"tag":"@listens","content":[]},{"tag":"@emits","content":[]}]},"parameters":[{"id":1739,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2224,"name":"DomainEvent"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","id":1943,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","id":1942,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Methods","children":[1720,1723,1734,1737]},{"title":"Constructors","children":[1728]}],"sources":[{"fileName":"packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts","line":103,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/artifact-archiver/ArtifactArchiver.ts#L103"}],"implementedTypes":[{"type":"reference","id":1938,"name":"StageCrewMember"}],"permalink":"/api/core/class/ArtifactArchiver","previousId":1953,"nextId":1762},{"id":1762,"name":"StreamReporter","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Serialises all the "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent"},{"kind":"text","text":" objects it receives and streams\\nthem as [ndjson](http://ndjson.org/) to the output stream or file.\\n\\nUseful when debugging issues related to custom Serenity/JS test runner adapters.\\n\\n## Registering "},{"kind":"code","text":"`StreamReporter`"},{"kind":"text","text":" programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, StreamReporter } from \'@serenity-js/core\'\\n\\nconfigure({\\n  crew: [\\n    new StreamReporter(process.stdout)\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Writing "},{"kind":"code","text":"`DomainEvents`"},{"kind":"text","text":" to a file\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, StreamReporter } from \'@serenity-js/core\'\\nimport fs = require(\'fs\')\\n\\nconfigure({\\n  crew: [\\n    new StreamReporter(fs.createWriteStream(\'./events.ndjson\'))\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`StreamReporter`"},{"kind":"text","text":" with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n  testDir: \'./spec\',\\n\\n  reporter: [\\n    [ \'@serenity-js/playwright-test\', {\\n      crew: [\\n        [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' }]\\n      ]\\n      // other Serenity/JS config\\n    }]\\n  ],\\n  // other Playwright Test config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`StreamReporter`"},{"kind":"text","text":" with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' }]\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`StreamReporter`"},{"kind":"text","text":" with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      \'@serenity-js/serenity-bdd\',\\n      [ \'@serenity-js/core:StreamReporter\', { outputFile: \'./events.ndjson\' }]\\n    ]\\n    // other Serenity/JS config\\n  },\\n  // other WebdriverIO config\\n}\\n```"}]},"children":[{"id":1763,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":110,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/stream-reporter/StreamReporter.ts#L110"}],"signatures":[{"id":1764,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`StreamReporter`"},{"kind":"text","text":" outputting a stream of "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent|domain events"},{"kind":"text","text":"\\nto an "},{"kind":"code","text":"`outputFile`"},{"kind":"text","text":" at the given location."}]},"parameters":[{"id":1765,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1766,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1767,"name":"outputFile","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":110,"character":30,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/stream-reporter/StreamReporter.ts#L110"}],"type":{"type":"intrinsic","name":"string"}},{"id":1768,"name":"cwd","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":110,"character":50,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/stream-reporter/StreamReporter.ts#L110"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[1767,1768]}],"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":110,"character":28,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/stream-reporter/StreamReporter.ts#L110"}]}}}],"type":{"type":"reference","id":1938,"name":"StageCrewMember"}}]},{"id":1769,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":126,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/stream-reporter/StreamReporter.ts#L126"}],"signatures":[{"id":1770,"name":"new StreamReporter","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1771,"name":"output","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A Writable stream that should receive the output"}]},"type":{"type":"reference","name":"Writable","qualifiedName":"internal.Writable","package":"@types/node"},"defaultValue":"process.stdout"},{"id":1772,"name":"stage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The stage this "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" should be assigned to"}]},"type":{"type":"reference","id":1863,"name":"Stage"}}],"type":{"type":"reference","id":1762,"name":"StreamReporter"}}]},{"id":1775,"name":"assignedTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":141,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/stream-reporter/StreamReporter.ts#L141"}],"signatures":[{"id":1776,"name":"assignedTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a new instance of this "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" and assigns it to a given "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"A new instance of this "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"}]}]},"parameters":[{"id":1777,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An instance of a "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":" this "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" will be assigned to"}]},"type":{"type":"reference","id":1863,"name":"Stage"}}],"type":{"type":"reference","id":1938,"name":"StageCrewMember"},"implementationOf":{"type":"reference","id":1940,"name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","id":1939,"name":"StageCrewMember.assignedTo"}},{"id":1778,"name":"notifyOf","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":152,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/stream-reporter/StreamReporter.ts#L152"}],"signatures":[{"id":1779,"name":"notifyOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Handles "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent"},{"kind":"text","text":" objects emitted by the "},{"kind":"inline-tag","tag":"@apilink","text":"StageManager"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@listens","content":[]}]},"parameters":[{"id":1780,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2224,"name":"DomainEvent"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","id":1943,"name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","id":1942,"name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Methods","children":[1763,1775,1778]},{"title":"Constructors","children":[1769]}],"sources":[{"fileName":"packages/core/src/stage/crew/stream-reporter/StreamReporter.ts","line":102,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/crew/stream-reporter/StreamReporter.ts#L102"}],"implementedTypes":[{"type":"reference","id":1938,"name":"StageCrewMember"}],"permalink":"/api/core/class/StreamReporter","previousId":1719,"nextId":1785},{"id":1785,"name":"DomainEventQueue","kind":128,"kindString":"Class","flags":{},"children":[{"id":1786,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L12"}],"signatures":[{"id":1787,"name":"new DomainEventQueue","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":1788,"name":"items","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","id":2224,"name":"DomainEvent"},{"type":"reflection","declaration":{"id":1789,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1790,"name":"sceneId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":48,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L12"}],"type":{"type":"reference","name":"CorrelationId"}}],"groups":[{"title":"Properties","children":[1790]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":12,"character":46,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L12"}]}}]}}}],"type":{"type":"reference","id":1785,"name":"DomainEventQueue"}}]},{"id":1794,"name":"sceneId","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":16,"character":8,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L16"}],"getSignature":{"id":1795,"name":"sceneId","kind":524288,"kindString":"Get signature","flags":{},"type":{"type":"reference","name":"CorrelationId"}}},{"id":1796,"name":"first","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L22"}],"signatures":[{"id":1797,"name":"first","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":2224,"name":"DomainEvent"},{"type":"reflection","declaration":{"id":1798,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1799,"name":"sceneId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":29,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L22"}],"type":{"type":"reference","name":"CorrelationId"}}],"groups":[{"title":"Properties","children":[1799]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":22,"character":27,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L22"}]}}]}}]},{"id":1800,"name":"enqueue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L26"}],"signatures":[{"id":1801,"name":"enqueue","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1802,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":2224,"name":"DomainEvent"},{"type":"reflection","declaration":{"id":1803,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1804,"name":"sceneId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":35,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L26"}],"type":{"type":"reference","name":"CorrelationId"}}],"groups":[{"title":"Properties","children":[1804]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":26,"character":33,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L26"}]}}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1805,"name":"drain","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L30"}],"signatures":[{"id":1806,"name":"drain","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","id":2224,"name":"DomainEvent"},{"type":"reflection","declaration":{"id":1807,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1808,"name":"sceneId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":35,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L30"}],"type":{"type":"reference","name":"CorrelationId"}}],"groups":[{"title":"Properties","children":[1808]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":30,"character":33,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L30"}]}}]}}}]},{"id":1809,"name":"reduce","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L34"}],"signatures":[{"id":1810,"name":"reduce","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":1811,"name":"U","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":1812,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1813,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L34"}],"signatures":[{"id":1814,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1815,"name":"previousValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1811,"name":"U"}},{"id":1816,"name":"currentValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":2224,"name":"DomainEvent"},{"type":"reflection","declaration":{"id":1817,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1818,"name":"sceneId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":67,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L34"}],"type":{"type":"reference","name":"CorrelationId"}}],"groups":[{"title":"Properties","children":[1818]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":34,"character":65,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L34"}]}}]}},{"id":1819,"name":"currentIndex","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","id":1811,"name":"U"}}]}}},{"id":1820,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1811,"name":"U"}}],"type":{"type":"reference","id":1811,"name":"U"}}]}],"groups":[{"title":"Constructors","children":[1786]},{"title":"Accessors","children":[1794]},{"title":"Methods","children":[1796,1800,1805,1809]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueue.ts","line":9,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueue.ts#L9"}],"permalink":"/api/core/class/DomainEventQueue","previousId":1762,"nextId":1821},{"id":1821,"name":"DomainEventQueues","kind":128,"kindString":"Class","flags":{},"children":[{"id":1822,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":1823,"name":"new DomainEventQueues","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":1821,"name":"DomainEventQueues"}}]},{"id":1831,"name":"enqueue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueues.ts#L18"}],"signatures":[{"id":1832,"name":"enqueue","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1833,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","id":2224,"name":"DomainEvent"},{"type":"reflection","declaration":{"id":1834,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1835,"name":"sceneId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":35,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueues.ts#L18"}],"type":{"type":"reference","name":"CorrelationId"}}],"groups":[{"title":"Properties","children":[1835]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":18,"character":33,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueues.ts#L18"}]}}]}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1836,"name":"forEach","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueues.ts#L29"}],"signatures":[{"id":1837,"name":"forEach","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1838,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":1839,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":29,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueues.ts#L29"}],"signatures":[{"id":1840,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1841,"name":"queue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":1785,"name":"DomainEventQueue"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":1842,"name":"drainQueueFor","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueues.ts#L33"}],"signatures":[{"id":1843,"name":"drainQueueFor","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":1844,"name":"sceneId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}}],"type":{"type":"array","elementType":{"type":"intersection","types":[{"type":"reference","id":2224,"name":"DomainEvent"},{"type":"reflection","declaration":{"id":1845,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":1846,"name":"sceneId","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":65,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueues.ts#L33"}],"type":{"type":"reference","name":"CorrelationId"}}],"groups":[{"title":"Properties","children":[1846]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":33,"character":63,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueues.ts#L33"}]}}]}}}]}],"groups":[{"title":"Constructors","children":[1822]},{"title":"Methods","children":[1831,1836,1842]}],"sources":[{"fileName":"packages/core/src/stage/queues/DomainEventQueues.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/stage/queues/DomainEventQueues.ts#L11"}],"permalink":"/api/core/class/DomainEventQueues","previousId":1785,"nextId":1654}],"groups":[{"title":"Abilities","children":[491,496,523,526,531]},{"title":"Activities","children":[650,696,701,960]},{"title":"Actors","children":[477,480,518,559,564,645,947]},{"title":"Errors","children":[125,147,75,119,453,156,170,180,192,218,244,270,296,322,348,375,401,427]},{"title":"Expectations","children":[1002,1008,1068,1095,1113,1131]},{"title":"Notes","children":[752,759,804,837,834]},{"title":"Questions","children":[56,52,48,641,643,856,927,939,944,1380,1657,952,1149,1248,1352,1356,1368,1364]},{"title":"Screenplay Pattern","children":[569,587,728,859,1382,483]},{"title":"Serenity","children":[1659,65,66,482,471,474]},{"title":"Stage","children":[1707,1781,1863,1938,1945,1950,1953,1719,1762,1785,1821]},{"title":"Time","children":[1654,1403,1424,1448,1483,1504,1511,1568,1585,1608]}],"sources":[{"fileName":"packages/core/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/core/src/index.ts#L1"}],"permalink":"/api/core"},"urlSlug":"core"}],"packageName":"@serenity-js/core","packageVersion":"3.10.2"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":36,"name":"@serenity-js/assertions","kind":2,"kindString":"Module","flags":{},"children":[{"id":3927,"name":"Ensure","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" to "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":"\\nverifies if the resolved value of the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\nmeets the specified "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":".\\nIf not, it throws an "},{"kind":"inline-tag","tag":"@apilink","text":"AssertionError"},{"kind":"text","text":".\\n\\nUse "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":" to verify the state of the system under test.\\n\\n## Basic usage with static values\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.that(\'Hello world!\', equals(\'Hello world!\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Composing expectations with "},{"kind":"code","text":"`and`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.that(\'Hello world!\', and(startsWith(\'Hello\'), endsWith(\'!\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n## Overriding the type of Error thrown upon assertion failure\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, TestCompromisedError } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\n\\nawait actorCalled(\'Erica\')\\n  .whoCan(CallAnApi.at(\'https://example.com\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/api/health\')),\\n    Ensure.that(LastResponse.status(), equals(200))\\n      .otherwiseFailWith(TestCompromisedError, \'The server is down, please cheer it up!\')\\n  )\\n```"}]},"children":[{"id":3928,"name":"that","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":86,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/Ensure.ts#L86"}],"signatures":[{"id":3929,"name":"that","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" to "},{"kind":"code","text":"`Ensure`"},{"kind":"text","text":", which\\nverifies if the resolved value of the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\nmeets the specified "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":".\\nIf not, it immediately throws an "},{"kind":"inline-tag","tag":"@apilink","text":"AssertionError"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@returns","content":[]}]},"typeParameter":[{"id":3930,"name":"Actual_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":3931,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" describing the actual state of the system."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":3930,"name":"Actual_Type"}],"name":"Answerable"}},{"id":3932,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" you expect the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value to meet"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":3930,"name":"Actual_Type"}],"name":"Expectation"}}],"type":{"type":"reference","id":3927,"typeArguments":[{"type":"reference","id":3930,"name":"Actual_Type"}],"name":"Ensure"}}]},{"id":3933,"name":"eventually","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":107,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/Ensure.ts#L107"}],"signatures":[{"id":3934,"name":"eventually","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"EnsureEventually"},{"kind":"text","text":", which\\nverifies if the resolved value of the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\nmeets the specified "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" within the expected timeframe.\\n\\nIf the expectation is not met by the time the timeout expires, the interaction throws an "},{"kind":"inline-tag","tag":"@apilink","text":"AssertionError"},{"kind":"text","text":".\\n"},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":" ignores retries the evaluation if resolving the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" results in an "},{"kind":"inline-tag","tag":"@apilink","text":"OptionalNotPresentError"},{"kind":"text","text":",\\nbut rethrows any other errors."}],"blockTags":[{"tag":"@returns","content":[]}]},"typeParameter":[{"id":3935,"name":"Actual_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":3936,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" describing the actual state of the system."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":3935,"name":"Actual_Type"}],"name":"Answerable"}},{"id":3937,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" you expect the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value to meet"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":3935,"name":"Actual_Type"}],"name":"Expectation"}}],"type":{"type":"reference","id":3973,"typeArguments":[{"type":"reference","id":3935,"name":"Actual_Type"}],"name":"EnsureEventually"}}]},{"id":3956,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":127,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/Ensure.ts#L127"}],"signatures":[{"id":3957,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":3958,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"CollectsArtifacts"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"overwrites":{"type":"reference","name":"Interaction.performAs"}},{"id":3959,"name":"otherwiseFailWith","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":157,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/Ensure.ts#L157"}],"signatures":[{"id":3960,"name":"otherwiseFailWith","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Overrides the default "},{"kind":"inline-tag","tag":"@apilink","text":"AssertionError"},{"kind":"text","text":" thrown when\\nthe actual value does not meet the expectation."}]},"parameters":[{"id":3961,"name":"typeOfRuntimeError","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A constructor function producing a subtype of "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":" to throw, e.g. "},{"kind":"inline-tag","tag":"@apilink","text":"TestCompromisedError"}]},"type":{"type":"reflection","declaration":{"id":3962,"name":"__type","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":157,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/Ensure.ts#L157"}],"signatures":[{"id":3963,"name":"new typeOfRuntimeError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3964,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3965,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","name":"RuntimeError"}}]}}},{"id":3966,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The message explaining the failure"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":3968,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":3969,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}},{"id":3970,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":3971,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","name":"Interaction.toString"}}],"groups":[{"title":"Methods","children":[3928,3933,3956,3959,3968,3970]}],"sources":[{"fileName":"packages/assertions/src/Ensure.ts","line":70,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/Ensure.ts#L70"}],"typeParameters":[{"id":3972,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","name":"Interaction"}],"permalink":"/api/assertions/class/Ensure","nextId":3973},{"id":3973,"name":"EnsureEventually","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" to "},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":"\\nverifies if the resolved value of the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\nmeets the specified "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" within the expected timeframe.\\n\\nIf the expectation is not met by the time the timeout expires, the interaction throws an "},{"kind":"inline-tag","tag":"@apilink","text":"AssertionError"},{"kind":"text","text":".\\n"},{"kind":"code","text":"`EnsureEventually`"},{"kind":"text","text":" retries the evaluation if resolving the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" results in an "},{"kind":"inline-tag","tag":"@apilink","text":"ListItemNotFoundError"},{"kind":"text","text":",\\nbut rethrows any other errors.\\n\\n:::tip Use the factory method\\nUse the factory method "},{"kind":"inline-tag","tag":"@apilink","text":"Ensure.eventually"},{"kind":"text","text":" to instantiate this interaction.\\n:::\\n\\n## Basic usage with dynamic values\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    equals(\'Learn Serenity/JS!\')\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Composing expectations with "},{"kind":"code","text":"`and`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    and(startsWith(\'Serenity\'), endsWith(\'!\'))\\n  )\\n)\\n```"},{"kind":"text","text":"\\n\\n## Overriding the type of Error thrown upon assertion failure\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { and, Ensure, startsWith, endsWith } from \'@serenity-js/assertions\'\\nimport { Text, PageElement, By } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Erica\').attemptsTo(\\n  Ensure.eventually(\\n    Text.of(PageElement.located(By.css(\'h1\'))),\\n    and(startsWith(\'Serenity\'), endsWith(\'!\'))\\n  ).otherwiseFailWith(LogicError, `Looks like we\'re not on the right page`)\\n)\\n```"}],"modifierTags":["@experimental"]},"children":[{"id":3984,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":90,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/EnsureEventually.ts#L90"}],"signatures":[{"id":3985,"name":"new EnsureEventually","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":3986,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":3987,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":3986,"name":"Actual"}],"name":"Answerable"}},{"id":3988,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":3986,"name":"Actual"}],"name":"Expectation"}},{"id":3989,"name":"location","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FileSystemLocation"}},{"id":3990,"name":"timeout","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Duration"}}],"type":{"type":"reference","id":3973,"typeArguments":[{"type":"reference","id":3986,"name":"Actual"}],"name":"EnsureEventually"},"overwrites":{"type":"reference","name":"Interaction.constructor"}}],"overwrites":{"type":"reference","name":"Interaction.constructor"}},{"id":3994,"name":"timeoutAfter","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":104,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/EnsureEventually.ts#L104"}],"signatures":[{"id":3995,"name":"timeoutAfter","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Override the default timeout set via "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.interactionTimeout"},{"kind":"text","text":"."}]},"parameters":[{"id":3996,"name":"timeout","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Duration"}}],"type":{"type":"reference","id":3973,"typeArguments":[{"type":"reference","id":3986,"name":"Actual"}],"name":"EnsureEventually"}}]},{"id":3997,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":111,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/EnsureEventually.ts#L111"}],"signatures":[{"id":3998,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":3999,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"CollectsArtifacts"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"overwrites":{"type":"reference","name":"Interaction.performAs"}},{"id":4000,"name":"otherwiseFailWith","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":159,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/EnsureEventually.ts#L159"}],"signatures":[{"id":4001,"name":"otherwiseFailWith","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Overrides the default "},{"kind":"inline-tag","tag":"@apilink","text":"AssertionError"},{"kind":"text","text":" thrown when\\nthe actual value does not meet the expectation."}]},"parameters":[{"id":4002,"name":"typeOfRuntimeError","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A constructor function producing a subtype of "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"},{"kind":"text","text":" to throw, e.g. "},{"kind":"inline-tag","tag":"@apilink","text":"TestCompromisedError"}]},"type":{"type":"reflection","declaration":{"id":4003,"name":"__type","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":159,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/EnsureEventually.ts#L159"}],"signatures":[{"id":4004,"name":"new typeOfRuntimeError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":4005,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":4006,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","name":"RuntimeError"}}]}}},{"id":4007,"name":"message","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The message explaining the failure"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":4009,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":4010,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}},{"id":4011,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":4012,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","name":"Interaction.toString"}}],"groups":[{"title":"Constructors","children":[3984]},{"title":"Methods","children":[3994,3997,4000,4009,4011]}],"sources":[{"fileName":"packages/assertions/src/EnsureEventually.ts","line":83,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/EnsureEventually.ts#L83"}],"typeParameters":[{"id":4013,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedTypes":[{"type":"reference","name":"Interaction"}],"permalink":"/api/assertions/class/EnsureEventually","previousId":3927,"nextId":4014},{"id":4014,"name":"and","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/and.ts","line":24,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/and.ts#L24"}],"signatures":[{"id":4015,"name":"and","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when all the "},{"kind":"code","text":"`expectations`"},{"kind":"text","text":" are met for the given actual value.\\n\\nUse "},{"kind":"code","text":"`and`"},{"kind":"text","text":" to combine several expectations using logical \\"and\\",\\n\\n## Combining several expectations\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, and, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', and(startsWith(\'Hello\'), endsWith(\'!\'))),\\n)\\n```"}]},"typeParameter":[{"id":4016,"name":"Actual_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":4017,"name":"expectations","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"reference","id":4016,"name":"Actual_Type"}],"name":"Expectation"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":4016,"name":"Actual_Type"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/and","previousId":3973,"nextId":4018},{"id":4018,"name":"contain","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/contain.ts","line":28,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/contain.ts#L28"}],"signatures":[{"id":4019,"name":"contain","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":" contains\\nat least one "},{"kind":"code","text":"`Item`"},{"kind":"text","text":" that is equal to the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\nNote that the equality check performs comparison **by value**\\nusing [TinyTypes "},{"kind":"code","text":"`equal`"},{"kind":"text","text":"](https://github.com/jan-molak/tiny-types/blob/master/src/objects/equal.ts).\\n\\n## Ensuring that the array contains the given item\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, and, startsWith, endsWith } from \'@serenity-js/assertions\'\\n\\nconst items = [ { name: \'apples\' }, { name: \'bananas\' } ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, contain({ name: \'bananas\' })),\\n)\\n```"}]},"typeParameter":[{"id":4020,"name":"Item","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":4021,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"expected","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"reference","id":4020,"name":"Item"}],"name":"Answerable"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":4020,"name":"Item"}}],"name":"Expectation"}}],"permalink":"/api/assertions/function/contain","previousId":4014,"nextId":4022},{"id":4022,"name":"containAtLeastOneItemThat","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/containAtLeastOneItemThat.ts","line":25,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/containAtLeastOneItemThat.ts#L25"}],"signatures":[{"id":4023,"name":"containAtLeastOneItemThat","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":" contains\\nat least one "},{"kind":"code","text":"`Item`"},{"kind":"text","text":" for which the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":" is met.\\n\\n## Ensuring that at least one item in an array meets the expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, containAtLeastOneItemThat, isGreaterThan } from \'@serenity-js/assertions\'\\n\\nconst items = [ 10, 15, 20 ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, containAtLeastOneItemThat(isGreaterThan(18))),\\n)\\n```"}]},"typeParameter":[{"id":4024,"name":"Item","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":4025,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":4024,"name":"Item"}],"name":"Expectation"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":4024,"name":"Item"}}],"name":"Expectation"}}],"permalink":"/api/assertions/function/containAtLeastOneItemThat","previousId":4018,"nextId":4026},{"id":4026,"name":"containItemsWhereEachItem","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/containItemsWhereEachItem.ts","line":25,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/containItemsWhereEachItem.ts#L25"}],"signatures":[{"id":4027,"name":"containItemsWhereEachItem","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when all the items of the actual array of "},{"kind":"code","text":"`Item[]`"},{"kind":"text","text":"\\nmeet the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that all the items in an array meet the expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, containItemsWhereEachItem, endsWith } from \'@serenity-js/assertions\'\\n\\nconst items = [ \'Monday\', \'Tuesday\', \'Wednesday\', \'Thursday\', \'Friday\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(items, containItemsWhereEachItem(endsWith(\'day\'))),\\n)\\n```"}]},"typeParameter":[{"id":4028,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":4029,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":4028,"name":"Actual"}],"name":"Expectation"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":4028,"name":"Actual"}}],"name":"Expectation"}}],"permalink":"/api/assertions/function/containItemsWhereEachItem","previousId":4022,"nextId":4030},{"id":4030,"name":"endsWith","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/endsWith.ts","line":22,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/endsWith.ts#L22"}],"signatures":[{"id":4031,"name":"endsWith","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nends with the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string ends with an expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', endsWith(\'!\')),\\n)\\n```"}]},"parameters":[{"id":4032,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"expected","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/endsWith","previousId":4026,"nextId":4033},{"id":4033,"name":"equals","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/equals.ts","line":29,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/equals.ts#L29"}],"signatures":[{"id":4034,"name":"equals","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual value\\nis equal to the resolved value of "},{"kind":"code","text":"`expectedValue`"},{"kind":"text","text":".\\n\\nNote that the equality check performs comparison **by value**\\nusing [TinyTypes "},{"kind":"code","text":"`equal`"},{"kind":"text","text":"](https://github.com/jan-molak/tiny-types/blob/master/src/objects/equal.ts).\\n\\n## Ensuring that the actual value equals expected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst actual   = { name: \'apples\' }\\nconst expected = { name: \'apples\' }\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(actual, equals(expected)),\\n)\\n```"}]},"typeParameter":[{"id":4035,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":4036,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"expected","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"reference","id":4035,"name":"T"}],"name":"Answerable"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":4035,"name":"T"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/equals","previousId":4030,"nextId":4037},{"id":4037,"name":"includes","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/includes.ts","line":41,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/includes.ts#L41"}],"signatures":[{"id":4038,"name":"includes","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nincludes a substring of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string includes the expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', includes(\'World\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that page URL includes the expected substring\\n\\n"},{"kind":"inline-tag","tag":"@apilink","text":"Page.url|Page.current().url()"},{"kind":"text","text":" returns a "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter|`QuestionAdapter<URL>`"},{"kind":"text","text":",\\na proxy object around the standard Node.js [URL](https://nodejs.org/api/url.html) class,\\noffering access to "},{"kind":"code","text":"`string`"},{"kind":"text","text":" properties such as ["},{"kind":"code","text":"`hostname`"},{"kind":"text","text":"](https://nodejs.org/api/url.html#urlobjecthostname),\\n["},{"kind":"code","text":"`pathname`"},{"kind":"text","text":"](https://nodejs.org/api/url.html#urlobjectpathname), and so on.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org/handbook\'),\\n  Ensure.that(Page.current().url().hostname, includes(\'serenity-js\')),\\n  Ensure.that(Page.current().url().pathname, includes(\'book\')),\\n)\\n```"}]},"parameters":[{"id":4039,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"expected","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/includes","previousId":4033,"nextId":4040},{"id":4040,"name":"isAfter","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/isAfter.ts","line":42,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/isAfter.ts#L42"}],"signatures":[{"id":4041,"name":"isAfter","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual value of type "},{"kind":"code","text":"`Date`"},{"kind":"text","text":"\\nis after the expected "},{"kind":"code","text":"`Date`"},{"kind":"text","text":".\\n\\n## Ensuring that a given date is after the expected date\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isAfter } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(new Date(\'2022-01-01\'), isAfter(new Date(\'1995-01-01\'))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given date is within the expected date range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, isAfter, isBefore } from \'@serenity-js/assertions\'\\n\\nconst isWithinDateRange = (lowerBound: Answerable<Date>, upperBound: Answerable<Date>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(isAfter(lowerBound), isBefore(upperBound))\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    new Date(\'2022-01-01\'),\\n    isWithinDateRange(new Date(\'1995-01-01\'), new Date(\'2025-01-01\'))\\n  ),\\n)\\n```"}]},"parameters":[{"id":4042,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"expected","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"reference","name":"Date","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date","qualifiedName":"Date","package":"typescript"}],"name":"Answerable"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date","qualifiedName":"Date","package":"typescript"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/isAfter","previousId":4037,"nextId":4043},{"id":4043,"name":"isBefore","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/isBefore.ts","line":42,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/isBefore.ts#L42"}],"signatures":[{"id":4044,"name":"isBefore","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual value of type "},{"kind":"code","text":"`Date`"},{"kind":"text","text":"\\nis before the expected "},{"kind":"code","text":"`Date`"},{"kind":"text","text":".\\n\\n## Ensuring that a given date is after the expected date\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isBefore } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(new Date(\'1995-01-01\'), isBefore(new Date(\'2022-01-01\'))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given date is within the expected date range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, isAfter, isBefore } from \'@serenity-js/assertions\'\\n\\nconst isWithinDateRange = (lowerBound: Answerable<Date>, upperBound: Answerable<Date>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(isAfter(lowerBound), isBefore(upperBound))\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    new Date(\'2022-01-01\'),\\n    isWithinDateRange(new Date(\'1995-01-01\'), new Date(\'2025-01-01\'))\\n  ),\\n)\\n```"}]},"parameters":[{"id":4045,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"expected","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"reference","name":"Date","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date","qualifiedName":"Date","package":"typescript"}],"name":"Answerable"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Date","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date","qualifiedName":"Date","package":"typescript"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/isBefore","previousId":4040,"nextId":4046},{"id":4046,"name":"isCloseTo","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/isCloseTo.ts","line":24,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/isCloseTo.ts#L24"}],"signatures":[{"id":4047,"name":"isCloseTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual value\\nis within a given \xb1 "},{"kind":"code","text":"`absoluteTolerance`"},{"kind":"text","text":" range of the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" value.\\n\\n## Ensuring that a given floating point number is close to the expected number\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { Ensure, isCloseTo } from \'@serenity-js/assertions\'\\n\\n await actorCalled(\'Iris\').attemptsTo(\\n     Ensure.that(10.123, isCloseTo(10, 0.2))\\n )\\n```"}]},"parameters":[{"id":4048,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"expected","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"type":"named-tuple-member","name":"absoluteTolerance","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/isCloseTo","previousId":4043,"nextId":4049},{"id":4049,"name":"isFalse","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/isFalse.ts","line":23,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/isFalse.ts#L23"}],"signatures":[{"id":4050,"name":"isFalse","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value\\nis "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Ensuring that a given value is false\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isFalse } from \'@serenity-js/assertions\'\\nimport { Cookie } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(Cookie.called(\'example-regular-cookie\').isSecure(), isFalse()),\\n)\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/isFalse","previousId":4046,"nextId":4051},{"id":4051,"name":"isGreaterThan","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/isGreaterThan.ts","line":45,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/isGreaterThan.ts#L45"}],"signatures":[{"id":4052,"name":"isGreaterThan","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual value of type "},{"kind":"code","text":"`number`"},{"kind":"text","text":"\\nis greater than the expected "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n## Ensuring that a given number is greater than the expected number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isGreaterThan } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(10, isGreaterThan(5)),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given number is within the expected range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, equals, isGreaterThan, isLessThan, or } from \'@serenity-js/assertions\'\\n\\nconst isWithinRange = (lowerBound: Answerable<number>, upperBound: Answerable<number>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(equals(lowerBound), isGreaterThan(lowerBound)),\\n        or(equals(upperBound), isLessThan(upperBound)),\\n      )\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    7,\\n    isWithinRange(5, 10)\\n  ),\\n)\\n```"}]},"parameters":[{"id":4053,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"expected","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/isGreaterThan","previousId":4049,"nextId":4054},{"id":4054,"name":"isLessThan","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/isLessThan.ts","line":45,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/isLessThan.ts#L45"}],"signatures":[{"id":4055,"name":"isLessThan","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual value of type "},{"kind":"code","text":"`number`"},{"kind":"text","text":"\\nis less than the expected "},{"kind":"code","text":"`number`"},{"kind":"text","text":".\\n\\n## Ensuring that a given number is less than the expected number\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isLessThan } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(5, isLessThan(10)),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that a given number is within the expected range\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Expectation, d } from \'@serenity-js/core\'\\nimport { Ensure, and, equals, isGreaterThan, isLessThan, or } from \'@serenity-js/assertions\'\\n\\nconst isWithinRange = (lowerBound: Answerable<number>, upperBound: Answerable<number>) =>\\n  Expectation.to(d`have value that is between ${ lowerBound } and ${ upperBound }`)\\n    .soThatActual(\\n      and(\\n        or(equals(lowerBound), isGreaterThan(lowerBound)),\\n        or(equals(upperBound), isLessThan(upperBound)),\\n      )\\n    ),\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    7,\\n    isWithinRange(5, 10)\\n  ),\\n)\\n```"}]},"parameters":[{"id":4056,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"expected","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/isLessThan","previousId":4051,"nextId":4057},{"id":4057,"name":"isPresent","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/isPresent.ts","line":65,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/isPresent.ts#L65"}],"signatures":[{"id":4058,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" value is not undefined or null.\\n\\nAlso, when the "},{"kind":"code","text":"`actual`"},{"kind":"text","text":" implements "},{"kind":"inline-tag","tag":"@apilink","text":"Optional"},{"kind":"text","text":", the expectation is met when calling "},{"kind":"inline-tag","tag":"@apilink","text":"Optional.isPresent()"},{"kind":"text","text":"\\nreturns an "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n## Ensuring that a value is defined\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, Send, GetRequest, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, isPresent } from \'@serenity-js/assertions\'\\n\\ninterface Product {\\n    name: string;\\n}\\n\\ninterface ProductsResponse {\\n    products: Product[];\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/products\')),\\n    Ensure.that(LastResponse.body<ProductsResponse>().products[0], isPresent()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Checking if a PageElement is present\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Check } from \'@serenity-js/core\';\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\';\\nimport { By, Click, Navigate, PageElement } from \'@serenity-js/web\';\\nimport { Browser, chromium } from \'playwright\';\\n\\nclass NewsletterSubscription {\\n  static modal = () =>\\n    PageElement.located(By.id(\'newsletter-subscription\'))\\n      .describedAs(\'newsletter subscription modal\')\\n\\n  static closeButton = () =>\\n    PageElement.located(By.class(\'.close\'))\\n      .of(NewsletterSubscription.modal())\\n      .describedAs(\'close button\')\\n}\\n\\nconst browser = await chromium.launch({ headless: true });\\n\\nawait actorCalled(\'Isabela\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://example.org`),\\n    Check.whether(NewsletterSubscription.modal(), isPresent())\\n      .andIfSo(Click.on(NewsletterSubscription.closeButton())),\\n  )\\n```"}]},"typeParameter":[{"id":4059,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":4059,"name":"Actual"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/isPresent","previousId":4054,"nextId":4060},{"id":4060,"name":"isTrue","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/isTrue.ts","line":23,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/isTrue.ts#L23"}],"signatures":[{"id":4061,"name":"isTrue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":" value\\nis "},{"kind":"code","text":"`true`"},{"kind":"text","text":".\\n\\n## Ensuring that a given value is true\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, isTrue } from \'@serenity-js/assertions\'\\nimport { Cookie } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(Cookie.called(\'example-secure-cookie\').isSecure(), isTrue()),\\n)\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/isTrue","previousId":4057,"nextId":4062},{"id":4062,"name":"matches","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/matches.ts","line":22,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/matches.ts#L22"}],"signatures":[{"id":4063,"name":"matches","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nmatches the "},{"kind":"code","text":"`expected`"},{"kind":"text","text":" regular expression.\\n\\n## Ensuring that a given string matches a regular expression\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', matches(/[Ww]orld/)),\\n)\\n```"}]},"parameters":[{"id":4064,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"expected","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"reference","name":"RegExp","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp","qualifiedName":"RegExp","package":"typescript"}],"name":"Answerable"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/matches","previousId":4060,"nextId":4065},{"id":4065,"name":"not","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/not.ts","line":25,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/not.ts#L25"}],"signatures":[{"id":4066,"name":"not","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that negates the provided "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that the actual value does not equal the expected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals, not } from \'@serenity-js/assertions\'\\n\\nconst actual   = { name: \'apples\' }\\nconst expected = { name: \'bananas\' }\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(actual, not(equals(expected))),\\n)\\n```"}]},"typeParameter":[{"id":4067,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":4068,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":4067,"name":"Actual"}],"name":"Expectation"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":4067,"name":"Actual"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/not","previousId":4062,"nextId":4069},{"id":4069,"name":"or","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/or.ts","line":24,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/or.ts#L24"}],"signatures":[{"id":4070,"name":"or","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when at least one of the "},{"kind":"code","text":"`expectations`"},{"kind":"text","text":" is met for the given actual value.\\n\\nUse "},{"kind":"code","text":"`or`"},{"kind":"text","text":" to combine several expectations using logical \\"or\\",\\n\\n## Combining several expectations\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, or, startsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', or(startsWith(\'Hello\'), startsWith(\'Hi\'))),\\n)\\n```"}]},"typeParameter":[{"id":4071,"name":"Actual_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":4072,"name":"expectations","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"reference","id":4071,"name":"Actual_Type"}],"name":"Expectation"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":4071,"name":"Actual_Type"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/or","previousId":4065,"nextId":4073},{"id":4073,"name":"property","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/property.ts","line":63,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/property.ts#L63"}],"signatures":[{"id":4074,"name":"property","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the value of\\nthe "},{"kind":"code","text":"`actual[propertyName]`"},{"kind":"text","text":" meets the "},{"kind":"code","text":"`expectation`"},{"kind":"text","text":".\\n\\n## Ensuring that an array has an item\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property } from \'@serenity-js/assertions\'\\n\\nconst list = [ \'hello\', \'world\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(list, property(0, isPresent())),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Ensuring that the property meets an expectation\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property, equals } from \'@serenity-js/assertions\'\\n\\nconst list = [ \'hello\', \'world\' ]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(list, property(\'length\', equals(2))),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Asserting on a list of objects\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, property, equals } from \'@serenity-js/assertions\'\\n\\nconst developers = [{\\n    name: \'Jan\',\\n    id: \'@jan-molak\',\\n}, {\\n    name: \'John\',\\n    id: \'@wakaleo\',\\n}]\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\\n    developers,\\n    containItemsWhereEachItem(\\n      property(\'id\', startsWith(\'@\'))\\n    ),\\n  ),\\n)\\n```"}]},"typeParameter":[{"id":4075,"name":"Actual","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"intrinsic","name":"object"}},{"id":4076,"name":"PropertyName","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"intrinsic","name":"symbol"}]}}],"parameters":[{"id":4077,"name":"propertyName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4076,"name":"PropertyName"}},{"id":4078,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"indexedAccess","indexType":{"type":"reference","id":4076,"name":"PropertyName"},"objectType":{"type":"reference","id":4075,"name":"Actual"}}],"name":"Expectation"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":4075,"name":"Actual"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/property","previousId":4069,"nextId":4079},{"id":4079,"name":"startsWith","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/assertions/src/expectations/startsWith.ts","line":22,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/expectations/startsWith.ts#L22"}],"signatures":[{"id":4080,"name":"startsWith","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|expectation"},{"kind":"text","text":" that is met when the actual "},{"kind":"code","text":"`string`"},{"kind":"text","text":" value\\nstarts with the resolved value of "},{"kind":"code","text":"`expected`"},{"kind":"text","text":".\\n\\n## Ensuring that a given string starts with an expected substring\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, startsWith } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Ester\').attemptsTo(\\n  Ensure.that(\'Hello World!\', startsWith(\'Hello\')),\\n)\\n```"}]},"parameters":[{"id":4081,"name":"answerableArguments","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"named-tuple-member","name":"expected","isOptional":false,"element":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation"}}],"permalink":"/api/assertions/function/startsWith","previousId":4073}],"groups":[{"title":"Activities","children":[3927,3973]},{"title":"Expectations","children":[4014,4018,4022,4026,4030,4033,4037,4040,4043,4046,4049,4051,4054,4057,4060,4062,4065,4069,4073,4079]}],"sources":[{"fileName":"packages/assertions/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/assertions/src/index.ts#L1"}],"permalink":"/api/assertions"},"urlSlug":"assertions"}],"packageName":"@serenity-js/assertions","packageVersion":"3.10.2"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":47,"name":"@serenity-js/web","kind":2,"kindString":"Module","flags":{},"children":[{"id":6465,"name":"BrowserWindowClosedError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown when you\'re trying to take a screenshot of a browser window\\nthat\'s already been closed.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TakeScreenshot"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Page.takeScreenshot"}]},"children":[{"id":6488,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"LogicError.name"}},{"id":6489,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"LogicError.message"}},{"id":6490,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"LogicError.stack"}},{"id":6483,"name":"cause","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.d.ts","line":67,"character":13}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","name":"LogicError.cause"}},{"id":6484,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.d.ts","line":77,"character":4}],"signatures":[{"id":6485,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"LogicError.toString"}}],"inheritedFrom":{"type":"reference","name":"LogicError.toString"}},{"id":6486,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.d.ts","line":78,"character":4}],"signatures":[{"id":6487,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","name":"LogicError.toJSON"}}],"inheritedFrom":{"type":"reference","name":"LogicError.toJSON"}},{"id":6479,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":14,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/errors/BrowserWindowClosedError.ts#L14"}],"signatures":[{"id":6480,"name":"new BrowserWindowClosedError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":6481,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":6482,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":6465,"name":"BrowserWindowClosedError"},"overwrites":{"type":"reference","name":"LogicError.constructor"}}],"overwrites":{"type":"reference","name":"LogicError.constructor"}}],"groups":[{"title":"Properties","children":[6488,6489,6490,6483]},{"title":"Methods","children":[6484,6486]},{"title":"Constructors","children":[6479]}],"sources":[{"fileName":"packages/web/src/errors/BrowserWindowClosedError.ts","line":13,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/errors/BrowserWindowClosedError.ts#L13"}],"extendedTypes":[{"type":"reference","name":"LogicError"}],"permalink":"/api/web/class/BrowserWindowClosedError","previousId":6973,"nextId":6491},{"id":6491,"name":"CookieMissingError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown when the [cookie](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies)\\nyou\'re trying to retrieve has not been set yet.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cookie"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"RuntimeError"}]},"children":[{"id":6511,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"RuntimeError.name"}},{"id":6512,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"RuntimeError.message"}},{"id":6513,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"RuntimeError.stack"}},{"id":6506,"name":"cause","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.d.ts","line":67,"character":13}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","name":"RuntimeError.cause"}},{"id":6507,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.d.ts","line":77,"character":4}],"signatures":[{"id":6508,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"RuntimeError.toString"}}],"inheritedFrom":{"type":"reference","name":"RuntimeError.toString"}},{"id":6509,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.d.ts","line":78,"character":4}],"signatures":[{"id":6510,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","name":"RuntimeError.toJSON"}}],"inheritedFrom":{"type":"reference","name":"RuntimeError.toJSON"}},{"id":6502,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":14,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/errors/CookieMissingError.ts#L14"}],"signatures":[{"id":6503,"name":"new CookieMissingError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":6504,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":6505,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":6491,"name":"CookieMissingError"},"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"overwrites":{"type":"reference","name":"RuntimeError.constructor"}}],"groups":[{"title":"Properties","children":[6511,6512,6513,6506]},{"title":"Methods","children":[6507,6509]},{"title":"Constructors","children":[6502]}],"sources":[{"fileName":"packages/web/src/errors/CookieMissingError.ts","line":13,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/errors/CookieMissingError.ts#L13"}],"extendedTypes":[{"type":"reference","name":"RuntimeError"}],"permalink":"/api/web/class/CookieMissingError","previousId":6465,"nextId":6514},{"id":6514,"name":"ModalDialogObstructsScreenshotError","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Thrown when the presence of a JavaScript dialog obstructs taking a screenshot.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Photographer"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TakeScreenshot"}]},"children":[{"id":6537,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1067,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"LogicError.name"}},{"id":6538,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1068,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"LogicError.message"}},{"id":6539,"name":"stack","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/typescript/lib/lib.es5.d.ts","line":1069,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"LogicError.stack"}},{"id":6532,"name":"cause","kind":1024,"kindString":"Property","flags":{"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.d.ts","line":67,"character":13}],"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"},"inheritedFrom":{"type":"reference","name":"LogicError.cause"}},{"id":6533,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.d.ts","line":77,"character":4}],"signatures":[{"id":6534,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Human-readable description of the error"}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"LogicError.toString"}}],"inheritedFrom":{"type":"reference","name":"LogicError.toString"}},{"id":6535,"name":"toJSON","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/errors/model/RuntimeError.d.ts","line":78,"character":4}],"signatures":[{"id":6536,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"object"},"inheritedFrom":{"type":"reference","name":"LogicError.toJSON"}}],"inheritedFrom":{"type":"reference","name":"LogicError.toJSON"}},{"id":6528,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":14,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/errors/ModalDialogObstructsScreenshotError.ts#L14"}],"signatures":[{"id":6529,"name":"new ModalDialogObstructsScreenshotError","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":6530,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":6531,"name":"cause","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"reference","id":6514,"name":"ModalDialogObstructsScreenshotError"},"overwrites":{"type":"reference","name":"LogicError.constructor"}}],"overwrites":{"type":"reference","name":"LogicError.constructor"}}],"groups":[{"title":"Properties","children":[6537,6538,6539,6532]},{"title":"Methods","children":[6533,6535]},{"title":"Constructors","children":[6528]}],"sources":[{"fileName":"packages/web/src/errors/ModalDialogObstructsScreenshotError.ts","line":13,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/errors/ModalDialogObstructsScreenshotError.ts#L13"}],"extendedTypes":[{"type":"reference","name":"LogicError"}],"permalink":"/api/web/class/ModalDialogObstructsScreenshotError","previousId":6491,"nextId":6540},{"id":6540,"name":"isActive","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/web/src/expectations/isActive.ts","line":27,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/expectations/isActive.ts#L27"}],"signatures":[{"id":6541,"name":"isActive","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" that an element is \\"active\\", which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element "},{"kind":"inline-tag","tag":"@apilink","text":"isPresent|is present"},{"kind":"text","text":" in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.isActive"},{"kind":"text","text":" resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.isActive"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Check"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ensure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Wait"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"name":"PageElement"}],"name":"Expectation"}}],"permalink":"/api/web/function/isActive","previousId":6514,"nextId":6542},{"id":6542,"name":"isClickable","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/web/src/expectations/isClickable.ts","line":27,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/expectations/isClickable.ts#L27"}],"signatures":[{"id":6543,"name":"isClickable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" that an element is clickable, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element "},{"kind":"inline-tag","tag":"@apilink","text":"isPresent|is present"},{"kind":"text","text":" in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.isClickable"},{"kind":"text","text":" resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.isClickable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Check"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ensure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Wait"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"name":"PageElement"}],"name":"Expectation"}}],"permalink":"/api/web/function/isClickable","previousId":6540,"nextId":6544},{"id":6544,"name":"isEnabled","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/web/src/expectations/isEnabled.ts","line":27,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/expectations/isEnabled.ts#L27"}],"signatures":[{"id":6545,"name":"isEnabled","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" that an element is enabled, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element "},{"kind":"inline-tag","tag":"@apilink","text":"isPresent|is present"},{"kind":"text","text":" in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.isEnabled"},{"kind":"text","text":" resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.isEnabled"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Check"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ensure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Wait"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"name":"PageElement"}],"name":"Expectation"}}],"permalink":"/api/web/function/isEnabled","previousId":6542,"nextId":6546},{"id":6546,"name":"isSelected","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/web/src/expectations/isSelected.ts","line":27,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/expectations/isSelected.ts#L27"}],"signatures":[{"id":6547,"name":"isSelected","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" that an "},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`<input>`"},{"kind":"text","text":" element is selected, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element "},{"kind":"inline-tag","tag":"@apilink","text":"isPresent|is present"},{"kind":"text","text":" in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.isSelected"},{"kind":"text","text":" resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.isSelected"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Check"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ensure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Wait"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"name":"PageElement"}],"name":"Expectation"}}],"permalink":"/api/web/function/isSelected","previousId":6544,"nextId":6548},{"id":6548,"name":"isVisible","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/web/src/expectations/isVisible.ts","line":27,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/expectations/isVisible.ts#L27"}],"signatures":[{"id":6549,"name":"isVisible","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":" that an element is visible, which means it resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when:\\n - the element "},{"kind":"inline-tag","tag":"@apilink","text":"isPresent|is present"},{"kind":"text","text":" in the [DOM](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model)\\n - "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.isVisible"},{"kind":"text","text":" resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\n\\n If the above conditions are not met, the expectation resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.isVisible"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Check"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ensure"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Wait"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"name":"PageElement"}],"name":"Expectation"}}],"permalink":"/api/web/function/isVisible","previousId":6546,"nextId":6999},{"id":6550,"name":"BrowseTheWeb","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" enables an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":"\\nto "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interact with"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"Question|retrieve information from"},{"kind":"text","text":" Web-based user interfaces.\\n\\n"},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" wraps test integration tools such as [Playwright](/api/playwright),\\n[Protractor](/api/protractor), or [WebdriverIO](/api/webdriverio),\\nand together with Serenity/JS Web models, such as "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" - offers a standardised way\\nto write Web-based tests following the Screenplay Pattern.\\n\\nThe consistent and portable design of abstractions provided by the ["},{"kind":"code","text":"`@serenity-js/web`"},{"kind":"text","text":" module](/api/web)\\nalso helps to make your tests portable across the various test integration tools and helps to make your test\\ncode easier to reuse across projects and teams.\\n\\n## Giving the actors an ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nTo give an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" an ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":", provide the **integration tool-specific implementation**\\nvia "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.whoCan"},{"kind":"text","text":" in "},{"kind":"inline-tag","tag":"@apilink","text":"Cast.prepare"},{"kind":"text","text":", or via "},{"kind":"inline-tag","tag":"@apilink","text":"Cast.where"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```ts\\nimport { beforeEach } from \'mocha\'\\nimport { engage, Actor, Cast } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nbeforeEach(async () => {\\n  const browser = await chromium.launch({ headless: true })\\n\\n  engage(\\n    BrowseTheWebWithPlaywright.using(browser),\\n  )\\n})\\n```"},{"kind":"text","text":"\\n\\n### Learn more\\n\\nTo learn more about using Serenity/JS with your chosen test integration tool, follow their respective documentation:\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithProtractor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithWebdriverIO"},{"kind":"text","text":"\\n\\n## Using the ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nTo use the ability to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" in a custom "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":", use the **generic** method "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb.as"},{"kind":"text","text":"\\nto retrieve it.\\n\\nThis generic method retrieves the integration tool-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" present on the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":",\\nsuch as "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWethWebdriverIO"},{"kind":"text","text":", using "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.abilityTo"},{"kind":"text","text":".\\n\\nThis decoupling mechanism helps to make your test code portable across test integration tools,\\nsince the only part of your test suite that needs to know about the test integration tool used are the actors.\\nThe rest of your test code, so "},{"kind":"inline-tag","tag":"@apilink","text":"Task|tasks"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interactions"},{"kind":"text","text":", and "},{"kind":"inline-tag","tag":"@apilink","text":"Question|questions"},{"kind":"text","text":",\\nremain fully agnostic of the underlying tool.\\n\\n"},{"kind":"code","text":"```ts\\nimport { BrowseTheWeb, Question } from \'@serenity-js/web\'\\n\\nconst BrowserDetails = () =>\\n Question.about(\'browser details\', async actor => {\\n   const capabilities = await BrowseTheWeb.as(actor).browserCapabilities();\\n   return ${ capabilities.browserName } ${ capabilities.browserVersion }`;\\n })\\n```"},{"kind":"text","text":"\\n\\n**Pro tip:** Use the specific "},{"kind":"code","text":"`BrowseTheWebWith<test integration tool name>`"},{"kind":"text","text":" to give the actor the ability,\\nand generic "},{"kind":"code","text":"`BrowseTheWeb.as(actor)`"},{"kind":"text","text":" to retrieve it.\\n\\n### Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor.whoCan"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast.where"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast.prepare"}]},"children":[{"id":6556,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":83,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/abilities/BrowseTheWeb.ts#L83"}],"signatures":[{"id":6557,"name":"new BrowseTheWeb","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":6558,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":6559,"name":"session","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7003,"typeArguments":[{"type":"reference","id":7312,"typeArguments":[{"type":"reference","id":6558,"name":"Native_Element_Type"}],"name":"Page"}],"name":"BrowsingSession"}}],"type":{"type":"reference","id":6550,"typeArguments":[{"type":"reference","id":6558,"name":"Native_Element_Type"}],"name":"BrowseTheWeb"},"overwrites":{"type":"reference","name":"Ability.constructor"}}],"overwrites":{"type":"reference","name":"Ability.constructor"}},{"id":6561,"name":"currentPage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":90,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/abilities/BrowseTheWeb.ts#L90"}],"signatures":[{"id":6562,"name":"currentPage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" representing the currently active browser tab."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7312,"typeArguments":[{"type":"reference","id":6558,"name":"Native_Element_Type"}],"name":"Page"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":6563,"name":"allPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/abilities/BrowseTheWeb.ts#L98"}],"signatures":[{"id":6564,"name":"allPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" representing all the browser tabs\\navailable in the current "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":7312,"typeArguments":[{"type":"reference","id":6558,"name":"Native_Element_Type"}],"name":"Page"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":6565,"name":"browserCapabilities","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":105,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/abilities/BrowseTheWeb.ts#L105"}],"signatures":[{"id":6566,"name":"browserCapabilities","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"inline-tag","tag":"@apilink","text":"BrowserCapabilities|basic meta-data"},{"kind":"text","text":" about the browser associated with this ability."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":6999,"name":"BrowserCapabilities"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Constructors","children":[6556]},{"title":"Methods","children":[6561,6563,6565]}],"sources":[{"fileName":"packages/web/src/screenplay/abilities/BrowseTheWeb.ts","line":81,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/abilities/BrowseTheWeb.ts#L81"}],"typeParameters":[{"id":6567,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","name":"Ability"}],"permalink":"/api/web/class/BrowseTheWeb","nextId":6568},{"id":6568,"name":"Clear","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto clear the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" of a [form "},{"kind":"code","text":"`input`"},{"kind":"text","text":" field](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input).\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nconst Form = {\\n  exampleInput: () =>\\n    PageElement.located(By.id(\'example\'))\\n     .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Clearing the value of an input field\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Clear, Enter, Value } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'In\xe9s\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Enter.theValue(\'Hello world!\').into(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput()), equals(\'Hello world!\')),\\n\\n    Clear.theValueOf(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput()), equals(\'\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Enter"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Value"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"children":[{"id":6569,"name":"theValueOf","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":68,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Clear.ts#L68"}],"signatures":[{"id":6570,"name":"theValueOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":"\\nthat instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":"\\nto clear the value of an input "},{"kind":"code","text":"`field`"},{"kind":"text","text":","}]},"parameters":[{"id":6571,"name":"field","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The field which value should be cleared"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6600,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6601,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":6812,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":6811,"name":"PageElementInteraction.instantiationLocation"}},{"id":6602,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6603,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":6814,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","id":6813,"name":"PageElementInteraction.toString"}},{"id":6586,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":79,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Clear.ts#L79"}],"signatures":[{"id":6587,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":6588,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":6808,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","id":6807,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[6569,6600,6602,6586]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Clear.ts","line":58,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Clear.ts#L58"}],"extendedTypes":[{"type":"reference","id":6788,"name":"PageElementInteraction"}],"permalink":"/api/web/class/Clear","previousId":6550,"nextId":6604},{"id":6604,"name":"Click","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto scroll the given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" into view and then [click](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event) on it.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/webdriverio\';\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(by.id(\'example\'))\\n      .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Clicking on an element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Click, isSelected } from \'@serenity-js/web\'\\nimport { Ensure } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Chlo\xe9\')\\n  .attemptsTo(\\n    Click.on(Form.exampleInput()),\\n    Ensure.that(Form.exampleInput(), isSelected()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"children":[{"id":6605,"name":"on","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":60,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Click.ts#L60"}],"signatures":[{"id":6606,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"."}]},"parameters":[{"id":6607,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The element to be clicked on"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6630,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6631,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":6812,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":6811,"name":"PageElementInteraction.instantiationLocation"}},{"id":6632,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6633,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":6814,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","id":6813,"name":"PageElementInteraction.toString"}},{"id":6622,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":71,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Click.ts#L71"}],"signatures":[{"id":6623,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":6624,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":6808,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","id":6807,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[6605,6630,6632,6622]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Click.ts","line":52,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Click.ts#L52"}],"extendedTypes":[{"type":"reference","id":6788,"name":"PageElementInteraction"}],"permalink":"/api/web/class/Click","previousId":6568,"nextId":6634},{"id":6634,"name":"DoubleClick","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto perform a double click on a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n    The editor shows up when the user double-clicks\\n    on one of the properties of their profile\\n    and lets them change the value of that property.\\n--\x3e\\n<div id=\\"user-profile\\">\\n    <ul>\\n        <li id=\\"display-name\\" ondblclick=\\"edit(this)\\">User12345</li>\\n        <li id=\\"email-address\\" ondblclick=\\"edit(this)\\">tester@example.org</li>\\n    </ul>\\n    <form id=\\"editor\\" class=\\"hidden\\">\\n        <input type=\\"text\\" value=\\"\\" />\\n    </form>\\n</div>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass UserProfile {\\n  static displayName = () =>\\n    PageElement.located(by.id(\'display-name\'))\\n      .describedAs(\'display name\')\\n\\n  static emailAddress = () =>\\n    PageElement.located(by.id(\'email-address\'))\\n      .describedAs(\'email address\')\\n\\n  static editor = () =>\\n    PageElement.located(by.id(\'editor\'))\\n      .describedAs(\'editor\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Double-clicking on an element\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { DoubleClick, isVisible, Enter, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals, not } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Dorothy\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    DoubleClick.on(UserProfile.displayName),\\n    Wait.until(UserProfile.editor(), isVisible()),\\n\\n    Enter.theValue(\'New username\').into(UserProfile.editor),\\n\\n    Ensure.that(Text.of(UserProfile.displayName()), equals(\'New username\')),\\n    Ensure.that(UserProfile.editor, not(isVisible()))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"children":[{"id":6635,"name":"on","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":83,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/DoubleClick.ts#L83"}],"signatures":[{"id":6636,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"."}]},"parameters":[{"id":6637,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The element to be double-clicked on"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6660,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6661,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":6812,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":6811,"name":"PageElementInteraction.instantiationLocation"}},{"id":6662,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6663,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":6814,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","id":6813,"name":"PageElementInteraction.toString"}},{"id":6652,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":94,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/DoubleClick.ts#L94"}],"signatures":[{"id":6653,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":6654,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":6808,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","id":6807,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[6635,6660,6662,6652]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/DoubleClick.ts","line":75,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/DoubleClick.ts#L75"}],"extendedTypes":[{"type":"reference","id":6788,"name":"PageElementInteraction"}],"permalink":"/api/web/class/DoubleClick","previousId":6604,"nextId":6664},{"id":6664,"name":"Enter","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto enter a value into a [form "},{"kind":"code","text":"`input`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input) field.\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n<form>\\n <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(By.id(\'example\'))\\n      .describedAs(\'example input\')\\n }\\n```"},{"kind":"text","text":"\\n\\n## Entering the value into a form field\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Enter } from \'@serenity-js/web\';\\n\\nawait actorCalled(\'Esme\')\\n  .attemptsTo(\\n    Enter.theValue(\'Hello world!\').into(Form.exampleInput()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"children":[{"id":6665,"name":"theValue","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":58,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Enter.ts#L58"}],"signatures":[{"id":6666,"name":"theValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"."}]},"parameters":[{"id":6667,"name":"values","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"The text value to be entered"}]},"type":{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"array","elementType":{"type":"intrinsic","name":"number"}}]}],"name":"Answerable"}}}],"type":{"type":"reflection","declaration":{"id":6668,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":6669,"name":"into","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":58,"character":92,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Enter.ts#L58"}],"type":{"type":"reflection","declaration":{"id":6670,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":58,"character":98,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Enter.ts#L58"}],"signatures":[{"id":6671,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":6672,"name":"field","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]}}}],"groups":[{"title":"Properties","children":[6669]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":58,"character":90,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Enter.ts#L58"}]}}}]},{"id":6697,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6698,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":6812,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":6811,"name":"PageElementInteraction.instantiationLocation"}},{"id":6699,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6700,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":6814,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","id":6813,"name":"PageElementInteraction.toString"}},{"id":6689,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":75,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Enter.ts#L75"}],"signatures":[{"id":6690,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":6691,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":6808,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","id":6807,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[6665,6697,6699,6689]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Enter.ts","line":50,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Enter.ts#L50"}],"extendedTypes":[{"type":"reference","id":6788,"name":"PageElementInteraction"}],"permalink":"/api/web/class/Enter","previousId":6634,"nextId":6701},{"id":6701,"name":"ExecuteScript","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto execute a script within the context of the current browser tab.\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"LastScriptExecution.result"}]},"children":[{"id":6702,"name":"from","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":28,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/ExecuteScript.ts#L28"}],"signatures":[{"id":6703,"name":"from","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a version of this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"\\nconfigured to load a script from "},{"kind":"code","text":"`sourceUrl`"},{"kind":"text","text":"."}]},"parameters":[{"id":6704,"name":"sourceUrl","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The URL to load the script from"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6705,"name":"async","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":129,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/ExecuteScript.ts#L129"}],"signatures":[{"id":6706,"name":"async","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto execute an asynchronous script within the context of the current browser tab.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\nor "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nUnlike executing synchronous JavaScript with "},{"kind":"inline-tag","tag":"@apilink","text":"ExecuteScript.sync"},{"kind":"text","text":",\\nscripts executed with this function must explicitly signal they are finished by invoking the provided callback.\\n\\nThis callback will always be injected into the executed function as the last argument,\\nand thus may be referenced with "},{"kind":"code","text":"`arguments[arguments.length - 1]`"},{"kind":"text","text":".\\n\\nIf the script invokes the "},{"kind":"code","text":"`callback`"},{"kind":"text","text":" with a return value, this will be made available\\nvia the "},{"kind":"inline-tag","tag":"@apilink","text":"LastScriptExecution.result"},{"kind":"text","text":".\\n\\n**Please note** that in order to signal an error in the "},{"kind":"code","text":"`script`"},{"kind":"text","text":" you need to throw an "},{"kind":"inline-tag","tag":"@apilink","text":"Error"},{"kind":"text","text":"\\ninstead of passing it to the callback function.\\n\\n#### Executing an async script\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var callback = arguments[arguments.length - 1]\\n\\n    // do stuff\\n\\n    callback(result)\\n  `)\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Passing arguments to an async script\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var name = arguments[0];\\n    var age = arguments[1];\\n    var callback = arguments[arguments.length - 1]\\n\\n    // do stuff\\n\\n    callback(result)\\n  `).withArguments(\'Bob\', 24)\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Passing Target arguments to an async script\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(`\\n    var header = arguments[0]        // PageElement object gets converted to a WebElement\\n    var callback = arguments[arguments.length - 1]\\n\\n    callback(header.innerText)\\n  `).withArguments(PageElement.located(By.css(\'h1\')).describedAs(\'header\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Executing async script as function\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Esti\').attemptsTo(\\n  ExecuteScript.async(function getText(header, callback) {\\n    callback(header.innerText)\\n  }).withArguments(PageElement.located(By.css(\'h1\')).describedAs(\'header\'))\\n)\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"LastScriptExecution.result"}]},"parameters":[{"id":6707,"name":"script","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The script to be executed"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Function","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function","qualifiedName":"Function","package":"typescript"}]}}],"type":{"type":"reference","id":6713,"name":"ExecuteScriptWithArguments"}}]},{"id":6708,"name":"sync","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":190,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/ExecuteScript.ts#L190"}],"signatures":[{"id":6709,"name":"sync","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto execute a synchronous script within the context of the current browser tab.\\n\\nIf the script returns a value, it will be made available via "},{"kind":"inline-tag","tag":"@apilink","text":"LastScriptExecution.result"},{"kind":"text","text":".\\n\\n#### Executing a sync script as string and reading the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(\'return navigator.userAgent\'),\\n    Ensure.that(LastScriptExecution.result<string>(), includes(\'Chrome\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Executing a sync script as function and reading the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Enter, ExecuteScript, LastScriptExecution, PageElement } from \'@serenity-js/web\'\\n\\nconst someOfferField = () =>\\n  PageElement.located(By.id(\'offer-code\'))\\n    .describedAs(\'offer code\')\\n\\nconst applyOfferCodeField = () =>\\n  PageElement.located(By.id(\'apply-offer-code\'))\\n    .describedAs(\'apply offer field\')\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    // inject JavaScript to read some property of an element\\n    ExecuteScript.sync(function getValue(element) {\\n        return element.value;\\n    }).withArguments(someOfferField),\\n\\n    // use LastScriptExecution.result() to read the value\\n    // returned from the injected script\\n    // and pass it to another interaction\\n    Enter.theValue(LastScriptExecution.result<string>()).into(applyOfferCodeField),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"LastScriptExecution.result"}]},"parameters":[{"id":6710,"name":"script","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The script to be executed"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Function","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function","qualifiedName":"Function","package":"typescript"}]}}],"type":{"type":"reference","id":6713,"name":"ExecuteScriptWithArguments"}}]},{"id":6711,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":6712,"name":"new ExecuteScript","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":6701,"name":"ExecuteScript"}}]}],"groups":[{"title":"Methods","children":[6702,6705,6708]},{"title":"Constructors","children":[6711]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":19,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/ExecuteScript.ts#L19"}],"permalink":"/api/web/class/ExecuteScript","previousId":6664,"nextId":6713},{"id":6713,"name":"ExecuteScriptWithArguments","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Allows for a script to be executed to be parametrised.\\n\\n## Learn more\\n-  "},{"kind":"inline-tag","tag":"@apilink","text":"ExecuteScript"}]},"children":[{"id":6742,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6743,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}},{"id":6744,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6745,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","name":"Interaction.toString"}},{"id":6724,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":208,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/ExecuteScript.ts#L208"}],"signatures":[{"id":6725,"name":"new ExecuteScriptWithArguments","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":6726,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":6727,"name":"script","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Function","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function","qualifiedName":"Function","package":"typescript"}]}},{"id":6728,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"defaultValue":"[]"}],"type":{"type":"reference","id":6713,"name":"ExecuteScriptWithArguments"},"overwrites":{"type":"reference","name":"Interaction.constructor"}}],"overwrites":{"type":"reference","name":"Interaction.constructor"}},{"id":6731,"name":"withArguments","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":222,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/ExecuteScript.ts#L222"}],"signatures":[{"id":6732,"name":"withArguments","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"}]},"parameters":[{"id":6733,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Arguments to parametrise the script with"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6734,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":227,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/ExecuteScript.ts#L227"}],"signatures":[{"id":6735,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":6736,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"CollectsArtifacts"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[6742,6744,6731,6734]},{"title":"Constructors","children":[6724]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/ExecuteScript.ts","line":206,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/ExecuteScript.ts#L206"}],"extendedTypes":[{"type":"reference","name":"Interaction"}],"permalink":"/api/web/class/ExecuteScriptWithArguments","previousId":6701,"nextId":6746},{"id":6746,"name":"Hover","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto hover the mouse pointer over a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n <a data-test=\\"example-link\\"\\n     class=\\"off\\"\\n     onmouseover=\\"this.className=\'on\';\\"\\n     onmouseout=\\"this.className=\'off\';\\"\\n     href=\\"/\\">hover over me</a>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Example {\\n  static link = () =>\\n    PageElement.located(By.css(\'[data-test=\\"example-link\\"]\'))\\n      .describedAs(\'example link\')\\n }\\n```"},{"kind":"text","text":"\\n\\n## Hovering over an element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Hover, CssClasses } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Hank\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n     Ensure.that(CssClasses.of(Example.link()), equals([ \'off\' ])),\\n\\n    Hover.over(Example.link),\\n    Ensure.that(CssClasses.of(Example.link()), equals([ \'on\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"children":[{"id":6747,"name":"over","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":64,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Hover.ts#L64"}],"signatures":[{"id":6748,"name":"over","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"}]},"parameters":[{"id":6749,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The element to be hovered over"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6772,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6773,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":6812,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":6811,"name":"PageElementInteraction.instantiationLocation"}},{"id":6774,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6775,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":6814,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","id":6813,"name":"PageElementInteraction.toString"}},{"id":6764,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":75,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Hover.ts#L75"}],"signatures":[{"id":6765,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":6766,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":6808,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","id":6807,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[6747,6772,6774,6764]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Hover.ts","line":56,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Hover.ts#L56"}],"extendedTypes":[{"type":"reference","id":6788,"name":"PageElementInteraction"}],"permalink":"/api/web/class/Hover","previousId":6713,"nextId":6776},{"id":6776,"name":"Navigate","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto navigate to a specific destination, as well as back and forth in the browser history,\\nor reload the current page.\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"}]},"children":[{"id":6777,"name":"to","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":68,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Navigate.ts#L68"}],"signatures":[{"id":6778,"name":"to","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto navigate to a given URL.\\n\\nThe URL can be:\\n- absolute, e.g. "},{"kind":"code","text":"`https://example.org/search`"},{"kind":"text","text":"\\n- relative, e.g. "},{"kind":"code","text":"`/search`"},{"kind":"text","text":"\\n\\nIf the URL is relative, your Web test integration tool will append it to any base URL\\nspecified in its respective configuration file.\\n\\n\\n#### Navigate to path relative to baseUrl\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .attemptsTo(\\n    Navigate.to(\'/search\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Navigate to an absolute URL (overrides baseUrl)\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'https://mycompany.org/login\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Page.navigateTo"},{"kind":"text","text":"\\n- [WebdriverIO: Configuration Options](https://webdriver.io/docs/options/#baseurl)\\n- [Playwright: Browser](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright: Test Options](https://playwright.dev/docs/api/class-testoptions#test-options-base-url)\\n- [Protractor: Configuration](https://github.com/angular/protractor/blob/master/lib/config.ts)"}]},"parameters":[{"id":6779,"name":"url","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An absolute URL or path an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n should navigate to"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6780,"name":"back","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":95,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Navigate.ts#L95"}],"signatures":[{"id":6781,"name":"back","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto navigate back one page in the joint session history of the current top-level browsing context.\\n\\n#### Navigate back in browsing history\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/first\'),\\n    Navigate.to(\'/second\'),\\n\\n    Navigate.back(),\\n\\n    Ensure.that(Page.current().url().href, endsWith(\'/first\')),\\n  )\\n```"}]},"type":{"type":"reference","name":"Interaction"}}]},{"id":6782,"name":"forward","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":127,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Navigate.ts#L127"}],"signatures":[{"id":6783,"name":"forward","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto navigate forward one page in the joint session history of the current top-level browsing context.\\n\\n#### Navigate forward in browsing history\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWeb.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/first\'),\\n    Navigate.to(\'/second\'),\\n\\n    Navigate.back(),\\n    Navigate.forward(),\\n\\n    Ensure.that(Page.current().url().href, endsWith(\'/second\')),\\n  )\\n```"}]},"type":{"type":"reference","name":"Interaction"}}]},{"id":6784,"name":"reloadPage","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":156,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Navigate.ts#L156"}],"signatures":[{"id":6785,"name":"reloadPage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto reload the current page.\\n\\n#### Navigate to path relative to baseUrl\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nawait actorCalled(\'Hannu\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Navigate.to(\'/login\'),\\n    Cookie.called(\'session_id\').delete(),\\n    Navigate.reloadPage(),\\n  )\\n```"}]},"type":{"type":"reference","name":"Interaction"}}]},{"id":6786,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":6787,"name":"new Navigate","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":6776,"name":"Navigate"}}]}],"groups":[{"title":"Methods","children":[6777,6780,6782,6784]},{"title":"Constructors","children":[6786]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Navigate.ts","line":17,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Navigate.ts#L17"}],"permalink":"/api/web/class/Navigate","previousId":6746,"nextId":6788},{"id":6788,"name":"PageElementInteraction","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"A base class for interactions with "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" objects.\\n\\n**Note:** The recommended way to implement custom interactions\\nin your code is to use the "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction.where"},{"kind":"text","text":" factory method."}]},"children":[{"id":6811,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6812,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}},{"id":6813,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6814,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","name":"Interaction.toString"}},{"id":6807,"name":"performAs","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/core/lib/screenplay/Interaction.d.ts","line":88,"character":13}],"signatures":[{"id":6808,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":6809,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Interaction.performAs"}}],"inheritedFrom":{"type":"reference","name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[6811,6813,6807]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/PageElementInteraction.ts","line":15,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/PageElementInteraction.ts#L15"}],"extendedTypes":[{"type":"reference","name":"Interaction"}],"extendedBy":[{"type":"reference","id":6568,"name":"Clear"},{"type":"reference","id":6604,"name":"Click"},{"type":"reference","id":6634,"name":"DoubleClick"},{"type":"reference","id":6664,"name":"Enter"},{"type":"reference","id":6746,"name":"Hover"},{"type":"reference","id":6815,"name":"Press"},{"type":"reference","id":6853,"name":"RightClick"}],"permalink":"/api/web/class/PageElementInteraction","previousId":6776,"nextId":6815},{"id":6815,"name":"Press","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto send a key press or a sequence of keys to a Web element.\\n\\n**Note:** On macOS, some keyboard shortcuts might not work\\nwith the ["},{"kind":"code","text":"`devtools`"},{"kind":"text","text":" protocol](https://webdriver.io/docs/automationProtocols/#devtools-protocol).\\n\\n For example:\\n - to *copy*, instead of "},{"kind":"inline-tag","tag":"@apilink","text":"Key.Meta"},{"kind":"text","text":"+"},{"kind":"code","text":"`C`"},{"kind":"text","text":", use "},{"kind":"inline-tag","tag":"@apilink","text":"Key.Control"},{"kind":"text","text":"+"},{"kind":"inline-tag","tag":"@apilink","text":"Key.Insert"},{"kind":"text","text":"\\n - to *cut*, instead of "},{"kind":"inline-tag","tag":"@apilink","text":"Key.Meta"},{"kind":"text","text":"+"},{"kind":"code","text":"`X`"},{"kind":"text","text":", use "},{"kind":"inline-tag","tag":"@apilink","text":"Key.Control"},{"kind":"text","text":"+"},{"kind":"inline-tag","tag":"@apilink","text":"Key.Delete"},{"kind":"text","text":"\\n - to *paste*, instead of "},{"kind":"inline-tag","tag":"@apilink","text":"Key.Meta"},{"kind":"text","text":"+"},{"kind":"code","text":"`V`"},{"kind":"text","text":", use "},{"kind":"inline-tag","tag":"@apilink","text":"Key.Shift"},{"kind":"text","text":"+"},{"kind":"inline-tag","tag":"@apilink","text":"Key.Insert"},{"kind":"text","text":"\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<form>\\n  <input type=\\"text\\" name=\\"example\\" id=\\"example\\" />\\n</form>\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static exampleInput = () =>\\n    PageElement.located(By.id(\'example\'))\\n      .describedAs(\'example input\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Pressing keys\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Key, Press, Value } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Priyanka\')\\n  .attemptsTo(\\n    Press.the(\'H\', \'i\', \'!\', Key.ENTER).in(Form.exampleInput()),\\n    Ensure.that(Value.of(Form.exampleInput), equals(\'Hi!\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Key"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"children":[{"id":6816,"name":"the","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Press.ts#L77"}],"signatures":[{"id":6817,"name":"the","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":"\\nthat instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":"\\nto press a sequence of "},{"kind":"inline-tag","tag":"@apilink","text":"Key|keys"},{"kind":"text","text":",\\n\\nWhen no "},{"kind":"code","text":"`field`"},{"kind":"text","text":" is specified, the key sequence will be sent to the currently focused element,\\nand if no element is focused - to the "},{"kind":"code","text":"`document.body`"},{"kind":"text","text":" to handle."}]},"parameters":[{"id":6818,"name":"keys","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of one or more keys to press"}]},"type":{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"reference","id":7196,"name":"Key"},{"type":"array","elementType":{"type":"reference","id":7196,"name":"Key"}}]}],"name":"Answerable"}}}],"type":{"type":"intersection","types":[{"type":"reference","name":"Activity"},{"type":"reflection","declaration":{"id":6819,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":6820,"name":"in","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":90,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Press.ts#L77"}],"type":{"type":"reflection","declaration":{"id":6821,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":94,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Press.ts#L77"}],"signatures":[{"id":6822,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":6823,"name":"field","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]}}}],"groups":[{"title":"Properties","children":[6820]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":77,"character":88,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Press.ts#L77"}]}}]}}]},{"id":6849,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6850,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":6812,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":6811,"name":"PageElementInteraction.instantiationLocation"}},{"id":6851,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6852,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":6814,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","id":6813,"name":"PageElementInteraction.toString"}},{"id":6837,"name":"in","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":86,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Press.ts#L86"}],"signatures":[{"id":6838,"name":"in","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Send the key sequence to a specific element."}]},"parameters":[{"id":6839,"name":"field","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6841,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":103,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Press.ts#L103"}],"signatures":[{"id":6842,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":6843,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":6808,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","id":6807,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[6816,6849,6851,6837,6841]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Press.ts","line":64,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Press.ts#L64"}],"extendedTypes":[{"type":"reference","id":6788,"name":"PageElementInteraction"}],"permalink":"/api/web/class/Press","previousId":6788,"nextId":6853},{"id":6853,"name":"RightClick","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\r\\nto perform a right click on a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\r\\n\\r\\nThis is typically used to open a [custom context menu](https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event)\\r\\non a given Web element, since it\'s not possible to interact with the standard context menu offered by your browser.\\r\\n\\r\\n## Example widget\\r\\n\\r\\n"},{"kind":"code","text":"```html\\r\\n<form>\\r\\n  <input type=\\"text\\" id=\\"field\\"\\r\\n    oncontextmenu=\\"showMenu(); return false;\\" />\\r\\n\\r\\n  <div id=\\"context-menu\\" style=\\"display:none\\">\\r\\n    Custom context menu\\r\\n  </div>\\r\\n</form>\\r\\n\\r\\n<script>\\r\\n  function showMenu() {\\r\\n    document.getElementById(\\"context-menu\\").style.display = \'block\';\\r\\n  }\\r\\n<\/script>\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Lean Page Object describing the widget\\r\\n\\r\\n"},{"kind":"code","text":"```ts\\r\\nimport { By, PageElement } from \'@serenity-js/web\'\\r\\n\\r\\nclass Form {\\r\\n  static exampleInput = () =>\\r\\n    PageElement.located(By.id(\'example\'))\\r\\n      .describedAs(\'example input\')\\r\\n\\r\\n  static exampleContextMenu = () =>\\r\\n    PageElement.located(By.id(\'context-menu\'))\\r\\n      .describedAs(\'example context menu\')\\r\\n}\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Right-click on an element\\r\\n\\r\\n"},{"kind":"code","text":"```ts\\r\\nimport { actorCalled } from \'@serenity-js/core\'\\r\\nimport { RightClick, isVisible } from \'@serenity-js/web\'\\r\\nimport { Ensure } from \'@serenity-js/assertions\'\\r\\n\\r\\nawait actorCalled(\'Chlo\xe9\')\\r\\n  .whoCan(BrowseTheWeb.using(browser))\\r\\n  .attemptsTo(\\r\\n    RightClick.on(Form.exampleInput()),\\r\\n    Ensure.that(Form.exampleContextMenu(), isVisible()),\\r\\n  )\\r\\n```"},{"kind":"text","text":"\\r\\n\\r\\n## Learn more\\r\\n\\r\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\r\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"children":[{"id":6854,"name":"on","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":78,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/RightClick.ts#L78"}],"signatures":[{"id":6855,"name":"on","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"."}]},"parameters":[{"id":6856,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The element to be right-clicked on"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6879,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6880,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","id":6812,"name":"PageElementInteraction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","id":6811,"name":"PageElementInteraction.instantiationLocation"}},{"id":6881,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6882,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":6814,"name":"PageElementInteraction.toString"}}],"inheritedFrom":{"type":"reference","id":6813,"name":"PageElementInteraction.toString"}},{"id":6871,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":89,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/RightClick.ts#L89"}],"signatures":[{"id":6872,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to perform this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PerformsActivities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"UsesAbilities"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"AnswersQuestions"}]},"parameters":[{"id":6873,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":6808,"name":"PageElementInteraction.performAs"}}],"overwrites":{"type":"reference","id":6807,"name":"PageElementInteraction.performAs"}}],"groups":[{"title":"Methods","children":[6854,6879,6881,6871]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/RightClick.ts","line":71,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/RightClick.ts#L71"}],"extendedTypes":[{"type":"reference","id":6788,"name":"PageElementInteraction"}],"permalink":"/api/web/class/RightClick","previousId":6815,"nextId":6883},{"id":6883,"name":"Scroll","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto scroll until a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" comes into view.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n\x3c!--\\n  an element somewhere at the bottom of the page,\\n  outside of the visible area\\n--\x3e\\n<input type=\\"submit\\" id=\\"submit\\" />\\n```"},{"kind":"text","text":"\\n\\n## Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Form {\\n  static submitButton = () => {\\n    PageElement.located(By.id(\'submit\'))\\n      .describedAs(\'submit button\')\\n}\\n```"},{"kind":"text","text":"\\n\\n## Scrolling to element\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure } from \'@serenity-js/assertions\'\\nimport { Scroll, isVisible } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Sara\')\\n  .attemptsTo(\\n    Scroll.to(Form.submitButton()),\\n    Ensure.that(Form.submitButton(), isVisible()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"children":[{"id":6884,"name":"to","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":61,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Scroll.ts#L61"}],"signatures":[{"id":6885,"name":"to","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"."}]},"parameters":[{"id":6886,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The element to scroll to"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","id":6883,"name":"Scroll"}}]},{"id":6905,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6906,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}},{"id":6907,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6908,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","name":"Interaction.toString"}},{"id":6901,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":72,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Scroll.ts#L72"}],"signatures":[{"id":6902,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":6903,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[6884,6905,6907,6901]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Scroll.ts","line":53,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Scroll.ts#L53"}],"extendedTypes":[{"type":"reference","name":"Interaction"}],"permalink":"/api/web/class/Scroll","previousId":6853,"nextId":6909},{"id":6909,"name":"Select","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto select an option from a [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select),\\neither by its display name, or by value.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Selected"}]},"children":[{"id":6910,"name":"value","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":72,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L72"}],"signatures":[{"id":6911,"name":"value","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":"\\nthat instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":"\\nto select a single ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nwith a given ["},{"kind":"code","text":"`value`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-value).,\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.value(\'UK\').from(Countries.dropdown()),\\n    Ensure.that(Selected.valueOf(Countries.dropdown()), equals(\'UK\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Selected.valueOf"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"parameters":[{"id":6912,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A value of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to select"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reflection","declaration":{"id":6913,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":6914,"name":"from","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":72,"character":47,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L72"}],"type":{"type":"reflection","declaration":{"id":6915,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":72,"character":53,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L72"}],"signatures":[{"id":6916,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":6917,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]}}}],"groups":[{"title":"Properties","children":[6914]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":72,"character":45,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L72"}]}}}]},{"id":6918,"name":"values","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":135,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L135"}],"signatures":[{"id":6919,"name":"values","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":"\\nthat instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":"\\nto select multiple ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nidentified by their ["},{"kind":"code","text":"`value`"},{"kind":"text","text":"s](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-value).\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```ts\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.values(\'UK\').from(Countries.dropdown()),\\n    Ensure.that(Selected.valuesOf(Countries.dropdown()), equals([ \'UK\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Selected.valuesOf"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"parameters":[{"id":6920,"name":"values","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Values of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to select"}]},"type":{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Answerable"}}}],"type":{"type":"reflection","declaration":{"id":6921,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":6922,"name":"from","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":135,"character":70,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L135"}],"type":{"type":"reflection","declaration":{"id":6923,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":135,"character":76,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L135"}],"signatures":[{"id":6924,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":6925,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]}}}],"groups":[{"title":"Properties","children":[6922]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":135,"character":68,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L135"}]}}}]},{"id":6926,"name":"option","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":203,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L203"}],"signatures":[{"id":6927,"name":"option","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":"\\nthat instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":"\\nto select a single ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nwith a given description.\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/by\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.option(\'Poland\').from(Countries.dropdown()),\\n    Ensure.that(\\n      Selected.optionIn(Countries.dropdown()),\\n      equals(\'Poland\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Selected.optionIn"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"parameters":[{"id":6928,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Text of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to select"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reflection","declaration":{"id":6929,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":6930,"name":"from","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":203,"character":48,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L203"}],"type":{"type":"reflection","declaration":{"id":6931,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":203,"character":54,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L203"}],"signatures":[{"id":6932,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":6933,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]}}}],"groups":[{"title":"Properties","children":[6930]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":203,"character":46,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L203"}]}}}]},{"id":6934,"name":"options","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":269,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L269"}],"signatures":[{"id":6935,"name":"options","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":"\\nthat instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":"\\nto select multiple ["},{"kind":"code","text":"`<option>`"},{"kind":"text","text":" elements](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nidentified by their descriptions.\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n##### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.options(\'Poland\', \'United States\').from(Countries.dropdown()),\\n    Ensure.that(\\n      Selected.optionsIn(Countries.dropdown()),\\n      equals([ \'Poland\', \'United States\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Selected.optionsIn"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"}]},"parameters":[{"id":6936,"name":"values","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Text of the ["},{"kind":"code","text":"`option`"},{"kind":"text","text":" elements  ](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\n for the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to select"}]},"type":{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}],"name":"Answerable"}}}],"type":{"type":"reflection","declaration":{"id":6937,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":6938,"name":"from","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":269,"character":71,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L269"}],"type":{"type":"reflection","declaration":{"id":6939,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":269,"character":77,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L269"}],"signatures":[{"id":6940,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":6941,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]}}}],"groups":[{"title":"Properties","children":[6938]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":269,"character":69,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L269"}]}}}]},{"id":6942,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":6943,"name":"new Select","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":6909,"name":"Select"}}]}],"groups":[{"title":"Methods","children":[6910,6918,6926,6934]},{"title":"Constructors","children":[6942]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Select.ts","line":20,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Select.ts#L20"}],"permalink":"/api/web/class/Select","previousId":6883,"nextId":6944},{"id":6944,"name":"Switch","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto switch the context for future activities to a "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"},{"kind":"text","text":", such as a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" or a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\n\\nPlease note that when the "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" implementing "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"},{"kind":"text","text":" represents an "},{"kind":"inline-tag","tag":"@apilink","text":"iframe"},{"kind":"text","text":",\\nusing "},{"kind":"inline-tag","tag":"@apilink","text":"Switch"},{"kind":"text","text":" will result in switching the top-level browsing context to that "},{"kind":"inline-tag","tag":"@apilink","text":"iframe"},{"kind":"text","text":".\\n\\nWhen the "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" represents any other [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement),\\nusing "},{"kind":"inline-tag","tag":"@apilink","text":"Switch"},{"kind":"text","text":" sets ["},{"kind":"code","text":"`HTMLElement#focus`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus)\\non the specified element. Assuming it can be focused.\\n\\n**Note:** The focused element is the element which will receive keyboard "},{"kind":"inline-tag","tag":"@apilink","text":"Press"},{"kind":"text","text":" events by default.\\n\\n## Perform activities in the context of an iframe\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Enter, PageElement, Switch } from \'@serenity-js/web\'\\n\\n// Lean Page Object describing a login form, embedded in an iframe\\nclass LoginForm {\\n  static iframe = () =>\\n    PageElement.located(By.css(\'iframe\'))\\n      .describedAs(\'login form\')\\n\\n  static usernameField = () =>\\n    PageElement.located(By.css(\'[data-testid=\\"username\\"]\'))\\n      .describedAs(\'username field\')\\n\\n  static passwordField = () =>\\n    PageElement.located(By.css(\'[data-testid=\\"password\\"]\'))\\n      .describedAs(\'password field\')\\n\\n  static submitButton = () =>\\n    PageElement.located(By.css(\'button[type=\\"submit\\"]\'))\\n      .describedAs(\'submit button\')\\n }\\n\\n await actorCalled(\'Francesca\')\\n   .attemptsTo(\\n     Switch.to(LoginForm.iframe).and(\\n       Enter.theValue(\'francesca@example.org\').into(LoginForm.usernameField()),\\n       Enter.theValue(\'correct-horse-battery-staple\').into(LoginForm.passwordField()),\\n       Click.on(LoginForm.submitButton()),\\n     )\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Perform activities in the context of another page\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Click, Enter, Switch } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nawait actorCalled(\'Francesca\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Switch.to(Page.whichName(startsWith(\'popup\'))).and(\\n      // perform some activities in the context of the new window\\n\\n      // optionally, close the browser tab\\n      Page.current().close(),\\n    ),\\n\\n    // Note that switching back to the original page happens automatically\\n    // after the last activity from the list finishes\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Perform activities in the context of a focused page element\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Key, PageElement, Press, Switch, Value } from \'@serenity-js/web\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst inputField = () =>\\n  PageElement.located(By.css(\'input\'));\\n\\nawait actorCalled(\'Francesca\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Switch.to(inputField()).and(\\n      Press.the(\'h\', \'e\', \'l\', \'l\', \'o\'),\\n      Press.the(Key.Tab),\\n    ),\\n    Ensure.that(Value.of(inputField()), equals(\'hello\'))\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SwitchableOrigin"}]},"children":[{"id":6945,"name":"to","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":115,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Switch.ts#L115"}],"signatures":[{"id":6946,"name":"to","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\nto switch the context for future activities to a "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"},{"kind":"text","text":",\\nsuch as a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" or a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"."}]},"parameters":[{"id":6947,"name":"switchable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7827,"name":"Switchable"}],"name":"Answerable"}}],"type":{"type":"reference","id":6944,"name":"Switch"}}]},{"id":6969,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6970,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}},{"id":6971,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6972,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","name":"Interaction.toString"}},{"id":6962,"name":"and","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":132,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Switch.ts#L132"}],"signatures":[{"id":6963,"name":"and","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\nto switch the context for future activities to a "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"},{"kind":"text","text":",\\nsuch as a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" or a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":",\\nperform a sequence of "},{"kind":"code","text":"`activities`"},{"kind":"text","text":", and then switch the context back."}]},"parameters":[{"id":6964,"name":"activities","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"A sequence of activities to perform"}]},"type":{"type":"array","elementType":{"type":"reference","name":"Activity"}}}],"type":{"type":"reference","name":"Task"}}]},{"id":6965,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":139,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Switch.ts#L139"}],"signatures":[{"id":6966,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":6967,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[6945,6969,6971,6962,6965]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/Switch.ts","line":106,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/Switch.ts#L106"}],"extendedTypes":[{"type":"reference","name":"Interaction"}],"permalink":"/api/web/class/Switch","previousId":6909,"nextId":6973},{"id":6973,"name":"TakeScreenshot","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" who has the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nto take a screenshot and emit an "},{"kind":"inline-tag","tag":"@apilink","text":"Artifact"},{"kind":"text","text":",\\nwhich can then be persisted by "},{"kind":"inline-tag","tag":"@apilink","text":"ArtifactArchiver"},{"kind":"text","text":"\\nand reported by [Serenity BDD reporter](/api/serenity-bdd).\\n\\n#### Taking a screenshot\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { Navigate, TakeScreenshot } from \'@serenity-js/protractor\';\\n\\nawait actorCalled(\'Tania\')\\n  .attemptsTo(\\n    Navigate.to(\'/app\'),\\n    TakeScreenshot.of(\'my app\'),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"CollectsArtifacts"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Artifact"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ArtifactArchiver"}]},"children":[{"id":6974,"name":"of","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":43,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/TakeScreenshot.ts#L43"}],"signatures":[{"id":6975,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":"."}]},"parameters":[{"id":6976,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name to give the emitted "},{"kind":"inline-tag","tag":"@apilink","text":"Artifact"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6995,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6996,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}},{"id":6997,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6998,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","name":"Interaction.toString"}},{"id":6991,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":54,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/TakeScreenshot.ts#L54"}],"signatures":[{"id":6992,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":6993,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"CollectsArtifacts"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[6974,6995,6997,6991]}],"sources":[{"fileName":"packages/web/src/screenplay/interactions/TakeScreenshot.ts","line":35,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/interactions/TakeScreenshot.ts#L35"}],"extendedTypes":[{"type":"reference","name":"Interaction"}],"permalink":"/api/web/class/TakeScreenshot","previousId":6944,"nextId":6465},{"id":6999,"name":"BrowserCapabilities","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Basic meta-data about the browser used in the test\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb.browserCapabilities"}]},"children":[{"id":7000,"name":"platformName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the operating system platform the test is executed on, like "},{"kind":"code","text":"`darwin`"},{"kind":"text","text":", "},{"kind":"code","text":"`linux`"},{"kind":"text","text":" or "},{"kind":"code","text":"`windows`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":15,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowserCapabilities.ts#L15"}],"type":{"type":"intrinsic","name":"string"}},{"id":7001,"name":"browserName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the Web browser the test is executed in, like "},{"kind":"code","text":"`chrome`"},{"kind":"text","text":", "},{"kind":"code","text":"`firefox`"},{"kind":"text","text":" or "},{"kind":"code","text":"`safari`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowserCapabilities.ts#L20"}],"type":{"type":"intrinsic","name":"string"}},{"id":7002,"name":"browserVersion","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Version number of the browser the test is executed in."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":25,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowserCapabilities.ts#L25"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[7000,7001,7002]}],"sources":[{"fileName":"packages/web/src/screenplay/models/BrowserCapabilities.ts","line":10,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowserCapabilities.ts#L10"}],"permalink":"/api/web/interface/BrowserCapabilities","previousId":6548,"nextId":7003},{"id":7003,"name":"BrowsingSession","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represents the pages open in the current browsing context.\\n\\nYou\'ll need to use this class directly only if you\'re planning to integrate Serenity/JS\\nwith a new Web integration tool."}]},"children":[{"id":7004,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7005,"name":"new BrowsingSession","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":7006,"name":"Page_Type","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":7312,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page"}}],"type":{"type":"reference","id":7003,"typeArguments":[{"type":"reference","id":7006,"name":"Page_Type"}],"name":"BrowsingSession"}}]},{"id":7009,"name":"closePagesOtherThan","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":18,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowsingSession.ts#L18"}],"signatures":[{"id":7010,"name":"closePagesOtherThan","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7011,"name":"pageOfInterest","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7006,"name":"Page_Type"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7014,"name":"browserCapabilities","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":37,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowsingSession.ts#L37"}],"signatures":[{"id":7015,"name":"browserCapabilities","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"inline-tag","tag":"@apilink","text":"BrowserCapabilities|basic meta-data"},{"kind":"text","text":" about the browser associated with this browsing session."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":6999,"name":"BrowserCapabilities"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7016,"name":"currentPage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":42,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowsingSession.ts#L42"}],"signatures":[{"id":7017,"name":"currentPage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" representing the currently active top-level browsing context."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7006,"name":"Page_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7018,"name":"register","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":55,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowsingSession.ts#L55"}],"signatures":[{"id":7019,"name":"register","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Registers specified "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" to be managed by this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"parameters":[{"id":7020,"name":"pages","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":7006,"name":"Page_Type"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":7021,"name":"deregister","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":67,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowsingSession.ts#L67"}],"signatures":[{"id":7022,"name":"deregister","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Informs this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" that it should no longer manage "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":"\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"parameters":[{"id":7023,"name":"pageIds","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":7024,"name":"allPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":77,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowsingSession.ts#L77"}],"signatures":[{"id":7025,"name":"allPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":7006,"name":"Page_Type"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7026,"name":"registeredPageIds","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":84,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowsingSession.ts#L84"}],"signatures":[{"id":7027,"name":"registeredPageIds","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" is aware of."}]},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}}}]},{"id":7028,"name":"changeCurrentPageTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":106,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowsingSession.ts#L106"}],"signatures":[{"id":7029,"name":"changeCurrentPageTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Informs the "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"parameters":[{"id":7030,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7006,"name":"Page_Type"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7031,"name":"closeAllPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":113,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowsingSession.ts#L113"}],"signatures":[{"id":7032,"name":"closeAllPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Constructors","children":[7004]},{"title":"Methods","children":[7009,7014,7016,7018,7021,7024,7026,7028,7031]}],"sources":[{"fileName":"packages/web/src/screenplay/models/BrowsingSession.ts","line":14,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/BrowsingSession.ts#L14"}],"typeParameters":[{"id":7033,"name":"Page_Type","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","id":7312,"name":"Page"}}],"permalink":"/api/web/class/BrowsingSession","previousId":6999,"nextId":7034},{"id":7034,"name":"Cookie","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"A Screenplay Pattern-style model responsible for managing cookies available to the current "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":".\\n\\n## Checking if a cookie exists\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, isPresent } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(\\n      Cookie.called(\'example-cookie-name\'),\\n      isPresent()\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Setting a cookie\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, isPresent, not } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(Cookie.called(\'example-cookie-name\'), not(isPresent())),\\n\\n    Cookie.set({\\n      name:  \'favourite\',\\n      value: \'triple chocolate\',\\n    }),\\n\\n    Ensure.that(Cookie.called(\'example-cookie-name\'), isPresent()),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Reading a cookie\\n\\n"},{"kind":"code","text":"```typescript\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Cookie } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Sid\')\\n  .attemptsTo(\\n    Navigate.to(\'https://example.org\'),\\n\\n    Ensure.that(\\n      Cookie.called(\'some-cookie-name\').value(),\\n      equals(\'triple chocolate\')\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"CookieData"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Page.cookie"}]},"children":[{"id":7035,"name":"called","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":84,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L84"}],"signatures":[{"id":7036,"name":"called","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" that resolves to "},{"kind":"inline-tag","tag":"@apilink","text":"Cookie"},{"kind":"text","text":" identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":"."}]},"parameters":[{"id":7037,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7034,"name":"Cookie"}],"name":"QuestionAdapter"}}]},{"id":7038,"name":"set","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":102,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L102"}],"signatures":[{"id":7039,"name":"set","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets a cookie for the current "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":". Note that "},{"kind":"inline-tag","tag":"@apilink","text":"CookieData"},{"kind":"text","text":" can be either a plain-old JavaScript object, or an "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"WithAnswerableProperties"},{"kind":"text","text":".\\n\\n:::info\\nMake sure that the actor performing this interaction is on the page that should receive the cookie.\\nBecause of browser security restrictions, an actor can\'t set a cookie for an arbitrary page without being on that page.\\n:::"}]},"parameters":[{"id":7040,"name":"cookieData","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":7041,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":7042,"name":"name","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":18,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L18"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":7043,"name":"value","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The value of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":23,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L23"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":7044,"name":"domain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The domain this cookie is visible to.\\n\\nDefaults to the current browsing context\'s document\'s URL when setting a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":30,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L30"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":7045,"name":"path","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cookie path. Defaults to \\"/\\" when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":35,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L35"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":7046,"name":"expiry","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"inline-tag","tag":"@apilink","text":"Timestamp"},{"kind":"text","text":" describing the point in time when this cookie expires."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":40,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L40"}],"type":{"type":"unknown","name":"{ readonly value: { toString: {}; toDateString: {}; toTimeString: {}; toLocaleString: {}; toLocaleDateString: {}; toLocaleTimeString: {}; valueOf: {}; getTime: {}; getFullYear: {}; getUTCFullYear: {}; getMonth: {}; ... 32 more ...; [Symbol.toPrimitive]: {}; }; ... 11 more ...; equals: {}; }"}},{"id":7047,"name":"httpOnly","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is an HTTP-only cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":46,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L46"}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":7048,"name":"secure","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is a secure cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":52,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L52"}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":7049,"name":"sameSite","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie applies to a "},{"kind":"code","text":"`SameSite`"},{"kind":"text","text":" policy.\\nDefaults to "},{"kind":"code","text":"`None`"},{"kind":"text","text":" if omitted when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":58,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L58"}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":"Lax"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"Strict"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"None"}],"name":"Answerable"}]}}],"groups":[{"title":"Properties","children":[7042,7043,7044,7045,7046,7047,7048,7049]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.d.ts","line":30,"character":188}]}}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":7050,"name":"deleteAll","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":127,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L127"}],"signatures":[{"id":7051,"name":"deleteAll","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" to delete all cookies available to the current "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":".."}]},"type":{"type":"reference","name":"Interaction"}}]},{"id":7057,"name":"name","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":143,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L143"}],"signatures":[{"id":7058,"name":"name","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"type":{"type":"intrinsic","name":"string"}}]},{"id":7059,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":153,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L153"}],"signatures":[{"id":7060,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Optional"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","name":"Optional.isPresent"}},{"id":7061,"name":"value","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":170,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L170"}],"signatures":[{"id":7062,"name":"value","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7063,"name":"path","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":178,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L178"}],"signatures":[{"id":7064,"name":"path","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7065,"name":"domain","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":186,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L186"}],"signatures":[{"id":7066,"name":"domain","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7067,"name":"isHttpOnly","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":197,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L197"}],"signatures":[{"id":7068,"name":"isHttpOnly","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7069,"name":"isSecure","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":208,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L208"}],"signatures":[{"id":7070,"name":"isSecure","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7071,"name":"expiry","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":219,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L219"}],"signatures":[{"id":7072,"name":"expiry","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Timestamp"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Timestamp"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7073,"name":"delete","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":227,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L227"}],"signatures":[{"id":7074,"name":"delete","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Deletes a given cookie."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Methods","children":[7035,7038,7050,7057,7059,7061,7063,7065,7067,7069,7071,7073]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Cookie.ts","line":77,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Cookie.ts#L77"}],"implementedTypes":[{"type":"reference","name":"Optional"}],"permalink":"/api/web/class/Cookie","previousId":7003,"nextId":7079},{"id":7079,"name":"CookieData","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"A data structure describing a "},{"kind":"inline-tag","tag":"@apilink","text":"Cookie"},{"kind":"text","text":" to be set, or one that\'s been read.\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cookie"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Page.cookie"}]},"children":[{"id":7080,"name":"name","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":18,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L18"}],"type":{"type":"intrinsic","name":"string"}},{"id":7081,"name":"value","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"The value of the cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":23,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L23"}],"type":{"type":"intrinsic","name":"string"}},{"id":7082,"name":"domain","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The domain this cookie is visible to.\\n\\nDefaults to the current browsing context\'s document\'s URL when setting a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":30,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L30"}],"type":{"type":"intrinsic","name":"string"}},{"id":7083,"name":"path","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The cookie path. Defaults to \\"/\\" when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":35,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L35"}],"type":{"type":"intrinsic","name":"string"}},{"id":7084,"name":"expiry","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The "},{"kind":"inline-tag","tag":"@apilink","text":"Timestamp"},{"kind":"text","text":" describing the point in time when this cookie expires."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":40,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L40"}],"type":{"type":"reference","name":"Timestamp"}},{"id":7085,"name":"httpOnly","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is an HTTP-only cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":46,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L46"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":7086,"name":"secure","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie is a secure cookie.\\nDefaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" when adding a new cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":52,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L52"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":7087,"name":"sameSite","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the cookie applies to a "},{"kind":"code","text":"`SameSite`"},{"kind":"text","text":" policy.\\nDefaults to "},{"kind":"code","text":"`None`"},{"kind":"text","text":" if omitted when adding a cookie."}]},"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":58,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L58"}],"type":{"type":"union","types":[{"type":"literal","value":"Lax"},{"type":"literal","value":"Strict"},{"type":"literal","value":"None"}]}}],"groups":[{"title":"Properties","children":[7080,7081,7082,7083,7084,7085,7086,7087]}],"sources":[{"fileName":"packages/web/src/screenplay/models/CookieData.ts","line":13,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/CookieData.ts#L13"}],"permalink":"/api/web/interface/CookieData","previousId":7034,"nextId":7196},{"id":7196,"name":"Key","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents keyboard keys that aren\'t text, and that can be used with the "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"Press"},{"kind":"text","text":".\\n\\n**Note:** Modifier keys like "},{"kind":"inline-tag","tag":"@apilink","text":"Key.Shift"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"Key.Alt"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"Key.Meta"},{"kind":"text","text":" (a.k.a. \\"Command\\" on Mac) will stay pressed,\\nso there\'s no need to depress them.\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Press"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Page.sendKeys"},{"kind":"text","text":"\\n- [W3C WebDriver Spec: Keyboard Actions](https://w3c.github.io/webdriver/webdriver-spec.html#keyboard-actions)\\n- [Selenium WebDriver: Inputs](https://github.com/SeleniumHQ/selenium/blob/trunk/javascript/node/selenium-webdriver/lib/input.js#L46)\\n- [WebdriverIO: Constants](https://github.com/webdriverio/webdriverio/blob/main/packages/wdio-utils/src/constants.ts#L5)"}]},"children":[{"id":7197,"name":"Alt","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":18,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L18"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7198,"name":"ArrowDown","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":19,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L19"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7199,"name":"ArrowLeft","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":20,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L20"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7200,"name":"ArrowRight","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":21,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L21"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7201,"name":"ArrowUp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":22,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L22"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7202,"name":"Backspace","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":23,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L23"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7203,"name":"Cancel","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":24,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L24"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7204,"name":"Clear","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":25,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L25"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7205,"name":"Control","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":26,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L26"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7206,"name":"Delete","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":27,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L27"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7207,"name":"End","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":28,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L28"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7208,"name":"Enter","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":29,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L29"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7209,"name":"Escape","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":30,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L30"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7210,"name":"F1","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":31,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L31"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7211,"name":"F2","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":32,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L32"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7212,"name":"F3","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":33,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L33"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7213,"name":"F4","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":34,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L34"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7214,"name":"F5","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":35,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L35"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7215,"name":"F6","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":36,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L36"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7216,"name":"F7","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":37,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L37"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7217,"name":"F8","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":38,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L38"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7218,"name":"F9","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":39,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L39"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7219,"name":"F10","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":40,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L40"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7220,"name":"F11","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":41,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L41"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7221,"name":"F12","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":42,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L42"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7222,"name":"Help","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":43,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L43"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7223,"name":"Home","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":44,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L44"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7224,"name":"Insert","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":45,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L45"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7225,"name":"Meta","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":46,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L46"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7226,"name":"Numpad0","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":47,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L47"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7227,"name":"Numpad1","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":48,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L48"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7228,"name":"Numpad2","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":49,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L49"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7229,"name":"Numpad3","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":50,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L50"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7230,"name":"Numpad4","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":51,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L51"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7231,"name":"Numpad5","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":52,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L52"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7232,"name":"Numpad6","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":53,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L53"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7233,"name":"Numpad7","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":54,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L54"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7234,"name":"Numpad8","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":55,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L55"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7235,"name":"Numpad9","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":56,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L56"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7236,"name":"NumpadAdd","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":57,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L57"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7237,"name":"NumpadDecimal","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":58,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L58"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7238,"name":"NumpadDivide","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":59,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L59"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7239,"name":"NumpadEqual","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":60,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L60"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7240,"name":"NumpadMultiply","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":61,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L61"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7241,"name":"NumpadSubtract","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":62,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L62"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7242,"name":"PageDown","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":63,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L63"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7243,"name":"PageUp","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":64,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L64"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7244,"name":"Pause","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":65,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L65"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7245,"name":"Semicolon","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":66,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L66"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7246,"name":"Shift","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":67,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L67"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7247,"name":"Space","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":68,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L68"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7248,"name":"Tab","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":69,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L69"}],"type":{"type":"reference","id":7196,"name":"Key"},"defaultValue":"..."},{"id":7249,"name":"isKey","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":71,"character":18,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L71"}],"signatures":[{"id":7250,"name":"isKey","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7251,"name":"maybeKey","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"unknown"}}],"type":{"type":"predicate","name":"maybeKey","asserts":false,"targetType":{"type":"reference","id":7196,"name":"Key"}}}]},{"id":7252,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":76,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L76"}],"signatures":[{"id":7253,"name":"new Key","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":7254,"name":"devtoolsName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":7255,"name":"utf16codePoint","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":7256,"name":"isModifier","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"}],"type":{"type":"reference","id":7196,"name":"Key"}}]},{"id":7257,"name":"devtoolsName","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":77,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L77"}],"type":{"type":"intrinsic","name":"string"}},{"id":7258,"name":"utf16codePoint","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":78,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L78"}],"type":{"type":"intrinsic","name":"string"}},{"id":7259,"name":"isModifier","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":79,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L79"}],"type":{"type":"intrinsic","name":"boolean"},"defaultValue":"false"},{"id":7260,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":83,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L83"}],"signatures":[{"id":7261,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Properties","children":[7197,7198,7199,7200,7201,7202,7203,7204,7205,7206,7207,7208,7209,7210,7211,7212,7213,7214,7215,7216,7217,7218,7219,7220,7221,7222,7223,7224,7225,7226,7227,7228,7229,7230,7231,7232,7233,7234,7235,7236,7237,7238,7239,7240,7241,7242,7243,7244,7245,7246,7247,7248,7257,7258,7259]},{"title":"Methods","children":[7249,7260]},{"title":"Constructors","children":[7252]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Key.ts","line":17,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Key.ts#L17"}],"permalink":"/api/web/class/Key","previousId":7079,"nextId":7262},{"id":7262,"name":"Locator","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"inline-tag","tag":"@apilink","text":"Locator"},{"kind":"text","text":" uses a "},{"kind":"inline-tag","tag":"@apilink","text":"Selector"},{"kind":"text","text":" to locate a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements"},{"kind":"text","text":"\\nwithin the "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"RootLocator"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Page.locate"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements"}]},"children":[{"id":7270,"name":"selector","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":26,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L26"}],"type":{"type":"reference","id":7817,"name":"Selector"}},{"id":7271,"name":"nativeElement","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":31,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L31"}],"signatures":[{"id":7272,"name":"nativeElement","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Native_Element_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":7687,"name":"RootLocator.nativeElement"}}],"overwrites":{"type":"reference","id":7686,"name":"RootLocator.nativeElement"}},{"id":7273,"name":"allNativeElements","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":32,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L32"}],"signatures":[{"id":7274,"name":"allNativeElements","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Native_Element_Type"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7275,"name":"switchToFrame","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":34,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L34"}],"signatures":[{"id":7276,"name":"switchToFrame","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7277,"name":"element","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Native_Element_Type"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":7678,"name":"RootLocator.switchToFrame"}}],"overwrites":{"type":"reference","id":7677,"name":"RootLocator.switchToFrame"}},{"id":7278,"name":"switchToParentFrame","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":38,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L38"}],"signatures":[{"id":7279,"name":"switchToParentFrame","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":7681,"name":"RootLocator.switchToParentFrame"}}],"overwrites":{"type":"reference","id":7680,"name":"RootLocator.switchToParentFrame"}},{"id":7280,"name":"switchToMainFrame","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":42,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L42"}],"signatures":[{"id":7281,"name":"switchToMainFrame","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":7683,"name":"RootLocator.switchToMainFrame"}}],"overwrites":{"type":"reference","id":7682,"name":"RootLocator.switchToMainFrame"}},{"id":7284,"name":"of","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":48,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L48"}],"signatures":[{"id":7285,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7286,"name":"parent","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7673,"typeArguments":[{"type":"reference","name":"Native_Element_Type"}],"name":"RootLocator"}}],"type":{"type":"reference","id":7262,"typeArguments":[{"type":"reference","name":"Native_Element_Type"},{"type":"intrinsic","name":"any"}],"name":"Locator"}}]},{"id":7287,"name":"closestTo","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":49,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L49"}],"signatures":[{"id":7288,"name":"closestTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7289,"name":"child","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7262,"typeArguments":[{"type":"reference","name":"Native_Element_Type"},{"type":"intrinsic","name":"any"}],"name":"Locator"}}],"type":{"type":"reference","id":7262,"typeArguments":[{"type":"reference","name":"Native_Element_Type"},{"type":"intrinsic","name":"any"}],"name":"Locator"}}]},{"id":7290,"name":"locate","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":50,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L50"}],"signatures":[{"id":7291,"name":"locate","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7292,"name":"child","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7262,"typeArguments":[{"type":"reference","name":"Native_Element_Type"},{"type":"intrinsic","name":"any"}],"name":"Locator"}}],"type":{"type":"reference","id":7262,"typeArguments":[{"type":"reference","name":"Native_Element_Type"},{"type":"intrinsic","name":"any"}],"name":"Locator"}}]},{"id":7296,"name":"element","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":77,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L77"}],"signatures":[{"id":7297,"name":"element","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","name":"Native_Element_Type"}],"name":"PageElement"}}]},{"id":7298,"name":"allElements","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":79,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L79"}],"signatures":[{"id":7299,"name":"allElements","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","name":"Native_Element_Type"}],"name":"PageElement"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7300,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":81,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L81"}],"signatures":[{"id":7301,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","id":7689,"name":"RootLocator.toString"}}],"overwrites":{"type":"reference","id":7688,"name":"RootLocator.toString"}},{"id":7302,"name":"[custom]","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":88,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L88"}],"type":{"type":"reflection","declaration":{"id":7303,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.d.ts","line":3,"character":84}],"signatures":[{"id":7304,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Custom [Node.js inspection method](https://nodejs.org/api/util.html#utilinspectcustom)."}]},"parameters":[{"id":7305,"name":"depth","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":7306,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"InspectOptionsStylized","qualifiedName":"InspectOptionsStylized","package":"@types/node"}},{"id":7307,"name":"inspect","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"query","queryType":{"type":"reference","name":"inspect","qualifiedName":"inspect","package":"@types/node"}}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"...","overwrites":{"type":"reference","id":7690,"name":"RootLocator.[custom]"}},{"id":7308,"name":"isPresent","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/RootLocator.ts#L21"}],"signatures":[{"id":7309,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":7685,"name":"RootLocator.isPresent"}}],"inheritedFrom":{"type":"reference","id":7684,"name":"RootLocator.isPresent"}}],"groups":[{"title":"Properties","children":[7270,7302]},{"title":"Methods","children":[7271,7273,7275,7278,7280,7284,7287,7290,7296,7298,7300,7308]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Locator.ts","line":21,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Locator.ts#L21"}],"typeParameters":[{"id":7310,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{}},{"id":7311,"name":"Native_Selector_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","id":7673,"typeArguments":[{"type":"reference","name":"Native_Element_Type"}],"name":"RootLocator"}],"permalink":"/api/web/class/Locator","previousId":7196,"nextId":7312},{"id":7312,"name":"Page","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS Screenplay Pattern-style model that enables interactions with a Web page\\nrendered in a Web browser tab.\\n\\n## Referring to the current page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, endsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Ensure.that(Page.current().title(), endsWith(\'Serenity/JS\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Switching to another open page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Switch, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n\\n  Switch.to(Page.whichUrl(startsWith(\'https://github.com\')))\\n\\n  Ensure.that(\\n    Page.current().url().href,\\n    equals(\'https://github.com/serenity-js/serenity-js\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Retrieving information about another open page\\n\\nYou can retrieve information about another open page without having to explicitly switch to it:\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n  Ensure.that(\\n    Page.whichUrl(startsWith(\'https://github.com\')).url().href,\\n    equals(\'https://github.com/serenity-js/serenity-js\')\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Performing activities in the context of another page\\n\\n"},{"kind":"code","text":"```ts\\nimport { Ensure, equals, includes, startsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Navigate, Page, Text } from \'@serenity-js/web\'\\n\\nconst Navigation = {\\n  linkTo = (name: Answerable<string>) =>\\n    PageElements.located(By.css(\'nav a\'))\\n      .where(Text, includes(name))\\n      .first()\\n}\\n\\nawait actorCalled(\'Serena\').attemptsTo(\\n\\n  // Serenity/JS GitHub repository opens in a new browser tab\\n  Navigate.to(\'https://serenity-js.org\'),\\n  Click.on(Navigation.linkTo(\'GitHub\')),\\n\\n  // Switch to the newly opened page and perform an assertion\\n  Switch.to(Page.whichUrl(startsWith(\'https://github.com\')))\\n    .and(\\n      Ensure.that(\\n        Page.current().url().href,\\n        equals(\'https://github.com/serenity-js/serenity-js\')\\n      )\\n    ),\\n  // Automatically switch back to the original page\\n\\n  Ensure.that(Page.current().url().href, equals(\'https://serenity-js.org\'),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Optional"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"}]},"children":[{"id":7313,"name":"current","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":138,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L138"}],"signatures":[{"id":7314,"name":"current","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" representing the currently active "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7312,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page"}],"name":"QuestionAdapter"}}]},{"id":7315,"name":"whichName","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":162,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L162"}],"signatures":[{"id":7316,"name":"whichName","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" that resolves to a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" which "},{"kind":"inline-tag","tag":"@apilink","text":"Page.name"},{"kind":"text","text":"\\nmeets the "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|`expectation`"},{"kind":"text","text":".\\n\\n#### Switching to a page with the desired name\\n\\n"},{"kind":"code","text":"```ts\\nimport { includes } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichName(includes(`photo-gallery`))),\\n)\\n```"}]},"parameters":[{"id":7317,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7312,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page"}],"name":"QuestionAdapter"}}]},{"id":7318,"name":"whichTitle","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":192,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L192"}],"signatures":[{"id":7319,"name":"whichTitle","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" that resolves to a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" which "},{"kind":"inline-tag","tag":"@apilink","text":"Page.title"},{"kind":"text","text":"\\nmeets the "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|`expectation`"},{"kind":"text","text":".\\n\\n#### Switching to a page with the desired title\\n\\n"},{"kind":"code","text":"```ts\\nimport { includes } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichTitle(includes(`Summer collection`))),\\n)\\n```"}]},"parameters":[{"id":7320,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7312,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page"}],"name":"QuestionAdapter"}}]},{"id":7321,"name":"whichUrl","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":222,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L222"}],"signatures":[{"id":7322,"name":"whichUrl","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" that resolves to a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" which "},{"kind":"inline-tag","tag":"@apilink","text":"Page.url"},{"kind":"text","text":"\\nmeets the "},{"kind":"inline-tag","tag":"@apilink","text":"Expectation|`expectation`"},{"kind":"text","text":".\\n\\n#### Switching to a page with the desired URL\\n\\n"},{"kind":"code","text":"```ts\\nimport { endsWith } from \'@serenity-js/assertions\'\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Switch } from \'@serenity-js/web\'\\n\\nactorCalled(\'Bernie\').attemptsTo(\\n  Switch.to(Page.whichUrl(endsWith(`/gallery.html`))),\\n)\\n```"}]},"parameters":[{"id":7323,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Expectation"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7312,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"Page"}],"name":"QuestionAdapter"}}]},{"id":7332,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":248,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L248"}],"signatures":[{"id":7333,"name":"new Page","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":7334,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":7335,"name":"session","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7003,"typeArguments":[{"type":"reference","id":7312,"typeArguments":[{"type":"reference","id":7334,"name":"Native_Element_Type"}],"name":"Page"}],"name":"BrowsingSession"}},{"id":7336,"name":"rootLocator","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7673,"typeArguments":[{"type":"reference","id":7334,"name":"Native_Element_Type"}],"name":"RootLocator"}},{"id":7337,"name":"modalDialogHandler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7180,"name":"ModalDialogHandler"}},{"id":7338,"name":"id","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}}],"type":{"type":"reference","id":7312,"typeArguments":[{"type":"reference","id":7334,"name":"Native_Element_Type"}],"name":"Page"}}]},{"id":7342,"name":"id","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":252,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L252"}],"type":{"type":"reference","name":"CorrelationId"}},{"id":7343,"name":"createPageElement","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":265,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L265"}],"signatures":[{"id":7344,"name":"createPageElement","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" wrapping a native element."}]},"parameters":[{"id":7345,"name":"nativeElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7334,"name":"Native_Element_Type"}}],"type":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7334,"name":"Native_Element_Type"}],"name":"PageElement"}}]},{"id":7346,"name":"locate","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":272,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L272"}],"signatures":[{"id":7347,"name":"locate","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":", retrieving an element located by "},{"kind":"inline-tag","tag":"@apilink","text":"Selector"},{"kind":"text","text":"."}]},"parameters":[{"id":7348,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7817,"name":"Selector"}}],"type":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7334,"name":"Native_Element_Type"}],"name":"PageElement"}}]},{"id":7349,"name":"locateAll","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":280,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L280"}],"signatures":[{"id":7350,"name":"locateAll","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements"},{"kind":"text","text":", retrieving a collection of elements located by "},{"kind":"inline-tag","tag":"@apilink","text":"Selector"},{"kind":"text","text":"."}]},"parameters":[{"id":7351,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7817,"name":"Selector"}}],"type":{"type":"reference","id":7499,"typeArguments":[{"type":"reference","id":7334,"name":"Native_Element_Type"}],"name":"PageElements"}}]},{"id":7352,"name":"navigateTo","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":295,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L295"}],"signatures":[{"id":7353,"name":"navigateTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Navigate to a given destination, specified as an absolute URL\\nor a path relative to any base URL configured in your web test integration tool.\\n\\n#### Learn more\\n\\n- [WebdriverIO: Configuration Options](https://webdriver.io/docs/options/#baseurl)\\n- [Playwright: Browser](https://playwright.dev/docs/api/class-browser#browser-new-context)\\n- [Playwright: Test Options](https://playwright.dev/docs/api/class-testoptions#test-options-base-url)\\n- [Protractor: Configuration](https://github.com/angular/protractor/blob/master/lib/config.ts)"}]},"parameters":[{"id":7354,"name":"destination","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7355,"name":"navigateBack","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":304,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L304"}],"signatures":[{"id":7356,"name":"navigateBack","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Causes the browser to traverse one step backward in the joint session history\\nof the current "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" (the current top-level browsing context).\\n\\nThis is equivalent to pressing the back button in the browser UI,\\nor calling ["},{"kind":"code","text":"`window.history.back`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/History/back)."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7357,"name":"navigateForward","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":313,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L313"}],"signatures":[{"id":7358,"name":"navigateForward","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Causes the browser to traverse one step forward in the joint session history\\nof the current "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" (the current top-level browsing context).\\n\\nThis is equivalent to pressing the back button in the browser UI,\\nor calling ["},{"kind":"code","text":"`window.history.forward`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/History/forward)."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7359,"name":"reload","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":318,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L318"}],"signatures":[{"id":7360,"name":"reload","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Causes the browser to reload the "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" in the current top-level browsing context."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7361,"name":"sendKeys","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":326,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L326"}],"signatures":[{"id":7362,"name":"sendKeys","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Send a sequence of "},{"kind":"inline-tag","tag":"@apilink","text":"Key"},{"kind":"text","text":" strokes to the active element."}]},"parameters":[{"id":7363,"name":"keys","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Keys to enter"}]},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","id":7196,"name":"Key"}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7364,"name":"executeScript","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":371,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L371"}],"signatures":[{"id":7365,"name":"executeScript","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Schedules a command to execute JavaScript in the context of the currently selected frame or window.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":" or "},{"kind":"code","text":"`WebElement`"},{"kind":"text","text":".\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nThe script may refer to any variables accessible from the current window.\\nFurthermore, the script will execute in the window\'s context, thus "},{"kind":"code","text":"`document`"},{"kind":"text","text":" may be used to refer\\nto the current document. Any local variables will not be available once the script has finished executing,\\nthough global variables will persist.\\n\\nIf the script has a return value (i.e. if the script contains a "},{"kind":"code","text":"`return`"},{"kind":"text","text":" statement),\\nthen the following steps will be taken for resolving this functions return value:\\n\\n- For a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":", the value will resolve to a [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\\n- "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" return values will resolve to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", and "},{"kind":"code","text":"`string`"},{"kind":"text","text":" values will resolve as is\\n- Functions will resolve to their string representation\\n- For arrays and objects, each member item will be converted according to the rules above\\n\\n#### Use injected JavaScript to retrieve information about a HTMLElement\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  return arguments[0].tagName;\\n`, PageElement.located(By.css(\'h1\')).describedAs(\'header\'))\\n\\n// returns a Promise that resolves to \'h1\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Selenium WebDriver: JavaScript Executor](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/JavascriptExecutor.html#executeAsyncScript-java.lang.String-java.lang.Object...-)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Page.lastScriptExecutionResult"}]},"typeParameter":[{"id":7366,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}},{"id":7367,"name":"InnerArguments","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":7368,"name":"script","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":7369,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":372,"character":26,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L372"}],"signatures":[{"id":7370,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7371,"name":"parameters","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":7367,"name":"InnerArguments"}}],"type":{"type":"reference","id":7366,"name":"Result"}}]}}]}},{"id":7372,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":7367,"name":"InnerArguments"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7366,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7373,"name":"executeAsyncScript","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":431,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L431"}],"signatures":[{"id":7374,"name":"executeAsyncScript","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Schedules a command to execute asynchronous JavaScript in the context of the currently selected frame or window.\\n\\nThe script fragment will be executed as the body of an anonymous function.\\nIf the script is provided as a function object, that function will be converted to a string for injection\\ninto the target window.\\n\\nAny arguments provided in addition to the script will be included as script arguments and may be referenced\\nusing the "},{"kind":"code","text":"`arguments`"},{"kind":"text","text":" object. Arguments may be a "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", "},{"kind":"code","text":"`string`"},{"kind":"text","text":" or "},{"kind":"code","text":"`WebElement`"},{"kind":"text","text":"\\nArrays and objects may also be used as script arguments as long as each item adheres\\nto the types previously mentioned.\\n\\nUnlike executing synchronous JavaScript with "},{"kind":"inline-tag","tag":"@apilink","text":"Page.executeScript"},{"kind":"text","text":",\\nscripts executed with this function must explicitly signal they are finished by invoking the provided callback.\\n\\nThis callback will always be injected into the executed function as the last argument,\\nand thus may be referenced with "},{"kind":"code","text":"`arguments[arguments.length - 1]`"},{"kind":"text","text":".\\n\\nThe following steps will be taken for resolving this functions return value against\\nthe first argument to the script\'s callback function:\\n\\n- For a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":", the value will resolve to a [HTMLElement](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement)\\n- "},{"kind":"code","text":"`null`"},{"kind":"text","text":" and "},{"kind":"code","text":"`undefined`"},{"kind":"text","text":" return values will resolve to "},{"kind":"code","text":"`null`"},{"kind":"text","text":"\\n- "},{"kind":"code","text":"`boolean`"},{"kind":"text","text":", "},{"kind":"code","text":"`number`"},{"kind":"text","text":", and "},{"kind":"code","text":"`string`"},{"kind":"text","text":" values will resolve as is\\n- Functions will resolve to their string representation\\n- For arrays and objects, each member item will be converted according to the rules above\\n\\n#### Perform a sleep in the browser under test>\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  var delay    = arguments[0];\\n  var callback = arguments[arguments.length - 1];\\n\\n  window.setTimeout(callback, delay);\\n`, 500)\\n```"},{"kind":"text","text":"\\n\\n#### Return a value asynchronously\\n\\n"},{"kind":"code","text":"```ts\\nBrowseTheWeb.as(actor).executeAsyncScript(`\\n  var callback = arguments[arguments.length - 1];\\n\\n  callback(\'some return value\')\\n`).then(value => doSomethingWithThe(value))\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Selenium WebDriver: JavaScript Executor](https://seleniumhq.github.io/selenium/docs/api/java/org/openqa/selenium/JavascriptExecutor.html#executeAsyncScript-java.lang.String-java.lang.Object...-)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Page.lastScriptExecutionResult"}]},"typeParameter":[{"id":7375,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}},{"id":7376,"name":"Parameters","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":7377,"name":"script","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":7378,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":26,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L432"}],"signatures":[{"id":7379,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7380,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"named-tuple-member","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","id":7376,"name":"Parameters"}}}},{"type":"named-tuple-member","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":7381,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":432,"character":75,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L432"}],"signatures":[{"id":7382,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7383,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7375,"name":"Result"}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":7384,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":7376,"name":"Parameters"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7375,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7385,"name":"lastScriptExecutionResult","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":440,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L440"}],"signatures":[{"id":7386,"name":"lastScriptExecutionResult","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the last result of calling "},{"kind":"inline-tag","tag":"@apilink","text":"Page.executeAsyncScript"},{"kind":"text","text":"\\nor "},{"kind":"inline-tag","tag":"@apilink","text":"Page.executeScript"}]},"typeParameter":[{"id":7387,"name":"R","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":7387,"name":"R"}}]},{"id":7388,"name":"takeScreenshot","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":451,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L451"}],"signatures":[{"id":7389,"name":"takeScreenshot","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Take a screenshot of the top-level browsing context\'s viewport."}],"blockTags":[{"tag":"@throws","content":[{"kind":"inline-tag","tag":"@apilink","text":"BrowserWindowClosedError"},{"kind":"text","text":"\\n When the page you\'re trying to take the screenshot of has already been closed"}]},{"tag":"@returns","content":[{"kind":"text","text":"A promise that will resolve to a base64-encoded screenshot PNG"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7390,"name":"cookie","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":458,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L458"}],"signatures":[{"id":7391,"name":"cookie","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves a cookie identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":" and visible to this "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"."}]},"parameters":[{"id":7392,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7034,"name":"Cookie"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7393,"name":"setCookie","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":466,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L466"}],"signatures":[{"id":7394,"name":"setCookie","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Adds a single cookie with "},{"kind":"inline-tag","tag":"@apilink","text":"CookieData"},{"kind":"text","text":" to the cookie store associated\\nwith the active "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"\'s address."}]},"parameters":[{"id":7395,"name":"cookieData","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7079,"name":"CookieData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7396,"name":"deleteAllCookies","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":471,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L471"}],"signatures":[{"id":7397,"name":"deleteAllCookies","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Removes all the cookies."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7398,"name":"title","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":479,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L479"}],"signatures":[{"id":7399,"name":"title","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the document title of the current top-level browsing context, equivalent to calling "},{"kind":"code","text":"`document.title`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- [Mozilla Developer Network: Document title](https://developer.mozilla.org/en-US/docs/Web/API/Document/title)"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7400,"name":"url","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":484,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L484"}],"signatures":[{"id":7401,"name":"url","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the [URL](https://nodejs.org/api/url.html) of the current top-level browsing context."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"URL","qualifiedName":"URL","package":"@types/node"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7402,"name":"name","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":489,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L489"}],"signatures":[{"id":7403,"name":"name","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the name of the current top-level browsing context."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7404,"name":"isPresent","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":494,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L494"}],"signatures":[{"id":7405,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given window / tab / page is open and can be switched to, e.g. it\'s not closed."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","name":"Optional.isPresent"}},{"id":7406,"name":"viewportSize","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L500"}],"signatures":[{"id":7407,"name":"viewportSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the actual viewport size available for the given page,\\nexcluding any scrollbars."}]},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":7408,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":7409,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":39,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L500"}],"type":{"type":"intrinsic","name":"number"}},{"id":7410,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":54,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L500"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[7409,7410]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":500,"character":37,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L500"}]}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7411,"name":"setViewportSize","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L507"}],"signatures":[{"id":7412,"name":"setViewportSize","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets ths size of the visible viewport to desired dimensions."}]},"parameters":[{"id":7413,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":7414,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":7415,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":37,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L507"}],"type":{"type":"intrinsic","name":"number"}},{"id":7416,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":52,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L507"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[7415,7416]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":507,"character":35,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L507"}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7417,"name":"switchTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":518,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L518"}],"signatures":[{"id":7418,"name":"switchTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switch"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7830,"name":"SwitchableOrigin"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","id":7829,"name":"Switchable.switchTo"}}],"implementationOf":{"type":"reference","id":7828,"name":"Switchable.switchTo"}},{"id":7419,"name":"close","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":534,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L534"}],"signatures":[{"id":7420,"name":"close","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Closes this page."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7421,"name":"closeOthers","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":539,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L539"}],"signatures":[{"id":7422,"name":"closeOthers","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Closes any open pages, except for this one."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7423,"name":"modalDialog","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":544,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L544"}],"signatures":[{"id":7424,"name":"modalDialog","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialogHandler"},{"kind":"text","text":" for the current "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"."}]},"type":{"type":"reference","id":7180,"name":"ModalDialogHandler"}}]},{"id":7425,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":551,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L551"}],"signatures":[{"id":7426,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[7313,7315,7318,7321,7343,7346,7349,7352,7355,7357,7359,7361,7364,7373,7385,7388,7390,7393,7396,7398,7400,7402,7404,7406,7411,7417,7419,7421,7423,7425]},{"title":"Constructors","children":[7332]},{"title":"Properties","children":[7342]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Page.ts","line":133,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Page.ts#L133"}],"typeParameters":[{"id":7427,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"implementedTypes":[{"type":"reference","name":"Optional"},{"type":"reference","id":7827,"name":"Switchable"}],"permalink":"/api/web/class/Page","previousId":7262,"nextId":7428},{"id":7428,"name":"PageElement","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to identify\\na single Web element located by "},{"kind":"inline-tag","tag":"@apilink","text":"Selector"},{"kind":"text","text":".\\n\\n## Learn more\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Optional"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"}]},"children":[{"id":7429,"name":"from","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":25,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L25"}],"signatures":[{"id":7430,"name":"from","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":7431,"name":"NET","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":7432,"name":"nativeElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7431,"name":"NET"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7431,"name":"NET"}],"name":"PageElement"},{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7431,"name":"NET"}],"name":"PageElement"}],"name":"MetaQuestionAdapter"}}]},{"id":7433,"name":"located","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":33,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L33"}],"signatures":[{"id":7434,"name":"located","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":7435,"name":"NET","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":7436,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7817,"name":"Selector"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7435,"name":"NET"}],"name":"PageElement"},{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7435,"name":"NET"}],"name":"PageElement"}],"name":"MetaQuestionAdapter"}}]},{"id":7437,"name":"of","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":42,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L42"}],"signatures":[{"id":7438,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":7439,"name":"NET","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":7440,"name":"childElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7439,"name":"NET"}],"name":"PageElement"},{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7439,"name":"NET"}],"name":"PageElement"},{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7439,"name":"NET"}],"name":"PageElement"}],"name":"MetaQuestionAdapter"}]}},{"id":7441,"name":"parentElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7439,"name":"NET"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7439,"name":"NET"}],"name":"PageElement"},{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7439,"name":"NET"}],"name":"PageElement"}],"name":"MetaQuestionAdapter"}}]},{"id":7442,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":54,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L54"}],"signatures":[{"id":7443,"name":"new PageElement","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":7444,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":7445,"name":"locator","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7262,"typeArguments":[{"type":"reference","id":7444,"name":"Native_Element_Type"},{"type":"intrinsic","name":"any"}],"name":"Locator"}}],"type":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7444,"name":"Native_Element_Type"}],"name":"PageElement"}}]},{"id":7446,"name":"locator","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":54,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L54"}],"type":{"type":"reference","id":7262,"typeArguments":[{"type":"reference","id":7444,"name":"Native_Element_Type"},{"type":"intrinsic","name":"any"}],"name":"Locator"}},{"id":7447,"name":"of","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":65,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L65"}],"signatures":[{"id":7448,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a child element that:\\n- matches the given selector\\n- is located within the "},{"kind":"code","text":"`parentElement`"}]},"parameters":[{"id":7449,"name":"parentElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7444,"name":"Native_Element_Type"}],"name":"PageElement"}}],"type":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7444,"name":"Native_Element_Type"}],"name":"PageElement"}}]},{"id":7450,"name":"closestTo","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":115,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L115"}],"signatures":[{"id":7451,"name":"closestTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Traverses the element and its parents, heading toward the document root,\\nuntil it finds a parent "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" that matches its associated CSS selector.\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```html\\n<div class=\\"form-entry\\">\\n    <input id=\\"username\\" />\\n    <ul class=\\"warnings\\">\\n        <li>Username should be an email address</li>\\n    </ul>\\n</div>\\n```"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```typescript\\nclass Username {\\n  static field = () =>\\n    PageElement.located(By.id(\'username\'))\\n      .describedAs(\'username field\')\\n\\n  private static container = () =>\\n    PageElement.located(By.css(\'.form-entry\'))\\n      .describedAs(\'form entry container\')\\n\\n  static warnings = () =>\\n    PageElements.located(By.css(\'ul.warnings li\'))\\n      .describedAs(\'warnings\')\\n      .of(\\n        Username.container().closestTo(Username.field())\\n      )\\n}\\n```"},{"kind":"text","text":"\\n\\n:::info\\nThis method relies on [Element: closest() API](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest),\\nand so is only compatible with locating parent elements specified using the following CSS selectors:\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ByCss"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ById"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ByTagName"},{"kind":"text","text":"\\n:::"}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"#### Learn more\\n- [Element: closest() method](https://developer.mozilla.org/en-US/docs/Web/API/Element/closest)"}]}]},"parameters":[{"id":7452,"name":"childElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7444,"name":"Native_Element_Type"}],"name":"PageElement"}}],"type":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7444,"name":"Native_Element_Type"}],"name":"PageElement"}}]},{"id":7453,"name":"nativeElement","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":120,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L120"}],"signatures":[{"id":7454,"name":"nativeElement","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7444,"name":"Native_Element_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7455,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":124,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L124"}],"signatures":[{"id":7456,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"}}]},{"id":7457,"name":"enterValue","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":128,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L128"}],"signatures":[{"id":7458,"name":"enterValue","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7459,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7460,"name":"clearValue","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":129,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L129"}],"signatures":[{"id":7461,"name":"clearValue","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7462,"name":"click","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":130,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L130"}],"signatures":[{"id":7463,"name":"click","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7464,"name":"doubleClick","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":131,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L131"}],"signatures":[{"id":7465,"name":"doubleClick","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7466,"name":"scrollIntoView","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":132,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L132"}],"signatures":[{"id":7467,"name":"scrollIntoView","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7468,"name":"hoverOver","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":133,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L133"}],"signatures":[{"id":7469,"name":"hoverOver","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7470,"name":"rightClick","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":134,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L134"}],"signatures":[{"id":7471,"name":"rightClick","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7472,"name":"selectOptions","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":135,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L135"}],"signatures":[{"id":7473,"name":"selectOptions","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7474,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":7697,"name":"SelectOption"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7475,"name":"selectedOptions","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":136,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L136"}],"signatures":[{"id":7476,"name":"selectedOptions","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":7697,"name":"SelectOption"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7477,"name":"attribute","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":138,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L138"}],"signatures":[{"id":7478,"name":"attribute","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7479,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7480,"name":"text","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":139,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L139"}],"signatures":[{"id":7481,"name":"text","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7482,"name":"value","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":140,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L140"}],"signatures":[{"id":7483,"name":"value","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7484,"name":"switchTo","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":157,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L157"}],"signatures":[{"id":7485,"name":"switchTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"When the element represents an ["},{"kind":"code","text":"`iframe`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe),\\ncalling this method switches the current browsing context to the given "},{"kind":"code","text":"`iframe`"},{"kind":"text","text":" context.\\n\\nWhen used with other types of [Web "},{"kind":"code","text":"`Element`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element),\\ncalling this method will have the same result as calling ["},{"kind":"code","text":"`Element.focus()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Element/focus_event)."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Returns an object that allows the caller to switch back\\n to the previous context if needed.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switch"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"}]}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7830,"name":"SwitchableOrigin"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","id":7829,"name":"Switchable.switchTo"}}],"implementationOf":{"type":"reference","id":7828,"name":"Switchable.switchTo"}},{"id":7486,"name":"isActive","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":163,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L163"}],"signatures":[{"id":7487,"name":"isActive","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element [has focus](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus).\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7488,"name":"isClickable","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":171,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L171"}],"signatures":[{"id":7489,"name":"isClickable","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element can be clicked on.\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":".\\n\\nPlease refer to test integration tool-specific documentation for details."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7490,"name":"isEnabled","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":179,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L179"}],"signatures":[{"id":7491,"name":"isEnabled","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying\\nelement is not [explicitly disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\\n\\nPlease refer to test integration tool-specific documentation for details."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7492,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":186,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L186"}],"signatures":[{"id":7493,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Promise"},{"kind":"text","text":" that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the element\\nis present in the [Document Object Model (DOM)](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model),\\n"},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","name":"Optional.isPresent"}},{"id":7494,"name":"isSelected","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":197,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L197"}],"signatures":[{"id":7495,"name":"isSelected","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element:\\n- has a ["},{"kind":"code","text":"`selected`"},{"kind":"text","text":" attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option#attr-selected) for "},{"kind":"code","text":"`<option />`"},{"kind":"text","text":" elements\\n- has a ["},{"kind":"code","text":"`checked`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox) attribute for checkboxes\\n\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7496,"name":"isVisible","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":207,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L207"}],"signatures":[{"id":7497,"name":"isVisible","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the underlying element:\\n- is not hidden, so doesn\'t have CSS style like "},{"kind":"code","text":"`display: none`"},{"kind":"text","text":", "},{"kind":"code","text":"`visibility: hidden`"},{"kind":"text","text":" or "},{"kind":"code","text":"`opacity: 0`"},{"kind":"text","text":"\\n- is within the browser viewport\\n- doesn\'t have its centre covered by other elements\\n\\nOtherwise, resolves to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Methods","children":[7429,7433,7437,7447,7450,7453,7455,7457,7460,7462,7464,7466,7468,7470,7472,7475,7477,7480,7482,7484,7486,7488,7490,7492,7494,7496]},{"title":"Constructors","children":[7442]},{"title":"Properties","children":[7446]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElement.ts","line":23,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElement.ts#L23"}],"typeParameters":[{"id":7498,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"implementedTypes":[{"type":"reference","name":"Optional"},{"type":"reference","id":7827,"name":"Switchable"}],"permalink":"/api/web/class/PageElement","previousId":7312,"nextId":7499},{"id":7499,"name":"PageElements","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to identify\\na group of Web elements located by "},{"kind":"inline-tag","tag":"@apilink","text":"Selector"},{"kind":"text","text":".\\n\\n## Learn more\\n\\n- [Page Element Query Language](/handbook/web-testing/page-element-query-language)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MetaList"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"List"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ChainableMetaQuestion"}]},"children":[{"id":7500,"name":"located","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":24,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElements.ts#L24"}],"signatures":[{"id":7501,"name":"located","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":7502,"name":"NET","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":7503,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7817,"name":"Selector"}],"name":"Answerable"}}],"type":{"type":"reference","id":7499,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElements"}}]},{"id":7597,"name":"as","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":4}],"signatures":[{"id":7598,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":7599,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":7600,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":7601,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":19}],"signatures":[{"id":7602,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7603,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"}}}],"type":{"type":"union","types":[{"type":"reference","id":5031,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","name":"MetaList.as"}}],"inheritedFrom":{"type":"reference","name":"MetaList.as"}},{"id":7578,"name":"forEach","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":21,"character":4}],"signatures":[{"id":7579,"name":"forEach","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7580,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":7581,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":21,"character":22}],"signatures":[{"id":7582,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7583,"name":"current","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"}],"name":"CurrentItem"}},{"id":7584,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":7585,"name":"items","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"}}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","name":"Task"},"inheritedFrom":{"type":"reference","name":"MetaList.forEach"}}],"inheritedFrom":{"type":"reference","name":"MetaList.forEach"}},{"id":7586,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":28,"character":4}],"signatures":[{"id":7587,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7588,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"MetaList.answeredBy"}}],"inheritedFrom":{"type":"reference","name":"MetaList.answeredBy"}},{"id":7589,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":29,"character":4}],"signatures":[{"id":7590,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7591,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7499,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElements"},"inheritedFrom":{"type":"reference","name":"MetaList.describedAs"}}],"inheritedFrom":{"type":"reference","name":"MetaList.describedAs"}},{"id":7592,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":30,"character":4}],"signatures":[{"id":7593,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"MetaList.toString"}}],"inheritedFrom":{"type":"reference","name":"MetaList.toString"}},{"id":7551,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":70,"character":4}],"signatures":[{"id":7552,"name":"new PageElements","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":7553,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":7554,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"Object"}}],"type":{"type":"reference","id":7499,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElements"},"inheritedFrom":{"type":"reference","name":"MetaList<PageElement<Native_Element_Type>, PageElement<Native_Element_Type>>.constructor"}}],"inheritedFrom":{"type":"reference","name":"MetaList<PageElement<Native_Element_Type>, PageElement<Native_Element_Type>>.constructor"}},{"id":7556,"name":"of","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":71,"character":4}],"signatures":[{"id":7557,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7558,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"}],"name":"MetaList"},"inheritedFrom":{"type":"reference","name":"MetaList.of"}}],"inheritedFrom":{"type":"reference","name":"MetaList.of"}},{"id":7559,"name":"eachMappedTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":72,"character":4}],"signatures":[{"id":7560,"name":"eachMappedTo","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":7561,"name":"Mapped_Item_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":7562,"name":"question","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":7561,"name":"Mapped_Item_Type"},{"type":"reference","typeArguments":[{"type":"reference","id":7561,"name":"Mapped_Item_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}],"name":"Question"}],"name":"MetaQuestion"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"reference","id":7561,"name":"Mapped_Item_Type"}],"name":"MetaList"},"inheritedFrom":{"type":"reference","name":"MetaList.eachMappedTo"}}],"inheritedFrom":{"type":"reference","name":"MetaList.eachMappedTo"}},{"id":7563,"name":"where","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":73,"character":4}],"signatures":[{"id":7564,"name":"where","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":7565,"name":"Answer_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":7566,"name":"question","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","id":7565,"name":"Answer_Type"},{"type":"reference","typeArguments":[{"type":"reference","id":7565,"name":"Answer_Type"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}],"name":"Question"}],"name":"MetaQuestion"}},{"id":7567,"name":"expectation","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7565,"name":"Answer_Type"}],"name":"Expectation"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"}],"name":"MetaList"},"inheritedFrom":{"type":"reference","name":"MetaList.where"}}],"inheritedFrom":{"type":"reference","name":"MetaList.where"}},{"id":7568,"name":"count","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":74,"character":4}],"signatures":[{"id":7569,"name":"count","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"intrinsic","name":"number"}],"name":"MetaQuestionAdapter"},"inheritedFrom":{"type":"reference","name":"MetaList.count"}}],"inheritedFrom":{"type":"reference","name":"MetaList.count"}},{"id":7570,"name":"first","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":75,"character":4}],"signatures":[{"id":7571,"name":"first","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"}],"name":"MetaQuestionAdapter"},"inheritedFrom":{"type":"reference","name":"MetaList.first"}}],"inheritedFrom":{"type":"reference","name":"MetaList.first"}},{"id":7572,"name":"last","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":76,"character":4}],"signatures":[{"id":7573,"name":"last","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"}],"name":"MetaQuestionAdapter"},"inheritedFrom":{"type":"reference","name":"MetaList.last"}}],"inheritedFrom":{"type":"reference","name":"MetaList.last"}},{"id":7574,"name":"nth","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/questions/List.d.ts","line":77,"character":4}],"signatures":[{"id":7575,"name":"nth","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7576,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"}],"name":"MetaQuestionAdapter"},"inheritedFrom":{"type":"reference","name":"MetaList.nth"}}],"inheritedFrom":{"type":"reference","name":"MetaList.nth"}}],"groups":[{"title":"Methods","children":[7500,7597,7578,7586,7589,7592,7556,7559,7563,7568,7570,7572,7574]},{"title":"Constructors","children":[7551]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElements.ts","line":21,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElements.ts#L21"}],"typeParameters":[{"id":7604,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7553,"name":"Native_Element_Type"}],"name":"PageElement"}],"name":"MetaList"}],"permalink":"/api/web/class/PageElements","previousId":7428,"nextId":7605},{"id":7605,"name":"PageElementsLocator","kind":128,"kindString":"Class","flags":{},"children":[{"id":7606,"name":"fromDocumentRoot","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":16,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElementsLocator.ts#L16"}],"signatures":[{"id":7607,"name":"fromDocumentRoot","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":7608,"name":"NET","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":7609,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7817,"name":"Selector"}],"name":"Answerable"}}],"type":{"type":"reference","id":7605,"typeArguments":[{"type":"reference","id":7608,"name":"NET"}],"name":"PageElementsLocator"}}]},{"id":7665,"name":"as","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":4}],"signatures":[{"id":7666,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":7667,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":7668,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":7669,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":19}],"signatures":[{"id":7670,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7671,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"}],"name":"PageElement"}}}],"type":{"type":"union","types":[{"type":"reference","id":5031,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","name":"Question.as"}}],"inheritedFrom":{"type":"reference","name":"Question.as"}},{"id":7648,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":29,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElementsLocator.ts#L29"}],"signatures":[{"id":7649,"name":"new PageElementsLocator","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":7650,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":7651,"name":"locator","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7262,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"},{"type":"intrinsic","name":"any"}],"name":"Locator"}],"name":"Answerable"}}],"type":{"type":"reference","id":7605,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"}],"name":"PageElementsLocator"},"overwrites":{"type":"reference","name":"Question<Promise<Array<PageElement<Native_Element_Type>>>>.constructor"}}],"overwrites":{"type":"reference","name":"Question<Promise<Array<PageElement<Native_Element_Type>>>>.constructor"}},{"id":7654,"name":"of","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":33,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElementsLocator.ts#L33"}],"signatures":[{"id":7655,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7656,"name":"parent","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"}],"name":"PageElement"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"},{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"}],"name":"PageElement"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}],"name":"ChainableMetaQuestion"}]},"implementationOf":{"type":"reference","name":"ChainableMetaQuestion.of"}}],"implementationOf":{"type":"reference","name":"ChainableMetaQuestion.of"}},{"id":7657,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":44,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElementsLocator.ts#L44"}],"signatures":[{"id":7658,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7659,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"}],"name":"PageElement"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Question.answeredBy"}}],"overwrites":{"type":"reference","name":"Question.answeredBy"}},{"id":7660,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":49,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElementsLocator.ts#L49"}],"signatures":[{"id":7661,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7662,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7605,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"}],"name":"PageElementsLocator"},"overwrites":{"type":"reference","name":"Question.describedAs"}}],"overwrites":{"type":"reference","name":"Question.describedAs"}},{"id":7663,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":54,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElementsLocator.ts#L54"}],"signatures":[{"id":7664,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Question.toString"},"implementationOf":{"type":"reference","name":"ChainableMetaQuestion.toString"}}],"overwrites":{"type":"reference","name":"Question.toString"},"implementationOf":{"type":"reference","name":"ChainableMetaQuestion.toString"}}],"groups":[{"title":"Methods","children":[7606,7665,7654,7657,7660,7663]},{"title":"Constructors","children":[7648]}],"sources":[{"fileName":"packages/web/src/screenplay/models/PageElementsLocator.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/PageElementsLocator.ts#L12"}],"typeParameters":[{"id":7672,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"}],"name":"PageElement"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}],"implementedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"}],"name":"PageElement"},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":7428,"typeArguments":[{"type":"reference","id":7650,"name":"Native_Element_Type"}],"name":"PageElement"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}],"name":"ChainableMetaQuestion"}],"permalink":"/api/web/class/PageElementsLocator","previousId":7499,"nextId":7673},{"id":7673,"name":"RootLocator","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"inline-tag","tag":"@apilink","text":"RootLocator"},{"kind":"text","text":" represents the context in which "},{"kind":"inline-tag","tag":"@apilink","text":"Locator"},{"kind":"text","text":" looks for "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements"},{"kind":"text","text":".\\nThis context is either a parent element, or some representation of the top-level browsing context.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Locator"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Page.locate"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements"}]},"children":[{"id":7674,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7675,"name":"new RootLocator","kind":16384,"kindString":"Constructor signature","flags":{},"typeParameter":[{"id":7676,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reference","id":7673,"typeArguments":[{"type":"reference","id":7676,"name":"Native_Element_Type"}],"name":"RootLocator"}}]},{"id":7677,"name":"switchToFrame","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":18,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/RootLocator.ts#L18"}],"signatures":[{"id":7678,"name":"switchToFrame","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7679,"name":"element","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7676,"name":"Native_Element_Type"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7680,"name":"switchToParentFrame","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":19,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/RootLocator.ts#L19"}],"signatures":[{"id":7681,"name":"switchToParentFrame","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7682,"name":"switchToMainFrame","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":20,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/RootLocator.ts#L20"}],"signatures":[{"id":7683,"name":"switchToMainFrame","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7684,"name":"isPresent","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":21,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/RootLocator.ts#L21"}],"signatures":[{"id":7685,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","name":"Optional.isPresent"}},{"id":7686,"name":"nativeElement","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":23,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/RootLocator.ts#L23"}],"signatures":[{"id":7687,"name":"nativeElement","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":7676,"name":"Native_Element_Type"}],"name":"Partial","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype","qualifiedName":"Partial","package":"typescript"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7688,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":25,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/RootLocator.ts#L25"}],"signatures":[{"id":7689,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"}}]},{"id":7690,"name":"[custom]","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":29,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/RootLocator.ts#L29"}],"type":{"type":"reflection","declaration":{"id":7691,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/io/inspectedObject.d.ts","line":3,"character":84}],"signatures":[{"id":7692,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7693,"name":"depth","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":7694,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"InspectOptionsStylized","qualifiedName":"InspectOptionsStylized","package":"@types/node"}},{"id":7695,"name":"inspect","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"query","queryType":{"type":"reference","name":"inspect","qualifiedName":"inspect","package":"@types/node"}}}],"type":{"type":"intrinsic","name":"string"}}]}},"defaultValue":"..."}],"groups":[{"title":"Constructors","children":[7674]},{"title":"Methods","children":[7677,7680,7682,7684,7686,7688]},{"title":"Properties","children":[7690]}],"sources":[{"fileName":"packages/web/src/screenplay/models/RootLocator.ts","line":17,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/RootLocator.ts#L17"}],"typeParameters":[{"id":7696,"name":"Native_Element_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"extendedBy":[{"type":"reference","id":7262,"name":"Locator"}],"implementedTypes":[{"type":"reference","name":"Optional"}],"permalink":"/api/web/class/RootLocator","previousId":7605,"nextId":7697},{"id":7697,"name":"SelectOption","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes the ["},{"kind":"code","text":"`<option />`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nelements to select.\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Select"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Selected"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.selectOptions"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement.selectedOptions"}]},"children":[{"id":7698,"name":"withLabel","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":18,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/SelectOption.ts#L18"}],"signatures":[{"id":7699,"name":"withLabel","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7700,"name":"label","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7697,"name":"SelectOption"}}]},{"id":7701,"name":"withValue","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":22,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/SelectOption.ts#L22"}],"signatures":[{"id":7702,"name":"withValue","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7703,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7697,"name":"SelectOption"}}]},{"id":7716,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":7717,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":7718,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","name":"TinyType.equals"}},{"id":7719,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":7720,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","name":"TinyType.toJSON"}},{"id":7704,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":26,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/SelectOption.ts#L26"}],"signatures":[{"id":7705,"name":"new SelectOption","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":7706,"name":"label","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":7707,"name":"value","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"id":7708,"name":"selected","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}},{"id":7709,"name":"disabled","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","id":7697,"name":"SelectOption"},"overwrites":{"type":"reference","name":"TinyType.constructor"}}],"overwrites":{"type":"reference","name":"TinyType.constructor"}},{"id":7710,"name":"label","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":27,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/SelectOption.ts#L27"}],"type":{"type":"intrinsic","name":"string"}},{"id":7711,"name":"value","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":28,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/SelectOption.ts#L28"}],"type":{"type":"intrinsic","name":"string"}},{"id":7712,"name":"selected","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":29,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/SelectOption.ts#L29"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":7713,"name":"disabled","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isOptional":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":30,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/SelectOption.ts#L30"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":7714,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":35,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/SelectOption.ts#L35"}],"signatures":[{"id":7715,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"TinyType.toString"}}],"overwrites":{"type":"reference","name":"TinyType.toString"}}],"groups":[{"title":"Methods","children":[7698,7701,7716,7719,7714]},{"title":"Constructors","children":[7704]},{"title":"Properties","children":[7710,7711,7712,7713]}],"sources":[{"fileName":"packages/web/src/screenplay/models/SelectOption.ts","line":16,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/SelectOption.ts#L16"}],"extendedTypes":[{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}],"permalink":"/api/web/class/SelectOption","previousId":7673,"nextId":7827},{"id":7827,"name":"Switchable","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Describes a Serenity/JS model object that can be switched _to_ and switched back _from_\\nusing the "},{"kind":"inline-tag","tag":"@apilink","text":"Task|task"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"Switch"},{"kind":"text","text":".\\n\\nExamples of switchable models include a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switch"}]},"children":[{"id":7828,"name":"switchTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":23,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Switchable.ts#L23"}],"signatures":[{"id":7829,"name":"switchTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Switches the context to the object implementing this interface\\nand returns "},{"kind":"inline-tag","tag":"@apilink","text":"SwitchableOrigin"},{"kind":"text","text":" that allows for the context to be switched\\nback when needed."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7830,"name":"SwitchableOrigin"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Methods","children":[7828]}],"sources":[{"fileName":"packages/web/src/screenplay/models/Switchable.ts","line":16,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/Switchable.ts#L16"}],"implementedBy":[{"type":"reference","id":7312,"name":"Page"},{"type":"reference","id":7428,"name":"PageElement"}],"permalink":"/api/web/interface/Switchable","previousId":7697,"nextId":7830},{"id":7830,"name":"SwitchableOrigin","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Enables the "},{"kind":"inline-tag","tag":"@apilink","text":"Task"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"Switch"},{"kind":"text","text":" to perform a sequence of activities\\nand switch back to the original context afterwards.\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switch"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"}]},"children":[{"id":7831,"name":"switchBack","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":17,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/SwitchableOrigin.ts#L17"}],"signatures":[{"id":7832,"name":"switchBack","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Switches the context back to the original "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Methods","children":[7831]}],"sources":[{"fileName":"packages/web/src/screenplay/models/SwitchableOrigin.ts","line":12,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/SwitchableOrigin.ts#L12"}],"permalink":"/api/web/interface/SwitchableOrigin","previousId":7827,"nextId":7088},{"id":7088,"name":"AbsentModalDialog","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"code","text":"`AbsentModalDialog`"},{"kind":"text","text":" is a [null object](https://en.wikipedia.org/wiki/Null_object_pattern)\\nrepresenting a "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog"},{"kind":"text","text":" that hasn\'t appeared yet.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog"}]},"children":[{"id":7102,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7103,"name":"new AbsentModalDialog","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7088,"name":"AbsentModalDialog"},"inheritedFrom":{"type":"reference","id":7173,"name":"ModalDialog.constructor"}}],"inheritedFrom":{"type":"reference","id":7172,"name":"ModalDialog.constructor"}},{"id":7104,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":15,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts#L15"}],"signatures":[{"id":7105,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":7177,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","id":7176,"name":"ModalDialog.isPresent"}},{"id":7106,"name":"message","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":19,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts#L19"}],"signatures":[{"id":7107,"name":"message","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n when no dialog has been handled yet."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":7175,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","id":7174,"name":"ModalDialog.message"}},{"id":7108,"name":"state","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":196,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L196"}],"signatures":[{"id":7109,"name":"state","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":7179,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","id":7178,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[7102]},{"title":"Methods","children":[7104,7106,7108]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts","line":14,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/AbsentModalDialog.ts#L14"}],"extendedTypes":[{"type":"reference","id":7158,"name":"ModalDialog"}],"permalink":"/api/web/class/AbsentModalDialog","previousId":7830,"nextId":7110},{"id":7110,"name":"AcceptedModalDialog","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"code","text":"`AcceptedModalDialog`"},{"kind":"text","text":" represents a "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog"},{"kind":"text","text":" that has been accepted\\nvia "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog.acceptNext"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog"}]},"children":[{"id":7124,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":15,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts#L15"}],"signatures":[{"id":7125,"name":"new AcceptedModalDialog","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":7126,"name":"dialogMessage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7110,"name":"AcceptedModalDialog"},"overwrites":{"type":"reference","id":7173,"name":"ModalDialog.constructor"}}],"overwrites":{"type":"reference","id":7172,"name":"ModalDialog.constructor"}},{"id":7128,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":20,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts#L20"}],"signatures":[{"id":7129,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":7177,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","id":7176,"name":"ModalDialog.isPresent"}},{"id":7130,"name":"message","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":24,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts#L24"}],"signatures":[{"id":7131,"name":"message","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n when no dialog has been handled yet."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":7175,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","id":7174,"name":"ModalDialog.message"}},{"id":7132,"name":"state","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":196,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L196"}],"signatures":[{"id":7133,"name":"state","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":7179,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","id":7178,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[7124]},{"title":"Methods","children":[7128,7130,7132]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts","line":14,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/AcceptedModalDialog.ts#L14"}],"extendedTypes":[{"type":"reference","id":7158,"name":"ModalDialog"}],"permalink":"/api/web/class/AcceptedModalDialog","previousId":7088,"nextId":7134},{"id":7134,"name":"DismissedModalDialog","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"code","text":"`DismissedModalDialog`"},{"kind":"text","text":" represents a "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog"},{"kind":"text","text":" that has been dismissed\\nvia "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog.dismissNext"},{"kind":"text","text":".\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog"}]},"children":[{"id":7148,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":15,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts#L15"}],"signatures":[{"id":7149,"name":"new DismissedModalDialog","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":7150,"name":"dialogMessage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7134,"name":"DismissedModalDialog"},"overwrites":{"type":"reference","id":7173,"name":"ModalDialog.constructor"}}],"overwrites":{"type":"reference","id":7172,"name":"ModalDialog.constructor"}},{"id":7152,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":20,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts#L20"}],"signatures":[{"id":7153,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":7177,"name":"ModalDialog.isPresent"}}],"overwrites":{"type":"reference","id":7176,"name":"ModalDialog.isPresent"}},{"id":7154,"name":"message","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":24,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts#L24"}],"signatures":[{"id":7155,"name":"message","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n when no dialog has been handled yet."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":7175,"name":"ModalDialog.message"}}],"overwrites":{"type":"reference","id":7174,"name":"ModalDialog.message"}},{"id":7156,"name":"state","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":196,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L196"}],"signatures":[{"id":7157,"name":"state","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":7179,"name":"ModalDialog.state"}}],"inheritedFrom":{"type":"reference","id":7178,"name":"ModalDialog.state"}}],"groups":[{"title":"Constructors","children":[7148]},{"title":"Methods","children":[7152,7154,7156]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts","line":14,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/DismissedModalDialog.ts#L14"}],"extendedTypes":[{"type":"reference","id":7158,"name":"ModalDialog"}],"permalink":"/api/web/class/DismissedModalDialog","previousId":7110,"nextId":7158},{"id":7158,"name":"ModalDialog","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Manages interactions with JavaScript modal dialog windows,\\ntriggered by [window.alert](https://developer.mozilla.org/en-US/docs/Web/API/Window/alert),\\n[window.confirm](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm),\\nor ["},{"kind":"code","text":"`window.prompt`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/Window/prompt),\\nand stores their "},{"kind":"code","text":"`message`"},{"kind":"text","text":" so that it can be asserted on once the dialog is handled.\\n\\nNote that in order to make handling modal windows\\nconsistent across the various Web integration tools (such as Playwright, Puppeteer,\\nWebdriverIO or Selenium), Serenity/JS works as follows:\\n- Serenity/JS dismisses any modal dialogs by default and stores their message so that it can be asserted on.\\n- This behaviour can be changed by invoking "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog.acceptNext"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog.acceptNextWithValue]], or [[ModalDialog.dismissNext"},{"kind":"text","text":" before the dialog is triggered, as per the below examples.\\n- Serenity/JS also allows you to "},{"kind":"code","text":"`Wait.until(ModalDialog, isPresent())`"},{"kind":"text","text":" so that you can synchronise your tests\\n  with modal dialogs that appear after a delay.\\n\\n## Example HTML widget\\n\\nIn the below example widget, clicking on the button results in a [confirmation dialog](https://developer.mozilla.org/en-US/docs/Web/API/Window/confirm)\\nappearing.\\n\\n"},{"kind":"code","text":"```html\\n<button id=\\"trigger\\" onclick=\\"trigger()\\">Trigger Alert</button>\\n<p id=\\"result\\"></p>\\n\\n<script>\\n  function trigger() {\\n    document.getElementById(\\"result\\").innerHTML = (\\n      function () {\\n        return confirm(\'Continue?\')\\n          ? \'accepted\'\\n          : \'dismissed\';\\n      }\\n    )();\\n  }\\n<\/script>\\n```"},{"kind":"text","text":"\\n\\n## Modal dialog gets dismissed by default\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Text, PageElement, ModalDialog } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst Example = {\\n  trigger: () =>\\n    PageElement.located(By.id(\'trigger\')).describedAs(\'the modal dialog trigger\'),\\n\\n  result: () =>\\n    PageElement.located(By.id(\'result\')).describedAs(\'result\'),\\n}\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  Click.on(Example.trigger()),\\n\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'dismissed\')),\\n\\n  Ensure.that(Text.of(Example.result()), equals(\'dismissed\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Changing modal dialog handler\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { By, Click, Text, PageElement, ModalDialog } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst Example = {\\n  trigger: () =>\\n    PageElement.located(By.id(\'trigger\')).describedAs(\'the modal dialog trigger\'),\\n\\n  result: () =>\\n    PageElement.located(By.id(\'result\')).describedAs(\'result\'),\\n}\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  ModalDialog.acceptNext(),\\n  // or: ModalDialog.acceptNextWithValue(\'some value\'),\\n  // or: ModalDialog.dismissNext(),\\n\\n  Click.on(Example.trigger),\\n\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'accepted\')),\\n\\n  Ensure.that(Text.of(Example.result), equals(\'accepted\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Optional"}]},"children":[{"id":7159,"name":"isPresent","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":124,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L124"}],"signatures":[{"id":7160,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":".\\n\\n#### Example usage\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Wait } from \'@serenity-js/core\'\\nimport { Ensure, equals, isPresent } from \'@serenity-js/assertions\'\\nimport { ModalDialog } from \'@serenity-js/web\'\\n\\nawait actorCalled(\'Nick\').attemptsTo(\\n  ModalDialog.acceptNext(),\\n  Wait.until(ModalDialog, isPresent()),\\n  Ensure.that(ModalDialog.lastDialogState(), equals(\'accepted\')),\\n)\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}}]},{"id":7161,"name":"acceptNext","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":131,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L131"}],"signatures":[{"id":7162,"name":"acceptNext","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" that invokes "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog.acceptNext"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"Interaction"}}]},{"id":7163,"name":"acceptNextWithValue","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":141,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L141"}],"signatures":[{"id":7164,"name":"acceptNextWithValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" that invokes "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog.acceptNextWithValue"},{"kind":"text","text":"."}]},"parameters":[{"id":7165,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":7166,"name":"dismissNext","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":149,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L149"}],"signatures":[{"id":7167,"name":"dismissNext","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" that invokes "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog.dismissNext"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"Interaction"}}]},{"id":7168,"name":"lastDialogMessage","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":157,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L157"}],"signatures":[{"id":7169,"name":"lastDialogMessage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" that resolves to "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog.message"},{"kind":"text","text":" for the current "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter"}}]},{"id":7170,"name":"lastDialogState","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":165,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L165"}],"signatures":[{"id":7171,"name":"lastDialogState","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":" that resolves to "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog.state"},{"kind":"text","text":" for the current "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter"}}]},{"id":7172,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7173,"name":"new ModalDialog","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7158,"name":"ModalDialog"}}]},{"id":7174,"name":"message","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":180,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L180"}],"signatures":[{"id":7175,"name":"message","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the message of the last modal dialog handled,\\nor rejects the promise with a "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\nwhen no modal dialogs have been observed yet."}],"blockTags":[{"tag":"@returns","content":[{"kind":"text","text":"Message of the last handled dialog, or a "},{"kind":"code","text":"`Promise`"},{"kind":"text","text":"\\n rejected with a "},{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n when no dialog has been handled yet."}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7176,"name":"isPresent","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":190,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L190"}],"signatures":[{"id":7177,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a promise that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nwhen a modal dialog has been handled, so either accepted or dismissed.\\nReturns "},{"kind":"code","text":"`false`"},{"kind":"text","text":" for dialogs that haven\'t been handled yet.\\n\\nUseful when a JavaScript modal dialog is generated after a delay,\\ne.g. triggered by "},{"kind":"code","text":"`setTimeout`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"Optional.isPresent"}}],"implementationOf":{"type":"reference","name":"Optional.isPresent"}},{"id":7178,"name":"state","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":196,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L196"}],"signatures":[{"id":7179,"name":"state","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"code","text":"`accepted`"},{"kind":"text","text":" or "},{"kind":"code","text":"`dismissed`"},{"kind":"text","text":" for dialogs that have been handled,\\nor "},{"kind":"code","text":"`absent`"},{"kind":"text","text":" for those that haven\'t been handled yet."}]},"type":{"type":"intrinsic","name":"string"}}]}],"groups":[{"title":"Methods","children":[7159,7161,7163,7166,7168,7170,7174,7176,7178]},{"title":"Constructors","children":[7172]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialog.ts","line":100,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialog.ts#L100"}],"extendedBy":[{"type":"reference","id":7088,"name":"AbsentModalDialog"},{"type":"reference","id":7110,"name":"AcceptedModalDialog"},{"type":"reference","id":7134,"name":"DismissedModalDialog"}],"implementedTypes":[{"type":"reference","name":"Optional"}],"permalink":"/api/web/class/ModalDialog","previousId":7134,"nextId":7180},{"id":7180,"name":"ModalDialogHandler","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Represent the strategy to use with any upcoming "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog"},{"kind":"text","text":" windows.\\n\\n## Learn more\\n\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Page.modalDialog"}]},"children":[{"id":7185,"name":"acceptNext","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":25,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts#L25"}],"signatures":[{"id":7186,"name":"acceptNext","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the handler to accept the next JavaScript modal dialog."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7187,"name":"acceptNextWithValue","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":31,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts#L31"}],"signatures":[{"id":7188,"name":"acceptNextWithValue","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the handler to accept the next JavaScript "},{"kind":"code","text":"`prompt``\\nwith a given `"},{"kind":"text","text":"text` value."}]},"parameters":[{"id":7189,"name":"text","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7190,"name":"dismissNext","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":36,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts#L36"}],"signatures":[{"id":7191,"name":"dismissNext","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the handler to dismiss the next JavaScript modal dialog."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7192,"name":"reset","kind":2048,"kindString":"Method","flags":{"isAbstract":true},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":41,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts#L41"}],"signatures":[{"id":7193,"name":"reset","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resets the handler to its default state."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":7194,"name":"last","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":47,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts#L47"}],"signatures":[{"id":7195,"name":"last","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the most recently handled "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialog"},{"kind":"text","text":",\\nor "},{"kind":"inline-tag","tag":"@apilink","text":"AbsentModalDialog"},{"kind":"text","text":" when no dialogs have been handled yet."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7158,"name":"ModalDialog"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Methods","children":[7185,7187,7190,7192,7194]}],"sources":[{"fileName":"packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts","line":16,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/dialogs/ModalDialogHandler.ts#L16"}],"permalink":"/api/web/class/ModalDialogHandler","previousId":7158,"nextId":7721},{"id":7721,"name":"By","kind":128,"kindString":"Class","flags":{},"children":[{"id":7722,"name":"css","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":21,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/By.ts#L21"}],"signatures":[{"id":7723,"name":"css","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)."}]},"parameters":[{"id":7724,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":7743,"name":"ByCss"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}}]},{"id":7725,"name":"cssContainingText","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":35,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/By.ts#L35"}],"signatures":[{"id":7726,"name":"cssContainingText","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" with a given ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText)\\nusing a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)."}]},"parameters":[{"id":7727,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":7728,"name":"text","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":7755,"name":"ByCssContainingText"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}}]},{"id":7729,"name":"deepCss","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":49,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/By.ts#L49"}],"signatures":[{"id":7730,"name":"deepCss","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)\\ncapable of piercing [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)-piercing"}]},"parameters":[{"id":7731,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":7743,"name":"ByCss"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}}]},{"id":7732,"name":"id","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":61,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/By.ts#L61"}],"signatures":[{"id":7733,"name":"id","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" using its [id](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors)."}]},"parameters":[{"id":7734,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":7781,"name":"ById"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}}]},{"id":7735,"name":"tagName","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":73,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/By.ts#L73"}],"signatures":[{"id":7736,"name":"tagName","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" using the name of its [HTML tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element)."}]},"parameters":[{"id":7737,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":7793,"name":"ByTagName"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}}]},{"id":7738,"name":"xpath","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":85,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/By.ts#L85"}],"signatures":[{"id":7739,"name":"xpath","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" using an [XPath selector](https://developer.mozilla.org/en-US/docs/Web/XPath)."}]},"parameters":[{"id":7740,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":7805,"name":"ByXPath"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}}]},{"id":7741,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7742,"name":"new By","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7721,"name":"By"}}]}],"groups":[{"title":"Methods","children":[7722,7725,7729,7732,7735,7738]},{"title":"Constructors","children":[7741]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/By.ts","line":14,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/By.ts#L14"}],"permalink":"/api/web/class/By","previousId":7180,"nextId":7743},{"id":7743,"name":"ByCss","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors).\\n\\n**Pro tip:** Instantiate using "},{"kind":"inline-tag","tag":"@apilink","text":"By.css"}]},"children":[{"id":7750,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":7751,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":7752,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":7823,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","id":7822,"name":"Selector.equals"}},{"id":7753,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":7754,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":7826,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","id":7825,"name":"Selector.toJSON"}},{"id":7744,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByCss.ts#L11"}],"signatures":[{"id":7745,"name":"new ByCss","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":7746,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7743,"name":"ByCss"},"overwrites":{"type":"reference","id":7819,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","id":7818,"name":"Selector.constructor"}},{"id":7747,"name":"value","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":11,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByCss.ts#L11"}],"type":{"type":"intrinsic","name":"string"}},{"id":7748,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/Selector.ts#L11"}],"signatures":[{"id":7749,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":7821,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","id":7820,"name":"Selector.toString"}}],"groups":[{"title":"Methods","children":[7750,7753,7748]},{"title":"Constructors","children":[7744]},{"title":"Properties","children":[7747]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCss.ts","line":10,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByCss.ts#L10"}],"extendedTypes":[{"type":"reference","id":7817,"name":"Selector"}],"permalink":"/api/web/class/ByCss","previousId":7721,"nextId":7755},{"id":7755,"name":"ByCssContainingText","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" with a given ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText)\\nusing a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors).\\n\\n**Pro tip:** Instantiate using "},{"kind":"inline-tag","tag":"@apilink","text":"By.cssContainingText"}]},"children":[{"id":7764,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":7765,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":7766,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":7823,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","id":7822,"name":"Selector.equals"}},{"id":7767,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":7768,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":7826,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","id":7825,"name":"Selector.toJSON"}},{"id":7756,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByCssContainingText.ts#L12"}],"signatures":[{"id":7757,"name":"new ByCssContainingText","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":7758,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":7759,"name":"text","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7755,"name":"ByCssContainingText"},"overwrites":{"type":"reference","id":7819,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","id":7818,"name":"Selector.constructor"}},{"id":7760,"name":"value","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByCssContainingText.ts#L12"}],"type":{"type":"intrinsic","name":"string"}},{"id":7761,"name":"text","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":12,"character":63,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByCssContainingText.ts#L12"}],"type":{"type":"intrinsic","name":"string"}},{"id":7762,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/Selector.ts#L11"}],"signatures":[{"id":7763,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":7821,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","id":7820,"name":"Selector.toString"}}],"groups":[{"title":"Methods","children":[7764,7767,7762]},{"title":"Constructors","children":[7756]},{"title":"Properties","children":[7760,7761]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByCssContainingText.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByCssContainingText.ts#L11"}],"extendedTypes":[{"type":"reference","id":7817,"name":"Selector"}],"permalink":"/api/web/class/ByCssContainingText","previousId":7743,"nextId":7769},{"id":7769,"name":"ByDeepCss","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" using a [CSS selector](https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Selectors)\\ncapable of piercing [shadow DOM](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM)-piercing\\n\\n**Pro tip:** Instantiate using "},{"kind":"inline-tag","tag":"@apilink","text":"By.deepCss"}]},"children":[{"id":7776,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":7777,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":7778,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":7823,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","id":7822,"name":"Selector.equals"}},{"id":7779,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":7780,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":7826,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","id":7825,"name":"Selector.toJSON"}},{"id":7770,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByDeepCss.ts#L12"}],"signatures":[{"id":7771,"name":"new ByDeepCss","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":7772,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7769,"name":"ByDeepCss"},"overwrites":{"type":"reference","id":7819,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","id":7818,"name":"Selector.constructor"}},{"id":7773,"name":"value","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":12,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByDeepCss.ts#L12"}],"type":{"type":"intrinsic","name":"string"}},{"id":7774,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/Selector.ts#L11"}],"signatures":[{"id":7775,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":7821,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","id":7820,"name":"Selector.toString"}}],"groups":[{"title":"Methods","children":[7776,7779,7774]},{"title":"Constructors","children":[7770]},{"title":"Properties","children":[7773]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByDeepCss.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByDeepCss.ts#L11"}],"extendedTypes":[{"type":"reference","id":7817,"name":"Selector"}],"permalink":"/api/web/class/ByDeepCss","previousId":7755,"nextId":7781},{"id":7781,"name":"ById","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" using its [id](https://developer.mozilla.org/en-US/docs/Web/CSS/ID_selectors).\\n\\n**Pro tip:** Instantiate using "},{"kind":"inline-tag","tag":"@apilink","text":"By.id"}]},"children":[{"id":7788,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":7789,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":7790,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":7823,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","id":7822,"name":"Selector.equals"}},{"id":7791,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":7792,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":7826,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","id":7825,"name":"Selector.toJSON"}},{"id":7782,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ById.ts#L11"}],"signatures":[{"id":7783,"name":"new ById","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":7784,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7781,"name":"ById"},"overwrites":{"type":"reference","id":7819,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","id":7818,"name":"Selector.constructor"}},{"id":7785,"name":"value","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":11,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ById.ts#L11"}],"type":{"type":"intrinsic","name":"string"}},{"id":7786,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/Selector.ts#L11"}],"signatures":[{"id":7787,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":7821,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","id":7820,"name":"Selector.toString"}}],"groups":[{"title":"Methods","children":[7788,7791,7786]},{"title":"Constructors","children":[7782]},{"title":"Properties","children":[7785]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ById.ts","line":10,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ById.ts#L10"}],"extendedTypes":[{"type":"reference","id":7817,"name":"Selector"}],"permalink":"/api/web/class/ById","previousId":7769,"nextId":7793},{"id":7793,"name":"ByTagName","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" using the name of its [HTML tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element).\\n\\n**Pro tip:** Instantiate using "},{"kind":"inline-tag","tag":"@apilink","text":"By.tagName"}]},"children":[{"id":7800,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":7801,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":7802,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":7823,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","id":7822,"name":"Selector.equals"}},{"id":7803,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":7804,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":7826,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","id":7825,"name":"Selector.toJSON"}},{"id":7794,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByTagName.ts#L11"}],"signatures":[{"id":7795,"name":"new ByTagName","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":7796,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7793,"name":"ByTagName"},"overwrites":{"type":"reference","id":7819,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","id":7818,"name":"Selector.constructor"}},{"id":7797,"name":"value","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":11,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByTagName.ts#L11"}],"type":{"type":"intrinsic","name":"string"}},{"id":7798,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/Selector.ts#L11"}],"signatures":[{"id":7799,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":7821,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","id":7820,"name":"Selector.toString"}}],"groups":[{"title":"Methods","children":[7800,7803,7798]},{"title":"Constructors","children":[7794]},{"title":"Properties","children":[7797]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByTagName.ts","line":10,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByTagName.ts#L10"}],"extendedTypes":[{"type":"reference","id":7817,"name":"Selector"}],"permalink":"/api/web/class/ByTagName","previousId":7781,"nextId":7805},{"id":7805,"name":"ByXPath","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Locates a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" using an [XPath selector](https://developer.mozilla.org/en-US/docs/Web/XPath).\\n\\n**Pro tip:** Instantiate using "},{"kind":"inline-tag","tag":"@apilink","text":"By.xpath"}]},"children":[{"id":7812,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":7813,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":7814,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","id":7823,"name":"Selector.equals"}}],"inheritedFrom":{"type":"reference","id":7822,"name":"Selector.equals"}},{"id":7815,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":7816,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","id":7826,"name":"Selector.toJSON"}}],"inheritedFrom":{"type":"reference","id":7825,"name":"Selector.toJSON"}},{"id":7806,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByXPath.ts#L11"}],"signatures":[{"id":7807,"name":"new ByXPath","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":7808,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7805,"name":"ByXPath"},"overwrites":{"type":"reference","id":7819,"name":"Selector.constructor"}}],"overwrites":{"type":"reference","id":7818,"name":"Selector.constructor"}},{"id":7809,"name":"value","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":11,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByXPath.ts#L11"}],"type":{"type":"intrinsic","name":"string"}},{"id":7810,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/Selector.ts#L11"}],"signatures":[{"id":7811,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":7821,"name":"Selector.toString"}}],"inheritedFrom":{"type":"reference","id":7820,"name":"Selector.toString"}}],"groups":[{"title":"Methods","children":[7812,7815,7810]},{"title":"Constructors","children":[7806]},{"title":"Properties","children":[7809]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/ByXPath.ts","line":10,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/ByXPath.ts#L10"}],"extendedTypes":[{"type":"reference","id":7817,"name":"Selector"}],"permalink":"/api/web/class/ByXPath","previousId":7793,"nextId":7817},{"id":7817,"name":"Selector","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Describes a selector you use to identify a "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" or a group of "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements"},{"kind":"text","text":"."}]},"children":[{"id":7818,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7819,"name":"new Selector","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7817,"name":"Selector"},"inheritedFrom":{"type":"reference","name":"TinyType.constructor"}}],"inheritedFrom":{"type":"reference","name":"TinyType.constructor"}},{"id":7822,"name":"equals","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":73,"character":4}],"signatures":[{"id":7823,"name":"equals","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Compares two tiny types by value"}]},{"tag":"@example","content":[{"kind":"text","text":"<caption>Comparing simple types</caption>\\nclass Id extends TinyTypeOf<string>() {}\\n\\nconst id = new Id("},{"kind":"code","text":"`3cc0852d-fda7-4f61-874e-0cfadbd6182a`"},{"kind":"text","text":");\\n\\nid.equals(id) === true"}]},{"tag":"@example","content":[{"kind":"text","text":"Comparing complex types recursively\\n"},{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst p1 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n      p2 = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42));\\n\\np1.equals(p2) === true\\n```"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":7824,"name":"another","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"TinyType.equals"}}],"inheritedFrom":{"type":"reference","name":"TinyType.equals"}},{"id":7825,"name":"toJSON","kind":2048,"kindString":"Method","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/tiny-types/lib/TinyType.d.ts","line":110,"character":4}],"signatures":[{"id":7826,"name":"toJSON","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[],"blockTags":[{"tag":"@desc","content":[{"kind":"text","text":"Serialises the object to a JSON representation."}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\n\\nconst name = new FirstName(\'Jan\');\\n\\nname.toJSON() === \'Jan\'\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```ts\\nclass FirstName extends TinyTypeOf<string>() {}\\nclass LastName  extends TinyTypeOf<string>() {}\\nclass Age       extends TinyTypeOf<number>() {}\\n\\nclass Person extends TinyType {\\n  constructor(public readonly firstName: FirstName,\\n              public readonly lastName:  LastName,\\n              public readonly age:       Age,\\n  ) {\\n    super();\\n  }\\n}\\n\\nconst person = new Person(new FirstName(\'John\'), new LastName(\'Smith\'), new Age(42)),\\n\\nperson.toJSON() === { firstName: \'John\', lastName: \'Smith\', age: 42 }\\n```"}]},{"tag":"@returns","content":[]}]},"type":{"type":"reference","name":"JSONValue","qualifiedName":"JSONValue","package":"tiny-types"},"inheritedFrom":{"type":"reference","name":"TinyType.toJSON"}}],"inheritedFrom":{"type":"reference","name":"TinyType.toJSON"}},{"id":7820,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/Selector.ts#L11"}],"signatures":[{"id":7821,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"TinyType.toString"}}],"overwrites":{"type":"reference","name":"TinyType.toString"}}],"groups":[{"title":"Constructors","children":[7818]},{"title":"Methods","children":[7822,7825,7820]}],"sources":[{"fileName":"packages/web/src/screenplay/models/selectors/Selector.ts","line":9,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/models/selectors/Selector.ts#L9"}],"extendedTypes":[{"type":"reference","name":"TinyType","qualifiedName":"TinyType","package":"tiny-types"}],"extendedBy":[{"type":"reference","id":7743,"name":"ByCss"},{"type":"reference","id":7755,"name":"ByCssContainingText"},{"type":"reference","id":7769,"name":"ByDeepCss"},{"type":"reference","id":7781,"name":"ById"},{"type":"reference","id":7793,"name":"ByTagName"},{"type":"reference","id":7805,"name":"ByXPath"}],"permalink":"/api/web/class/Selector","previousId":7805,"nextId":7833},{"id":7833,"name":"Attribute","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\nthe value of the specified HTML attribute of a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" data-items-left=\\"2\\">\\n  <li data-state=\\"bought\\">Coffee<li>\\n  <li data-state=\\"buy\\">Honey<li>\\n  <li data-state=\\"buy\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve an HTML attribute of a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n import { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\n const shoppingList = () =>\\n   PageElement.located(By.id(\'shopping-list\'))\\n     .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Attribute.called(\'data-items-left\').of(shoppingList()),\\n      equals(\'2\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`Attribute`"},{"kind":"text","text":" as "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Attribute.called(\'id\').of(shoppingList()).toLocaleUpperCase(),\\n      equals(\'SHOPPING-LIST\')\\n    ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements|Page Element Query Language"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\nimport { Attribute, By, PageElements } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(\\n        Attribute.called(\'data-state\'),\\n        includes(\'buy\')\\n      )\\n}\\n\\nawait actorCalled(\'Lisa\')\\n.whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n.attemptsTo(\\n  Ensure.that(\\n    Text.ofAll(ShoppingList.outstandingItems()),\\n    equals([ \'Honey\', \'Chocolate\' ])\\n  ),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Question"}]},"children":[{"id":7834,"name":"called","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":112,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Attribute.ts#L112"}],"signatures":[{"id":7835,"name":"called","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":" that uses\\nthe "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\nthe value of the specified HTML attribute of a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"."}]},"parameters":[{"id":7836,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The name of the attribute to retrieve"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","id":7833,"name":"Attribute"}}]},{"id":7893,"name":"as","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":4}],"signatures":[{"id":7894,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":7895,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":7896,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":7897,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":19}],"signatures":[{"id":7898,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7899,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"union","types":[{"type":"reference","id":5031,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","name":"Question.as"}}],"inheritedFrom":{"type":"reference","name":"Question.as"}},{"id":7882,"name":"of","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":134,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Attribute.ts#L134"}],"signatures":[{"id":7883,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves to the value of an HTML attribute of the "},{"kind":"code","text":"`pageElement`"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"}]},"parameters":[{"id":7884,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"},{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"QuestionAdapter"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter"},"implementationOf":{"type":"reference","name":"MetaQuestion.of"}}],"implementationOf":{"type":"reference","name":"MetaQuestion.of"}},{"id":7885,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":148,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Attribute.ts#L148"}],"signatures":[{"id":7886,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":7887,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Question.answeredBy"}}],"overwrites":{"type":"reference","name":"Question.answeredBy"}},{"id":7888,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":163,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Attribute.ts#L163"}],"signatures":[{"id":7889,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":7890,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":7833,"name":"Attribute"},"overwrites":{"type":"reference","name":"Question.describedAs"}}],"overwrites":{"type":"reference","name":"Question.describedAs"}},{"id":7891,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":171,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Attribute.ts#L171"}],"signatures":[{"id":7892,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Question.toString"},"implementationOf":{"type":"reference","name":"MetaQuestion.toString"}}],"overwrites":{"type":"reference","name":"Question.toString"},"implementationOf":{"type":"reference","name":"MetaQuestion.toString"}}],"groups":[{"title":"Methods","children":[7834,7893,7882,7885,7888,7891]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Attribute.ts","line":98,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Attribute.ts#L98"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}],"implementedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":7428,"name":"PageElement"},{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}],"name":"MetaQuestion"}],"permalink":"/api/web/class/Attribute","previousId":7817,"nextId":7900},{"id":7900,"name":"CssClasses","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\na list of [CSS classes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-class)\\nof a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<ul id=\\"shopping-list\\" class=\\"active favourite\\">\\n  <li class=\\"bought\\">Coffee<li>\\n  <li class=\\"buy\\">Honey<li>\\n  <li class=\\"buy\\">Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve CSS classes of a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingList()),\\n      equals([ \'active\', \'favourite\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using CssClasses as "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nconst shoppingList = () =>\\n  PageElement.located(By.css(\'#shopping-list\'))\\n    .describedAs(\'shopping list\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingList()).length,\\n      equals(2)\\n    ),\\n    Ensure.that(\\n      CssClasses.of(shoppingList())[0],\\n      equals(\'active\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements|Page Element Query Language"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, contain } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement } from \'@serenity-js/web\'\\n\\nclass ShoppingList {\\n  static items = () =>\\n    PageElements.located(By.css(\'#shopping-list li\'))\\n      .describedAs(\'items\')\\n\\n  static outstandingItems = () =>\\n    ShoppingList.items()\\n      .where(CssClasses, contain(\'buy\'))\\n}\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Text.ofAll(ShoppingList.outstandingItems()),\\n      equals([ \'Honey\', \'Chocolate\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Question"}]},"children":[{"id":7901,"name":"of","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":112,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/CssClasses.ts#L112"}],"signatures":[{"id":7902,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":" that uses\\nthe "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\na list of [CSS classes](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-class)\\nof a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"}]},"parameters":[{"id":7903,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"},{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"QuestionAdapter"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"MetaQuestionAdapter"}}]},{"id":7904,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7905,"name":"new CssClasses","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7900,"name":"CssClasses"}}]}],"groups":[{"title":"Methods","children":[7901]},{"title":"Constructors","children":[7904]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/CssClasses.ts","line":99,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/CssClasses.ts#L99"}],"permalink":"/api/web/class/CssClasses","previousId":7833,"nextId":7906},{"id":7906,"name":"LastScriptExecution","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\na returns the result of the last script executed via "},{"kind":"inline-tag","tag":"@apilink","text":"ExecuteScript"},{"kind":"text","text":".\\n\\n## Executing a script and reading the result\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(() => navigator.userAgent),\\n    Ensure.that(LastScriptExecution.result<string>(), includes(\'Chrome\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using LastScriptExecution as "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { ExecuteScript, LastScriptExecution } from \'@serenity-js/web\'\\nimport { Ensure, includes } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Joseph\')\\n  .attemptsTo(\\n    ExecuteScript.sync(() => navigator.userAgent),\\n    Ensure.that(\\n      LastScriptExecution.result<string>().toLocaleLowerCase(),\\n      includes(\'chrome\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ExecuteScript"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"}]},"children":[{"id":7907,"name":"result","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":53,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/LastScriptExecution.ts#L53"}],"signatures":[{"id":7908,"name":"result","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Enables asserting on the result of a function executed via "},{"kind":"inline-tag","tag":"@apilink","text":"ExecuteScript"},{"kind":"text","text":"."}]},"typeParameter":[{"id":7909,"name":"R","kind":131072,"kindString":"Type parameter","flags":{}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7909,"name":"R"}],"name":"QuestionAdapter"}}]},{"id":7910,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7911,"name":"new LastScriptExecution","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7906,"name":"LastScriptExecution"}}]}],"groups":[{"title":"Methods","children":[7907]},{"title":"Constructors","children":[7910]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/LastScriptExecution.ts","line":48,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/LastScriptExecution.ts#L48"}],"permalink":"/api/web/class/LastScriptExecution","previousId":7900,"nextId":7912},{"id":7912,"name":"Selected","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\noptions and values selected in a\\n[HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select).\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Select"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Question"}]},"children":[{"id":7913,"name":"valueOf","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":69,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Selected.ts#L69"}],"signatures":[{"id":7914,"name":"valueOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\na single [option](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nselected in an [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select).\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\');\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.value(\'UK\').from(Countries.dropdown),\\n    Ensure.that(Selected.valueOf(Countries.dropdown), equals(\'UK\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Select.value"}]},"parameters":[{"id":7915,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter"}}]},{"id":7916,"name":"valuesOf","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":128,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Selected.ts#L128"}],"signatures":[{"id":7917,"name":"valuesOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\nvalues of [options](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option)\\nselected in an [HTML "},{"kind":"code","text":"`<select multiple>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    Select.values(\'UK\').from(Countries.dropdown),\\n    Ensure.that(Selected.valuesOf(Countries.dropdown), equals([ \'UK\' ])),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Select.values"}]},"parameters":[{"id":7918,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter"}}]},{"id":7919,"name":"optionIn","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":189,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Selected.ts#L189"}],"signatures":[{"id":7920,"name":"optionIn","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\na single option selected in an [HTML "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.option(\'Poland\').from(Countries.dropdown),\\n    Ensure.that(\\n      Selected.optionIn(Countries.dropdown),\\n      equals(\'Poland\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Select.option"}]},"parameters":[{"id":7921,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter"}}]},{"id":7922,"name":"optionsIn","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":250,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Selected.ts#L250"}],"signatures":[{"id":7923,"name":"optionsIn","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\noptions selected in an [HTML "},{"kind":"code","text":"`<select multiple>`"},{"kind":"text","text":" element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select#attr-multiple)\\n\\n#### Example widget\\n\\n"},{"kind":"code","text":"```html\\n<select multiple data-test=\'countries\'>\\n  <option value=\'UK\'>United Kingdom</option>\\n  <option value=\'PL\'>Poland</option>\\n  <option value=\'US\'>United States</option>\\n</select>\\n```"},{"kind":"text","text":"\\n\\n#### Lean Page Object describing the widget\\n\\n"},{"kind":"code","text":"```ts\\nimport { By, PageElement } from \'@serenity-js/web\'\\n\\nclass Countries {\\n  static dropdown = () =>\\n    PageElement.located(By.css(\'[data-test=\\"countries\\"]\'))\\n      .describedAs(\'countries dropdown\')\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving the selected value\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Select, Selected } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Nick\')\\n  .attemptsTo(\\n    Select.options(\'Poland\', \'United States\').from(Countries.dropdown),\\n    Ensure.that(\\n      Selected.optionsIn(Countries.dropdown),\\n      equals([ \'Poland\', \'United States\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Select.options"}]},"parameters":[{"id":7924,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":" identifying the "},{"kind":"code","text":"`<select>`"},{"kind":"text","text":" element of interest"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter"}}]},{"id":7925,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7926,"name":"new Selected","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7912,"name":"Selected"}}]}],"groups":[{"title":"Methods","children":[7913,7916,7919,7922]},{"title":"Constructors","children":[7925]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Selected.ts","line":19,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Selected.ts#L19"}],"permalink":"/api/web/class/Selected","previousId":7906,"nextId":7927},{"id":7927,"name":"Text","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\nthe visible (i.e. not hidden by CSS) ["},{"kind":"code","text":"`innerText`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText) of:\\n- a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"\\n- a group of "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements"},{"kind":"text","text":"\\n\\nThe result includes the visible text of any sub-elements, without any leading or trailing whitespace.\\n\\n## Example widget\\n\\n"},{"kind":"code","text":"```html\\n<h1>Shopping list</h1>\\n<ul id=\\"shopping-list\\">\\n  <li>Coffee<li>\\n  <li class=\\"bought\\">Honey<li>\\n  <li>Chocolate<li>\\n</ul>\\n```"},{"kind":"text","text":"\\n\\n## Retrieve text of a single "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst header = () =>\\n  PageElement.located(By.css(\'h1\'))\\n    .describedAs(\'header\')\\n\\nawait actorCalled(\'Lisa\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))\\n  .attemptsTo(\\n    Ensure.that(Text.of(header()), equals(\'Shopping list\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Retrieve text of multiple "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst shoppingListItems = () =>\\n  PageElements.located(By.css(\'#shopping-list li\'))\\n    .describedAs(\'shopping list items\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Text.ofAll(shoppingListItems()),\\n      equals([ \'Coffee\', \'Honey\', \'Chocolate\' ])\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using as filter in "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements|Page Element Query Language"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { contain, Ensure } from \'@serenity-js/assertions\'\\nimport { By, CssClasses, PageElement, Text } from \'@serenity-js/web\'\\n\\nconst shoppingListItemCalled = (name: string) =>\\n  PageElements.located(By.css(\'#shopping-list li\'))\\n    .describedAs(\'shopping list items\')\\n    .where(Text, equals(name))\\n    .first()\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      CssClasses.of(shoppingListItemCalled(\'Honey)),\\n      contain(\'bought\')\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Question"}]},"children":[{"id":7928,"name":"of","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":107,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Text.ts#L107"}],"signatures":[{"id":7929,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":" that uses\\nthe "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\nthe text of a single "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"}]},"parameters":[{"id":7930,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"},{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"QuestionAdapter"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter"}}]},{"id":7931,"name":"ofAll","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":129,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Text.ts#L129"},{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":130,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Text.ts#L130"},{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":131,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Text.ts#L131"}],"signatures":[{"id":7932,"name":"ofAll","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":" that uses\\nthe "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\nthe text of a group of "},{"kind":"inline-tag","tag":"@apilink","text":"PageElements"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"}]},"parameters":[{"id":7933,"name":"pageElements","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7499,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElements"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"MetaQuestionAdapter"}},{"id":7934,"name":"ofAll","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":7935,"name":"pageElements","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}}],"name":"QuestionAdapter"}}]},{"id":7936,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7937,"name":"new Text","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7927,"name":"Text"}}]}],"groups":[{"title":"Methods","children":[7928,7931]},{"title":"Constructors","children":[7936]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Text.ts","line":95,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Text.ts#L95"}],"permalink":"/api/web/class/Text","previousId":7912,"nextId":7938},{"id":7938,"name":"Value","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\nthe "},{"kind":"code","text":"`value`"},{"kind":"text","text":" attribute of a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\n\\n## Example widget\\n"},{"kind":"code","text":"```html\\n<input type=\\"text\\" id=\\"username\\" value=\\"Alice\\" />\\n```"},{"kind":"text","text":"\\n\\n## Retrieve the "},{"kind":"code","text":"`value`"},{"kind":"text","text":" of a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Value } from \'@serenity-js/web\'\\n\\nconst usernameField = () =>\\n  PageElement.located(By.id(\'username\'))\\n    .describedAs(\'username field\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(Value.of(usernameField), equals(\'Alice\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using Value as "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { By, PageElement, Value } from \'@serenity-js/web\'\\n\\nconst usernameField = () =>\\n  PageElement.located(By.id(\'username\'))\\n    .describedAs(\'username field\')\\n\\nawait actorCalled(\'Lisa\')\\n  .attemptsTo(\\n    Ensure.that(\\n      Value.of(usernameField).toLocaleLowerCase()[0],\\n      equals(\'a\')  // [a]lice\\n    ),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"QuestionAdapter"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Question"}]},"children":[{"id":7939,"name":"of","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":72,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Value.ts#L72"}],"signatures":[{"id":7940,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"inline-tag","tag":"@apilink","text":"Question"},{"kind":"text","text":" that uses\\nthe "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor\'s"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":" to retrieve\\nthe "},{"kind":"code","text":"`value`"},{"kind":"text","text":" attribute of a given "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MetaQuestion"}]},"parameters":[{"id":7941,"name":"pageElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"},{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"}],"name":"QuestionAdapter"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":7428,"typeArguments":[{"type":"intrinsic","name":"any"}],"name":"PageElement"},{"type":"intrinsic","name":"string"}],"name":"MetaQuestionAdapter"}}]},{"id":7942,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7943,"name":"new Value","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7938,"name":"Value"}}]}],"groups":[{"title":"Methods","children":[7939]},{"title":"Constructors","children":[7942]}],"sources":[{"fileName":"packages/web/src/screenplay/questions/Value.ts","line":60,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/screenplay/questions/Value.ts#L60"}],"permalink":"/api/web/class/Value","previousId":7927,"nextId":7944},{"id":7944,"name":"Photographer","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The Photographer is a "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" who takes screenshots\\nusing the web browser associated with the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" that is currently "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight|in the spotlight"},{"kind":"text","text":".\\n\\n## Programmatically assigning the "},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":" to the "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { configure, ArtifactArchiver } from \'@serenity-js/core\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.storingArtifactsAt(process.cwd(), \'target/site/serenity\'),\\n    Photographer.whoWill(TakePhotosOfFailures),\\n  ]\\n})\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":" with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ArtifactArchiver } from \'@serenity-js/core\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig= {\\n\\n  // Tell WebdriverIO to use Serenity/JS framework\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    // Configure Serenity/JS to use an appropriate test runner adapter\\n    runner: \'cucumber\',\\n    // runner: \'mocha\',\\n    // runner: \'jasmine\',\\n\\n    // register custom Actors class to configure your Serenity/JS actors\\n    actors: new Actors(),\\n\\n    // Register StageCrewMembers we\'ve imported at the top of this file\\n    crew: [\\n      ArtifactArchiver.storingArtifactsAt(process.cwd(), \'target/site/serenity\'),\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ]\\n  },\\n\\n  // ... rest of the config omitted for brevity\\n}\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":" with Playwright Test\\n\\n"},{"kind":"code","text":"```ts\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        crew: [\\n            [ \'@serenity-js/web:Photographer\', { strategy: \'TakePhotosOfFailures\' } ] // or \'TakePhotosOfInteractions\'\\n        ],\\n    },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityOptions"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`Photographer`"},{"kind":"text","text":" with Protractor\\n\\n"},{"kind":"code","text":"```ts\\n// protractor.conf.js\\nconst { ArtifactArchiver } = require(\'@serenity-js/core\')\\nconst { Photographer, TakePhotosOfFailures } = require(\'@serenity-js/web\')\\n\\nexports.config = {\\n\\n  // Tell Protractor to use the Serenity/JS framework Protractor Adapter\\n  framework:      \'custom\',\\n  frameworkPath:  require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n        runner: \'jasmine\',\\n        // runner: \'cucumber\',\\n        // runner: \'mocha\',\\n        crew: [\\n            ArtifactArchiver.storingArtifactsAt(\'./target/site/serenity\'),\\n            Photographer.whoWill(TakePhotosOfFailures),\\n        ]\\n    },\\n\\n    // ... rest of the config omitted for brevity\\n}\\n```"},{"kind":"text","text":"\\n\\n## Taking photos only upon failures only\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosOfFailures)\\n```"},{"kind":"text","text":"\\n\\n## Taking photos of all the interactions\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosOfInteractions } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosOfInteractions)\\n```"},{"kind":"text","text":"\\n\\n## Taking photos before and after all the interactions\\n\\n"},{"kind":"code","text":"```ts\\nimport { Photographer, TakePhotosBeforeAndAfterInteractions } from \'@serenity-js/web\'\\n\\nPhotographer.whoWill(TakePhotosBeforeAndAfterInteractions)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TakePhotosBeforeAndAfterInteractions"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TakePhotosOfFailures"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TakePhotosOfInteractions"}]},"children":[{"id":7945,"name":"whoWill","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":147,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/Photographer.ts#L147"}],"signatures":[{"id":7946,"name":"whoWill","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a new "},{"kind":"inline-tag","tag":"@apilink","text":"Photographer"},{"kind":"text","text":" configured to take photos (screenshots)\\nas per the specified "},{"kind":"inline-tag","tag":"@apilink","text":"PhotoTakingStrategy"},{"kind":"text","text":"."}]},"parameters":[{"id":7947,"name":"strategy","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A no-arg constructor function that instantiates a "},{"kind":"inline-tag","tag":"@apilink","text":"PhotoTakingStrategy"}]},"type":{"type":"reflection","declaration":{"id":7948,"name":"__type","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":147,"character":29,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/Photographer.ts#L147"}],"signatures":[{"id":7949,"name":"new strategy","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7967,"name":"PhotoTakingStrategy"}}]}}}],"type":{"type":"reference","name":"StageCrewMember"}}]},{"id":7950,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":157,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/Photographer.ts#L157"}],"signatures":[{"id":7951,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a new "},{"kind":"inline-tag","tag":"@apilink","text":"Photographer"},{"kind":"text","text":" configured to take photos (screenshots)\\nas per the specified "},{"kind":"inline-tag","tag":"@apilink","text":"PhotoTakingStrategy"},{"kind":"text","text":"."}]},"parameters":[{"id":7952,"name":"config","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reflection","declaration":{"id":7953,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":7954,"name":"strategy","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":157,"character":31,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/Photographer.ts#L157"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"literal","value":"PhotoTakingStrategy"},{"type":"literal","value":"TakePhotosBeforeAndAfterInteractions"},{"type":"literal","value":"TakePhotosOfFailures"},{"type":"literal","value":"TakePhotosOfInteractions"}]},{"type":"literal","value":"PhotoTakingStrategy"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"}}],"groups":[{"title":"Properties","children":[7954]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":157,"character":29,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/Photographer.ts#L157"}]}}}],"type":{"type":"reference","name":"StageCrewMember"}}]},{"id":7955,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":174,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/Photographer.ts#L174"}],"signatures":[{"id":7956,"name":"new Photographer","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":7957,"name":"photoTakingStrategy","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":7967,"name":"PhotoTakingStrategy"}},{"id":7958,"name":"stage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Stage"}}],"type":{"type":"reference","id":7944,"name":"Photographer"}}]},{"id":7961,"name":"assignedTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":186,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/Photographer.ts#L186"}],"signatures":[{"id":7962,"name":"assignedTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Assigns this "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" to a given "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":"."}]},"parameters":[{"id":7963,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An instance of a "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":" this "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" will be assigned to"}]},"type":{"type":"reference","name":"Stage"}}],"type":{"type":"reference","name":"StageCrewMember"},"implementationOf":{"type":"reference","name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","name":"StageCrewMember.assignedTo"}},{"id":7964,"name":"notifyOf","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":197,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/Photographer.ts#L197"}],"signatures":[{"id":7965,"name":"notifyOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Handles "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent"},{"kind":"text","text":" objects emitted by the "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":"\\nthis "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" is assigned to."}]},"parameters":[{"id":7966,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DomainEvent"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Methods","children":[7945,7950,7961,7964]},{"title":"Constructors","children":[7955]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/Photographer.ts","line":138,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/Photographer.ts#L138"}],"implementedTypes":[{"type":"reference","name":"StageCrewMember"}],"permalink":"/api/web/class/Photographer","previousId":7938,"nextId":7967},{"id":7967,"name":"PhotoTakingStrategy","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Configures the "},{"kind":"inline-tag","tag":"@apilink","text":"Photographer"},{"kind":"text","text":" to take "},{"kind":"inline-tag","tag":"@apilink","text":"Photo|photos"},{"kind":"text","text":", a.k.a. screenshots,\\nof the "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" performed by the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" in the "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight|spotlight"},{"kind":"text","text":"\\nwhen desired conditions are met."}]},"children":[{"id":7968,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7969,"name":"new PhotoTakingStrategy","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7967,"name":"PhotoTakingStrategy"}}]},{"id":7970,"name":"considerTakingPhoto","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts#L30"}],"signatures":[{"id":7971,"name":"considerTakingPhoto","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" in the "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight|spotlight"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ActivityStarts"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ActivityFinished"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"}]},"parameters":[{"id":7972,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"ActivityStarts"},{"type":"reference","name":"ActivityFinished"}]}},{"id":7973,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","name":"Stage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Constructors","children":[7968]},{"title":"Methods","children":[7970]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":16,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts#L16"}],"extendedBy":[{"type":"reference","id":7986,"name":"TakePhotosBeforeAndAfterInteractions"},{"type":"reference","id":7999,"name":"TakePhotosOfFailures"},{"type":"reference","id":8012,"name":"TakePhotosOfInteractions"}],"permalink":"/api/web/class/PhotoTakingStrategy","previousId":7944,"nextId":7986},{"id":7986,"name":"TakePhotosBeforeAndAfterInteractions","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the "},{"kind":"inline-tag","tag":"@apilink","text":"Photographer"},{"kind":"text","text":" to take photos (a.k.a. screenshots) **both before and after**\\nevery single "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":" performed\\nby the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" in the "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight|spotlight"},{"kind":"text","text":".\\n\\n**Please note** that this strategy will result in _a lot_ of screenshots being taken,\\nwhich will seriously affect the performance of your tests.\\nFor this reason, it\'s best to use it only for debugging purposes."}]},"children":[{"id":7987,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":7988,"name":"new TakePhotosBeforeAndAfterInteractions","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7986,"name":"TakePhotosBeforeAndAfterInteractions"},"inheritedFrom":{"type":"reference","id":7969,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","id":7968,"name":"PhotoTakingStrategy.constructor"}},{"id":7995,"name":"considerTakingPhoto","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts#L30"}],"signatures":[{"id":7996,"name":"considerTakingPhoto","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" in the "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight|spotlight"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ActivityStarts"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ActivityFinished"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"}]},"parameters":[{"id":7997,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"ActivityStarts"},{"type":"reference","name":"ActivityFinished"}]}},{"id":7998,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","name":"Stage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":7971,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","id":7970,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[7987]},{"title":"Methods","children":[7995]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosBeforeAndAfterInteractions.ts","line":17,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/strategies/TakePhotosBeforeAndAfterInteractions.ts#L17"}],"extendedTypes":[{"type":"reference","id":7967,"name":"PhotoTakingStrategy"}],"permalink":"/api/web/class/TakePhotosBeforeAndAfterInteractions","previousId":7967,"nextId":7999},{"id":7999,"name":"TakePhotosOfFailures","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the "},{"kind":"inline-tag","tag":"@apilink","text":"Photographer"},{"kind":"text","text":" to take photos (a.k.a. screenshots)\\nwhen then "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":" performed\\nby the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" in the "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight|spotlight"},{"kind":"text","text":"\\nresults in an error.\\n\\nThis strategy works best when you are interested in the screenshots only when\\na scenario fails."}]},"children":[{"id":8000,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":8001,"name":"new TakePhotosOfFailures","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":7999,"name":"TakePhotosOfFailures"},"inheritedFrom":{"type":"reference","id":7969,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","id":7968,"name":"PhotoTakingStrategy.constructor"}},{"id":8008,"name":"considerTakingPhoto","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts#L30"}],"signatures":[{"id":8009,"name":"considerTakingPhoto","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" in the "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight|spotlight"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ActivityStarts"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ActivityFinished"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"}]},"parameters":[{"id":8010,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"ActivityStarts"},{"type":"reference","name":"ActivityFinished"}]}},{"id":8011,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","name":"Stage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":7971,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","id":7970,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[8000]},{"title":"Methods","children":[8008]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosOfFailures.ts","line":18,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/strategies/TakePhotosOfFailures.ts#L18"}],"extendedTypes":[{"type":"reference","id":7967,"name":"PhotoTakingStrategy"}],"permalink":"/api/web/class/TakePhotosOfFailures","previousId":7986,"nextId":8012},{"id":8012,"name":"TakePhotosOfInteractions","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the "},{"kind":"inline-tag","tag":"@apilink","text":"Photographer"},{"kind":"text","text":" to take photos (a.k.a. screenshots)\\nwhen then "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" in the "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight|spotlight"},{"kind":"text","text":"\\nperforms any "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":".\\n\\nThis strategy works best when you want the results of your automated tests\\nto become comprehensive living documentation of your system.\\n\\n*Please note* that taking screenshots affects the performance of your tests."}]},"children":[{"id":8013,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":8014,"name":"new TakePhotosOfInteractions","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":8012,"name":"TakePhotosOfInteractions"},"inheritedFrom":{"type":"reference","id":7969,"name":"PhotoTakingStrategy.constructor"}}],"inheritedFrom":{"type":"reference","id":7968,"name":"PhotoTakingStrategy.constructor"}},{"id":8021,"name":"considerTakingPhoto","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts","line":30,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/strategies/PhotoTakingStrategy.ts#L30"}],"signatures":[{"id":8022,"name":"considerTakingPhoto","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Takes a photo of the web browser used by the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" in the "},{"kind":"inline-tag","tag":"@apilink","text":"actorInTheSpotlight|spotlight"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ActivityStarts"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"ActivityFinished"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"}]},"parameters":[{"id":8023,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","name":"ActivityStarts"},{"type":"reference","name":"ActivityFinished"}]}},{"id":8024,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The Stage that holds reference to the Actor in the spotlight"}]},"type":{"type":"reference","name":"Stage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":7971,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"inheritedFrom":{"type":"reference","id":7970,"name":"PhotoTakingStrategy.considerTakingPhoto"}}],"groups":[{"title":"Constructors","children":[8013]},{"title":"Methods","children":[8021]}],"sources":[{"fileName":"packages/web/src/stage/crew/photographer/strategies/TakePhotosOfInteractions.ts","line":18,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/stage/crew/photographer/strategies/TakePhotosOfInteractions.ts#L18"}],"extendedTypes":[{"type":"reference","id":7967,"name":"PhotoTakingStrategy"}],"permalink":"/api/web/class/TakePhotosOfInteractions","previousId":7999}],"groups":[{"title":"Abilities","children":[6550]},{"title":"Activities","children":[6568,6604,6634,6664,6701,6713,6746,6776,6788,6815,6853,6883,6909,6944,6973]},{"title":"Errors","children":[6465,6491,6514]},{"title":"Expectations","children":[6540,6542,6544,6546,6548]},{"title":"Models","children":[6999,7003,7034,7079,7196,7262,7312,7428,7499,7605,7673,7697,7827,7830,7088,7110,7134,7158,7180,7721,7743,7755,7769,7781,7793,7805,7817]},{"title":"Questions","children":[7833,7900,7906,7912,7927,7938]},{"title":"Stage","children":[7944,7967,7986,7999,8012]}],"sources":[{"fileName":"packages/web/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/web/src/index.ts#L1"}],"permalink":"/api/web"},"urlSlug":"web"}],"packageName":"@serenity-js/web","packageVersion":"3.10.2"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":42,"name":"@serenity-js/playwright","kind":2,"kindString":"Module","flags":{},"children":[{"id":4241,"name":"PlaywrightOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Playwright-specific options used to configure the ability to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [Playwright "},{"kind":"code","text":"`BrowserContextOptions`"},{"kind":"text","text":"](https://github.com/microsoft/playwright/blob/bd5eddd62e2009a5fe3e270d8fc30bf29cef1296/packages/playwright-core/types/types.d.ts#L15956)"}]},"children":[{"id":4245,"name":"acceptDownloads","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to automatically download all the attachments. Defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" where all the downloads are accepted."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19283,"character":2}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.acceptDownloads"}},{"id":4246,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When using [page.goto(url[, options])](https://playwright.dev/docs/api/class-page#page-goto),\\n[page.route(url, handler[, options])](https://playwright.dev/docs/api/class-page#page-route),\\n[page.waitForURL(url[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-url),\\n[page.waitForRequest(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-request),\\nor\\n[page.waitForResponse(urlOrPredicate[, options])](https://playwright.dev/docs/api/class-page#page-wait-for-response)\\nit takes the base URL in consideration by using the\\n["},{"kind":"code","text":"`URL()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL) constructor for building the corresponding URL.\\nUnset by default. Examples:\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000`"},{"kind":"text","text":" and navigating to "},{"kind":"code","text":"`/bar.html`"},{"kind":"text","text":" results in "},{"kind":"code","text":"`http://localhost:3000/bar.html`"},{"kind":"text","text":"\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000/foo/`"},{"kind":"text","text":" and navigating to "},{"kind":"code","text":"`./bar.html`"},{"kind":"text","text":" results in\\n  "},{"kind":"code","text":"`http://localhost:3000/foo/bar.html`"},{"kind":"text","text":"\\n- baseURL: "},{"kind":"code","text":"`http://localhost:3000/foo`"},{"kind":"text","text":" (without trailing slash) and navigating to "},{"kind":"code","text":"`./bar.html`"},{"kind":"text","text":" results in\\n  "},{"kind":"code","text":"`http://localhost:3000/bar.html`"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19301,"character":2}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.baseURL"}},{"id":4247,"name":"bypassCSP","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Toggles bypassing page\'s Content-Security-Policy. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19306,"character":2}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.bypassCSP"}},{"id":4248,"name":"colorScheme","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates "},{"kind":"code","text":"`\'prefers-colors-scheme\'`"},{"kind":"text","text":" media feature, supported values are "},{"kind":"code","text":"`\'light\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'dark\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'no-preference\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'light\'`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19313,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"no-preference"}]},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.colorScheme"}},{"id":4249,"name":"deviceScaleFactor","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify device scale factor (can be thought of as dpr). Defaults to "},{"kind":"code","text":"`1`"},{"kind":"text","text":". Learn more about\\n[emulating devices with device scale factor](https://playwright.dev/docs/emulation#devices)."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19319,"character":2}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.deviceScaleFactor"}},{"id":4250,"name":"extraHTTPHeaders","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An object containing additional HTTP headers to be sent with every request. Defaults to none."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19324,"character":2}],"type":{"type":"reflection","declaration":{"id":4251,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19324,"character":21}],"indexSignature":{"id":4252,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":4253,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.extraHTTPHeaders"}},{"id":4254,"name":"forcedColors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates "},{"kind":"code","text":"`\'forced-colors\'`"},{"kind":"text","text":" media feature, supported values are "},{"kind":"code","text":"`\'active\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'none\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'none\'`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19331,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":"active"},{"type":"literal","value":"none"}]},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.forcedColors"}},{"id":4255,"name":"geolocation","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19333,"character":2}],"type":{"type":"reference","name":"Geolocation","qualifiedName":"Geolocation","package":"playwright-core"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.geolocation"}},{"id":4256,"name":"hasTouch","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specifies if viewport supports touch events. Defaults to false. Learn more about\\n[mobile emulation](https://playwright.dev/docs/emulation#devices)."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19339,"character":2}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.hasTouch"}},{"id":4257,"name":"httpCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Credentials for [HTTP authentication](https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication). If no\\norigin is specified, the username and password are sent to any servers upon unauthorized responses."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19345,"character":2}],"type":{"type":"reference","name":"HTTPCredentials","qualifiedName":"HTTPCredentials","package":"playwright-core"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.httpCredentials"}},{"id":4258,"name":"ignoreHTTPSErrors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to ignore HTTPS errors when sending network requests. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19350,"character":2}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.ignoreHTTPSErrors"}},{"id":4259,"name":"isMobile","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether the "},{"kind":"code","text":"`meta viewport`"},{"kind":"text","text":" tag is taken into account and touch events are enabled. isMobile is a part of device,\\nso you don\'t actually need to set it manually. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":" and is not supported in Firefox. Learn more\\nabout [mobile emulation](https://playwright.dev/docs/emulation#ismobile)."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19357,"character":2}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.isMobile"}},{"id":4260,"name":"javaScriptEnabled","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not to enable JavaScript in the context. Defaults to "},{"kind":"code","text":"`true`"},{"kind":"text","text":". Learn more about\\n[disabling JavaScript](https://playwright.dev/docs/emulation#javascript-enabled)."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19363,"character":2}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.javaScriptEnabled"}},{"id":4261,"name":"locale","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify user locale, for example "},{"kind":"code","text":"`en-GB`"},{"kind":"text","text":", "},{"kind":"code","text":"`de-DE`"},{"kind":"text","text":", etc. Locale will affect "},{"kind":"code","text":"`navigator.language`"},{"kind":"text","text":" value,\\n"},{"kind":"code","text":"`Accept-Language`"},{"kind":"text","text":" request header value as well as number and date formatting rules. Defaults to the system default\\nlocale. Learn more about emulation in our [emulation guide](https://playwright.dev/docs/emulation#locale--timezone)."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19370,"character":2}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.locale"}},{"id":4262,"name":"logger","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Logger sink for Playwright logging."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19375,"character":2}],"type":{"type":"reference","name":"Logger","qualifiedName":"Logger","package":"playwright-core"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.logger"}},{"id":4263,"name":"offline","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to emulate network being offline. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". Learn more about\\n[network emulation](https://playwright.dev/docs/emulation#offline)."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19381,"character":2}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.offline"}},{"id":4264,"name":"permissions","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of permissions to grant to all pages in this context. See\\n[browserContext.grantPermissions(permissions[, options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-grant-permissions)\\nfor more details. Defaults to none."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19388,"character":2}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.permissions"}},{"id":4265,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Network proxy settings to use with this context. Defaults to none.\\n\\n**NOTE** For Chromium on Windows the browser needs to be launched with the global proxy for this option to work. If\\nall contexts override the proxy, global proxy will be never used and can be any string, for example "},{"kind":"code","text":"`launch({\\nproxy: { server: \'http://per-context\' } })`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19397,"character":2}],"type":{"type":"reflection","declaration":{"id":4266,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4267,"name":"server","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Proxy to be used for all requests. HTTP and SOCKS proxies are supported, for example "},{"kind":"code","text":"`http://myproxy.com:3128`"},{"kind":"text","text":" or\\n"},{"kind":"code","text":"`socks5://myproxy.com:3128`"},{"kind":"text","text":". Short form "},{"kind":"code","text":"`myproxy.com:3128`"},{"kind":"text","text":" is considered an HTTP proxy."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19402,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4268,"name":"bypass","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional comma-separated domains to bypass proxy, for example "},{"kind":"code","text":"`\\".com, chromium.org, .domain.com\\"`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19407,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4269,"name":"username","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional username to use if HTTP proxy requires authentication."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19412,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4270,"name":"password","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional password to use if HTTP proxy requires authentication."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19417,"character":4}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4267,4268,4269,4270]}],"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19397,"character":10}]}},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.proxy"}},{"id":4271,"name":"recordHar","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enables [HAR](http://www.softwareishard.com/blog/har-12-spec) recording for all pages into "},{"kind":"code","text":"`recordHar.path`"},{"kind":"text","text":" file.\\nIf not specified, the HAR is not recorded. Make sure to await\\n[browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for the HAR to\\nbe saved."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19426,"character":2}],"type":{"type":"reflection","declaration":{"id":4272,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4273,"name":"omitContent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional setting to control whether to omit request content from the HAR. Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". Deprecated, use\\n"},{"kind":"code","text":"`content`"},{"kind":"text","text":" policy instead."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19431,"character":4}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4274,"name":"content","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional setting to control resource content management. If "},{"kind":"code","text":"`omit`"},{"kind":"text","text":" is specified, content is not persisted. If\\n"},{"kind":"code","text":"`attach`"},{"kind":"text","text":" is specified, resources are persisted as separate files or entries in the ZIP archive. If "},{"kind":"code","text":"`embed`"},{"kind":"text","text":" is\\nspecified, content is stored inline the HAR file as per HAR specification. Defaults to "},{"kind":"code","text":"`attach`"},{"kind":"text","text":" for "},{"kind":"code","text":"`.zip`"},{"kind":"text","text":" output\\nfiles and to "},{"kind":"code","text":"`embed`"},{"kind":"text","text":" for all other file extensions."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19439,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"omit"},{"type":"literal","value":"embed"},{"type":"literal","value":"attach"}]}},{"id":4275,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Path on the filesystem to write the HAR file to. If the file name ends with "},{"kind":"code","text":"`.zip`"},{"kind":"text","text":", "},{"kind":"code","text":"`content: \'attach\'`"},{"kind":"text","text":" is used by\\ndefault."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19445,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4276,"name":"mode","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When set to "},{"kind":"code","text":"`minimal`"},{"kind":"text","text":", only record information necessary for routing from HAR. This omits sizes, timing, page,\\ncookies, security and other types of HAR information that are not used when replaying from HAR. Defaults to "},{"kind":"code","text":"`full`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19451,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"full"},{"type":"literal","value":"minimal"}]}},{"id":4277,"name":"urlFilter","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A glob or regex pattern to filter requests that are stored in the HAR. When a "},{"kind":"code","text":"`baseURL`"},{"kind":"text","text":" via the context options was\\nprovided and the passed URL is a path, it gets merged via the\\n["},{"kind":"code","text":"`new URL()`"},{"kind":"text","text":"](https://developer.mozilla.org/en-US/docs/Web/API/URL/URL) constructor. Defaults to none."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19458,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"RegExp","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp","qualifiedName":"RegExp","package":"typescript"}]}}],"groups":[{"title":"Properties","children":[4273,4274,4275,4276,4277]}],"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19426,"character":14}]}},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.recordHar"}},{"id":4278,"name":"recordVideo","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enables video recording for all pages into "},{"kind":"code","text":"`recordVideo.dir`"},{"kind":"text","text":" directory. If not specified videos are not recorded.\\nMake sure to await\\n[browserContext.close()](https://playwright.dev/docs/api/class-browsercontext#browser-context-close) for videos to\\nbe saved."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19467,"character":2}],"type":{"type":"reflection","declaration":{"id":4279,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4280,"name":"dir","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Path to the directory to put videos into."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19471,"character":4}],"type":{"type":"intrinsic","name":"string"}},{"id":4281,"name":"size","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional dimensions of the recorded videos. If not specified the size will be equal to "},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" scaled down to\\nfit into 800x800. If "},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" is not configured explicitly the video size defaults to 800x450. Actual picture of\\neach page will be scaled down if necessary to fit the specified size."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19478,"character":4}],"type":{"type":"reflection","declaration":{"id":4282,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4283,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame width."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19482,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":4284,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame height."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19487,"character":6}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4283,4284]}],"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19478,"character":11}]}}}],"groups":[{"title":"Properties","children":[4280,4281]}],"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19467,"character":16}]}},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.recordVideo"}},{"id":4285,"name":"reducedMotion","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates "},{"kind":"code","text":"`\'prefers-reduced-motion\'`"},{"kind":"text","text":" media feature, supported values are "},{"kind":"code","text":"`\'reduce\'`"},{"kind":"text","text":", "},{"kind":"code","text":"`\'no-preference\'`"},{"kind":"text","text":". See\\n[page.emulateMedia([options])](https://playwright.dev/docs/api/class-page#page-emulate-media) for more details.\\nPassing "},{"kind":"code","text":"`null`"},{"kind":"text","text":" resets emulation to system defaults. Defaults to "},{"kind":"code","text":"`\'no-preference\'`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19496,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":"reduce"},{"type":"literal","value":"no-preference"}]},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.reducedMotion"}},{"id":4286,"name":"screen","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates consistent window screen size available inside web page via "},{"kind":"code","text":"`window.screen`"},{"kind":"text","text":". Is only used when the\\n"},{"kind":"code","text":"`viewport`"},{"kind":"text","text":" is set."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19502,"character":2}],"type":{"type":"reflection","declaration":{"id":4287,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4288,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"page width in pixels."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19506,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4289,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"page height in pixels."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19511,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4288,4289]}],"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19502,"character":11}]}},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.screen"}},{"id":4290,"name":"serviceWorkers","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether to allow sites to register Service workers. Defaults to "},{"kind":"code","text":"`\'allow\'`"},{"kind":"text","text":".\\n- "},{"kind":"code","text":"`\'allow\'`"},{"kind":"text","text":": [Service Workers](https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API) can be\\n  registered.\\n- "},{"kind":"code","text":"`\'block\'`"},{"kind":"text","text":": Playwright will block all registration of Service Workers."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19520,"character":2}],"type":{"type":"union","types":[{"type":"literal","value":"allow"},{"type":"literal","value":"block"}]},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.serviceWorkers"}},{"id":4291,"name":"storageState","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Learn more about [storage state and auth](https://playwright.dev/docs/auth).\\n\\nPopulates context with given storage state. This option can be used to initialize context with logged-in\\ninformation obtained via\\n[browserContext.storageState([options])](https://playwright.dev/docs/api/class-browsercontext#browser-context-storage-state)."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19529,"character":2}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":4292,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4293,"name":"cookies","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Cookies to set for context"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19533,"character":4}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":4294,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4295,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19534,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":4296,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19536,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":4297,"name":"domain","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Domain and path are required. For the cookie to apply to all subdomains as well, prefix domain with a dot, like\\nthis: \\".example.com\\""}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19542,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":4298,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Domain and path are required"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19547,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":4299,"name":"expires","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Unix time in seconds."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19552,"character":6}],"type":{"type":"intrinsic","name":"number"}},{"id":4300,"name":"httpOnly","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19554,"character":6}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4301,"name":"secure","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19556,"character":6}],"type":{"type":"intrinsic","name":"boolean"}},{"id":4302,"name":"sameSite","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"sameSite flag"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19561,"character":6}],"type":{"type":"union","types":[{"type":"literal","value":"Lax"},{"type":"literal","value":"Strict"},{"type":"literal","value":"None"}]}}],"groups":[{"title":"Properties","children":[4295,4296,4297,4298,4299,4300,4301,4302]}],"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19533,"character":19}]}}}},{"id":4303,"name":"origins","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"localStorage to set for context"}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19567,"character":4}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":4304,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4305,"name":"origin","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19568,"character":6}],"type":{"type":"intrinsic","name":"string"}},{"id":4306,"name":"localStorage","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19570,"character":6}],"type":{"type":"array","elementType":{"type":"reflection","declaration":{"id":4307,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4308,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19571,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":4309,"name":"value","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19573,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[4308,4309]}],"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19570,"character":26}]}}}}],"groups":[{"title":"Properties","children":[4305,4306]}],"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19567,"character":19}]}}}}],"groups":[{"title":"Properties","children":[4293,4303]}],"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19529,"character":24}]}}]},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.storageState"}},{"id":4310,"name":"strictSelectors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set to true, enables strict selectors mode for this context. In the strict selectors mode all operations on\\nselectors that imply single target DOM element will throw when more than one element matches the selector. This\\noption does not affect any Locator APIs (Locators are always strict). Defaults to "},{"kind":"code","text":"`false`"},{"kind":"text","text":". See "},{"kind":"inline-tag","tag":"@link","text":"Locator"},{"kind":"text","text":" to\\nlearn more about the strict mode."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19584,"character":2}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.strictSelectors"}},{"id":4311,"name":"timezoneId","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Changes the timezone of the context. See\\n[ICU\'s metaZones.txt](https://cs.chromium.org/chromium/src/third_party/icu/source/data/misc/metaZones.txt?rcl=faee8bc70570192d82d2978a71e2a615788597d1)\\nfor a list of supported timezone IDs. Defaults to the system timezone."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19591,"character":2}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.timezoneId"}},{"id":4312,"name":"userAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specific user agent to use in this context."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19596,"character":2}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.userAgent"}},{"id":4313,"name":"videoSize","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`recordVideo`"},{"kind":"text","text":" instead."}]}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19601,"character":2}],"type":{"type":"reflection","declaration":{"id":4314,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":4315,"name":"width","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame width."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19605,"character":4}],"type":{"type":"intrinsic","name":"number"}},{"id":4316,"name":"height","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Video frame height."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19610,"character":4}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4315,4316]}],"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19601,"character":14}]}},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.videoSize"}},{"id":4317,"name":"videosPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[],"blockTags":[{"tag":"@deprecated","content":[{"kind":"text","text":"Use "},{"kind":"code","text":"`recordVideo`"},{"kind":"text","text":" instead."}]}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19616,"character":2}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.videosPath"}},{"id":4318,"name":"viewport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Emulates consistent viewport for each page. Defaults to an 1280x720 viewport. Use "},{"kind":"code","text":"`null`"},{"kind":"text","text":" to disable the consistent\\nviewport emulation. Learn more about [viewport emulation](https://playwright.dev/docs/emulation#viewport).\\n\\n**NOTE** The "},{"kind":"code","text":"`null`"},{"kind":"text","text":" value opts out from the default presets, makes viewport depend on the host window size defined\\nby the operating system. It makes the execution of the tests non-deterministic."}]},"sources":[{"fileName":"node_modules/playwright-core/types/types.d.ts","line":19625,"character":2}],"type":{"type":"reference","name":"ViewportSize","qualifiedName":"ViewportSize","package":"playwright-core"},"inheritedFrom":{"type":"reference","name":"playwright.BrowserContextOptions.viewport"}},{"id":4242,"name":"defaultNavigationTimeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Changes the default maximum navigation time for the browser context used by "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`browserContext.setDefaultNavigationTimeout(timeout)`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-navigation-timeout)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/PlaywrightOptions.ts#L20"}],"type":{"type":"intrinsic","name":"number"}},{"id":4243,"name":"defaultNavigationWaitUntil","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When to consider navigation operation succeeded, defaults to "},{"kind":"code","text":"`load`"},{"kind":"text","text":". Events can be either:\\n- "},{"kind":"code","text":"`\'domcontentloaded\'`"},{"kind":"text","text":" - consider operation to be finished when the "},{"kind":"code","text":"`DOMContentLoaded`"},{"kind":"text","text":" event is fired.\\n- "},{"kind":"code","text":"`\'load\'`"},{"kind":"text","text":" - consider operation to be finished when the "},{"kind":"code","text":"`load`"},{"kind":"text","text":" event is fired.\\n- "},{"kind":"code","text":"`\'networkidle\'`"},{"kind":"text","text":" - consider operation to be finished when there are no network connections for at least "},{"kind":"code","text":"`500`"},{"kind":"text","text":" ms.\\n- "},{"kind":"code","text":"`\'commit\'`"},{"kind":"text","text":" - consider operation to be finished when network response is received and the document started loading.\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`page.goto(url[, options])`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page#page-goto-option-wait-until)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":32,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/PlaywrightOptions.ts#L32"}],"type":{"type":"union","types":[{"type":"literal","value":"load"},{"type":"literal","value":"domcontentloaded"},{"type":"literal","value":"networkidle"},{"type":"literal","value":"commit"}]}},{"id":4244,"name":"defaultTimeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"This setting will change the default maximum time for all Playwright methods accepting "},{"kind":"code","text":"`timeout`"},{"kind":"text","text":" option.\\n\\n#### Learn more\\n- [Playwright "},{"kind":"code","text":"`page.setDefaultTimeout(timeout)`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page#page-set-default-timeout)"}]},"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":40,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/PlaywrightOptions.ts#L40"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4245,4246,4247,4248,4249,4250,4254,4255,4256,4257,4258,4259,4260,4261,4262,4263,4264,4265,4271,4278,4285,4286,4290,4291,4310,4311,4312,4313,4317,4318,4242,4243,4244]}],"sources":[{"fileName":"packages/playwright/src/PlaywrightOptions.ts","line":12,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/PlaywrightOptions.ts#L12"}],"extendedTypes":[{"type":"reference","name":"BrowserContextOptions","qualifiedName":"BrowserContextOptions","package":"playwright-core"}],"permalink":"/api/playwright/interface/PlaywrightOptions","previousId":4558,"nextId":4464},{"id":4319,"name":"BrowseTheWebWithPlaywright","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"This implementation of the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nenables the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to interact with web front-ends using [Playwright](https://playwright.dev/).\\n\\n## Using Playwright to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\nIn the example below, we configure the ability to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":" with a Playwright\\n["},{"kind":"code","text":"`Browser`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browser) so that Serenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actors"},{"kind":"text","text":"\\ncan create a new ["},{"kind":"code","text":"`BrowserContext`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-browsercontext) and\\ninstantiate Playwright ["},{"kind":"code","text":"`page`"},{"kind":"text","text":"s](https://playwright.dev/docs/api/class-page) as and when needed.\\n\\nThis configuration allows Serenity/JS to control the process of launching and shutting down browser instances\\nand is useful when your test runner, e.g. [Cucumber.js](/api/cucumber), doesn\'t offer this functionality.\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { Browser, chromium } from \'playwright\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nconst browser = await chromium.launch({ headless: true });\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithPlaywright.using(browser))\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":" with an existing Playwright "},{"kind":"code","text":"`page`"},{"kind":"text","text":"\\n\\nTest runners like [Playwright Test](/api/playwright-test/) manage Playwright browsers for you\\nand offer a ["},{"kind":"code","text":"`page`"},{"kind":"text","text":"](https://playwright.dev/docs/api/class-page) instance you can\\ninject into the ability to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":".\\n\\nNote that [Serenity/JS Playwright Test module](/api/playwright-test/)\\nautomatically configures all your "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actors"},{"kind":"text","text":"\\nwith an ability to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":",\\nso you don\'t need to do it by hand unless you want to override the "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityOptions|default configuration"},{"kind":"text","text":".\\n\\nThe example below demonstrates how to use the "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright.usingPage"},{"kind":"text","text":" API and\\noverride the default "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":" of actors.\\n\\n"},{"kind":"code","text":"```ts title=\\"specs/example.spec.ts\\"\\nimport { describe, it, test } from \'@playwright/playwright-test\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\ndescribe(\'Serenity/JS with Playwright\', () => {\\n\\n  test.use({\\n    actors: async ({ page, contextOptions }, use) => {\\n      await use(\\n        Cast.where((actorName: string) => {\\n          return actor.whoCan(\\n            BrowseTheWebWithPlaywright.usingPage(page),\\n            // ... add any other abilities\\n          )\\n        })\\n      )\\n    }\\n  })\\n\\n  it(\'lets you reuse an existing page\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      Navigate.to(`https://serenity-js.org`),\\n      Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Playwright website](https://playwright.dev/)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"}]},"children":[{"id":4320,"name":"using","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":106,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts#L106"}],"signatures":[{"id":4321,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4322,"name":"browser","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Browser","qualifiedName":"Browser","package":"playwright-core"}},{"id":4323,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":4241,"name":"PlaywrightOptions"}}],"type":{"type":"reference","id":4319,"name":"BrowseTheWebWithPlaywright"}}]},{"id":4324,"name":"usingPage","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":110,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts#L110"}],"signatures":[{"id":4325,"name":"usingPage","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4326,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Page","qualifiedName":"Page","package":"playwright-core"}},{"id":4327,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":4241,"name":"PlaywrightOptions"}}],"type":{"type":"reference","id":4319,"name":"BrowseTheWebWithPlaywright"}}]},{"id":4336,"name":"discard","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":121,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts#L121"}],"signatures":[{"id":4337,"name":"discard","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Automatically closes any open "},{"kind":"inline-tag","tag":"@apilink","text":"Page|Pages"},{"kind":"text","text":" when the "},{"kind":"inline-tag","tag":"@apilink","text":"SceneFinishes"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PlaywrightBrowsingSession.closeAllPages"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Discardable"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"Discardable.discard"}}],"implementationOf":{"type":"reference","name":"Discardable.discard"}},{"id":4333,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.d.ts","line":81,"character":4}],"signatures":[{"id":4334,"name":"new BrowseTheWebWithPlaywright","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":4335,"name":"session","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"Page"}],"name":"BrowsingSession"}}],"type":{"type":"reference","id":4319,"name":"BrowseTheWebWithPlaywright"},"inheritedFrom":{"type":"reference","name":"BrowseTheWeb<playwright.Locator>.constructor"}}],"inheritedFrom":{"type":"reference","name":"BrowseTheWeb<playwright.Locator>.constructor"}},{"id":4339,"name":"currentPage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.d.ts","line":85,"character":4}],"signatures":[{"id":4340,"name":"currentPage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" representing the currently active browser tab."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"Page"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.currentPage"}},{"id":4341,"name":"allPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.d.ts","line":90,"character":4}],"signatures":[{"id":4342,"name":"allPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" representing all the browser tabs\\navailable in the current "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"Page"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.allPages"}},{"id":4343,"name":"browserCapabilities","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.d.ts","line":94,"character":4}],"signatures":[{"id":4344,"name":"browserCapabilities","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"inline-tag","tag":"@apilink","text":"BrowserCapabilities|basic meta-data"},{"kind":"text","text":" about the browser associated with this ability."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrowserCapabilities"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Methods","children":[4320,4324,4336,4339,4341,4343]},{"title":"Constructors","children":[4333]}],"sources":[{"fileName":"packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts","line":104,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/abilities/BrowseTheWebWithPlaywright.ts#L104"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"playwright.Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"BrowseTheWeb"}],"implementedTypes":[{"type":"reference","name":"Discardable"}],"permalink":"/api/playwright/class/BrowseTheWebWithPlaywright","nextId":4509},{"id":4464,"name":"PlaywrightBrowsingSession","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"children":[{"id":4470,"name":"browserCapabilities","kind":2048,"kindString":"Method","flags":{"isPublic":true,"isAbstract":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":29,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts#L29"}],"signatures":[{"id":4471,"name":"browserCapabilities","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"inline-tag","tag":"@apilink","text":"BrowserCapabilities|basic meta-data"},{"kind":"text","text":" about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrowserCapabilities"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","name":"BrowsingSession.browserCapabilities"}},{"id":4472,"name":"cookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":31,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts#L31"}],"signatures":[{"id":4473,"name":"cookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4474,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Cookie"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":4475,"name":"setCookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts#L36"}],"signatures":[{"id":4476,"name":"setCookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4477,"name":"cookie","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CookieData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":4478,"name":"deleteAllCookies","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":42,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts#L42"}],"signatures":[{"id":4479,"name":"deleteAllCookies","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":4489,"name":"closePagesOtherThan","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":15,"character":4}],"signatures":[{"id":4490,"name":"closePagesOtherThan","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4491,"name":"pageOfInterest","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4648,"name":"PlaywrightPage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.closePagesOtherThan"}},{"id":4492,"name":"currentPage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":27,"character":4}],"signatures":[{"id":4493,"name":"currentPage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" representing the currently active top-level browsing context."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":4648,"name":"PlaywrightPage"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.currentPage"}},{"id":4494,"name":"register","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":33,"character":4}],"signatures":[{"id":4495,"name":"register","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Registers specified "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" to be managed by this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"parameters":[{"id":4496,"name":"pages","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":4648,"name":"PlaywrightPage"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.register"}},{"id":4497,"name":"deregister","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":40,"character":4}],"signatures":[{"id":4498,"name":"deregister","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Informs this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" that it should no longer manage "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":"\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"parameters":[{"id":4499,"name":"pageIds","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.deregister"}},{"id":4500,"name":"allPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":45,"character":4}],"signatures":[{"id":4501,"name":"allPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":4648,"name":"PlaywrightPage"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.allPages"}},{"id":4502,"name":"registeredPageIds","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":49,"character":4}],"signatures":[{"id":4503,"name":"registeredPageIds","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" is aware of."}]},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}},"inheritedFrom":{"type":"reference","name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.registeredPageIds"}},{"id":4504,"name":"changeCurrentPageTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":68,"character":4}],"signatures":[{"id":4505,"name":"changeCurrentPageTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Informs the "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"parameters":[{"id":4506,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4648,"name":"PlaywrightPage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.changeCurrentPageTo"}},{"id":4507,"name":"closeAllPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":72,"character":4}],"signatures":[{"id":4508,"name":"closeAllPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.closeAllPages"}}],"groups":[{"title":"Methods","children":[4470,4472,4475,4478,4489,4492,4494,4497,4500,4502,4504,4507]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":14,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts#L14"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":4648,"name":"PlaywrightPage"}],"name":"BrowsingSession"}],"extendedBy":[{"type":"reference","id":4509,"name":"PlaywrightBrowsingSessionWithBrowser"},{"type":"reference","id":4558,"name":"PlaywrightBrowsingSessionWithPage"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSession","previousId":4241,"nextId":4604},{"id":4509,"name":"PlaywrightBrowsingSessionWithBrowser","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"children":[{"id":4526,"name":"cookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":31,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts#L31"}],"signatures":[{"id":4527,"name":"cookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4528,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Cookie"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4473,"name":"PlaywrightBrowsingSession.cookie"}}],"inheritedFrom":{"type":"reference","id":4472,"name":"PlaywrightBrowsingSession.cookie"}},{"id":4529,"name":"setCookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts#L36"}],"signatures":[{"id":4530,"name":"setCookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4531,"name":"cookie","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CookieData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4476,"name":"PlaywrightBrowsingSession.setCookie"}}],"inheritedFrom":{"type":"reference","id":4475,"name":"PlaywrightBrowsingSession.setCookie"}},{"id":4532,"name":"deleteAllCookies","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":42,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts#L42"}],"signatures":[{"id":4533,"name":"deleteAllCookies","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4479,"name":"PlaywrightBrowsingSession.deleteAllCookies"}}],"inheritedFrom":{"type":"reference","id":4478,"name":"PlaywrightBrowsingSession.deleteAllCookies"}},{"id":4510,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts#L11"}],"signatures":[{"id":4511,"name":"new PlaywrightBrowsingSessionWithBrowser","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":4512,"name":"browser","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Browser","qualifiedName":"Browser","package":"playwright-core"}},{"id":4513,"name":"browserContextOptions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4241,"name":"PlaywrightOptions"}},{"id":4514,"name":"selectors","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Selectors","qualifiedName":"Selectors","package":"playwright-core"}}],"type":{"type":"reference","id":4509,"name":"PlaywrightBrowsingSessionWithBrowser"},"overwrites":{"type":"reference","name":"PlaywrightBrowsingSession.constructor"}}],"overwrites":{"type":"reference","name":"PlaywrightBrowsingSession.constructor"}},{"id":4521,"name":"closeAllPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":25,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts#L25"}],"signatures":[{"id":4522,"name":"closeAllPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":4508,"name":"PlaywrightBrowsingSession.closeAllPages"}}],"overwrites":{"type":"reference","id":4507,"name":"PlaywrightBrowsingSession.closeAllPages"}},{"id":4523,"name":"browserCapabilities","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":32,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts#L32"}],"signatures":[{"id":4524,"name":"browserCapabilities","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"inline-tag","tag":"@apilink","text":"BrowserCapabilities|basic meta-data"},{"kind":"text","text":" about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrowserCapabilities"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":4471,"name":"PlaywrightBrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","id":4470,"name":"PlaywrightBrowsingSession.browserCapabilities"}},{"id":4540,"name":"closePagesOtherThan","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":15,"character":4}],"signatures":[{"id":4541,"name":"closePagesOtherThan","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4542,"name":"pageOfInterest","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4648,"name":"PlaywrightPage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4490,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","id":4489,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}},{"id":4543,"name":"currentPage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":27,"character":4}],"signatures":[{"id":4544,"name":"currentPage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" representing the currently active top-level browsing context."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":4648,"name":"PlaywrightPage"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4493,"name":"PlaywrightBrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","id":4492,"name":"PlaywrightBrowsingSession.currentPage"}},{"id":4545,"name":"register","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":33,"character":4}],"signatures":[{"id":4546,"name":"register","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Registers specified "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" to be managed by this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"parameters":[{"id":4547,"name":"pages","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":4648,"name":"PlaywrightPage"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":4495,"name":"PlaywrightBrowsingSession.register"}}],"inheritedFrom":{"type":"reference","id":4494,"name":"PlaywrightBrowsingSession.register"}},{"id":4548,"name":"deregister","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":40,"character":4}],"signatures":[{"id":4549,"name":"deregister","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Informs this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" that it should no longer manage "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":"\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"parameters":[{"id":4550,"name":"pageIds","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":4498,"name":"PlaywrightBrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","id":4497,"name":"PlaywrightBrowsingSession.deregister"}},{"id":4551,"name":"allPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":45,"character":4}],"signatures":[{"id":4552,"name":"allPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":4648,"name":"PlaywrightPage"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4501,"name":"PlaywrightBrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","id":4500,"name":"PlaywrightBrowsingSession.allPages"}},{"id":4553,"name":"registeredPageIds","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":49,"character":4}],"signatures":[{"id":4554,"name":"registeredPageIds","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" is aware of."}]},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}},"inheritedFrom":{"type":"reference","id":4503,"name":"PlaywrightBrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","id":4502,"name":"PlaywrightBrowsingSession.registeredPageIds"}},{"id":4555,"name":"changeCurrentPageTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":68,"character":4}],"signatures":[{"id":4556,"name":"changeCurrentPageTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Informs the "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"parameters":[{"id":4557,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4648,"name":"PlaywrightPage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4505,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","id":4504,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"groups":[{"title":"Methods","children":[4526,4529,4532,4521,4523,4540,4543,4545,4548,4551,4553,4555]},{"title":"Constructors","children":[4510]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts","line":8,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithBrowser.ts#L8"}],"extendedTypes":[{"type":"reference","id":4464,"name":"PlaywrightBrowsingSession"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSessionWithBrowser","previousId":4319,"nextId":4558},{"id":4558,"name":"PlaywrightBrowsingSessionWithPage","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"children":[{"id":4570,"name":"cookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":31,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts#L31"}],"signatures":[{"id":4571,"name":"cookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4572,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Cookie"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4473,"name":"PlaywrightBrowsingSession.cookie"}}],"inheritedFrom":{"type":"reference","id":4472,"name":"PlaywrightBrowsingSession.cookie"}},{"id":4573,"name":"setCookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":36,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts#L36"}],"signatures":[{"id":4574,"name":"setCookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4575,"name":"cookie","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CookieData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4476,"name":"PlaywrightBrowsingSession.setCookie"}}],"inheritedFrom":{"type":"reference","id":4475,"name":"PlaywrightBrowsingSession.setCookie"}},{"id":4576,"name":"deleteAllCookies","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts","line":42,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSession.ts#L42"}],"signatures":[{"id":4577,"name":"deleteAllCookies","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4479,"name":"PlaywrightBrowsingSession.deleteAllCookies"}}],"inheritedFrom":{"type":"reference","id":4478,"name":"PlaywrightBrowsingSession.deleteAllCookies"}},{"id":4559,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":10,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts#L10"}],"signatures":[{"id":4560,"name":"new PlaywrightBrowsingSessionWithPage","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":4561,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Page","qualifiedName":"Page","package":"playwright-core"}},{"id":4562,"name":"browserContextOptions","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4241,"name":"PlaywrightOptions"}}],"type":{"type":"reference","id":4558,"name":"PlaywrightBrowsingSessionWithPage"},"overwrites":{"type":"reference","name":"PlaywrightBrowsingSession.constructor"}}],"overwrites":{"type":"reference","name":"PlaywrightBrowsingSession.constructor"}},{"id":4567,"name":"browserCapabilities","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":22,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts#L22"}],"signatures":[{"id":4568,"name":"browserCapabilities","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"inline-tag","tag":"@apilink","text":"BrowserCapabilities|basic meta-data"},{"kind":"text","text":" about the browser associated with this ability.\\n\\n**Please note** that since Playwright does not expose information about the operating system\\nthe tests are running on, **Serenity/JS assumes that the tests are running locally**\\nand therefore returns the value of Node.js "},{"kind":"code","text":"`process.platform`"},{"kind":"text","text":" for "},{"kind":"code","text":"`platformName`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrowserCapabilities"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","id":4471,"name":"PlaywrightBrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","id":4470,"name":"PlaywrightBrowsingSession.browserCapabilities"}},{"id":4584,"name":"closePagesOtherThan","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":15,"character":4}],"signatures":[{"id":4585,"name":"closePagesOtherThan","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4586,"name":"pageOfInterest","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4648,"name":"PlaywrightPage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4490,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","id":4489,"name":"PlaywrightBrowsingSession.closePagesOtherThan"}},{"id":4587,"name":"currentPage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":27,"character":4}],"signatures":[{"id":4588,"name":"currentPage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" representing the currently active top-level browsing context."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":4648,"name":"PlaywrightPage"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4493,"name":"PlaywrightBrowsingSession.currentPage"}}],"inheritedFrom":{"type":"reference","id":4492,"name":"PlaywrightBrowsingSession.currentPage"}},{"id":4589,"name":"register","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":33,"character":4}],"signatures":[{"id":4590,"name":"register","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Registers specified "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" to be managed by this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"parameters":[{"id":4591,"name":"pages","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":4648,"name":"PlaywrightPage"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":4495,"name":"PlaywrightBrowsingSession.register"}}],"inheritedFrom":{"type":"reference","id":4494,"name":"PlaywrightBrowsingSession.register"}},{"id":4592,"name":"deregister","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":40,"character":4}],"signatures":[{"id":4593,"name":"deregister","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Informs this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" that it should no longer manage "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":"\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"parameters":[{"id":4594,"name":"pageIds","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","id":4498,"name":"PlaywrightBrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","id":4497,"name":"PlaywrightBrowsingSession.deregister"}},{"id":4595,"name":"allPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":45,"character":4}],"signatures":[{"id":4596,"name":"allPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" representing all the available\\ntop-level browsing context, e.g. all the open browser tabs."}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":4648,"name":"PlaywrightPage"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4501,"name":"PlaywrightBrowsingSession.allPages"}}],"inheritedFrom":{"type":"reference","id":4500,"name":"PlaywrightBrowsingSession.allPages"}},{"id":4597,"name":"registeredPageIds","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":49,"character":4}],"signatures":[{"id":4598,"name":"registeredPageIds","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" is aware of."}]},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}},"inheritedFrom":{"type":"reference","id":4503,"name":"PlaywrightBrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","id":4502,"name":"PlaywrightBrowsingSession.registeredPageIds"}},{"id":4599,"name":"changeCurrentPageTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":68,"character":4}],"signatures":[{"id":4600,"name":"changeCurrentPageTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Informs the "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" that the \\"current page\\" has changed to "},{"kind":"code","text":"`page`"},{"kind":"text","text":".\\n\\nPlease note that different Web integration tools have a different definition of what a \\"current page\\" is.\\nFor example, Selenium or WebdriverIO use a single \\"focused\\" window that a developer\\nneeds to explicitly \\"switch to\\" in their tests in order to interact with it.\\nThis is similar to how a regular user would interact with Web pages;\\nswitching from one tab to another, but not interacting with more than one\\nwindow/tab simultaneously.\\n\\nPlaywright and Puppeteer, on the other hand, don\'t have a concept of the \\"current\\" page at all, since they\\nallow the developer to interact with multiple open tabs/windows at the same time.\\n\\nWeb integration-specific implementations of this class should override this method to define\\nhow the concept of the \\"current page\\" should be interpreted by Serenity/JS."}]},"parameters":[{"id":4601,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4648,"name":"PlaywrightPage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4505,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}}],"inheritedFrom":{"type":"reference","id":4504,"name":"PlaywrightBrowsingSession.changeCurrentPageTo"}},{"id":4602,"name":"closeAllPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":72,"character":4}],"signatures":[{"id":4603,"name":"closeAllPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":4508,"name":"PlaywrightBrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","id":4507,"name":"PlaywrightBrowsingSession.closeAllPages"}}],"groups":[{"title":"Methods","children":[4570,4573,4576,4567,4584,4587,4589,4592,4595,4597,4599,4602]},{"title":"Constructors","children":[4559]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts","line":9,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightBrowsingSessionWithPage.ts#L9"}],"extendedTypes":[{"type":"reference","id":4464,"name":"PlaywrightBrowsingSession"}],"permalink":"/api/playwright/class/PlaywrightBrowsingSessionWithPage","previousId":4509,"nextId":4241},{"id":4604,"name":"PlaywrightCookie","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"Cookie"},{"kind":"text","text":"."}]},"children":[{"id":4622,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":14,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightCookie.ts#L14"}],"signatures":[{"id":4623,"name":"new PlaywrightCookie","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":4624,"name":"context","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"BrowserContext","qualifiedName":"BrowserContext","package":"playwright-core"}},{"id":4625,"name":"cookieName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":4604,"name":"PlaywrightCookie"},"overwrites":{"type":"reference","name":"Cookie.constructor"}}],"overwrites":{"type":"reference","name":"Cookie.constructor"}},{"id":4627,"name":"delete","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":22,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightCookie.ts#L22"}],"signatures":[{"id":4628,"name":"delete","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Cookie.delete"}}],"overwrites":{"type":"reference","name":"Cookie.delete"}},{"id":4632,"name":"name","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":99,"character":4}],"signatures":[{"id":4633,"name":"name","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","name":"Cookie.name"}},{"id":4634,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":106,"character":4}],"signatures":[{"id":4635,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Optional"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","name":"Cookie.isPresent"}},{"id":4636,"name":"value","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":110,"character":4}],"signatures":[{"id":4637,"name":"value","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","name":"Cookie.value"}},{"id":4638,"name":"path","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":114,"character":4}],"signatures":[{"id":4639,"name":"path","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","name":"Cookie.path"}},{"id":4640,"name":"domain","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":118,"character":4}],"signatures":[{"id":4641,"name":"domain","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","name":"Cookie.domain"}},{"id":4642,"name":"isHttpOnly","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":125,"character":4}],"signatures":[{"id":4643,"name":"isHttpOnly","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","name":"Cookie.isHttpOnly"}},{"id":4644,"name":"isSecure","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":132,"character":4}],"signatures":[{"id":4645,"name":"isSecure","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","name":"Cookie.isSecure"}},{"id":4646,"name":"expiry","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":139,"character":4}],"signatures":[{"id":4647,"name":"expiry","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Timestamp"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Timestamp"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","name":"Cookie.expiry"}}],"groups":[{"title":"Constructors","children":[4622]},{"title":"Methods","children":[4627,4632,4634,4636,4638,4640,4642,4644,4646]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightCookie.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightCookie.ts#L12"}],"extendedTypes":[{"type":"reference","name":"Cookie"}],"permalink":"/api/playwright/class/PlaywrightCookie","previousId":4464,"nextId":4648},{"id":4648,"name":"PlaywrightPage","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"."}]},"children":[{"id":4649,"name":"current","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":25,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L25"}],"signatures":[{"id":4650,"name":"current","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":4648,"name":"PlaywrightPage"}],"name":"QuestionAdapter"},"overwrites":{"type":"reference","name":"Page.current"}}],"overwrites":{"type":"reference","name":"Page.current"}},{"id":4660,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":29,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L29"}],"signatures":[{"id":4661,"name":"new PlaywrightPage","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":4662,"name":"session","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4464,"name":"PlaywrightBrowsingSession"}},{"id":4663,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Page","qualifiedName":"Page","package":"playwright-core"}},{"id":4664,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4241,"name":"PlaywrightOptions"}},{"id":4665,"name":"pageId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}}],"type":{"type":"reference","id":4648,"name":"PlaywrightPage"},"overwrites":{"type":"reference","name":"Page<playwright.Locator>.constructor"}}],"overwrites":{"type":"reference","name":"Page<playwright.Locator>.constructor"}},{"id":4669,"name":"createPageElement","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":43,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L43"}],"signatures":[{"id":4670,"name":"createPageElement","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4671,"name":"nativeElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"PageElement"},"overwrites":{"type":"reference","name":"Page.createPageElement"}}],"overwrites":{"type":"reference","name":"Page.createPageElement"}},{"id":4672,"name":"locate","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":53,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L53"}],"signatures":[{"id":4673,"name":"locate","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4674,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Selector"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"PageElement"},"overwrites":{"type":"reference","name":"Page.locate"}}],"overwrites":{"type":"reference","name":"Page.locate"}},{"id":4675,"name":"locateAll","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":62,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L62"}],"signatures":[{"id":4676,"name":"locateAll","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4677,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Selector"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"PageElements"},"overwrites":{"type":"reference","name":"Page.locateAll"}}],"overwrites":{"type":"reference","name":"Page.locateAll"}},{"id":4678,"name":"navigateTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":73,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L73"}],"signatures":[{"id":4679,"name":"navigateTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4680,"name":"destination","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.navigateTo"}}],"overwrites":{"type":"reference","name":"Page.navigateTo"}},{"id":4681,"name":"navigateBack","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":78,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L78"}],"signatures":[{"id":4682,"name":"navigateBack","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.navigateBack"}}],"overwrites":{"type":"reference","name":"Page.navigateBack"}},{"id":4683,"name":"navigateForward","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":83,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L83"}],"signatures":[{"id":4684,"name":"navigateForward","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.navigateForward"}}],"overwrites":{"type":"reference","name":"Page.navigateForward"}},{"id":4685,"name":"reload","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":88,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L88"}],"signatures":[{"id":4686,"name":"reload","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.reload"}}],"overwrites":{"type":"reference","name":"Page.reload"}},{"id":4687,"name":"sendKeys","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":93,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L93"}],"signatures":[{"id":4688,"name":"sendKeys","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4689,"name":"keys","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Key"}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.sendKeys"}}],"overwrites":{"type":"reference","name":"Page.sendKeys"}},{"id":4690,"name":"executeScript","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":107,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L107"}],"signatures":[{"id":4691,"name":"executeScript","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":4692,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}},{"id":4693,"name":"InnerArguments","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":4694,"name":"script","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":4695,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":107,"character":80,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L107"}],"signatures":[{"id":4696,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4697,"name":"parameters","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":4693,"name":"InnerArguments"}}],"type":{"type":"reference","id":4692,"name":"Result"}}]}}]}},{"id":4698,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":4693,"name":"InnerArguments"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":4692,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.executeScript"}}],"overwrites":{"type":"reference","name":"Page.executeScript"}},{"id":4699,"name":"executeAsyncScript","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":134,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L134"}],"signatures":[{"id":4700,"name":"executeAsyncScript","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":4701,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}},{"id":4702,"name":"InnerArguments","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":4703,"name":"script","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":4704,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":134,"character":85,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L134"}],"signatures":[{"id":4705,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4706,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"named-tuple-member","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","id":4702,"name":"InnerArguments"}}}},{"type":"named-tuple-member","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":4707,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":134,"character":137,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L134"}],"signatures":[{"id":4708,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4709,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4701,"name":"Result"}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":4710,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":4702,"name":"InnerArguments"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":4701,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","name":"Page.executeAsyncScript"}},{"id":4711,"name":"lastScriptExecutionResult","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":168,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L168"}],"signatures":[{"id":4712,"name":"lastScriptExecutionResult","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":4713,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":4713,"name":"Result"},"overwrites":{"type":"reference","name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","name":"Page.lastScriptExecutionResult"}},{"id":4714,"name":"takeScreenshot","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":176,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L176"}],"signatures":[{"id":4715,"name":"takeScreenshot","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","name":"Page.takeScreenshot"}},{"id":4716,"name":"cookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":182,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L182"}],"signatures":[{"id":4717,"name":"cookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4718,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Cookie"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.cookie"}}],"overwrites":{"type":"reference","name":"Page.cookie"}},{"id":4719,"name":"setCookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":186,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L186"}],"signatures":[{"id":4720,"name":"setCookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4721,"name":"cookieData","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CookieData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.setCookie"}}],"overwrites":{"type":"reference","name":"Page.setCookie"}},{"id":4722,"name":"deleteAllCookies","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":208,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L208"}],"signatures":[{"id":4723,"name":"deleteAllCookies","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","name":"Page.deleteAllCookies"}},{"id":4724,"name":"title","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":212,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L212"}],"signatures":[{"id":4725,"name":"title","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.title"}}],"overwrites":{"type":"reference","name":"Page.title"}},{"id":4726,"name":"name","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":217,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L217"}],"signatures":[{"id":4727,"name":"name","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.name"}}],"overwrites":{"type":"reference","name":"Page.name"}},{"id":4728,"name":"url","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":224,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L224"}],"signatures":[{"id":4729,"name":"url","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"URL","qualifiedName":"URL","package":"@types/node"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.url"}}],"overwrites":{"type":"reference","name":"Page.url"}},{"id":4730,"name":"viewportSize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":229,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L229"}],"signatures":[{"id":4731,"name":"viewportSize","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4732,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4733,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":229,"character":36,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L229"}],"type":{"type":"intrinsic","name":"number"}},{"id":4734,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":229,"character":51,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L229"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4733,4734]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":229,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L229"}]}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.viewportSize"}}],"overwrites":{"type":"reference","name":"Page.viewportSize"}},{"id":4735,"name":"setViewportSize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":233,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L233"}],"signatures":[{"id":4736,"name":"setViewportSize","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4737,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":4738,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4739,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":233,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L233"}],"type":{"type":"intrinsic","name":"number"}},{"id":4740,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":233,"character":49,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L233"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[4739,4740]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":233,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L233"}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","name":"Page.setViewportSize"}},{"id":4741,"name":"close","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":237,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L237"}],"signatures":[{"id":4742,"name":"close","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.close"}}],"overwrites":{"type":"reference","name":"Page.close"}},{"id":4743,"name":"closeOthers","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":243,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L243"}],"signatures":[{"id":4744,"name":"closeOthers","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.closeOthers"}}],"overwrites":{"type":"reference","name":"Page.closeOthers"}},{"id":4745,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":247,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L247"}],"signatures":[{"id":4746,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.isPresent"}}],"overwrites":{"type":"reference","name":"Page.isPresent"}},{"id":4747,"name":"nativePage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":251,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L251"}],"signatures":[{"id":4748,"name":"nativePage","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Page","qualifiedName":"Page","package":"playwright-core"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":4756,"name":"id","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":133,"character":13}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","name":"Page.id"}},{"id":4757,"name":"switchTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":433,"character":4}],"signatures":[{"id":4758,"name":"switchTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switch"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SwitchableOrigin"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","name":"Page.switchTo"}},{"id":4759,"name":"modalDialog","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":445,"character":4}],"signatures":[{"id":4760,"name":"modalDialog","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialogHandler"},{"kind":"text","text":" for the current "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"ModalDialogHandler"},"inheritedFrom":{"type":"reference","name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","name":"Page.modalDialog"}},{"id":4761,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":449,"character":4}],"signatures":[{"id":4762,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Page.toString"}}],"inheritedFrom":{"type":"reference","name":"Page.toString"}}],"groups":[{"title":"Methods","children":[4649,4669,4672,4675,4678,4681,4683,4685,4687,4690,4699,4711,4714,4716,4719,4722,4724,4726,4728,4730,4735,4741,4743,4745,4747,4757,4759,4761]},{"title":"Constructors","children":[4660]},{"title":"Properties","children":[4756]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPage.ts","line":21,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPage.ts#L21"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"playwright.Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"Page"}],"permalink":"/api/playwright/class/PlaywrightPage","previousId":4604,"nextId":4763},{"id":4763,"name":"PlaywrightPageElement","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"."}]},"children":[{"id":4780,"name":"of","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":16,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L16"}],"signatures":[{"id":4781,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4782,"name":"parent","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"PageElement"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"PageElement"},"overwrites":{"type":"reference","name":"PageElement.of"}}],"overwrites":{"type":"reference","name":"PageElement.of"}},{"id":4783,"name":"closestTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L20"}],"signatures":[{"id":4784,"name":"closestTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4785,"name":"child","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"PageElement"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"PageElement"},"overwrites":{"type":"reference","name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","name":"PageElement.closestTo"}},{"id":4786,"name":"enterValue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":24,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L24"}],"signatures":[{"id":4787,"name":"enterValue","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4788,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","name":"PageElement.enterValue"}},{"id":4789,"name":"clearValue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":31,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L31"}],"signatures":[{"id":4790,"name":"clearValue","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","name":"PageElement.clearValue"}},{"id":4791,"name":"click","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":41,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L41"}],"signatures":[{"id":4792,"name":"click","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.click"}}],"overwrites":{"type":"reference","name":"PageElement.click"}},{"id":4793,"name":"doubleClick","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":46,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L46"}],"signatures":[{"id":4794,"name":"doubleClick","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","name":"PageElement.doubleClick"}},{"id":4795,"name":"scrollIntoView","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":51,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L51"}],"signatures":[{"id":4796,"name":"scrollIntoView","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","name":"PageElement.scrollIntoView"}},{"id":4797,"name":"hoverOver","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":56,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L56"}],"signatures":[{"id":4798,"name":"hoverOver","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","name":"PageElement.hoverOver"}},{"id":4799,"name":"rightClick","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":61,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L61"}],"signatures":[{"id":4800,"name":"rightClick","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","name":"PageElement.rightClick"}},{"id":4801,"name":"selectOptions","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":66,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L66"}],"signatures":[{"id":4802,"name":"selectOptions","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4803,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"SelectOption"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","name":"PageElement.selectOptions"}},{"id":4804,"name":"selectedOptions","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":79,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L79"}],"signatures":[{"id":4805,"name":"selectedOptions","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"SelectOption"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","name":"PageElement.selectedOptions"}},{"id":4806,"name":"attribute","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":101,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L101"}],"signatures":[{"id":4807,"name":"attribute","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4808,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.attribute"}}],"overwrites":{"type":"reference","name":"PageElement.attribute"}},{"id":4809,"name":"text","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":106,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L106"}],"signatures":[{"id":4810,"name":"text","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.text"}}],"overwrites":{"type":"reference","name":"PageElement.text"}},{"id":4811,"name":"value","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":111,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L111"}],"signatures":[{"id":4812,"name":"value","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.value"}}],"overwrites":{"type":"reference","name":"PageElement.value"}},{"id":4813,"name":"switchTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":116,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L116"}],"signatures":[{"id":4814,"name":"switchTo","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SwitchableOrigin"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","name":"PageElement.switchTo"}},{"id":4815,"name":"isActive","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":151,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L151"}],"signatures":[{"id":4816,"name":"isActive","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isActive"}}],"overwrites":{"type":"reference","name":"PageElement.isActive"}},{"id":4817,"name":"isClickable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":162,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L162"}],"signatures":[{"id":4818,"name":"isClickable","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","name":"PageElement.isClickable"}},{"id":4819,"name":"isEnabled","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":173,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L173"}],"signatures":[{"id":4820,"name":"isEnabled","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","name":"PageElement.isEnabled"}},{"id":4821,"name":"isSelected","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":182,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L182"}],"signatures":[{"id":4822,"name":"isSelected","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","name":"PageElement.isSelected"}},{"id":4823,"name":"isVisible","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":200,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L200"}],"signatures":[{"id":4824,"name":"isVisible","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","name":"PageElement.isVisible"}},{"id":4825,"name":"locator","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":19,"character":13}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"any"}],"name":"Locator"},"inheritedFrom":{"type":"reference","name":"PageElement.locator"}},{"id":4777,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":23,"character":4}],"signatures":[{"id":4778,"name":"new PlaywrightPageElement","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":4779,"name":"locator","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"any"}],"name":"Locator"}}],"type":{"type":"reference","id":4763,"name":"PlaywrightPageElement"},"inheritedFrom":{"type":"reference","name":"PageElement<playwright.Locator>.constructor"}}],"inheritedFrom":{"type":"reference","name":"PageElement<playwright.Locator>.constructor"}},{"id":4826,"name":"nativeElement","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":84,"character":4}],"signatures":[{"id":4827,"name":"nativeElement","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","name":"PageElement.nativeElement"}},{"id":4828,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":85,"character":4}],"signatures":[{"id":4829,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","name":"PageElement.toString"}},{"id":4830,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":138,"character":4}],"signatures":[{"id":4831,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Promise"},{"kind":"text","text":" that resolves to "},{"kind":"code","text":"`true`"},{"kind":"text","text":" when the element\\nis present in the [Document Object Model (DOM)](https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model),\\n"},{"kind":"code","text":"`false`"},{"kind":"text","text":" otherwise."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"PageElement.isPresent"}}],"inheritedFrom":{"type":"reference","name":"PageElement.isPresent"}}],"groups":[{"title":"Methods","children":[4780,4783,4786,4789,4791,4793,4795,4797,4799,4801,4804,4806,4809,4811,4813,4815,4817,4819,4821,4823,4826,4828,4830]},{"title":"Properties","children":[4825]},{"title":"Constructors","children":[4777]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/PlaywrightPageElement.ts","line":15,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/PlaywrightPageElement.ts#L15"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"playwright.Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"PageElement"}],"permalink":"/api/playwright/class/PlaywrightPageElement","previousId":4648,"nextId":4345},{"id":4345,"name":"PlaywrightLocator","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"Locator"},{"kind":"text","text":"."}]},"children":[{"id":4346,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":18,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts#L18"}],"signatures":[{"id":4347,"name":"new PlaywrightLocator","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":4348,"name":"parent","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"RootLocator"}},{"id":4349,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Selector"}}],"type":{"type":"reference","id":4345,"name":"PlaywrightLocator"},"overwrites":{"type":"reference","name":"Locator<playwright.Locator, string>.constructor"}}],"overwrites":{"type":"reference","name":"Locator<playwright.Locator, string>.constructor"}},{"id":4352,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":54,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts#L54"}],"signatures":[{"id":4353,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Locator.isPresent"}}],"overwrites":{"type":"reference","name":"Locator.isPresent"}},{"id":4354,"name":"nativeElement","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":76,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts#L76"}],"signatures":[{"id":4355,"name":"nativeElement","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Locator.nativeElement"}}],"overwrites":{"type":"reference","name":"Locator.nativeElement"}},{"id":4356,"name":"allNativeElements","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":82,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts#L82"}],"signatures":[{"id":4357,"name":"allNativeElements","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Locator.allNativeElements"}}],"overwrites":{"type":"reference","name":"Locator.allNativeElements"}},{"id":4358,"name":"of","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":92,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts#L92"}],"signatures":[{"id":4359,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4360,"name":"parent","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4439,"name":"PlaywrightRootLocator"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator"},"overwrites":{"type":"reference","name":"Locator.of"}}],"overwrites":{"type":"reference","name":"Locator.of"}},{"id":4361,"name":"closestTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":96,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts#L96"}],"signatures":[{"id":4362,"name":"closestTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4363,"name":"child","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4345,"name":"PlaywrightLocator"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator"},"overwrites":{"type":"reference","name":"Locator.closestTo"}}],"overwrites":{"type":"reference","name":"Locator.closestTo"}},{"id":4364,"name":"locate","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":100,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts#L100"}],"signatures":[{"id":4365,"name":"locate","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4366,"name":"child","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4345,"name":"PlaywrightLocator"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator"},"overwrites":{"type":"reference","name":"Locator.locate"}}],"overwrites":{"type":"reference","name":"Locator.locate"}},{"id":4367,"name":"element","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":104,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts#L104"}],"signatures":[{"id":4368,"name":"element","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"PageElement"},"overwrites":{"type":"reference","name":"Locator.element"}}],"overwrites":{"type":"reference","name":"Locator.element"}},{"id":4369,"name":"allElements","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":108,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts#L108"}],"signatures":[{"id":4370,"name":"allElements","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"PageElement"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Locator.allElements"}}],"overwrites":{"type":"reference","name":"Locator.allElements"}},{"id":4372,"name":"selector","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.d.ts","line":20,"character":13}],"type":{"type":"reference","name":"Selector"},"inheritedFrom":{"type":"reference","name":"Locator.selector"}},{"id":4373,"name":"switchToFrame","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.d.ts","line":24,"character":4}],"signatures":[{"id":4374,"name":"switchToFrame","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4375,"name":"element","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Locator.switchToFrame"}}],"inheritedFrom":{"type":"reference","name":"Locator.switchToFrame"}},{"id":4376,"name":"switchToParentFrame","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.d.ts","line":25,"character":4}],"signatures":[{"id":4377,"name":"switchToParentFrame","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Locator.switchToParentFrame"}}],"inheritedFrom":{"type":"reference","name":"Locator.switchToParentFrame"}},{"id":4378,"name":"switchToMainFrame","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.d.ts","line":26,"character":4}],"signatures":[{"id":4379,"name":"switchToMainFrame","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Locator.switchToMainFrame"}}],"inheritedFrom":{"type":"reference","name":"Locator.switchToMainFrame"}},{"id":4383,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.d.ts","line":43,"character":4}],"signatures":[{"id":4384,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Locator.toString"}}],"inheritedFrom":{"type":"reference","name":"Locator.toString"}},{"id":4385,"name":"[custom]","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.d.ts","line":47,"character":4}],"type":{"type":"reflection","declaration":{"id":4386,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Locator.d.ts","line":47,"character":27}],"signatures":[{"id":4387,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Custom [Node.js inspection method](https://nodejs.org/api/util.html#utilinspectcustom)."}]},"parameters":[{"id":4388,"name":"depth","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4389,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"InspectOptionsStylized","qualifiedName":"InspectOptionsStylized","package":"@types/node"}},{"id":4390,"name":"inspect","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"query","queryType":{"type":"reference","name":"inspect","qualifiedName":"inspect","package":"@types/node"}}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","name":"Locator.__@custom@914"}}],"groups":[{"title":"Constructors","children":[4346]},{"title":"Methods","children":[4352,4354,4356,4358,4361,4364,4367,4369,4373,4376,4378,4383]},{"title":"Properties","children":[4372,4385]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts","line":16,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightLocator.ts#L16"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"playwright.Locator","qualifiedName":"Locator","package":"playwright-core"},{"type":"intrinsic","name":"string"}],"name":"Locator"}],"permalink":"/api/playwright/class/PlaywrightLocator","previousId":4763,"nextId":4439},{"id":4439,"name":"PlaywrightRootLocator","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Playwright-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"RootLocator"},{"kind":"text","text":"."}]},"children":[{"id":4440,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":16,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts#L16"}],"signatures":[{"id":4441,"name":"new PlaywrightRootLocator","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":4442,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Page","qualifiedName":"Page","package":"playwright-core"}}],"type":{"type":"reference","id":4439,"name":"PlaywrightRootLocator"},"overwrites":{"type":"reference","name":"RootLocator<playwright.Locator>.constructor"}}],"overwrites":{"type":"reference","name":"RootLocator<playwright.Locator>.constructor"}},{"id":4445,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":21,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts#L21"}],"signatures":[{"id":4446,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"RootLocator.isPresent"}}],"overwrites":{"type":"reference","name":"RootLocator.isPresent"}},{"id":4447,"name":"nativeElement","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":25,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts#L25"}],"signatures":[{"id":4448,"name":"nativeElement","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"},{"type":"literal","value":"locator"}],"name":"Pick","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys","qualifiedName":"Pick","package":"typescript"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"RootLocator.nativeElement"}}],"overwrites":{"type":"reference","name":"RootLocator.nativeElement"}},{"id":4449,"name":"switchToFrame","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":29,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts#L29"}],"signatures":[{"id":4450,"name":"switchToFrame","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4451,"name":"frame","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Locator","qualifiedName":"Locator","package":"playwright-core"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"RootLocator.switchToFrame"}}],"overwrites":{"type":"reference","name":"RootLocator.switchToFrame"}},{"id":4452,"name":"switchToParentFrame","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":34,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts#L34"}],"signatures":[{"id":4453,"name":"switchToParentFrame","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"RootLocator.switchToParentFrame"}}],"overwrites":{"type":"reference","name":"RootLocator.switchToParentFrame"}},{"id":4454,"name":"switchToMainFrame","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":38,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts#L38"}],"signatures":[{"id":4455,"name":"switchToMainFrame","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"RootLocator.switchToMainFrame"}}],"overwrites":{"type":"reference","name":"RootLocator.switchToMainFrame"}},{"id":4456,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.d.ts","line":22,"character":4}],"signatures":[{"id":4457,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"RootLocator.toString"}}],"inheritedFrom":{"type":"reference","name":"RootLocator.toString"}},{"id":4458,"name":"[custom]","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.d.ts","line":23,"character":4}],"type":{"type":"reflection","declaration":{"id":4459,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/RootLocator.d.ts","line":23,"character":27}],"signatures":[{"id":4460,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4461,"name":"depth","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"number"}},{"id":4462,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"InspectOptionsStylized","qualifiedName":"InspectOptionsStylized","package":"@types/node"}},{"id":4463,"name":"inspect","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"query","queryType":{"type":"reference","name":"inspect","qualifiedName":"inspect","package":"@types/node"}}}],"type":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","name":"RootLocator.__@custom@914"}}],"groups":[{"title":"Constructors","children":[4440]},{"title":"Methods","children":[4445,4447,4449,4452,4454,4456]},{"title":"Properties","children":[4458]}],"sources":[{"fileName":"packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/screenplay/models/locators/PlaywrightRootLocator.ts#L12"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"playwright.Locator","qualifiedName":"Locator","package":"playwright-core"}],"name":"RootLocator"}],"permalink":"/api/playwright/class/PlaywrightRootLocator","previousId":4345}],"groups":[{"title":"Abilities","children":[4319]},{"title":"Classes","children":[4509,4558]},{"title":"Configuration","children":[4241]},{"title":"Models","children":[4464,4604,4648,4763,4345,4439]}],"sources":[{"fileName":"packages/playwright/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright/src/index.ts#L1"}],"permalink":"/api/playwright"},"urlSlug":"playwright"}],"packageName":"@serenity-js/playwright","packageVersion":"3.10.2"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":17,"name":"@serenity-js/protractor/adapter","kind":2,"kindString":"Module","flags":{},"children":[{"id":3335,"name":"Config","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Protractor configuration object with an additional\\nsection to configure the Serenity/JS framework.\\n\\n## Learn more\\n- [Protractor config](https://github.com/angular/protractor/blob/master/lib/config.ts)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"configure"}]},"children":[{"id":3339,"name":"seleniumServerJar","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The location of the standalone Selenium Server jar file, relative\\nto the location of webdriver-manager. If no other method of starting\\nSelenium Server is found, this will default to\\nnode_modules/protractor/node_modules/webdriver-manager/selenium/<jar file>"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":11,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.seleniumServerJar"}},{"id":3340,"name":"seleniumServerStartTimeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The timeout milliseconds waiting for a local standalone Selenium Server to start.\\n\\ndefault: 30000ms"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":17,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.seleniumServerStartTimeout"}},{"id":3341,"name":"localSeleniumStandaloneOpts","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Can be an object which will be passed to the SeleniumServer class as args.\\nSee a full list of options at\\nhttps://github.com/SeleniumHQ/selenium/blob/master/javascript/node/selenium-webdriver/remote/index.js\\nIf you specify "},{"kind":"code","text":"`args`"},{"kind":"text","text":" or "},{"kind":"code","text":"`port`"},{"kind":"text","text":" in this object, it will overwrite the\\nvalues set via the deprecated config values "},{"kind":"code","text":"`seleniumPort`"},{"kind":"text","text":" and\\n"},{"kind":"code","text":"`seleniumArgs`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":26,"character":4}],"type":{"type":"reflection","declaration":{"id":3342,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3343,"name":"port","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The port to start the Selenium Server on, or null if the server should\\nfind its own unused port."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":31,"character":8}],"type":{"type":"intrinsic","name":"any"}},{"id":3344,"name":"args","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional command line options to pass to selenium. For example,\\nif you need to change the browser timeout, use\\nseleniumArgs: [\'-browserTimeout=60\']"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":37,"character":8}],"type":{"type":"intrinsic","name":"any"}},{"id":3345,"name":"jvmArgs","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional command line jvm options to pass to selenium. For example,\\nif you need to change the browser driver, use\\njvmArgs: [\'-Dwebdriver.ie.driver=IEDriverServer_Win32_2.53.1.exe\']"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":43,"character":8}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[3343,3344,3345]}],"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":26,"character":34}]}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.localSeleniumStandaloneOpts"}},{"id":3346,"name":"chromeDriver","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"ChromeDriver location is used to help find the chromedriver binary. This will be passed to the\\nSelenium jar as the system property webdriver.chrome.driver. If the value is not set when\\nlaunching locally, it will use the default values downloaded from webdriver-manager.\\n\\nexample:\\nchromeDriver: \'./node_modules/webdriver-manager/selenium/chromedriver_2.20\'"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":53,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.chromeDriver"}},{"id":3347,"name":"geckoDriver","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"geckoDriver location is used to help find the gecko binary. This will be passed to the Selenium\\njar as the system property webdriver.gecko.driver. If the value is not set when launching\\nlocally, it will use the default values downloaded from webdriver-manager."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":59,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.geckoDriver"}},{"id":3348,"name":"seleniumAddress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The address of a running Selenium Server. If specified, Protractor will\\nconnect to an already running instance of Selenium. This usually looks like\\nseleniumAddress: \'http://localhost:4444/wd/hub\'"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":65,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.seleniumAddress"}},{"id":3349,"name":"seleniumSessionId","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The selenium session id allows Protractor to attach to an existing selenium\\nbrowser session. The selenium session is maintained after the test has\\ncompleted. Ignored if seleniumAddress is null."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":71,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.seleniumSessionId"}},{"id":3350,"name":"sauceProxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The address of a proxy server to use for communicating to Sauce Labs REST APIs via the\\nsaucelabs node module. For example, the Sauce Labs Proxy can be setup with: sauceProxy:\\n\'http://localhost:3128\'"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":77,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.sauceProxy"}},{"id":3351,"name":"webDriverProxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The proxy address that WebDriver (e.g. Selenium commands) traffic will go through\\nwhich is tied to the browser session."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":82,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.webDriverProxy"}},{"id":3352,"name":"useBlockingProxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, connect to webdriver through a proxy that manages client-side\\nsynchronization. Blocking Proxy is an experimental feature and may change\\nwithout notice."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":88,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.useBlockingProxy"}},{"id":3353,"name":"blockingProxyUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If specified, Protractor will connect to the Blocking Proxy at the given\\nurl instead of starting it\'s own."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":93,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.blockingProxyUrl"}},{"id":3354,"name":"sauceUser","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the sauceUser and sauceKey are specified, seleniumServerJar will be\\nignored. The tests will be run remotely using Sauce Labs."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":98,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.sauceUser"}},{"id":3355,"name":"sauceKey","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If the sauceUser and sauceKey are specified, seleniumServerJar will be\\nignored. The tests will be run remotely using Sauce Labs."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":103,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.sauceKey"}},{"id":3356,"name":"sauceRegion","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you run your tests on SauceLabs you can specify the region you want to run your tests\\nin via the "},{"kind":"code","text":"`sauceRegion`"},{"kind":"text","text":" property. Available short handles for regions are:\\nus: us-west-1 (default)\\neu: eu-central-1"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":110,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.sauceRegion"}},{"id":3357,"name":"sauceAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceAgent if you need custom HTTP agent to connect to saucelabs.com APIs.\\nThis is needed if your computer is behind a corporate proxy.\\n\\nTo match sauce agent implementation, use\\n[HttpProxyAgent](https://github.com/TooTallNate/node-http-proxy-agent)\\nto generate the agent or use sauceProxy as an alternative. If a\\nsauceProxy is provided, the sauceAgent will be overridden."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":120,"character":4}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.sauceAgent"}},{"id":3358,"name":"sauceBuild","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceBuild if you want to group test capabilites by a build ID"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":124,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.sauceBuild"}},{"id":3359,"name":"sauceSeleniumUseHttp","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, Protractor will use http:// protocol instead of https:// to\\nconnect to Sauce Labs defined by sauceSeleniumAddress.\\n\\ndefault: false"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":131,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.sauceSeleniumUseHttp"}},{"id":3360,"name":"sauceSeleniumAddress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use sauceSeleniumAddress if you need to customize the URL Protractor\\nuses to connect to sauce labs (for example, if you are tunneling selenium\\ntraffic through a sauce connect tunnel). Default is\\nondemand.saucelabs.com:443/wd/hub"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":138,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.sauceSeleniumAddress"}},{"id":3361,"name":"testobjectUser","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If testobjectUser and testobjectKey are specified, kobitonUser, kobitonKey, browserstackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":144,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.testobjectUser"}},{"id":3362,"name":"testobjectKey","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If testobjectUser and testobjectKey are specified, kobitonUser, kobitonKey, browserStackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":150,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.testobjectKey"}},{"id":3363,"name":"kobitonUser","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If kobitonUser and kobitonKey are specified, testobjectUser, testojbectKey, browserstackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":156,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.kobitonUser"}},{"id":3364,"name":"kobitonKey","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If kobitonUser and kobitonKey are specified, testobjectUser, testojbectKey, browserStackUser,\\nbrowserStackKey and seleniumServerJar will be ignored. The tests will be run remotely using\\nTestObject."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":162,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.kobitonKey"}},{"id":3365,"name":"browserstackUser","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If browserstackUser and browserstackKey are specified, seleniumServerJar\\nwill be ignored. The tests will be run remotely using BrowserStack."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":167,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.browserstackUser"}},{"id":3366,"name":"browserstackKey","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If browserstackUser and browserstackKey are specified, seleniumServerJar\\nwill be ignored. The tests will be run remotely using BrowserStack."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":172,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.browserstackKey"}},{"id":3367,"name":"browserstackProxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Proxy server to be used for connecting to BrowserStack APIs\\ne.g. \\"http://proxy.example.com:1234\\".\\nThis should be used when you are behind a proxy server."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":178,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.browserstackProxy"}},{"id":3368,"name":"directConnect","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, Protractor will connect directly to the browser Drivers\\nat the locations specified by chromeDriver and firefoxPath. Only Chrome\\nand Firefox are supported for direct connect.\\n\\ndefault: false"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":186,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.directConnect"}},{"id":3369,"name":"firefoxPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to the firefox application binary. If null, will attempt to find\\nfirefox in the default locations."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":191,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.firefoxPath"}},{"id":3370,"name":"seleniumWebDriver","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":192,"character":4}],"type":{"type":"reference","name":"WebDriver","qualifiedName":"WebDriver","package":"@types/selenium-webdriver"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.seleniumWebDriver"}},{"id":3371,"name":"noGlobals","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Use default globals: \'protractor\', \'browser\', \'$\', \'$$\', \'element\', \'by\'.\\nThese also exist as properties of the protractor namespace:\\n\'protractor.browser\', \'protractor.$\', \'protractor.$$\',\\n\'protractor.element\', \'protractor.by\', and \'protractor.By\'.\\n\\nWhen no globals is set to true, the only available global variable will be\\n\'protractor\'."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":202,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.noGlobals"}},{"id":3372,"name":"specs","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Required. Spec patterns are relative to the location of this config.\\n\\nExample:\\nspecs: [\\n  \'spec/*_spec.js\'\\n]"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":211,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.specs"}},{"id":3373,"name":"exclude","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Patterns to exclude specs."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":215,"character":4}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.exclude"}},{"id":3374,"name":"suites","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Alternatively, suites may be used. When run without a command line\\nparameter, all suites will run. If run with --suite=smoke or\\n--suite=smoke,full only the patterns matched by the specified suites will\\nrun.\\n\\nExample:\\nsuites: {\\n  smoke: \'spec/smoketests/*.js\',\\n  full: \'spec/*.js\'\\n}"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":228,"character":4}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.suites"}},{"id":3375,"name":"suite","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you would like protractor to use a specific suite by default instead of\\nall suites, you can put that in the config file as well."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":233,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.suite"}},{"id":3376,"name":"capabilities","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor can launch your tests on one or more browsers. If you are\\ntesting on a single browser, use the capabilities option. If you are\\ntesting on multiple browsers, use the multiCapabilities array.\\n\\nFor a list of available capabilities, see\\nhttps://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities\\nIn addition, you may specify count, shardTestFiles, and maxInstances.\\n\\nExample:\\ncapabilities: {\\n  browserName: \'chrome\',\\n  name: \'Unnamed Job\',\\n  logName: \'Chrome - English\',\\n  count: 1,\\n  shardTestFiles: false,\\n  maxInstances: 1,\\n  specs: [\'spec/chromeOnlySpec.js\'],\\n  exclude: [\'spec/doNotRunInChromeSpec.js\'],\\n  seleniumAddress: \'http://localhost:4444/wd/hub\'\\n}"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":256,"character":4}],"type":{"type":"reflection","declaration":{"id":3377,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3378,"name":"browserName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":258,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":3379,"name":"name","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Name of the process executing this capability.  Not used directly by\\nprotractor or the browser, but instead pass directly to third parties\\nlike BrowserStack and SauceLabs as the name of the job running this\\ntest"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":265,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":3380,"name":"logName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"User defined name for the capability that will display in the results\\nlog. Defaults to the browser name"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":270,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":3381,"name":"count","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Number of times to run this set of capabilities (in parallel, unless\\nlimited by maxSessions). Default is 1."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":275,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":3382,"name":"shardTestFiles","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If this is set to be true, specs will be sharded by file (i.e. all\\nfiles to be run by this set of capabilities will run in parallel).\\nDefault is false."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":281,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3383,"name":"maxInstances","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of browser instances that can run in parallel for this\\nset of capabilities. This is only needed if shardTestFiles is true.\\nDefault is 1."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":287,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":3384,"name":"specs","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Additional spec files to be run on this capability only."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":291,"character":8}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":3385,"name":"exclude","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Spec files to be excluded on this capability only."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":295,"character":8}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":3386,"name":"seleniumAddress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Optional: override global seleniumAddress on this capability only."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":299,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3378,3379,3380,3381,3382,3383,3384,3385,3386]}],"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":256,"character":19}],"indexSignature":{"id":3387,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":3388,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.capabilities"}},{"id":3389,"name":"multiCapabilities","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you would like to run more than one instance of WebDriver on the same\\ntests, use multiCapabilities, which takes an array of capabilities.\\nIf this is specified, capabilities will be ignored."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":306,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.multiCapabilities"}},{"id":3390,"name":"getMultiCapabilities","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you need to resolve multiCapabilities asynchronously (i.e. wait for\\nserver/proxy, set firefox profile, etc), you can specify a function here\\nwhich will return either "},{"kind":"code","text":"`multiCapabilities`"},{"kind":"text","text":" or a promise to\\n"},{"kind":"code","text":"`multiCapabilities`"},{"kind":"text","text":".\\n\\nIf this returns a promise, it is resolved immediately after\\n"},{"kind":"code","text":"`beforeLaunch`"},{"kind":"text","text":" is run, and before any driver is set up. If this is\\nspecified, both capabilities and multiCapabilities will be ignored."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":317,"character":4}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.getMultiCapabilities"}},{"id":3391,"name":"maxSessions","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total browser sessions to run. Tests are queued in\\nsequence if number of browser sessions is limited by this parameter.\\nUse a number less than 1 to denote unlimited. Default is unlimited."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":323,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.maxSessions"}},{"id":3392,"name":"verboseMultiSessions","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not to buffer output when running tests on multiple browsers\\nin parallel. By default, when running multiple browser sessions, the\\nresults are buffered and not logged until the test run finishes. If true,\\nwhen running multiple sessions in parallel results will be logged when\\neach test finishes."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":331,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.verboseMultiSessions"}},{"id":3393,"name":"baseUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A base URL for your application under test. Calls to protractor.get()\\nwith relative paths will be resolved against this URL (via url.resolve)"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":336,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.baseUrl"}},{"id":3394,"name":"rootElement","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A CSS Selector for a DOM element within your Angular application.\\nProtractor will attempt to automatically find your application, but it is\\nnecessary to set rootElement in certain cases.\\n\\nIn Angular 1, Protractor will use the element your app bootstrapped to by\\ndefault.  If that doesn\'t work, it will then search for hooks in "},{"kind":"code","text":"`body`"},{"kind":"text","text":" or\\n"},{"kind":"code","text":"`ng-app`"},{"kind":"text","text":" elements (details here: https://git.io/v1b2r).\\n\\nIn later versions of Angular, Protractor will try to hook into all angular\\napps on the page. Use rootElement to limit the scope of which apps\\nProtractor waits for and searches within."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":350,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.rootElement"}},{"id":3395,"name":"allScriptsTimeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The timeout in milliseconds for each script run on the browser. This\\nshould be longer than the maximum time your application needs to\\nstabilize between tasks."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":356,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.allScriptsTimeout"}},{"id":3396,"name":"getPageTimeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"How long to wait for a page to load."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":360,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.getPageTimeout"}},{"id":3397,"name":"beforeLaunch","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":372,"character":4}],"type":{"type":"reflection","declaration":{"id":3398,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":372,"character":19}],"signatures":[{"id":3399,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once configs are read but before any\\nenvironment setup. This will only run once, and before onPrepare.\\n\\nYou can specify a file containing code to run by setting beforeLaunch to\\nthe filename string.\\n\\nAt this point, global variable \'protractor\' object will NOT be set up,\\nand globals from the test framework will NOT be available. The main\\npurpose of this function should be to bring up test dependencies."}]},"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.beforeLaunch"}},{"id":3400,"name":"onPrepare","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":401,"character":4}],"type":{"type":"reflection","declaration":{"id":3401,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":401,"character":16}],"signatures":[{"id":3402,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once protractor is ready and available, and\\nbefore the specs are executed. If multiple capabilities are being run,\\nthis will run once per capability.\\n\\nYou can specify a file containing code to run by setting onPrepare to\\nthe filename string. onPrepare can optionally return a promise, which\\nProtractor will wait for before continuing execution. This can be used if\\nthe preparation involves any asynchronous calls, e.g. interacting with\\nthe browser. Otherwise Protractor cannot guarantee order of execution\\nand may start the tests before preparation finishes.\\n\\nAt this point, global variable \'protractor\' object will be set up, and\\nglobals from the test framework will be available. For example, if you\\nare using Jasmine, you can add a reporter with:\\n\\n   jasmine.getEnv().addReporter(new jasmine.JUnitXmlReporter(\\n     \'outputdir/\', true, true));\\n\\nIf you need access back to the current configuration object,\\nuse a pattern like the following:\\n\\n   return browser.getProcessedConfig().then(function(config) {\\n     // config.capabilities is the CURRENT capability being run, if\\n     // you are using multiCapabilities.\\n     console.log(\'Executing capability\', config.capabilities);\\n   });"}]},"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.onPrepare"}},{"id":3403,"name":"onComplete","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":410,"character":4}],"type":{"type":"reflection","declaration":{"id":3404,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":410,"character":17}],"signatures":[{"id":3405,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once tests are finished. onComplete can\\noptionally return a promise, which Protractor will wait for before\\nshutting down webdriver.\\n\\nAt this point, tests will be done but global objects will still be\\navailable."}]},"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.onComplete"}},{"id":3406,"name":"onCleanUp","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":416,"character":4}],"type":{"type":"reflection","declaration":{"id":3407,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":416,"character":16}],"signatures":[{"id":3408,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once the tests have finished running and\\nthe WebDriver instance has been shut down. It is passed the exit code\\n(0 if the tests passed). This is called once per capability."}]},"parameters":[{"id":3409,"name":"exitCode","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.onCleanUp"}},{"id":3410,"name":"afterLaunch","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":424,"character":4}],"type":{"type":"reflection","declaration":{"id":3411,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":424,"character":18}],"signatures":[{"id":3412,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"A callback function called once all tests have finished running and\\nthe WebDriver instance has been shut down. It is passed the exit code\\n(0 if the tests passed). afterLaunch must return a promise if you want\\nasynchronous code to be executed before the program exits.\\nThis is called only once before the program exits (after onCleanUp)."}]},"parameters":[{"id":3413,"name":"exitCode","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"intrinsic","name":"number"}}],"type":{"type":"intrinsic","name":"void"}}]}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.afterLaunch"}},{"id":3414,"name":"params","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The params object will be passed directly to the Protractor instance,\\nand can be accessed from your test as browser.params. It is an arbitrary\\nobject and can contain anything you may need in your test.\\nThis can be changed via the command line as:\\n  --params.login.user \\"Joe\\"\\n\\nExample:\\nparams: {\\n  login: {\\n    user: \'Jane\',\\n    password: \'1234\'\\n  }\\n}"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":440,"character":4}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.params"}},{"id":3415,"name":"resultJsonOutputFile","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, protractor will save the test output in json format at this path.\\nThe path is relative to the location of this config."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":445,"character":4}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.resultJsonOutputFile"}},{"id":3416,"name":"restartBrowserBetweenTests","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, protractor will restart the browser between each test. Default\\nvalue is false.\\n\\nCAUTION: This will cause your tests to slow down drastically."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":452,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.restartBrowserBetweenTests"}},{"id":3417,"name":"untrackOutstandingTimeouts","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor will track outstanding $timeouts by default, and report them\\nin the error message if Protractor fails to synchronize with Angular in\\ntime. In order to do this Protractor needs to decorate $timeout.\\n\\nCAUTION: If your app decorates $timeout, you must turn on this flag. This\\nis false by default."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":461,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.untrackOutstandingTimeouts"}},{"id":3418,"name":"ignoreUncaughtExceptions","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, Protractor will ignore uncaught exceptions instead of exiting\\nwithout an error code. The exceptions will still be logged as warnings."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":466,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.ignoreUncaughtExceptions"}},{"id":3419,"name":"webDriverLogDir","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, will create a log file in the given directory with a readable log of\\nthe webdriver commands it executes.\\n\\nThis is an experimental feature. Enabling this will also turn on Blocking Proxy\\nsynchronization, which is also experimental."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":474,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.webDriverLogDir"}},{"id":3420,"name":"highlightDelay","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, Protractor will pause the specified amount of time (in milliseconds)\\nbefore interactions with browser elements (ie, sending keys, clicking). It will\\nalso highlight the element it\'s about to interact with.\\n\\nThis is an experimental feature. Enabling this will also turn on Blocking Proxy\\nsynchronization, which is also experimental."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":483,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.highlightDelay"}},{"id":3421,"name":"logLevel","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor log level\\n\\ndefault: INFO"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":489,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"ERROR"},{"type":"literal","value":"WARN"},{"type":"literal","value":"INFO"},{"type":"literal","value":"DEBUG"}]},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.logLevel"}},{"id":3422,"name":"framework","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Test framework to use. This may be one of: jasmine, mocha or custom.\\nDefault value is \'jasmine\'\\n\\nWhen the framework is set to \\"custom\\" you\'ll need to additionally\\nset frameworkPath with the path relative to the config file or absolute:\\n\\n  framework: \'custom\',\\n  frameworkPath: \'./frameworks/my_custom_jasmine.js\',\\n\\nSee github.com/angular/protractor/blob/master/lib/frameworks/README.md\\nto comply with the interface details of your custom implementation.\\n\\nJasmine is fully supported as test and assertion frameworks.\\nMocha has limited support. You will need to include your\\nown assertion framework (such as Chai) if working with Mocha."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":507,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.framework"}},{"id":3423,"name":"jasmineNodeOpts","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options to be passed to jasmine.\\n\\nSee https://github.com/jasmine/jasmine-npm/blob/master/lib/jasmine.js\\nfor the exact options available."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":514,"character":4}],"type":{"type":"reflection","declaration":{"id":3424,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3425,"name":"showColors","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, print colors to the terminal."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":519,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3426,"name":"defaultTimeoutInterval","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default time to wait in ms before a test fails."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":523,"character":8}],"type":{"type":"intrinsic","name":"number"}},{"id":3427,"name":"print","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":527,"character":8}],"type":{"type":"reflection","declaration":{"id":3428,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":527,"character":16}],"signatures":[{"id":3429,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Function called to print jasmine results."}]},"type":{"type":"intrinsic","name":"void"}}]}}},{"id":3430,"name":"grep","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If set, only execute specs whose names match the pattern, which is\\ninternally compiled to a RegExp."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":532,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":3431,"name":"invertGrep","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts \'grep\' matches"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":536,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3432,"name":"random","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If true, run specs in semi-random order"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":540,"character":8}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3433,"name":"seed","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set the randomization seed if randomization is turned on"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":544,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3425,3426,3427,3430,3431,3432,3433]}],"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":514,"character":22}],"indexSignature":{"id":3434,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":3435,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.jasmineNodeOpts"}},{"id":3436,"name":"mochaOpts","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Options to be passed to Mocha.\\n\\nSee the full list at http://mochajs.org/"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":551,"character":4}],"type":{"type":"reflection","declaration":{"id":3437,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3438,"name":"ui","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":553,"character":8}],"type":{"type":"intrinsic","name":"string"}},{"id":3439,"name":"reporter","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":554,"character":8}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3438,3439]}],"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":551,"character":16}],"indexSignature":{"id":3440,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":3441,"name":"key","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"any"}}}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.mochaOpts"}},{"id":3442,"name":"plugins","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"See docs/plugins.md"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":559,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"PluginConfig","qualifiedName":"PluginConfig","package":"protractor"}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.plugins"}},{"id":3443,"name":"skipSourceMapSupport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Turns off source map support.  Stops protractor from registering global\\nvariable "},{"kind":"code","text":"`source-map-support`"},{"kind":"text","text":".  Defaults to "},{"kind":"code","text":"`false`"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":564,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.skipSourceMapSupport"}},{"id":3444,"name":"disableEnvironmentOverrides","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Turns off WebDriver\'s environment variables overrides to ignore any\\nenvironment variable and to only use the configuration in this file.\\nDefaults to "},{"kind":"code","text":"`false`"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":570,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.disableEnvironmentOverrides"}},{"id":3445,"name":"ng12Hybrid","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Tells Protractor to interpret any angular apps it comes across as hybrid\\nangular1/angular2 apps (i.e. apps using ngUpgrade)\\nDefaults to "},{"kind":"code","text":"`false`"}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":578,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.ng12Hybrid"}},{"id":3446,"name":"disableChecks","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protractor will exit with an error if it sees any command line flags it doesn\'t\\nrecognize. Set disableChecks true to disable this check."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":583,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.disableChecks"}},{"id":3447,"name":"SELENIUM_PROMISE_MANAGER","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable/disable the WebDriver Control Flow.\\n\\nWebDriverJS (and by extention, Protractor) uses a Control Flow to manage the order in which\\ncommands are executed and promises are resolved (see docs/control-flow.md for details).\\nHowever, as syntax like "},{"kind":"code","text":"`async`"},{"kind":"text","text":"/"},{"kind":"code","text":"`await`"},{"kind":"text","text":" are being introduced, WebDriverJS has decided to\\ndeprecate the control flow, and have users manage the asynchronous activity themselves\\n(details here: https://github.com/SeleniumHQ/selenium/issues/2969).\\n\\nAt the moment, the WebDriver Control Flow is still enabled by default. You can disable it by\\nsetting the environment variable "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" to "},{"kind":"code","text":"`0`"},{"kind":"text","text":".  In a webdriver release in\\nQ4 2017, the Control Flow will be disabled by default, but you will be able to re-enable it by\\nsetting "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" to "},{"kind":"code","text":"`1`"},{"kind":"text","text":".  At a later point, the control flow will be removed\\nfor good.\\n\\nIf you don\'t like managing environment variables, you can set this option in your config file,\\nand Protractor will handle enabling/disabling the control flow for you.  Setting this option\\nis higher priority than the "},{"kind":"code","text":"`SELENIUM_PROMISE_MANAGER`"},{"kind":"text","text":" environment variable."}]},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":605,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.SELENIUM_PROMISE_MANAGER"}},{"id":3448,"name":"seleniumArgs","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":606,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.seleniumArgs"}},{"id":3449,"name":"jvmArgs","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":607,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.jvmArgs"}},{"id":3450,"name":"configDir","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":608,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.configDir"}},{"id":3451,"name":"troubleshoot","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":609,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.troubleshoot"}},{"id":3452,"name":"seleniumPort","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":610,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.seleniumPort"}},{"id":3453,"name":"mockSelenium","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":611,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.mockSelenium"}},{"id":3454,"name":"v8Debug","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":612,"character":4}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.v8Debug"}},{"id":3455,"name":"nodeDebug","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":613,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.nodeDebug"}},{"id":3456,"name":"debuggerServerPort","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":614,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.debuggerServerPort"}},{"id":3457,"name":"frameworkPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":615,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.frameworkPath"}},{"id":3458,"name":"elementExplorer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":616,"character":4}],"type":{"type":"intrinsic","name":"any"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.elementExplorer"}},{"id":3459,"name":"debug","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":617,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.debug"}},{"id":3460,"name":"unknownFlags_","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/protractor/node_modules/protractor/built/config.d.ts","line":618,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"ProtractorConfig.unknownFlags_"}},{"id":3336,"name":"serenity","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"See "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig"}]},"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/Config.ts#L19"}],"type":{"type":"intersection","types":[{"type":"reference","name":"SerenityConfig"},{"type":"reflection","declaration":{"id":3337,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3338,"name":"runner","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":33,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/Config.ts#L19"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3338]}],"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":19,"character":31,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/Config.ts#L19"}]}}]}}],"groups":[{"title":"Properties","children":[3339,3340,3341,3346,3347,3348,3349,3350,3351,3352,3353,3354,3355,3356,3357,3358,3359,3360,3361,3362,3363,3364,3365,3366,3367,3368,3369,3370,3371,3372,3373,3374,3375,3376,3389,3390,3391,3392,3393,3394,3395,3396,3397,3400,3403,3406,3410,3414,3415,3416,3417,3418,3419,3420,3421,3422,3423,3436,3442,3443,3444,3445,3446,3447,3448,3449,3450,3451,3452,3453,3454,3455,3456,3457,3458,3459,3460,3336]}],"sources":[{"fileName":"packages/protractor/src/adapter/Config.ts","line":15,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/Config.ts#L15"}],"extendedTypes":[{"type":"reference","name":"Config","qualifiedName":"Config","package":"protractor"}],"permalink":"/api/protractor-adapter/interface/Config","nextId":3475},{"id":3475,"name":"run","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/protractor/src/adapter/run.ts","line":18,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/run.ts#L18"}],"signatures":[{"id":3476,"name":"run","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"## Learn more\\n- [Protractor framework adapters](https://github.com/angular/protractor/blob/master/lib/frameworks/README.md#framework-adapters-for-protractor)"}]},"parameters":[{"id":3477,"name":"runner","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Runner","qualifiedName":"Runner","package":"protractor"}},{"id":3478,"name":"specs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ProtractorReport"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}],"permalink":"/api/protractor-adapter/function/run","previousId":3335,"nextId":3479},{"id":3479,"name":"CucumberAdapterConfig","kind":256,"kindString":"Interface","flags":{},"children":[{"id":3480,"name":"useStandardOutput","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Instruct Serenity/JS Cucumber Adapter to take over the "},{"kind":"code","text":"`stdout`"},{"kind":"text","text":" output\\nof native Cucumber reporters to prevent them from clobbering the log."}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":10,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts#L10"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":3481,"name":"uniqueFormatterOutputs","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Add "},{"kind":"code","text":"`runnerId`"},{"kind":"text","text":" to names of output files produced by native Cucumber.js formatters"}]},"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":15,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts#L15"}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[3480,3481]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts","line":4,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/CucumberAdapterConfig.ts#L4"}],"permalink":"/api/protractor-adapter/interface/CucumberAdapterConfig","previousId":3475,"nextId":3482},{"id":3482,"name":"TestRunnerDetector","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Detects the "},{"kind":"inline-tag","tag":"@apilink","text":"TestRunnerAdapter"},{"kind":"text","text":" to use,\\nbased on Protractor configuration."}]},"children":[{"id":3483,"name":"cucumberOpts","kind":1024,"kindString":"Property","flags":{"isStatic":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":14,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerDetector.ts#L14"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'cucumberOpts\'"},{"id":3484,"name":"jasmineNodeOpts","kind":1024,"kindString":"Property","flags":{"isStatic":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":15,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerDetector.ts#L15"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'jasmineNodeOpts\'"},{"id":3485,"name":"mochaOpts","kind":1024,"kindString":"Property","flags":{"isStatic":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":16,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerDetector.ts#L16"}],"type":{"type":"intrinsic","name":"string"},"defaultValue":"\'mochaOpts\'"},{"id":3486,"name":"protractorCliOptions","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":18,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerDetector.ts#L18"}],"signatures":[{"id":3487,"name":"protractorCliOptions","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]},{"id":3488,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":26,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerDetector.ts#L26"}],"signatures":[{"id":3489,"name":"new TestRunnerDetector","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3490,"name":"testRunnerLoader","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3512,"name":"TestRunnerLoader"}}],"type":{"type":"reference","id":3482,"name":"TestRunnerDetector"}}]},{"id":3492,"name":"runnerFor","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":29,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerDetector.ts#L29"}],"signatures":[{"id":3493,"name":"runnerFor","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3494,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Config","qualifiedName":"Config","package":"protractor"}}],"type":{"type":"reference","name":"TestRunnerAdapter"}}]}],"groups":[{"title":"Properties","children":[3483,3484,3485]},{"title":"Methods","children":[3486,3492]},{"title":"Constructors","children":[3488]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerDetector.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerDetector.ts#L12"}],"permalink":"/api/protractor-adapter/class/TestRunnerDetector","previousId":3479,"nextId":3512},{"id":3512,"name":"TestRunnerLoader","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Loads a "},{"kind":"inline-tag","tag":"@apilink","text":"TestRunnerAdapter"},{"kind":"text","text":" needed to invoke\\nthe chosen test runner programmatically."}]},"children":[{"id":3513,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":32,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerLoader.ts#L32"}],"signatures":[{"id":3514,"name":"new TestRunnerLoader","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3515,"name":"cwd","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Current working directory; used to resolve glob paths to files for Cucumber.js to "},{"kind":"code","text":"`require`"},{"kind":"text","text":",\\n and instructing Serenity/JS where to look for this module\'s optional\\n dependencies, like ["},{"kind":"code","text":"`@serenity-js/cucumber`"},{"kind":"text","text":"](/api/cucumber),\\n ["},{"kind":"code","text":"`@serenity-js/mocha`"},{"kind":"text","text":"](/api/mocha),\\n ["},{"kind":"code","text":"`@serenity-js/jasmine`"},{"kind":"text","text":"](/api/jasmine), etc."}]},"type":{"type":"reference","name":"Path"}},{"id":3516,"name":"runnerId","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Unique identifier used to differentiate output files produced by native Cucumber.js formatters.\\n For example, "},{"kind":"code","text":"`process.pid`"}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}],"type":{"type":"reference","id":3512,"name":"TestRunnerLoader"}}]},{"id":3521,"name":"forJasmine","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":43,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerLoader.ts#L43"}],"signatures":[{"id":3522,"name":"forJasmine","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"See "},{"kind":"inline-tag","tag":"@apilink","text":"JasmineConfig"}]},"parameters":[{"id":3523,"name":"jasmineNodeOpts","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","name":"TestRunnerAdapter"}}]},{"id":3524,"name":"forMocha","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":53,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerLoader.ts#L53"}],"signatures":[{"id":3525,"name":"forMocha","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"See "},{"kind":"inline-tag","tag":"@apilink","text":"MochaConfig"}]},"parameters":[{"id":3526,"name":"mochaOpts","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","name":"TestRunnerAdapter"}}]},{"id":3527,"name":"forCucumber","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":64,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerLoader.ts#L64"}],"signatures":[{"id":3528,"name":"forCucumber","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"See "},{"kind":"inline-tag","tag":"@apilink","text":"CucumberConfig"}]},"parameters":[{"id":3529,"name":"cucumberOpts","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"object"}},{"id":3530,"name":"adapterConfig","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3479,"name":"CucumberAdapterConfig"}}],"type":{"type":"reference","name":"TestRunnerAdapter"}}]}],"groups":[{"title":"Constructors","children":[3513]},{"title":"Methods","children":[3521,3524,3527]}],"sources":[{"fileName":"packages/protractor/src/adapter/runner/TestRunnerLoader.ts","line":14,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/runner/TestRunnerLoader.ts#L14"}],"permalink":"/api/protractor-adapter/class/TestRunnerLoader","previousId":3482}],"groups":[{"title":"Configuration","children":[3335]},{"title":"Integration","children":[3475,3479,3482,3512]}],"sources":[{"fileName":"packages/protractor/src/adapter/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/adapter/index.ts#L1"}],"permalink":"/api/protractor-adapter"},"urlSlug":"protractor-adapter"},{"index":true,"label":"index","reflection":{"id":16,"name":"@serenity-js/protractor","kind":2,"kindString":"Module","flags":{},"children":[{"id":3033,"name":"BrowseTheWebWithProtractor","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"This implementation of the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nenables the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to interact with web front-ends using [Protractor](http://www.protractortest.org/#/).\\n\\n## Using Protractor to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor } from \'@serenity-js/protractor\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { protractor } from \'protractor\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\n await actorCalled(\'Wendy\')\\n   .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))\\n   .attemptsTo(\\n     Navigate.to(`https://serenity-js.org`),\\n     Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Protractor website](https://www.protractortest.org/)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"}]},"children":[{"id":3034,"name":"using","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":52,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts#L52"}],"signatures":[{"id":3035,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Ability to interact with web front-ends using\\nprovided protractor browser instance."}]},"parameters":[{"id":3036,"name":"browser","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- [Protractor Browser API docs](http://www.protractortest.org/#/api?view=ProtractorBrowser)"}]},"type":{"type":"reference","name":"ProtractorBrowser","qualifiedName":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","id":3033,"name":"BrowseTheWebWithProtractor"}}]},{"id":3042,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":60,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts#L60"}],"signatures":[{"id":3043,"name":"new BrowseTheWebWithProtractor","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3044,"name":"browser","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"An instance of a protractor browser"}]},"type":{"type":"reference","name":"ProtractorBrowser","qualifiedName":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","id":3033,"name":"BrowseTheWebWithProtractor"},"overwrites":{"type":"reference","name":"BrowseTheWeb<protractor.ElementFinder>.constructor"}}],"overwrites":{"type":"reference","name":"BrowseTheWeb<protractor.ElementFinder>.constructor"}},{"id":3046,"name":"param","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":99,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts#L99"}],"signatures":[{"id":3047,"name":"param","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns Protractor configuration parameter at "},{"kind":"code","text":"`path`"},{"kind":"text","text":".\\n\\n#### Configuring a custom parameter\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  params: {\\n    login: {\\n      username: \'jane@example.org\'\\n      password: process.env.PASSWORD\\n    }\\n  }\\n  // ...\\n}\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving config param by name\\n"},{"kind":"code","text":"```js\\nBrowseTheWebWithProtractor.as(actor).param(\'login\')\\n // returns object with username and password\\n```"},{"kind":"text","text":"\\n\\n#### Retrieving config param by path\\n"},{"kind":"code","text":"```js\\nBrowseTheWeb.as(actor).param(\'login.username\')\\n // returns string \'jane@example.org\'\\n\\n@param path\\n Either a name or a dot-delimited path to the param.\\n\\n@throws {@apilink ConfigurationError}\\n Throws a `ConfigurationError` if the parameter is `undefined`"}]},"typeParameter":[{"id":3048,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"parameters":[{"id":3049,"name":"path","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":3048,"name":"T"}}]},{"id":3051,"name":"currentPage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.d.ts","line":85,"character":4}],"signatures":[{"id":3052,"name":"currentPage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" representing the currently active browser tab."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"}],"name":"Page"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.currentPage"}},{"id":3053,"name":"allPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.d.ts","line":90,"character":4}],"signatures":[{"id":3054,"name":"allPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" representing all the browser tabs\\navailable in the current "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"}],"name":"Page"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.allPages"}},{"id":3055,"name":"browserCapabilities","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.d.ts","line":94,"character":4}],"signatures":[{"id":3056,"name":"browserCapabilities","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"inline-tag","tag":"@apilink","text":"BrowserCapabilities|basic meta-data"},{"kind":"text","text":" about the browser associated with this ability."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrowserCapabilities"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Methods","children":[3034,3046,3051,3053,3055]},{"title":"Constructors","children":[3042]}],"sources":[{"fileName":"packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts","line":41,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/abilities/BrowseTheWebWithProtractor.ts#L41"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"protractor.ElementFinder","qualifiedName":"ElementFinder","package":"protractor"}],"name":"BrowseTheWeb"}],"permalink":"/api/protractor/class/BrowseTheWebWithProtractor","nextId":3057},{"id":3057,"name":"UseAngular","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to enable or disable automated synchronisation between Protractor and Angular 1.x application.\\n\\nUseful when a test scenario needs to interact with both Angular-based\\nand non-Angular web apps, e.g. use an external sign-in form.\\n\\n**Please note** if your tests interact with a non-Angular app you can disable\\nsynchronisation altogether in ["},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"](https://github.com/angular/protractor/blob/master/lib/config.ts).\\n\\n**Warning:** this interaction is Protractor-specific, so using it in your tests\\nwill reduce their portability across test integration tools.\\n\\n## Disabling synchronisation temporarily\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { UseAngular } from \'@serenity-js/protractor\'\\nimport { Navigate } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\'\\n\\nawait actorCalled(\'Angie\')\\n  .whoCan(BrowseTheWeb.using(protractor.browser))\\n  .attemptsTo(\\n    UseAngular.disableSynchronisation(),\\n    Navigate.to(\'https://mycompany.com/login\'),\\n    // navigate to a non-Angular app, perform some activities...\\n\\n    UseAngular.disableSynchronisation(),\\n    Navigate.to(\'https://myapp.com\'),\\n    // navigate to an Angular app, perform some more activities...\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Disabling synchronisation with Angular in "},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```js\\nexports.config = {\\n  onPrepare: function () {\\n    return browser.waitForAngularEnabled(false);\\n  },\\n  // ... other config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [Cross-application testing with Serenity/JS](https://janmolak.com/cross-application-testing-with-serenity-js-4103a272b75b)"}]},"children":[{"id":3058,"name":"disableSynchronisation","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":62,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/interactions/UseAngular.ts#L62"}],"signatures":[{"id":3059,"name":"disableSynchronisation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":" that instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to disable\\nsynchronisation between Protractor and an Angular 1.x app."}]},"type":{"type":"reference","name":"Interaction"}}]},{"id":3060,"name":"enableSynchronisation","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":74,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/interactions/UseAngular.ts#L74"}],"signatures":[{"id":3061,"name":"enableSynchronisation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction"},{"kind":"text","text":" that instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to enable\\nsynchronisation between Protractor and an Angular 1.x app."}]},"type":{"type":"reference","name":"Interaction"}}]},{"id":3062,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":3063,"name":"new UseAngular","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":3057,"name":"UseAngular"}}]}],"groups":[{"title":"Methods","children":[3058,3060]},{"title":"Constructors","children":[3062]}],"sources":[{"fileName":"packages/protractor/src/screenplay/interactions/UseAngular.ts","line":56,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/interactions/UseAngular.ts#L56"}],"permalink":"/api/protractor/class/UseAngular","previousId":3033,"nextId":3064},{"id":3064,"name":"ProtractorBrowsingSession","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"children":[{"id":3065,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":18,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts#L18"}],"signatures":[{"id":3066,"name":"new ProtractorBrowsingSession","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3067,"name":"browser","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ProtractorBrowser","qualifiedName":"ProtractorBrowser","package":"protractor"}}],"type":{"type":"reference","id":3064,"name":"ProtractorBrowsingSession"},"overwrites":{"type":"reference","name":"BrowsingSession<ProtractorPage>.constructor"}}],"overwrites":{"type":"reference","name":"BrowsingSession<ProtractorPage>.constructor"}},{"id":3069,"name":"allPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":22,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts#L22"}],"signatures":[{"id":3070,"name":"allPages","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":3141,"name":"ProtractorPage"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","name":"BrowsingSession.allPages"}},{"id":3071,"name":"changeCurrentPageTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":54,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts#L54"}],"signatures":[{"id":3072,"name":"changeCurrentPageTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3073,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3141,"name":"ProtractorPage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","name":"BrowsingSession.changeCurrentPageTo"}},{"id":3076,"name":"currentPage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":93,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts#L93"}],"signatures":[{"id":3077,"name":"currentPage","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":3141,"name":"ProtractorPage"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","name":"BrowsingSession.currentPage"}},{"id":3080,"name":"browserCapabilities","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":134,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts#L134"}],"signatures":[{"id":3081,"name":"browserCapabilities","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrowserCapabilities"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","name":"BrowsingSession.browserCapabilities"}},{"id":3084,"name":"closePagesOtherThan","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":15,"character":4}],"signatures":[{"id":3085,"name":"closePagesOtherThan","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3086,"name":"pageOfInterest","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3141,"name":"ProtractorPage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.closePagesOtherThan"}},{"id":3087,"name":"register","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":33,"character":4}],"signatures":[{"id":3088,"name":"register","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Registers specified "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" to be managed by this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"parameters":[{"id":3089,"name":"pages","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":3141,"name":"ProtractorPage"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.register"}},{"id":3090,"name":"deregister","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":40,"character":4}],"signatures":[{"id":3091,"name":"deregister","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Informs this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" that it should no longer manage "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":"\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"parameters":[{"id":3092,"name":"pageIds","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.deregister"}},{"id":3093,"name":"registeredPageIds","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":49,"character":4}],"signatures":[{"id":3094,"name":"registeredPageIds","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" is aware of."}]},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}},"inheritedFrom":{"type":"reference","name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.registeredPageIds"}},{"id":3095,"name":"closeAllPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":72,"character":4}],"signatures":[{"id":3096,"name":"closeAllPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.closeAllPages"}}],"groups":[{"title":"Constructors","children":[3065]},{"title":"Methods","children":[3069,3071,3076,3080,3084,3087,3090,3093,3095]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts","line":16,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorBrowsingSession.ts#L16"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":3141,"name":"ProtractorPage"}],"name":"BrowsingSession"}],"permalink":"/api/protractor/class/ProtractorBrowsingSession","previousId":3057,"nextId":3097},{"id":3097,"name":"ProtractorCookie","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"Cookie"},{"kind":"text","text":"."}]},"children":[{"id":3115,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":16,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorCookie.ts#L16"}],"signatures":[{"id":3116,"name":"new ProtractorCookie","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3117,"name":"browser","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ProtractorBrowser","qualifiedName":"ProtractorBrowser","package":"protractor"}},{"id":3118,"name":"cookieName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":3097,"name":"ProtractorCookie"},"overwrites":{"type":"reference","name":"Cookie.constructor"}}],"overwrites":{"type":"reference","name":"Cookie.constructor"}},{"id":3120,"name":"delete","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":21,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorCookie.ts#L21"}],"signatures":[{"id":3121,"name":"delete","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Cookie.delete"}}],"overwrites":{"type":"reference","name":"Cookie.delete"}},{"id":3125,"name":"name","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":99,"character":4}],"signatures":[{"id":3126,"name":"name","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","name":"Cookie.name"}},{"id":3127,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":106,"character":4}],"signatures":[{"id":3128,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Optional"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","name":"Cookie.isPresent"}},{"id":3129,"name":"value","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":110,"character":4}],"signatures":[{"id":3130,"name":"value","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","name":"Cookie.value"}},{"id":3131,"name":"path","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":114,"character":4}],"signatures":[{"id":3132,"name":"path","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","name":"Cookie.path"}},{"id":3133,"name":"domain","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":118,"character":4}],"signatures":[{"id":3134,"name":"domain","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","name":"Cookie.domain"}},{"id":3135,"name":"isHttpOnly","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":125,"character":4}],"signatures":[{"id":3136,"name":"isHttpOnly","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","name":"Cookie.isHttpOnly"}},{"id":3137,"name":"isSecure","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":132,"character":4}],"signatures":[{"id":3138,"name":"isSecure","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","name":"Cookie.isSecure"}},{"id":3139,"name":"expiry","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":139,"character":4}],"signatures":[{"id":3140,"name":"expiry","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Timestamp"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Timestamp"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","name":"Cookie.expiry"}}],"groups":[{"title":"Constructors","children":[3115]},{"title":"Methods","children":[3120,3125,3127,3129,3131,3133,3135,3137,3139]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorCookie.ts","line":14,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorCookie.ts#L14"}],"extendedTypes":[{"type":"reference","name":"Cookie"}],"permalink":"/api/protractor/class/ProtractorCookie","previousId":3064,"nextId":3141},{"id":3141,"name":"ProtractorPage","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"."}]},"children":[{"id":3153,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":28,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L28"}],"signatures":[{"id":3154,"name":"new ProtractorPage","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3155,"name":"session","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3064,"name":"ProtractorBrowsingSession"}},{"id":3156,"name":"browser","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ProtractorBrowser","qualifiedName":"ProtractorBrowser","package":"protractor"}},{"id":3157,"name":"modalDialogHandler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ModalDialogHandler"}},{"id":3158,"name":"errorHandler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ProtractorErrorHandler"}},{"id":3159,"name":"pageId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}}],"type":{"type":"reference","id":3141,"name":"ProtractorPage"},"overwrites":{"type":"reference","name":"Page<ElementFinder>.constructor"}}],"overwrites":{"type":"reference","name":"Page<ElementFinder>.constructor"}},{"id":3163,"name":"createPageElement","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":43,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L43"}],"signatures":[{"id":3164,"name":"createPageElement","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3165,"name":"nativeElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"}],"name":"PageElement"},"overwrites":{"type":"reference","name":"Page.createPageElement"}}],"overwrites":{"type":"reference","name":"Page.createPageElement"}},{"id":3166,"name":"locate","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":54,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L54"}],"signatures":[{"id":3167,"name":"locate","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3168,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Selector"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"}],"name":"PageElement"},"overwrites":{"type":"reference","name":"Page.locate"}}],"overwrites":{"type":"reference","name":"Page.locate"}},{"id":3169,"name":"locateAll","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":60,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L60"}],"signatures":[{"id":3170,"name":"locateAll","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3171,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Selector"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"}],"name":"PageElements"},"overwrites":{"type":"reference","name":"Page.locateAll"}}],"overwrites":{"type":"reference","name":"Page.locateAll"}},{"id":3172,"name":"enableAngularSynchronisation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":92,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L92"}],"signatures":[{"id":3173,"name":"enableAngularSynchronisation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"If set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", Protractor will not wait for Angular 1.x "},{"kind":"code","text":"`$http`"},{"kind":"text","text":" and "},{"kind":"code","text":"`$timeout`"},{"kind":"text","text":"\\ntasks to complete before interacting with the browser.\\n\\nThis can be useful when:\\n- you need to switch to a non-Angular app during your tests, e.g. to sign in using an SSO gateway\\n- your app continuously polls an API with "},{"kind":"code","text":"`$timeout`"},{"kind":"text","text":"\\n\\nIf you\'re not testing an Angular app, it\'s better to disable Angular synchronisation completely\\nin protractor configuration:\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n    onPrepare: function () {\\n        return browser.waitForAngularEnabled(false)\\n    },\\n\\n    // ... other config\\n}\\n```"}]},"parameters":[{"id":3174,"name":"enable","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"boolean"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":3175,"name":"navigateTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":98,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L98"}],"signatures":[{"id":3176,"name":"navigateTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3177,"name":"destination","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.navigateTo"}}],"overwrites":{"type":"reference","name":"Page.navigateTo"}},{"id":3178,"name":"navigateBack","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":104,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L104"}],"signatures":[{"id":3179,"name":"navigateBack","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.navigateBack"}}],"overwrites":{"type":"reference","name":"Page.navigateBack"}},{"id":3180,"name":"navigateForward","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":110,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L110"}],"signatures":[{"id":3181,"name":"navigateForward","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.navigateForward"}}],"overwrites":{"type":"reference","name":"Page.navigateForward"}},{"id":3182,"name":"reload","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":116,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L116"}],"signatures":[{"id":3183,"name":"reload","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.reload"}}],"overwrites":{"type":"reference","name":"Page.reload"}},{"id":3184,"name":"sendKeys","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":122,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L122"}],"signatures":[{"id":3185,"name":"sendKeys","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3186,"name":"keys","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Key"}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.sendKeys"}}],"overwrites":{"type":"reference","name":"Page.sendKeys"}},{"id":3187,"name":"executeScript","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":154,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L154"}],"signatures":[{"id":3188,"name":"executeScript","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":3189,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}},{"id":3190,"name":"InnerArguments","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":3191,"name":"script","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":3192,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":155,"character":26,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L155"}],"signatures":[{"id":3193,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3194,"name":"parameters","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":3190,"name":"InnerArguments"}}],"type":{"type":"reference","id":3189,"name":"Result"}}]}}]}},{"id":3195,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":3190,"name":"InnerArguments"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":3189,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.executeScript"}}],"overwrites":{"type":"reference","name":"Page.executeScript"}},{"id":3196,"name":"executeAsyncScript","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":176,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L176"}],"signatures":[{"id":3197,"name":"executeAsyncScript","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":3198,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}},{"id":3199,"name":"Parameters","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":3200,"name":"script","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":3201,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":177,"character":26,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L177"}],"signatures":[{"id":3202,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3203,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"named-tuple-member","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","id":3199,"name":"Parameters"}}}},{"type":"named-tuple-member","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":3204,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":177,"character":74,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L177"}],"signatures":[{"id":3205,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3206,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3198,"name":"Result"}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":3207,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":3199,"name":"Parameters"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":3198,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","name":"Page.executeAsyncScript"}},{"id":3208,"name":"lastScriptExecutionResult","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":198,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L198"}],"signatures":[{"id":3209,"name":"lastScriptExecutionResult","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"any"},"overwrites":{"type":"reference","name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","name":"Page.lastScriptExecutionResult"}},{"id":3210,"name":"takeScreenshot","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":210,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L210"}],"signatures":[{"id":3211,"name":"takeScreenshot","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","name":"Page.takeScreenshot"}},{"id":3212,"name":"cookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":229,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L229"}],"signatures":[{"id":3213,"name":"cookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3214,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Cookie"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.cookie"}}],"overwrites":{"type":"reference","name":"Page.cookie"}},{"id":3215,"name":"setCookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":233,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L233"}],"signatures":[{"id":3216,"name":"setCookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3217,"name":"cookieData","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CookieData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.setCookie"}}],"overwrites":{"type":"reference","name":"Page.setCookie"}},{"id":3218,"name":"deleteAllCookies","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":249,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L249"}],"signatures":[{"id":3219,"name":"deleteAllCookies","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","name":"Page.deleteAllCookies"}},{"id":3220,"name":"title","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":255,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L255"}],"signatures":[{"id":3221,"name":"title","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.title"}}],"overwrites":{"type":"reference","name":"Page.title"}},{"id":3222,"name":"name","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":261,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L261"}],"signatures":[{"id":3223,"name":"name","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.name"}}],"overwrites":{"type":"reference","name":"Page.name"}},{"id":3224,"name":"url","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":267,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L267"}],"signatures":[{"id":3225,"name":"url","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"URL","qualifiedName":"URL","package":"@types/node"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.url"}}],"overwrites":{"type":"reference","name":"Page.url"}},{"id":3226,"name":"viewportSize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":273,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L273"}],"signatures":[{"id":3227,"name":"viewportSize","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3228,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3229,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":273,"character":36,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L273"}],"type":{"type":"intrinsic","name":"number"}},{"id":3230,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":273,"character":51,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L273"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[3229,3230]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":273,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L273"}]}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.viewportSize"}}],"overwrites":{"type":"reference","name":"Page.viewportSize"}},{"id":3231,"name":"setViewportSize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":291,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L291"}],"signatures":[{"id":3232,"name":"setViewportSize","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3233,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":3234,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3235,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":291,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L291"}],"type":{"type":"intrinsic","name":"number"}},{"id":3236,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":291,"character":49,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L291"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[3235,3236]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":291,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L291"}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","name":"Page.setViewportSize"}},{"id":3237,"name":"close","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":307,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L307"}],"signatures":[{"id":3238,"name":"close","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.close"}}],"overwrites":{"type":"reference","name":"Page.close"}},{"id":3239,"name":"closeOthers","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":319,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L319"}],"signatures":[{"id":3240,"name":"closeOthers","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.closeOthers"}}],"overwrites":{"type":"reference","name":"Page.closeOthers"}},{"id":3241,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":323,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L323"}],"signatures":[{"id":3242,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.isPresent"}}],"overwrites":{"type":"reference","name":"Page.isPresent"}},{"id":3252,"name":"id","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":133,"character":13}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","name":"Page.id"}},{"id":3253,"name":"switchTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":433,"character":4}],"signatures":[{"id":3254,"name":"switchTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switch"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SwitchableOrigin"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","name":"Page.switchTo"}},{"id":3255,"name":"modalDialog","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":445,"character":4}],"signatures":[{"id":3256,"name":"modalDialog","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialogHandler"},{"kind":"text","text":" for the current "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"ModalDialogHandler"},"inheritedFrom":{"type":"reference","name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","name":"Page.modalDialog"}},{"id":3257,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":449,"character":4}],"signatures":[{"id":3258,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Page.toString"}}],"inheritedFrom":{"type":"reference","name":"Page.toString"}}],"groups":[{"title":"Constructors","children":[3153]},{"title":"Methods","children":[3163,3166,3169,3172,3175,3178,3180,3182,3184,3187,3196,3208,3210,3212,3215,3218,3220,3222,3224,3226,3231,3237,3239,3241,3253,3255,3257]},{"title":"Properties","children":[3252]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPage.ts","line":21,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPage.ts#L21"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"}],"name":"Page"}],"permalink":"/api/protractor/class/ProtractorPage","previousId":3097,"nextId":3259},{"id":3259,"name":"ProtractorPageElement","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Protractor-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"."}]},"children":[{"id":3276,"name":"of","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":19,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L19"}],"signatures":[{"id":3277,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3278,"name":"parent","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3259,"name":"ProtractorPageElement"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"}],"name":"PageElement"},"overwrites":{"type":"reference","name":"PageElement.of"}}],"overwrites":{"type":"reference","name":"PageElement.of"}},{"id":3279,"name":"closestTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":23,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L23"}],"signatures":[{"id":3280,"name":"closestTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3281,"name":"child","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3259,"name":"ProtractorPageElement"}}],"type":{"type":"reference","id":3259,"name":"ProtractorPageElement"},"overwrites":{"type":"reference","name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","name":"PageElement.closestTo"}},{"id":3282,"name":"clearValue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":27,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L27"}],"signatures":[{"id":3283,"name":"clearValue","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","name":"PageElement.clearValue"}},{"id":3284,"name":"click","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":68,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L68"}],"signatures":[{"id":3285,"name":"click","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.click"}}],"overwrites":{"type":"reference","name":"PageElement.click"}},{"id":3286,"name":"doubleClick","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":74,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L74"}],"signatures":[{"id":3287,"name":"doubleClick","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","name":"PageElement.doubleClick"}},{"id":3288,"name":"enterValue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":85,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L85"}],"signatures":[{"id":3289,"name":"enterValue","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3290,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","name":"PageElement.enterValue"}},{"id":3291,"name":"scrollIntoView","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":93,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L93"}],"signatures":[{"id":3292,"name":"scrollIntoView","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","name":"PageElement.scrollIntoView"}},{"id":3293,"name":"hoverOver","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":102,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L102"}],"signatures":[{"id":3294,"name":"hoverOver","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","name":"PageElement.hoverOver"}},{"id":3295,"name":"rightClick","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":113,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L113"}],"signatures":[{"id":3296,"name":"rightClick","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","name":"PageElement.rightClick"}},{"id":3297,"name":"selectOptions","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":124,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L124"}],"signatures":[{"id":3298,"name":"selectOptions","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3299,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"SelectOption"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","name":"PageElement.selectOptions"}},{"id":3300,"name":"selectedOptions","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":137,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L137"}],"signatures":[{"id":3301,"name":"selectedOptions","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"SelectOption"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","name":"PageElement.selectedOptions"}},{"id":3302,"name":"attribute","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":167,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L167"}],"signatures":[{"id":3303,"name":"attribute","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3304,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.attribute"}}],"overwrites":{"type":"reference","name":"PageElement.attribute"}},{"id":3305,"name":"text","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":173,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L173"}],"signatures":[{"id":3306,"name":"text","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.text"}}],"overwrites":{"type":"reference","name":"PageElement.text"}},{"id":3307,"name":"value","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":179,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L179"}],"signatures":[{"id":3308,"name":"value","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.value"}}],"overwrites":{"type":"reference","name":"PageElement.value"}},{"id":3309,"name":"switchTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":192,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L192"}],"signatures":[{"id":3310,"name":"switchTo","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SwitchableOrigin"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","name":"PageElement.switchTo"}},{"id":3311,"name":"isActive","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":228,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L228"}],"signatures":[{"id":3312,"name":"isActive","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isActive"}}],"overwrites":{"type":"reference","name":"PageElement.isActive"}},{"id":3313,"name":"isClickable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":237,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L237"}],"signatures":[{"id":3314,"name":"isClickable","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","name":"PageElement.isClickable"}},{"id":3315,"name":"isEnabled","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":241,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L241"}],"signatures":[{"id":3316,"name":"isEnabled","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","name":"PageElement.isEnabled"}},{"id":3317,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":247,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L247"}],"signatures":[{"id":3318,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","name":"PageElement.isPresent"}},{"id":3319,"name":"isSelected","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":253,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L253"}],"signatures":[{"id":3320,"name":"isSelected","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","name":"PageElement.isSelected"}},{"id":3321,"name":"isVisible","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":259,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L259"}],"signatures":[{"id":3322,"name":"isVisible","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","name":"PageElement.isVisible"}},{"id":3323,"name":"locator","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":19,"character":13}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"},{"type":"intrinsic","name":"any"}],"name":"Locator"},"inheritedFrom":{"type":"reference","name":"PageElement.locator"}},{"id":3273,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":23,"character":4}],"signatures":[{"id":3274,"name":"new ProtractorPageElement","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3275,"name":"locator","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"},{"type":"intrinsic","name":"any"}],"name":"Locator"}}],"type":{"type":"reference","id":3259,"name":"ProtractorPageElement"},"inheritedFrom":{"type":"reference","name":"PageElement<ElementFinder>.constructor"}}],"inheritedFrom":{"type":"reference","name":"PageElement<ElementFinder>.constructor"}},{"id":3324,"name":"nativeElement","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":84,"character":4}],"signatures":[{"id":3325,"name":"nativeElement","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","name":"PageElement.nativeElement"}},{"id":3326,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":85,"character":4}],"signatures":[{"id":3327,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","name":"PageElement.toString"}}],"groups":[{"title":"Methods","children":[3276,3279,3282,3284,3286,3288,3291,3293,3295,3297,3300,3302,3305,3307,3309,3311,3313,3315,3317,3319,3321,3324,3326]},{"title":"Properties","children":[3323]},{"title":"Constructors","children":[3273]}],"sources":[{"fileName":"packages/protractor/src/screenplay/models/ProtractorPageElement.ts","line":17,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/models/ProtractorPageElement.ts#L17"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"ElementFinder","qualifiedName":"ElementFinder","package":"protractor"}],"name":"PageElement"}],"permalink":"/api/protractor/class/ProtractorPageElement","previousId":3141,"nextId":3328},{"id":3328,"name":"ProtractorParam","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a Protractor configuration parameter specified in "},{"kind":"code","text":"`protractor.conf.js`"},{"kind":"text","text":"\\nand identified by name. Protractor configuration parameters can be overridden via the command line.\\n\\n**Warning:** this question is Protractor-specific, so using it in your tests\\nwill reduce their portability across test integration tools.\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nexports.config = {\\n  params: {\\n    login: {\\n      username: \'jane@example.org\'\\n      password: process.env.PASSWORD\\n    }\\n  }\\n  // ...\\n}\\n```"},{"kind":"text","text":"\\n\\n## Overriding configuration parameter using the command line\\n\\n"},{"kind":"code","text":"```shell\\nnpx protractor ./protractor.conf.js --params.login.username=\\"bob@example.org\\"\\n```"},{"kind":"text","text":"\\n\\n## Using as "},{"kind":"code","text":"`QuestionAdapter`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor, ProtractorParam } from \'@serenity-js/protractor\'\\nimport { Enter } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\'\\n\\nawait actorCalled(\'Jane\')\\n  .whoCan( BrowseTheWebWithProtractor.using(protractor.browser))\\n  .attemptsTo(\\n    Enter.theValue(ProtractorParam.called(\'login\').username).into(Form.exampleInput),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Specifying path to param as string\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithProtractor, ProtractorParam } from \'@serenity-js/protractor\'\\nimport { Enter } from \'@serenity-js/web\'\\nimport { protractor } from \'protractor\\n\\nawait actorCalled(\'Jane\')\\n  .whoCan(BrowseTheWebWithProtractor.using(protractor.browser))\\n  .attemptsTo(\\n    Enter.theValue(ProtractorParam.called(\'login.username\')).into(Form.exampleInput),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithProtractor.param"}]},"children":[{"id":3329,"name":"called","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":76,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/questions/ProtractorParam.ts#L76"}],"signatures":[{"id":3330,"name":"called","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Name of the parameter to retrieve. This could also be a dot-delimited path,\\ne.g. "},{"kind":"code","text":"`login.username`"}]},"typeParameter":[{"id":3331,"name":"Return_Type","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":3332,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":3331,"name":"Return_Type"}],"name":"QuestionAdapter"}}]},{"id":3333,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":3334,"name":"new ProtractorParam","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":3328,"name":"ProtractorParam"}}]}],"groups":[{"title":"Methods","children":[3329]},{"title":"Constructors","children":[3333]}],"sources":[{"fileName":"packages/protractor/src/screenplay/questions/ProtractorParam.ts","line":68,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/screenplay/questions/ProtractorParam.ts#L68"}],"permalink":"/api/protractor/class/ProtractorParam","previousId":3259}],"groups":[{"title":"Abilities","children":[3033]},{"title":"Activities","children":[3057]},{"title":"Models","children":[3064,3097,3141,3259]},{"title":"Questions","children":[3328]}],"sources":[{"fileName":"packages/protractor/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/protractor/src/index.ts#L1"}],"permalink":"/api/protractor"},"urlSlug":"protractor"}],"packageName":"@serenity-js/protractor","packageVersion":"3.10.2"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":35,"name":"@serenity-js/webdriverio/adapter","kind":2,"kindString":"Module","flags":{},"children":[{"id":3911,"name":"WebdriverIOFrameworkAdapterFactory","kind":128,"kindString":"Class","flags":{},"children":[{"id":3912,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":14,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts#L14"}],"signatures":[{"id":3913,"name":"new WebdriverIOFrameworkAdapterFactory","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3914,"name":"serenity","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Serenity"}},{"id":3915,"name":"loader","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ModuleLoader"}},{"id":3916,"name":"cwd","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Path"}}],"type":{"type":"reference","id":3911,"name":"WebdriverIOFrameworkAdapterFactory"}}]},{"id":3920,"name":"init","kind":2048,"kindString":"Method","flags":{"isPublic":true},"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":21,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts#L21"}],"signatures":[{"id":3921,"name":"init","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3922,"name":"cid","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":3923,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3531,"name":"WebdriverIOConfig"}},{"id":3924,"name":"specs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":3925,"name":"capabilities","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"RemoteCapability","qualifiedName":"RemoteCapability","package":"@wdio/types"}},{"id":3926,"name":"reporter","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"EventEmitter","qualifiedName":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream"},{"type":"reference","name":"InitialisesReporters"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"WebdriverIOFrameworkAdapter"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Constructors","children":[3912]},{"title":"Methods","children":[3920]}],"sources":[{"fileName":"packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts","line":13,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/adapter/WebdriverIOFrameworkAdapterFactory.ts#L13"}],"permalink":"/api/webdriverio-adapter/class/WebdriverIOFrameworkAdapterFactory"}],"groups":[{"title":"Test Runner Adapter","children":[3911]}],"sources":[{"fileName":"packages/webdriverio/src/adapter/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/adapter/index.ts#L1"}],"permalink":"/api/webdriverio-adapter"},"urlSlug":"webdriverio-adapter"},{"index":true,"label":"index","reflection":{"id":18,"name":"@serenity-js/webdriverio","kind":2,"kindString":"Module","flags":{},"children":[{"id":3531,"name":"WebdriverIOConfig","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"[WebdriverIO configuration object](https://webdriver.io/docs/configurationfile/)\\nwith Serenity/JS-specific "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig|additions"},{"kind":"text","text":".\\n\\n## Configuring WebdriverIO with Serenity/JS and Cucumber\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ConsoleReporter } from \'@serenity-js/console-reporter\'\\nimport { ArtifactArchiver } from \'@serenity-js/core\'\\nimport { SerenityBDDReporter } from \'@serenity-js/serenity-bdd\'\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    runner: \'cucumber\',\\n    crew: [\\n      ConsoleReporter.forDarkTerminals(),\\n      new SerenityBDDReporter(),\\n      ArtifactArchiver.storingArtifactsAt(\'./target/site/serenity\'),\\n    ]\\n  },\\n\\n  cucumberOpts: {\\n    // ...\\n  },\\n\\n  specs: [\\n    \'./features/*.feature\',\\n  ],\\n}\\n```"},{"kind":"text","text":"\\n\\n## Configuring WebdriverIO with Serenity/JS and Mocha\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ConsoleReporter } from \'@serenity-js/console-reporter\'\\nimport { ArtifactArchiver } from \'@serenity-js/core\'\\nimport { SerenityBDDReporter } from \'@serenity-js/serenity-bdd\'\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    runner: \'mocha\',\\n    crew: [\\n      ConsoleReporter.forDarkTerminals(),\\n      new SerenityBDDReporter(),\\n      ArtifactArchiver.storingArtifactsAt(\'./target/site/serenity\'),\\n    ]\\n  },\\n\\n  mochaOpts: {\\n    // ...\\n  },\\n\\n  specs: [\\n    \'./spec/*.spec.*\',\\n  ],\\n}\\n```"},{"kind":"text","text":"\\n\\n## Configuring WebdriverIO with Serenity/JS and Jasmine\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ConsoleReporter } from \'@serenity-js/console-reporter\'\\nimport { ArtifactArchiver } from \'@serenity-js/core\'\\nimport { SerenityBDDReporter } from \'@serenity-js/serenity-bdd\'\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\'\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    runner: \'jasmine\',\\n    crew: [\\n      ConsoleReporter.forDarkTerminals(),\\n      new SerenityBDDReporter(),\\n      ArtifactArchiver.storingArtifactsAt(\'./target/site/serenity\'),\\n    ]\\n  },\\n\\n  jasmineOpts: {\\n    // ...\\n  },\\n\\n  specs: [\\n    \'./spec/*.spec.*\',\\n  ],\\n}\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"CucumberConfig"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"JasmineConfig"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MochaConfig"}]},"children":[{"id":3607,"name":"protocol","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Protocol to use when communicating with the Selenium standalone server (or driver)."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"\'http\'"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":54,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.protocol"}},{"id":3608,"name":"hostname","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Host of your WebDriver server."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"\'localhost\'"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":60,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.hostname"}},{"id":3609,"name":"port","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Port your WebDriver server is on."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"4444"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":66,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.port"}},{"id":3580,"name":"path","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to WebDriver endpoint or grid server."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"\'/\'"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":72,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.path"}},{"id":3610,"name":"queryParams","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Query paramaters that are propagated to the driver server."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":76,"character":4}],"type":{"type":"reflection","declaration":{"id":3611,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":76,"character":18}],"indexSignature":{"id":3612,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":3613,"name":"name","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.queryParams"}},{"id":3614,"name":"user","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Your cloud service username (only works for [Sauce Labs](https://saucelabs.com),\\n[Browserstack](https://www.browserstack.com), [TestingBot](https://testingbot.com),\\n[CrossBrowserTesting](https://crossbrowsertesting.com) or\\n[LambdaTest](https://www.lambdatest.com) accounts). If set, WebdriverIO will\\nautomatically set connection options for you. If you don\'t use a cloud provider this\\ncan be used to authenticate any other WebDriver backend."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":87,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.user"}},{"id":3615,"name":"key","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Your cloud service access key or secret key (only works for\\n[Sauce Labs](https://saucelabs.com), [Browserstack](https://www.browserstack.com),\\n[TestingBot](https://testingbot.com), [CrossBrowserTesting](https://crossbrowsertesting.com)\\nor [LambdaTest](https://www.lambdatest.com) accounts). If set, WebdriverIO will\\nautomatically set connection options for you. If you don\'t use a cloud provider this\\ncan be used to authenticate any other WebDriver backend."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":96,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.key"}},{"id":3582,"name":"logLevel","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Level of logging verbosity."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"\'info\'"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":139,"character":4}],"type":{"type":"reference","name":"WebDriverLogTypes","qualifiedName":"WebDriverLogTypes","package":"@wdio/types"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.logLevel"}},{"id":3583,"name":"logLevels","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Set specific log levels per logger\\nuse \'silent\' level to disable logger"}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":144,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"WebDriverLogTypes","qualifiedName":"WebDriverLogTypes","package":"@wdio/types"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.logLevels"}},{"id":3584,"name":"connectionRetryTimeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Timeout for any WebDriver request to a driver or grid."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"120000"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":150,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.connectionRetryTimeout"}},{"id":3585,"name":"connectionRetryCount","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Count of request retries to the Selenium server."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"3"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":156,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.connectionRetryCount"}},{"id":3586,"name":"headers","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify custom headers to pass into every request."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":160,"character":4}],"type":{"type":"reflection","declaration":{"id":3587,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":160,"character":14}],"indexSignature":{"id":3588,"name":"__index","kind":8192,"kindString":"Index signature","flags":{"isExternal":true},"parameters":[{"id":3589,"name":"name","kind":32768,"flags":{"isExternal":true},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"string"}}}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.headers"}},{"id":3590,"name":"agent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Allows you to use a custom http/https/http2 [agent](https://www.npmjs.com/package/got#agent) to make requests."}],"blockTags":[{"tag":"@default","content":[{"kind":"code","text":"```js\\n{\\n    http: new http.Agent({ keepAlive: true }),\\n    https: new https.Agent({ keepAlive: true })\\n}\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":174,"character":4}],"type":{"type":"reflection","declaration":{"id":3591,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"children":[{"id":3592,"name":"http","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":175,"character":8}],"type":{"type":"reference","name":"Agent","qualifiedName":"Agent","package":"@types/node"}},{"id":3593,"name":"https","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":176,"character":8}],"type":{"type":"reference","name":"Agent","qualifiedName":"Agent","package":"@types/node"}}],"groups":[{"title":"Properties","children":[3592,3593]}],"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":174,"character":12}]}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.agent"}},{"id":3594,"name":"transformRequest","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":181,"character":4}],"type":{"type":"reflection","declaration":{"id":3595,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":181,"character":23}],"signatures":[{"id":3596,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Function intercepting [HTTP request options](https://github.com/sindresorhus/got#options) before a WebDriver request is made."}]},"parameters":[{"id":3597,"name":"requestOptions","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"RequestLibOptions","qualifiedName":"RequestLibOptions","package":"@wdio/types"}}],"type":{"type":"reference","name":"RequestLibOptions","qualifiedName":"RequestLibOptions","package":"@wdio/types"}}]}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.transformRequest"}},{"id":3598,"name":"transformResponse","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":185,"character":4}],"type":{"type":"reflection","declaration":{"id":3599,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":185,"character":24}],"signatures":[{"id":3600,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Function intercepting HTTP response objects after a WebDriver response has arrived."}]},"parameters":[{"id":3601,"name":"response","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"RequestLibResponse","qualifiedName":"RequestLibResponse","package":"@wdio/types"}},{"id":3602,"name":"requestOptions","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","name":"RequestLibOptions","qualifiedName":"RequestLibOptions","package":"@wdio/types"}}],"type":{"type":"reference","name":"RequestLibResponse","qualifiedName":"RequestLibResponse","package":"@wdio/types"}}]}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.transformResponse"}},{"id":3603,"name":"enableDirectConnect","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Appium direct connect options (see: https://appiumpro.com/editions/86-connecting-directly-to-appium-hosts-in-distributed-environments)"}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":189,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.enableDirectConnect"}},{"id":3604,"name":"strictSSL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether it requires SSL certificates to be valid in HTTP/s requests\\nfor an environment which cannot get process environment well."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"true"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":196,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.strictSSL"}},{"id":3605,"name":"outputDir","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Directory to store all testrunner log files (including reporter logs and "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" logs).\\nIf not set, all logs are streamed to "},{"kind":"code","text":"`stdout`"},{"kind":"text","text":". Since most reporters are made to log to\\n"},{"kind":"code","text":"`stdout`"},{"kind":"text","text":", it is recommended to only use this option for specific reporters where it\\nmakes more sense to push report into a file (like the "},{"kind":"code","text":"`junit`"},{"kind":"text","text":" reporter, for example).\\n\\nWhen running in standalone mode, the only log generated by WebdriverIO will be\\nthe "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" log."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":206,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.outputDir"}},{"id":3606,"name":"cacheDir","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The path to the root of the cache directory. This directory is used to store all drivers that are downloaded\\nwhen attempting to start a session."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":211,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.cacheDir"}},{"id":3616,"name":"automationProtocol","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Define the protocol you want to use for your browser automation.\\nCurrently only ["},{"kind":"code","text":"`webdriver`"},{"kind":"text","text":"](https://www.npmjs.com/package/webdriver) and\\n["},{"kind":"code","text":"`devtools`"},{"kind":"text","text":"](https://www.npmjs.com/package/devtools) are supported,\\nas these are the main browser automation technologies available."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":266,"character":4}],"type":{"type":"reference","name":"SupportedProtocols","qualifiedName":"SupportedProtocols","package":"@wdio/types"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.automationProtocol"}},{"id":3617,"name":"region","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If running on Sauce Labs, you can choose to run tests between different datacenters:\\nUS or EU. To change your region to EU, add region: \'eu\' to your config."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":271,"character":4}],"type":{"type":"reference","name":"SauceRegions","qualifiedName":"SauceRegions","package":"@wdio/types"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.region"}},{"id":3579,"name":"headless","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sauce Labs provides a headless offering that allows you to run Chrome and Firefox tests headless."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":275,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.headless"}},{"id":3581,"name":"baseUrl","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Shorten url command calls by setting a base URL."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":279,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.baseUrl"}},{"id":3618,"name":"waitforTimeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default timeout for all "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" commands. (Note the lowercase f in the option name.)\\nThis timeout only affects commands starting with "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" and their default wait time."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":284,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.waitforTimeout"}},{"id":3619,"name":"waitforInterval","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default interval for all "},{"kind":"code","text":"`waitFor*`"},{"kind":"text","text":" commands to check if an expected state (e.g.,\\nvisibility) has been changed."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":289,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.waitforInterval"}},{"id":3535,"name":"capabilities","kind":1024,"kindString":"Property","flags":{"isExternal":true},"comment":{"summary":[{"kind":"text","text":"Defines a set of capabilities you want to run in your testrunner session. Check out the\\n[WebDriver Protocol](https://w3c.github.io/webdriver/#capabilities) for more details.\\nIf you want to run a multiremote session you need to define instead of an array of\\ncapabilities an object that has an arbitrary browser instance name as string and its\\ncapabilities as values."}],"blockTags":[{"tag":"@example","content":[{"kind":"code","text":"```js\\n// wdio.conf.js\\nexport const config = {\\n  // ...\\n  capabilities: [{\\n    browserName: \'safari\',\\n    platformName: \'MacOS 10.13\',\\n    ...\\n  }, {\\n    browserName: \'microsoftedge\',\\n    platformName: \'Windows 10\',\\n    ...\\n  }]\\n}\\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```\\n// wdio.conf.js\\nexport const config = {\\n  // ...\\n  capabilities: {\\n    browserA: {\\n      browserName: \'chrome\',\\n      browserVersion: 86\\n      platformName: \'Windows 10\'\\n    },\\n    browserB: {\\n      browserName: \'firefox\',\\n      browserVersion: 74\\n      platformName: \'Mac OS X\'\\n    }\\n  }\\n})\\n```"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":336,"character":4}],"type":{"type":"reference","name":"RemoteCapabilities","qualifiedName":"RemoteCapabilities","package":"@wdio/types"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.capabilities"}},{"id":3536,"name":"runner","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Type of runner\\n- local: every spec file group is spawned in its own local process\\n  running an independant browser session\\n- browser: all spec files are run within the browser"}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":343,"character":4}],"type":{"type":"union","types":[{"type":"literal","value":"browser"},{"type":"literal","value":"local"},{"type":"tuple","elements":[{"type":"literal","value":"browser"},{"type":"reference","name":"BrowserRunnerOptions","qualifiedName":"global.WebdriverIO.BrowserRunnerOptions","package":"@wdio/types"}]},{"type":"tuple","elements":[{"type":"literal","value":"local"},{"type":"intrinsic","name":"never"}]}]},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.runner"}},{"id":3537,"name":"rootDir","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Project root directory path."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":347,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.rootDir"}},{"id":3538,"name":"specs","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Define specs for test execution. You can either specify a glob\\npattern to match multiple files at once or wrap a glob or set of\\npaths into an array to run them within a single worker process."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":353,"character":4}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.specs"}},{"id":3539,"name":"exclude","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Exclude specs from test execution."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":357,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.exclude"}},{"id":3540,"name":"suites","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An object describing various of suites, which you can then specify\\nwith the --suite option on the wdio CLI."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":362,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"union","types":[{"type":"array","elementType":{"type":"intrinsic","name":"string"}},{"type":"array","elementType":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}]}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.suites"}},{"id":3541,"name":"maxInstances","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total parallel running workers."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":366,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.maxInstances"}},{"id":3542,"name":"maxInstancesPerCapability","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Maximum number of total parallel running workers per capability."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":370,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.maxInstancesPerCapability"}},{"id":3543,"name":"injectGlobals","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inserts WebdriverIO\'s globals (e.g. "},{"kind":"code","text":"`browser`"},{"kind":"text","text":", "},{"kind":"code","text":"`$`"},{"kind":"text","text":" and "},{"kind":"code","text":"`$$`"},{"kind":"text","text":") into the\\nglobal environment. If you set to "},{"kind":"code","text":"`false`"},{"kind":"text","text":", you should import from\\n"},{"kind":"code","text":"`@wdio/globals`"},{"kind":"text","text":", e.g.:\\n\\n"},{"kind":"code","text":"```ts\\nimport { browser, $, $$, expect } from \'@wdio/globals\'\\n```"},{"kind":"text","text":"\\n\\nNote: WebdriverIO doesn\'t handle injection of test framework specific\\nglobals."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"true"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":385,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.injectGlobals"}},{"id":3544,"name":"bail","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"If you want your test run to stop after a specific number of test failures, use bail.\\n(It defaults to 0, which runs all tests no matter what.) Note: Please be aware that\\nwhen using a third party test runner (such as Mocha), additional configuration might\\nbe required."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":392,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.bail"}},{"id":3545,"name":"specFileRetries","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of retry attempts for an entire specfile when it fails as a whole."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":396,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.specFileRetries"}},{"id":3546,"name":"specFileRetriesDelay","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Delay in seconds between the spec file retry attempts"}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":400,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.specFileRetriesDelay"}},{"id":3547,"name":"specFileRetriesDeferred","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not retried spec files should be retried immediately or deferred to the end of the queue"}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":404,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.specFileRetriesDeferred"}},{"id":3548,"name":"services","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Services take over a specific job you don\'t want to take care of. They enhance\\nyour test setup with almost no effort."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":409,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"ServiceEntry","qualifiedName":"ServiceEntry","package":"@wdio/types"}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.services"}},{"id":3549,"name":"framework","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Defines the test framework to be used by the WDIO testrunner."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":413,"character":4}],"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.framework"}},{"id":3550,"name":"reporters","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of reporters to use. A reporter can be either a string, or an array of\\n"},{"kind":"code","text":"`[\'reporterName\', { <reporter options> }]`"},{"kind":"text","text":" where the first element is a string\\nwith the reporter name and the second element an object with reporter options."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":419,"character":4}],"type":{"type":"array","elementType":{"type":"reference","name":"ReporterEntry","qualifiedName":"ReporterEntry","package":"@wdio/types"}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.reporters"}},{"id":3551,"name":"reporterSyncInterval","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines in which interval the reporter should check if they are synchronised\\nif they report their logs asynchronously (e.g. if logs are streamed to a 3rd\\nparty vendor)."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":425,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.reporterSyncInterval"}},{"id":3552,"name":"reporterSyncTimeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Determines the maximum time reporters have to finish uploading all their logs\\nuntil an error is being thrown by the testrunner."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":430,"character":4}],"type":{"type":"intrinsic","name":"number"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.reporterSyncTimeout"}},{"id":3553,"name":"execArgv","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Node arguments to specify when launching child processes."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":434,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.execArgv"}},{"id":3554,"name":"runnerEnv","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A set of environment variables to be injected into the worker process."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":438,"character":4}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.runnerEnv"}},{"id":3555,"name":"filesToWatch","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Files to watch when running "},{"kind":"code","text":"`wdio`"},{"kind":"text","text":" with the "},{"kind":"code","text":"`--watch`"},{"kind":"text","text":" flag."}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":442,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.filesToWatch"}},{"id":3556,"name":"cucumberFeaturesWithLineNumbers","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of cucumber features with line numbers (when using [cucumber framework](https://webdriver.io/docs/frameworks.html#using-cucumber))."}],"blockTags":[{"tag":"@default","content":[{"kind":"text","text":"[]"}]}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":447,"character":4}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.cucumberFeaturesWithLineNumbers"}},{"id":3557,"name":"watch","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"flags"}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":451,"character":4}],"type":{"type":"intrinsic","name":"boolean"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.watch"}},{"id":3558,"name":"mochaOpts","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"framework options"}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":455,"character":4}],"type":{"type":"reference","name":"MochaOpts","qualifiedName":"global.WebdriverIO.MochaOpts","package":"@wdio/types"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.mochaOpts"}},{"id":3559,"name":"jasmineOpts","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":456,"character":4}],"type":{"type":"reference","name":"JasmineOpts","qualifiedName":"global.WebdriverIO.JasmineOpts","package":"@wdio/types"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.jasmineOpts"}},{"id":3560,"name":"cucumberOpts","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":457,"character":4}],"type":{"type":"reference","name":"CucumberOpts","qualifiedName":"global.WebdriverIO.CucumberOpts","package":"@wdio/types"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.cucumberOpts"}},{"id":3561,"name":"autoCompileOpts","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"comment":{"summary":[{"kind":"text","text":"autocompile options"}]},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Options.d.ts","line":461,"character":4}],"type":{"type":"reference","name":"AutoCompileConfig","qualifiedName":"AutoCompileConfig","package":"@wdio/types"},"inheritedFrom":{"type":"reference","name":"Options.Testrunner.autoCompileOpts"}},{"id":3562,"name":"onPrepare","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":81,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.onPrepare"}},{"id":3563,"name":"onComplete","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":90,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.onComplete"}},{"id":3564,"name":"onWorkerStart","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":100,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.onWorkerStart"}},{"id":3565,"name":"onWorkerEnd","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":108,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.onWorkerEnd"}},{"id":3566,"name":"before","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":116,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.before"}},{"id":3567,"name":"after","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":124,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.after"}},{"id":3568,"name":"beforeSession","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":133,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.beforeSession"}},{"id":3569,"name":"afterSession","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":140,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.afterSession"}},{"id":3570,"name":"onReload","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":146,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.onReload"}},{"id":3571,"name":"beforeSuite","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":151,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.beforeSuite"}},{"id":3572,"name":"afterSuite","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":156,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.afterSuite"}},{"id":3573,"name":"beforeTest","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":162,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.beforeTest"}},{"id":3574,"name":"afterTest","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":173,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.afterTest"}},{"id":3575,"name":"beforeHook","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":180,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.beforeHook"}},{"id":3576,"name":"afterHook","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":188,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.afterHook"}},{"id":3577,"name":"beforeCommand","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":194,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.beforeCommand"}},{"id":3578,"name":"afterCommand","kind":2048,"kindString":"Method","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"packages/webdriverio/node_modules/@wdio/types/build/Services.d.ts","line":202,"character":4}],"inheritedFrom":{"type":"reference","name":"Options.Testrunner.afterCommand"}},{"id":3532,"name":"serenity","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Serenity/JS configuration with an additional "},{"kind":"code","text":"`runner`"},{"kind":"text","text":" entry\\nallowing to specify the test runner, such as "},{"kind":"code","text":"`cucumber`"},{"kind":"text","text":", "},{"kind":"code","text":"`mocha`"},{"kind":"text","text":", or "},{"kind":"code","text":"`jasmine`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [WebdriverIO configuration file](https://webdriver.io/docs/configurationfile/)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"CucumberConfig"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"JasmineConfig"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"MochaConfig"}]},"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":126,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/config/WebdriverIOConfig.ts#L126"}],"type":{"type":"intersection","types":[{"type":"reference","name":"SerenityConfig"},{"type":"reflection","declaration":{"id":3533,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3534,"name":"runner","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":126,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/config/WebdriverIOConfig.ts#L126"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[3534]}],"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":126,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/config/WebdriverIOConfig.ts#L126"}]}}]}}],"groups":[{"title":"Properties","children":[3607,3608,3609,3580,3610,3614,3615,3582,3583,3584,3585,3586,3590,3594,3598,3603,3604,3605,3606,3616,3617,3579,3581,3618,3619,3535,3536,3537,3538,3539,3540,3541,3542,3543,3544,3545,3546,3547,3548,3549,3550,3551,3552,3553,3554,3555,3556,3557,3558,3559,3560,3561,3532]},{"title":"Methods","children":[3562,3563,3564,3565,3566,3567,3568,3569,3570,3571,3572,3573,3574,3575,3576,3577,3578]}],"sources":[{"fileName":"packages/webdriverio/src/config/WebdriverIOConfig.ts","line":113,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/config/WebdriverIOConfig.ts#L113"}],"extendedTypes":[{"type":"reference","name":"Testrunner","qualifiedName":"Testrunner","package":"@wdio/types"}],"permalink":"/api/webdriverio/interface/WebdriverIOConfig","previousId":3620,"nextId":3639},{"id":19,"name":"default","kind":32,"kindString":"Variable","flags":{},"comment":{"summary":[{"kind":"text","text":"WebdriverIO Framework Adapter integrates WebdriverIO with Serenity/JS"}]},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":12,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/index.ts#L12"}],"type":{"type":"reflection","declaration":{"id":20,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":21,"name":"init","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":13,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/index.ts#L13"}],"signatures":[{"id":22,"name":"init","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":23,"name":"cid","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":24,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3531,"name":"WebdriverIOConfig"}},{"id":25,"name":"specs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":26,"name":"capabilities","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"RemoteCapability","qualifiedName":"RemoteCapability","package":"@wdio/types"}},{"id":27,"name":"reporter","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"EventEmitter","qualifiedName":"EventEmitter","package":"@types/node"},{"type":"reference","name":"ProvidesWriteStream"},{"type":"reference","name":"InitialisesReporters"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":28,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":29,"name":"hasTests","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/index.ts#L19"}],"type":{"type":"reflection","declaration":{"id":30,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":27,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/index.ts#L19"}],"signatures":[{"id":31,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":32,"name":"run","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":42,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/index.ts#L19"}],"type":{"type":"reflection","declaration":{"id":33,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":47,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/index.ts#L19"}],"signatures":[{"id":34,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}}}],"groups":[{"title":"Properties","children":[29,32]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":19,"character":15,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/index.ts#L19"}]}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Methods","children":[21]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":12,"character":15,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/index.ts#L12"}]}},"permalink":"/api/webdriverio#default","previousId":3839},{"id":3620,"name":"BrowseTheWebWithWebdriverIO","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"This implementation of the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\nenables the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to interact with web front-ends using [WebdriverIO](https://webdriver.io/).\\n\\n## Using WebdriverIO to "},{"kind":"code","text":"`BrowseTheWeb`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithWebdriverIO } from \'@serenity-js/webdriverio\'\\nimport { By, Navigate, PageElement, Text } from \'@serenity-js/web\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { browser } from \'@wdio/globals\'\\n\\nconst HomePage = {\\n  title: () =>\\n    PageElement.located(By.css(\'h1\')).describedAs(\'title\')\\n}\\n\\nawait actorCalled(\'Wendy\')\\n  .whoCan(BrowseTheWebWithWebdriverIO.using(browser))  // `browser` is global in WebdriverIO tests\\n  .attemptsTo(\\n    Navigate.to(`https://serenity-js.org`),\\n    Ensure.that(Text.of(HomePage.title()), equals(\'Serenity/JS\')),\\n  );\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [WebdriverIO website](https://webdriver.io/)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWeb"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"}]},"children":[{"id":3621,"name":"using","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":42,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts#L42"}],"signatures":[{"id":3622,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3623,"name":"browserInstance","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Browser","qualifiedName":"Browser","package":"webdriverio"}}],"type":{"type":"reference","id":3620,"name":"BrowseTheWebWithWebdriverIO"}}]},{"id":3629,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.d.ts","line":81,"character":4}],"signatures":[{"id":3630,"name":"new BrowseTheWebWithWebdriverIO","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3631,"name":"session","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"}],"name":"Page"}],"name":"BrowsingSession"}}],"type":{"type":"reference","id":3620,"name":"BrowseTheWebWithWebdriverIO"},"inheritedFrom":{"type":"reference","name":"BrowseTheWeb<Element>.constructor"}}],"inheritedFrom":{"type":"reference","name":"BrowseTheWeb<Element>.constructor"}},{"id":3633,"name":"currentPage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.d.ts","line":85,"character":4}],"signatures":[{"id":3634,"name":"currentPage","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":" representing the currently active browser tab."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"}],"name":"Page"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.currentPage"}}],"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.currentPage"}},{"id":3635,"name":"allPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.d.ts","line":90,"character":4}],"signatures":[{"id":3636,"name":"allPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns an array of "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" representing all the browser tabs\\navailable in the current "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"}],"name":"Page"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.allPages"}}],"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.allPages"}},{"id":3637,"name":"browserCapabilities","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/abilities/BrowseTheWeb.d.ts","line":94,"character":4}],"signatures":[{"id":3638,"name":"browserCapabilities","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns "},{"kind":"inline-tag","tag":"@apilink","text":"BrowserCapabilities|basic meta-data"},{"kind":"text","text":" about the browser associated with this ability."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrowserCapabilities"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.browserCapabilities"}}],"inheritedFrom":{"type":"reference","name":"BrowseTheWeb.browserCapabilities"}}],"groups":[{"title":"Methods","children":[3621,3633,3635,3637]},{"title":"Constructors","children":[3629]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts","line":40,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/abilities/BrowseTheWebWithWebdriverIO.ts#L40"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"}],"name":"BrowseTheWeb"}],"permalink":"/api/webdriverio/class/BrowseTheWebWithWebdriverIO","nextId":3531},{"id":3639,"name":"WebdriverIOBrowsingSession","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"children":[{"id":3666,"name":"closePagesOtherThan","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":15,"character":4}],"signatures":[{"id":3667,"name":"closePagesOtherThan","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3668,"name":"pageOfInterest","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3723,"name":"WebdriverIOPage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.closePagesOtherThan"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.closePagesOtherThan"}},{"id":3669,"name":"register","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":33,"character":4}],"signatures":[{"id":3670,"name":"register","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Registers specified "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" to be managed by this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":"."}]},"parameters":[{"id":3671,"name":"pages","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","id":3723,"name":"WebdriverIOPage"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.register"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.register"}},{"id":3672,"name":"deregister","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":40,"character":4}],"signatures":[{"id":3673,"name":"deregister","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Informs this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" that it should no longer manage "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":"\\nidentified by the given "},{"kind":"code","text":"`pageIds`"},{"kind":"text","text":"."}]},"parameters":[{"id":3674,"name":"pageIds","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}}}],"type":{"type":"intrinsic","name":"void"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.deregister"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.deregister"}},{"id":3675,"name":"registeredPageIds","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":49,"character":4}],"signatures":[{"id":3676,"name":"registeredPageIds","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the ids of any "},{"kind":"inline-tag","tag":"@apilink","text":"Page|pages"},{"kind":"text","text":" this "},{"kind":"inline-tag","tag":"@apilink","text":"BrowsingSession"},{"kind":"text","text":" is aware of."}]},"type":{"type":"array","elementType":{"type":"reference","name":"CorrelationId"}},"inheritedFrom":{"type":"reference","name":"BrowsingSession.registeredPageIds"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.registeredPageIds"}},{"id":3677,"name":"closeAllPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/BrowsingSession.d.ts","line":72,"character":4}],"signatures":[{"id":3678,"name":"closeAllPages","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Closes all the pages available in this browsing context"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"BrowsingSession.closeAllPages"}}],"inheritedFrom":{"type":"reference","name":"BrowsingSession.closeAllPages"}},{"id":3640,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts#L20"}],"signatures":[{"id":3641,"name":"new WebdriverIOBrowsingSession","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3642,"name":"browser","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Browser","qualifiedName":"Browser","package":"webdriverio"}}],"type":{"type":"reference","id":3639,"name":"WebdriverIOBrowsingSession"},"overwrites":{"type":"reference","name":"BrowsingSession<WebdriverIOPage>.constructor"}}],"overwrites":{"type":"reference","name":"BrowsingSession<WebdriverIOPage>.constructor"}},{"id":3644,"name":"allPages","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":28,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts#L28"}],"signatures":[{"id":3645,"name":"allPages","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","id":3723,"name":"WebdriverIOPage"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"BrowsingSession.allPages"}}],"overwrites":{"type":"reference","name":"BrowsingSession.allPages"}},{"id":3646,"name":"changeCurrentPageTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":61,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts#L61"}],"signatures":[{"id":3647,"name":"changeCurrentPageTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3648,"name":"page","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3723,"name":"WebdriverIOPage"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"BrowsingSession.changeCurrentPageTo"}}],"overwrites":{"type":"reference","name":"BrowsingSession.changeCurrentPageTo"}},{"id":3651,"name":"currentPage","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":100,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts#L100"}],"signatures":[{"id":3652,"name":"currentPage","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":3723,"name":"WebdriverIOPage"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"BrowsingSession.currentPage"}}],"overwrites":{"type":"reference","name":"BrowsingSession.currentPage"}},{"id":3662,"name":"browserCapabilities","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":172,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts#L172"}],"signatures":[{"id":3663,"name":"browserCapabilities","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"BrowserCapabilities"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"BrowsingSession.browserCapabilities"}}],"overwrites":{"type":"reference","name":"BrowsingSession.browserCapabilities"}}],"groups":[{"title":"Methods","children":[3666,3669,3672,3675,3677,3644,3646,3651,3662]},{"title":"Constructors","children":[3640]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts","line":18,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOBrowsingSession.ts#L18"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","id":3723,"name":"WebdriverIOPage"}],"name":"BrowsingSession"}],"permalink":"/api/webdriverio/class/WebdriverIOBrowsingSession","previousId":3531,"nextId":3679},{"id":3679,"name":"WebdriverIOCookie","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"Cookie"},{"kind":"text","text":"."}]},"children":[{"id":3707,"name":"name","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":99,"character":4}],"signatures":[{"id":3708,"name":"name","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the name of this cookie."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Cookie.name"}}],"inheritedFrom":{"type":"reference","name":"Cookie.name"}},{"id":3709,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":106,"character":4}],"signatures":[{"id":3710,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is set.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Optional"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.isPresent"}}],"inheritedFrom":{"type":"reference","name":"Cookie.isPresent"}},{"id":3711,"name":"value","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":110,"character":4}],"signatures":[{"id":3712,"name":"value","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the value of a given cookie."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.value"}}],"inheritedFrom":{"type":"reference","name":"Cookie.value"}},{"id":3713,"name":"path","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":114,"character":4}],"signatures":[{"id":3714,"name":"path","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the path of a given cookie, if any was set."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.path"}}],"inheritedFrom":{"type":"reference","name":"Cookie.path"}},{"id":3715,"name":"domain","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":118,"character":4}],"signatures":[{"id":3716,"name":"domain","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the domain of a given cookie, if any was set."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.domain"}}],"inheritedFrom":{"type":"reference","name":"Cookie.domain"}},{"id":3717,"name":"isHttpOnly","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":125,"character":4}],"signatures":[{"id":3718,"name":"isHttpOnly","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is HTTP-only.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.isHttpOnly"}}],"inheritedFrom":{"type":"reference","name":"Cookie.isHttpOnly"}},{"id":3719,"name":"isSecure","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":132,"character":4}],"signatures":[{"id":3720,"name":"isSecure","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Checks if a given cookie is secure.\\n\\n#### Learn more\\n- [Mozilla Developer Network: Restricting access to cookies](https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies#restrict_access_to_cookies)"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.isSecure"}}],"inheritedFrom":{"type":"reference","name":"Cookie.isSecure"}},{"id":3721,"name":"expiry","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Cookie.d.ts","line":139,"character":4}],"signatures":[{"id":3722,"name":"expiry","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the expiry date of a given cookie\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Timestamp"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Timestamp"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Cookie.expiry"}}],"inheritedFrom":{"type":"reference","name":"Cookie.expiry"}},{"id":3697,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":14,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts#L14"}],"signatures":[{"id":3698,"name":"new WebdriverIOCookie","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3699,"name":"browser","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Browser","qualifiedName":"Browser","package":"webdriverio"}},{"id":3700,"name":"cookieName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":3679,"name":"WebdriverIOCookie"},"overwrites":{"type":"reference","name":"Cookie.constructor"}}],"overwrites":{"type":"reference","name":"Cookie.constructor"}},{"id":3702,"name":"delete","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":22,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts#L22"}],"signatures":[{"id":3703,"name":"delete","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Cookie.delete"}}],"overwrites":{"type":"reference","name":"Cookie.delete"}}],"groups":[{"title":"Methods","children":[3707,3709,3711,3713,3715,3717,3719,3721,3702]},{"title":"Constructors","children":[3697]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOCookie.ts#L12"}],"extendedTypes":[{"type":"reference","name":"Cookie"}],"permalink":"/api/webdriverio/class/WebdriverIOCookie","previousId":3639,"nextId":3723},{"id":3723,"name":"WebdriverIOPage","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"."}]},"children":[{"id":3832,"name":"id","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":133,"character":13}],"type":{"type":"reference","name":"CorrelationId"},"inheritedFrom":{"type":"reference","name":"Page.id"}},{"id":3833,"name":"switchTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":433,"character":4}],"signatures":[{"id":3834,"name":"switchTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Switches the current browsing context to the given page\\nand returns an object that allows the caller to switch back\\nto the previous context when needed.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switch"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Switchable"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SwitchableOrigin"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"Page.switchTo"}}],"inheritedFrom":{"type":"reference","name":"Page.switchTo"}},{"id":3835,"name":"modalDialog","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":445,"character":4}],"signatures":[{"id":3836,"name":"modalDialog","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the "},{"kind":"inline-tag","tag":"@apilink","text":"ModalDialogHandler"},{"kind":"text","text":" for the current "},{"kind":"inline-tag","tag":"@apilink","text":"Page"},{"kind":"text","text":"."}]},"type":{"type":"reference","name":"ModalDialogHandler"},"inheritedFrom":{"type":"reference","name":"Page.modalDialog"}}],"inheritedFrom":{"type":"reference","name":"Page.modalDialog"}},{"id":3837,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/Page.d.ts","line":449,"character":4}],"signatures":[{"id":3838,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns a description of this Page and its ID."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Page.toString"}}],"inheritedFrom":{"type":"reference","name":"Page.toString"}},{"id":3735,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":23,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L23"}],"signatures":[{"id":3736,"name":"new WebdriverIOPage","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3737,"name":"session","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3639,"name":"WebdriverIOBrowsingSession"}},{"id":3738,"name":"browser","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Browser","qualifiedName":"Browser","package":"webdriverio"}},{"id":3739,"name":"modalDialogHandler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ModalDialogHandler"}},{"id":3740,"name":"errorHandler","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"WebdriverIOErrorHandler"}},{"id":3741,"name":"pageId","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CorrelationId"}}],"type":{"type":"reference","id":3723,"name":"WebdriverIOPage"},"overwrites":{"type":"reference","name":"Page<Element>.constructor"}}],"overwrites":{"type":"reference","name":"Page<Element>.constructor"}},{"id":3745,"name":"createPageElement","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":38,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L38"}],"signatures":[{"id":3746,"name":"createPageElement","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3747,"name":"nativeElement","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"}],"name":"PageElement"},"overwrites":{"type":"reference","name":"Page.createPageElement"}}],"overwrites":{"type":"reference","name":"Page.createPageElement"}},{"id":3748,"name":"locate","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":49,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L49"}],"signatures":[{"id":3749,"name":"locate","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3750,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Selector"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"}],"name":"PageElement"},"overwrites":{"type":"reference","name":"Page.locate"}}],"overwrites":{"type":"reference","name":"Page.locate"}},{"id":3751,"name":"locateAll","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":55,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L55"}],"signatures":[{"id":3752,"name":"locateAll","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3753,"name":"selector","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Selector"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"}],"name":"PageElements"},"overwrites":{"type":"reference","name":"Page.locateAll"}}],"overwrites":{"type":"reference","name":"Page.locateAll"}},{"id":3754,"name":"navigateTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":63,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L63"}],"signatures":[{"id":3755,"name":"navigateTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3756,"name":"destination","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.navigateTo"}}],"overwrites":{"type":"reference","name":"Page.navigateTo"}},{"id":3757,"name":"navigateBack","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":67,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L67"}],"signatures":[{"id":3758,"name":"navigateBack","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.navigateBack"}}],"overwrites":{"type":"reference","name":"Page.navigateBack"}},{"id":3759,"name":"navigateForward","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":71,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L71"}],"signatures":[{"id":3760,"name":"navigateForward","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.navigateForward"}}],"overwrites":{"type":"reference","name":"Page.navigateForward"}},{"id":3761,"name":"reload","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":75,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L75"}],"signatures":[{"id":3762,"name":"reload","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.reload"}}],"overwrites":{"type":"reference","name":"Page.reload"}},{"id":3763,"name":"sendKeys","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":79,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L79"}],"signatures":[{"id":3764,"name":"sendKeys","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3765,"name":"keys","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"Key"}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.sendKeys"}}],"overwrites":{"type":"reference","name":"Page.sendKeys"}},{"id":3766,"name":"executeScript","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":91,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L91"}],"signatures":[{"id":3767,"name":"executeScript","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":3768,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}},{"id":3769,"name":"InnerArguments","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":3770,"name":"script","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":3771,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":92,"character":26,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L92"}],"signatures":[{"id":3772,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3773,"name":"parameters","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":3769,"name":"InnerArguments"}}],"type":{"type":"reference","id":3768,"name":"Result"}}]}}]}},{"id":3774,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":3769,"name":"InnerArguments"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":3768,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.executeScript"}}],"overwrites":{"type":"reference","name":"Page.executeScript"}},{"id":3775,"name":"executeAsyncScript","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":113,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L113"}],"signatures":[{"id":3776,"name":"executeAsyncScript","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":3777,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{}},{"id":3778,"name":"Parameters","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}}}],"parameters":[{"id":3779,"name":"script","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":3780,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":114,"character":26,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L114"}],"signatures":[{"id":3781,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3782,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"tuple","elements":[{"type":"rest","elementType":{"type":"named-tuple-member","name":"parameters","isOptional":false,"element":{"type":"array","elementType":{"type":"reference","id":3778,"name":"Parameters"}}}},{"type":"named-tuple-member","name":"callback","isOptional":false,"element":{"type":"reflection","declaration":{"id":3783,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":114,"character":74,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L114"}],"signatures":[{"id":3784,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3785,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3777,"name":"Result"}}],"type":{"type":"intrinsic","name":"void"}}]}}}]}}],"type":{"type":"intrinsic","name":"void"}}]}}]}},{"id":3786,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"reference","id":3778,"name":"Parameters"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":3777,"name":"Result"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.executeAsyncScript"}}],"overwrites":{"type":"reference","name":"Page.executeAsyncScript"}},{"id":3787,"name":"lastScriptExecutionResult","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":135,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L135"}],"signatures":[{"id":3788,"name":"lastScriptExecutionResult","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":3789,"name":"Result","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":3789,"name":"Result"},"overwrites":{"type":"reference","name":"Page.lastScriptExecutionResult"}}],"overwrites":{"type":"reference","name":"Page.lastScriptExecutionResult"}},{"id":3790,"name":"takeScreenshot","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":147,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L147"}],"signatures":[{"id":3791,"name":"takeScreenshot","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.takeScreenshot"}}],"overwrites":{"type":"reference","name":"Page.takeScreenshot"}},{"id":3792,"name":"cookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":166,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L166"}],"signatures":[{"id":3793,"name":"cookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3794,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Cookie"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.cookie"}}],"overwrites":{"type":"reference","name":"Page.cookie"}},{"id":3795,"name":"setCookie","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":170,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L170"}],"signatures":[{"id":3796,"name":"setCookie","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3797,"name":"cookieData","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"CookieData"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.setCookie"}}],"overwrites":{"type":"reference","name":"Page.setCookie"}},{"id":3798,"name":"deleteAllCookies","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":187,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L187"}],"signatures":[{"id":3799,"name":"deleteAllCookies","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.deleteAllCookies"}}],"overwrites":{"type":"reference","name":"Page.deleteAllCookies"}},{"id":3800,"name":"title","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":193,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L193"}],"signatures":[{"id":3801,"name":"title","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.title"}}],"overwrites":{"type":"reference","name":"Page.title"}},{"id":3802,"name":"name","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":197,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L197"}],"signatures":[{"id":3803,"name":"name","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.name"}}],"overwrites":{"type":"reference","name":"Page.name"}},{"id":3804,"name":"url","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":201,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L201"}],"signatures":[{"id":3805,"name":"url","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"URL","qualifiedName":"URL","package":"@types/node"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.url"}}],"overwrites":{"type":"reference","name":"Page.url"}},{"id":3806,"name":"viewportSize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":207,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L207"}],"signatures":[{"id":3807,"name":"viewportSize","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":3808,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3809,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":207,"character":36,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L207"}],"type":{"type":"intrinsic","name":"number"}},{"id":3810,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":207,"character":51,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L207"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[3809,3810]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":207,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L207"}]}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.viewportSize"}}],"overwrites":{"type":"reference","name":"Page.viewportSize"}},{"id":3811,"name":"setViewportSize","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":227,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L227"}],"signatures":[{"id":3812,"name":"setViewportSize","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3813,"name":"size","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":3814,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":3815,"name":"width","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":227,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L227"}],"type":{"type":"intrinsic","name":"number"}},{"id":3816,"name":"height","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":227,"character":49,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L227"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[3815,3816]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":227,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L227"}]}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.setViewportSize"}}],"overwrites":{"type":"reference","name":"Page.setViewportSize"}},{"id":3817,"name":"close","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":247,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L247"}],"signatures":[{"id":3818,"name":"close","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.close"}}],"overwrites":{"type":"reference","name":"Page.close"}},{"id":3819,"name":"closeOthers","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":251,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L251"}],"signatures":[{"id":3820,"name":"closeOthers","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.closeOthers"}}],"overwrites":{"type":"reference","name":"Page.closeOthers"}},{"id":3821,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":255,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L255"}],"signatures":[{"id":3822,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Page.isPresent"}}],"overwrites":{"type":"reference","name":"Page.isPresent"}}],"groups":[{"title":"Properties","children":[3832]},{"title":"Methods","children":[3833,3835,3837,3745,3748,3751,3754,3757,3759,3761,3763,3766,3775,3787,3790,3792,3795,3798,3800,3802,3804,3806,3811,3817,3819,3821]},{"title":"Constructors","children":[3735]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts","line":19,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPage.ts#L19"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"}],"name":"Page"}],"permalink":"/api/webdriverio/class/WebdriverIOPage","previousId":3679,"nextId":3839},{"id":3839,"name":"WebdriverIOPageElement","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"WebdriverIO-specific implementation of "},{"kind":"inline-tag","tag":"@apilink","text":"PageElement"},{"kind":"text","text":"."}]},"children":[{"id":3906,"name":"locator","kind":1024,"kindString":"Property","flags":{"isReadonly":true},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":19,"character":13}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"},{"type":"intrinsic","name":"any"}],"name":"Locator"},"inheritedFrom":{"type":"reference","name":"PageElement.locator"}},{"id":3853,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":23,"character":4}],"signatures":[{"id":3854,"name":"new WebdriverIOPageElement","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":3855,"name":"locator","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"},{"type":"intrinsic","name":"any"}],"name":"Locator"}}],"type":{"type":"reference","id":3839,"name":"WebdriverIOPageElement"},"inheritedFrom":{"type":"reference","name":"PageElement<Element>.constructor"}}],"inheritedFrom":{"type":"reference","name":"PageElement<Element>.constructor"}},{"id":3907,"name":"nativeElement","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":84,"character":4}],"signatures":[{"id":3908,"name":"nativeElement","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"An \\"escape hatch\\" providing access to the integration tool-specific implementation of a Web element."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","name":"PageElement.nativeElement"}}],"inheritedFrom":{"type":"reference","name":"PageElement.nativeElement"}},{"id":3909,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/web/lib/screenplay/models/PageElement.d.ts","line":85,"character":4}],"signatures":[{"id":3910,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"PageElement.toString"}}],"inheritedFrom":{"type":"reference","name":"PageElement.toString"}},{"id":3856,"name":"of","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":16,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L16"}],"signatures":[{"id":3857,"name":"of","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3858,"name":"parent","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3839,"name":"WebdriverIOPageElement"}}],"type":{"type":"reference","id":3839,"name":"WebdriverIOPageElement"},"overwrites":{"type":"reference","name":"PageElement.of"}}],"overwrites":{"type":"reference","name":"PageElement.of"}},{"id":3859,"name":"closestTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L20"}],"signatures":[{"id":3860,"name":"closestTo","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3861,"name":"child","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":3839,"name":"WebdriverIOPageElement"}}],"type":{"type":"reference","id":3839,"name":"WebdriverIOPageElement"},"overwrites":{"type":"reference","name":"PageElement.closestTo"}}],"overwrites":{"type":"reference","name":"PageElement.closestTo"}},{"id":3862,"name":"clearValue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":24,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L24"}],"signatures":[{"id":3863,"name":"clearValue","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.clearValue"}}],"overwrites":{"type":"reference","name":"PageElement.clearValue"}},{"id":3864,"name":"click","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":63,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L63"}],"signatures":[{"id":3865,"name":"click","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.click"}}],"overwrites":{"type":"reference","name":"PageElement.click"}},{"id":3866,"name":"doubleClick","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":68,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L68"}],"signatures":[{"id":3867,"name":"doubleClick","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.doubleClick"}}],"overwrites":{"type":"reference","name":"PageElement.doubleClick"}},{"id":3868,"name":"enterValue","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":73,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L73"}],"signatures":[{"id":3869,"name":"enterValue","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3870,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"},{"type":"array","elementType":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"number"}]}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.enterValue"}}],"overwrites":{"type":"reference","name":"PageElement.enterValue"}},{"id":3871,"name":"scrollIntoView","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":80,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L80"}],"signatures":[{"id":3872,"name":"scrollIntoView","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.scrollIntoView"}}],"overwrites":{"type":"reference","name":"PageElement.scrollIntoView"}},{"id":3873,"name":"hoverOver","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":85,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L85"}],"signatures":[{"id":3874,"name":"hoverOver","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.hoverOver"}}],"overwrites":{"type":"reference","name":"PageElement.hoverOver"}},{"id":3875,"name":"rightClick","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":90,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L90"}],"signatures":[{"id":3876,"name":"rightClick","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.rightClick"}}],"overwrites":{"type":"reference","name":"PageElement.rightClick"}},{"id":3877,"name":"selectOptions","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":95,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L95"}],"signatures":[{"id":3878,"name":"selectOptions","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3879,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"type":{"type":"array","elementType":{"type":"reference","name":"SelectOption"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.selectOptions"}}],"overwrites":{"type":"reference","name":"PageElement.selectOptions"}},{"id":3880,"name":"selectedOptions","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":108,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L108"}],"signatures":[{"id":3881,"name":"selectedOptions","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"SelectOption"}}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.selectedOptions"}}],"overwrites":{"type":"reference","name":"PageElement.selectedOptions"}},{"id":3882,"name":"attribute","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":136,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L136"}],"signatures":[{"id":3883,"name":"attribute","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3884,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.attribute"}}],"overwrites":{"type":"reference","name":"PageElement.attribute"}},{"id":3885,"name":"text","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":141,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L141"}],"signatures":[{"id":3886,"name":"text","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.text"}}],"overwrites":{"type":"reference","name":"PageElement.text"}},{"id":3887,"name":"value","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":146,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L146"}],"signatures":[{"id":3888,"name":"value","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.value"}}],"overwrites":{"type":"reference","name":"PageElement.value"}},{"id":3889,"name":"switchTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":151,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L151"}],"signatures":[{"id":3890,"name":"switchTo","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"SwitchableOrigin"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.switchTo"}}],"overwrites":{"type":"reference","name":"PageElement.switchTo"}},{"id":3891,"name":"isActive","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":204,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L204"}],"signatures":[{"id":3892,"name":"isActive","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isActive"}}],"overwrites":{"type":"reference","name":"PageElement.isActive"}},{"id":3893,"name":"isClickable","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":209,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L209"}],"signatures":[{"id":3894,"name":"isClickable","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isClickable"}}],"overwrites":{"type":"reference","name":"PageElement.isClickable"}},{"id":3895,"name":"isEnabled","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":214,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L214"}],"signatures":[{"id":3896,"name":"isEnabled","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isEnabled"}}],"overwrites":{"type":"reference","name":"PageElement.isEnabled"}},{"id":3897,"name":"isPresent","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":219,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L219"}],"signatures":[{"id":3898,"name":"isPresent","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isPresent"}}],"overwrites":{"type":"reference","name":"PageElement.isPresent"}},{"id":3899,"name":"isSelected","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":224,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L224"}],"signatures":[{"id":3900,"name":"isSelected","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isSelected"}}],"overwrites":{"type":"reference","name":"PageElement.isSelected"}},{"id":3901,"name":"isVisible","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":229,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L229"}],"signatures":[{"id":3902,"name":"isVisible","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"PageElement.isVisible"}}],"overwrites":{"type":"reference","name":"PageElement.isVisible"}}],"groups":[{"title":"Properties","children":[3906]},{"title":"Constructors","children":[3853]},{"title":"Methods","children":[3907,3909,3856,3859,3862,3864,3866,3868,3871,3873,3875,3877,3880,3882,3885,3887,3889,3891,3893,3895,3897,3899,3901]}],"sources":[{"fileName":"packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts","line":15,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/screenplay/models/WebdriverIOPageElement.ts#L15"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","name":"Element","qualifiedName":"Element","package":"webdriverio"}],"name":"PageElement"}],"permalink":"/api/webdriverio/class/WebdriverIOPageElement","previousId":3723,"nextId":19}],"groups":[{"title":"Abilities","children":[3620]},{"title":"Configuration","children":[3531]},{"title":"Models","children":[3639,3679,3723,3839]},{"title":"Variables","children":[19]}],"sources":[{"fileName":"packages/webdriverio/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/webdriverio/src/index.ts#L1"}],"permalink":"/api/webdriverio"},"urlSlug":"webdriverio"}],"packageName":"@serenity-js/webdriverio","packageVersion":"3.10.2"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":43,"name":"@serenity-js/rest","kind":2,"kindString":"Module","flags":{},"children":[{"id":4845,"name":"DeleteRequest","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The DELETE method requests that the origin server remove the\\nassociation between the target resource and its current\\nfunctionality.\\n\\n## Create and then remove a resource\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { CallAnApi, DeleteRequest, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\n import { Ensure, equals, startsWith } from \'@serenity-js/assertions\'\\n\\n await actorCalled(\'Apisitt\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n   .attemptsTo(\\n     // create a new test user account\\n     Send.a(PostRequest.to(\'/users\').with({\\n         login: \'tester\',\\n         password: \'P@ssword1\',\\n     }),\\n     Ensure.that(LastResponse.status(), equals(201)),\\n     Ensure.that(LastResponse.header(\'Location\'), startsWith(\'/users\')),\\n\\n     // delete the test user account\\n     Send.a(DeleteRequest.to(LastResponse.header(\'Location\'))),\\n     Ensure.that(LastResponse.status(), equals(200)),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE\\n- https://tools.ietf.org/html/rfc7231#section-4.3.5"}]},"children":[{"id":4846,"name":"to","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/models/DeleteRequest.ts","line":55,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/DeleteRequest.ts#L55"}],"signatures":[{"id":4847,"name":"to","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated."}]},"parameters":[{"id":4848,"name":"resourceUri","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The URI where the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n should send the "},{"kind":"inline-tag","tag":"@apilink","text":"HTTPRequest"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","id":4845,"name":"DeleteRequest"}}]},{"id":5029,"name":"as","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":4}],"signatures":[{"id":5030,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":5031,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":5032,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5033,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":19}],"signatures":[{"id":5034,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5035,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","id":5031,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","id":5561,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","id":5560,"name":"HTTPRequest.as"}},{"id":4933,"name":"using","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/DeleteRequest.ts","line":71,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/DeleteRequest.ts#L71"}],"signatures":[{"id":4934,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"WithAnswerableProperties"},{"kind":"text","text":"\\n- [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)"}]},"parameters":[{"id":4935,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":4936,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4937,"name":"url","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":307,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":4938,"name":"method","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":308,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":4939,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":309,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":4940,"name":"transformRequest","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":310,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":4941,"name":"transformResponse","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":311,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":4942,"name":"headers","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":312,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ [x: string]: any; set: {}; get: {}; has: {}; delete: {}; clear: {}; normalize: {}; concat: {}; toJSON: {}; setContentType: {}; getContentType: {}; hasContentType: {}; setContentLength: {}; getContentLength: {}; ... 13 more ...; [Symbol.iterator]: {}; }"},{"type":"unknown","name":"{ [x: string]: Answerable<string> | Answerable<false> | Answerable<true> | Answerable<number> | { [x: string]: any; set: {}; get: {}; has: {}; ... 23 more ...; [Symbol.iterator]: {}; } | Answerable<...>[]; ... 16 more ...; common?: { ...; }; }"}]}},{"id":4943,"name":"params","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":313,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":4944,"name":"paramsSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":314,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ encode?: {}; serialize?: {}; visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<...> | Answerable<...>; }"},{"type":"unknown","name":"{}"}]}},{"id":4945,"name":"data","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":315,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":4946,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":316,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":4947,"name":"timeoutErrorMessage","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":317,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":4948,"name":"withCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":318,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":4949,"name":"adapter","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":319,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"}]}}]}},{"id":4950,"name":"auth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":320,"character":2}],"type":{"type":"unknown","name":"{ username: Answerable<string>; password: Answerable<string>; }"}},{"id":4951,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":321,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable"}]}},{"id":4952,"name":"responseEncoding","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":322,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":4953,"name":"xsrfCookieName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":323,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":4954,"name":"xsrfHeaderName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":324,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":4955,"name":"onUploadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":325,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":4956,"name":"onDownloadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":326,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":4957,"name":"maxContentLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":327,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":4958,"name":"validateStatus","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":328,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":4959,"name":"maxBodyLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":329,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":4960,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":330,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":4961,"name":"maxRate","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":331,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"tuple","elements":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}]}]}},{"id":4962,"name":"beforeRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":332,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":4963,"name":"socketPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":333,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":4964,"name":"transport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":334,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":4965,"name":"httpAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":335,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":4966,"name":"httpsAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":336,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":4967,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":337,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"unknown","name":"{ host: Answerable<string>; port: Answerable<number>; auth?: { username: Answerable<string>; password: Answerable<string>; }; protocol?: Answerable<...>; }"}]}},{"id":4968,"name":"cancelToken","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":338,"character":2}],"type":{"type":"unknown","name":"{ promise: Answerable<Cancel>; reason?: { message: Answerable<string>; }; throwIfRequested: {}; }"}},{"id":4969,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":339,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":4970,"name":"transitional","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":340,"character":2}],"type":{"type":"unknown","name":"{ silentJSONParsing?: Answerable<false> | Answerable<true>; forcedJSONParsing?: Answerable<false> | Answerable<true>; clarifyTimeoutError?: Answerable<...> | Answerable<...>; }"}},{"id":4971,"name":"signal","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":341,"character":2}],"type":{"type":"unknown","name":"{ readonly aborted: Answerable<false> | Answerable<true>; onabort?: {}; addEventListener?: {}; removeEventListener?: {}; }"}},{"id":4972,"name":"insecureHTTPParser","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":342,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":4973,"name":"env","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":343,"character":2}],"type":{"type":"unknown","name":"{ FormData?: {}; }"}},{"id":4974,"name":"formSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":346,"character":2}],"type":{"type":"unknown","name":"{ visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<false> | Answerable<...>; }"}},{"id":4975,"name":"family","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":347,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":4}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":6}],"name":"Answerable"}]}},{"id":4976,"name":"lookup","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":348,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"unknown","name":"{}"}]}}],"groups":[{"title":"Properties","children":[4937,4938,4939,4940,4941,4942,4943,4944,4945,4946,4947,4948,4949,4950,4951,4952,4953,4954,4955,4956,4957,4958,4959,4960,4961,4962,4963,4964,4965,4966,4967,4968,4969,4970,4971,4972,4973,4974,4975,4976]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.d.ts","line":30,"character":188}]}}],"name":"Answerable"}}],"type":{"type":"reference","id":4845,"name":"DeleteRequest"}}]},{"id":5021,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":39,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L39"}],"signatures":[{"id":5022,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5023,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":5549,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","id":5548,"name":"HTTPRequest.answeredBy"}},{"id":5024,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":68,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L68"}],"signatures":[{"id":5025,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5026,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":4845,"name":"DeleteRequest"},"inheritedFrom":{"type":"reference","id":5552,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","id":5551,"name":"HTTPRequest.describedAs"}},{"id":5027,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":76,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L76"}],"signatures":[{"id":5028,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":5555,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","id":5554,"name":"HTTPRequest.toString"}}],"groups":[{"title":"Methods","children":[4846,5029,4933,5021,5024,5027]}],"sources":[{"fileName":"packages/rest/src/models/DeleteRequest.ts","line":42,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/DeleteRequest.ts#L42"}],"extendedTypes":[{"type":"reference","id":5418,"name":"HTTPRequest"}],"permalink":"/api/rest/class/DeleteRequest","previousId":6392,"nextId":5036},{"id":5036,"name":"GetRequest","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The HTTP GET method requests a representation of the specified resource.\\nIt is the most frequent type of request made by consumers of a typical HTTP API.\\nFor this reason it\'s important to test every known endpoint that responds to GET requests and ensure that it\\nbehaves correctly.\\n\\nSince the GET method is used to _retrieve_ data from a server, it should be implemented\\nas [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe)\\nand [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\\nThis means that an identical request can be made once or several times in a row with the same effect while leaving\\nthe server in the same state.\\n\\n## Verify response to a GET request\\n\\n"},{"kind":"code","text":"```ts\\n import { actorCalled } from \'@serenity-js/core\'\\n import { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\n import { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n interface Book {\\n     title: string;\\n     author: string;\\n }\\n\\n await actorCalled(\'Apisitt\')\\n   .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n   .attemptsTo(\\n     Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n     Ensure.that(LastResponse.status(), equals(200)),\\n     Ensure.that(LastResponse.body<Book>(), equals({\\n         title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n         author: \'Robert M. Pirsig\',\\n     })),\\n   )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET\\n- https://tools.ietf.org/html/rfc7231#section-4.3.1"}]},"children":[{"id":5037,"name":"to","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/models/GetRequest.ts","line":62,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/GetRequest.ts#L62"}],"signatures":[{"id":5038,"name":"to","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated."}]},"parameters":[{"id":5039,"name":"resourceUri","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The URI where the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n should send the "},{"kind":"inline-tag","tag":"@apilink","text":"HTTPRequest"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","id":5036,"name":"GetRequest"}}]},{"id":5220,"name":"as","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":4}],"signatures":[{"id":5221,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":5222,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":5223,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5224,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":19}],"signatures":[{"id":5225,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5226,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","id":5031,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","id":5561,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","id":5560,"name":"HTTPRequest.as"}},{"id":5124,"name":"using","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/GetRequest.ts","line":78,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/GetRequest.ts#L78"}],"signatures":[{"id":5125,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"WithAnswerableProperties"},{"kind":"text","text":"\\n- [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)"}]},"parameters":[{"id":5126,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":5127,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5128,"name":"url","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":307,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5129,"name":"method","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":308,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5130,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":309,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5131,"name":"transformRequest","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":310,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":5132,"name":"transformResponse","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":311,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":5133,"name":"headers","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":312,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ [x: string]: any; set: {}; get: {}; has: {}; delete: {}; clear: {}; normalize: {}; concat: {}; toJSON: {}; setContentType: {}; getContentType: {}; hasContentType: {}; setContentLength: {}; getContentLength: {}; ... 13 more ...; [Symbol.iterator]: {}; }"},{"type":"unknown","name":"{ [x: string]: Answerable<string> | Answerable<false> | Answerable<true> | Answerable<number> | { [x: string]: any; set: {}; get: {}; has: {}; ... 23 more ...; [Symbol.iterator]: {}; } | Answerable<...>[]; ... 16 more ...; common?: { ...; }; }"}]}},{"id":5134,"name":"params","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":313,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5135,"name":"paramsSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":314,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ encode?: {}; serialize?: {}; visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<...> | Answerable<...>; }"},{"type":"unknown","name":"{}"}]}},{"id":5136,"name":"data","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":315,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5137,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":316,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5138,"name":"timeoutErrorMessage","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":317,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5139,"name":"withCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":318,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5140,"name":"adapter","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":319,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"}]}}]}},{"id":5141,"name":"auth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":320,"character":2}],"type":{"type":"unknown","name":"{ username: Answerable<string>; password: Answerable<string>; }"}},{"id":5142,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":321,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable"}]}},{"id":5143,"name":"responseEncoding","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":322,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5144,"name":"xsrfCookieName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":323,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5145,"name":"xsrfHeaderName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":324,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5146,"name":"onUploadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":325,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5147,"name":"onDownloadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":326,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5148,"name":"maxContentLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":327,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5149,"name":"validateStatus","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":328,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5150,"name":"maxBodyLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":329,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5151,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":330,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5152,"name":"maxRate","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":331,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"tuple","elements":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}]}]}},{"id":5153,"name":"beforeRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":332,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5154,"name":"socketPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":333,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5155,"name":"transport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":334,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5156,"name":"httpAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":335,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5157,"name":"httpsAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":336,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5158,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":337,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"unknown","name":"{ host: Answerable<string>; port: Answerable<number>; auth?: { username: Answerable<string>; password: Answerable<string>; }; protocol?: Answerable<...>; }"}]}},{"id":5159,"name":"cancelToken","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":338,"character":2}],"type":{"type":"unknown","name":"{ promise: Answerable<Cancel>; reason?: { message: Answerable<string>; }; throwIfRequested: {}; }"}},{"id":5160,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":339,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5161,"name":"transitional","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":340,"character":2}],"type":{"type":"unknown","name":"{ silentJSONParsing?: Answerable<false> | Answerable<true>; forcedJSONParsing?: Answerable<false> | Answerable<true>; clarifyTimeoutError?: Answerable<...> | Answerable<...>; }"}},{"id":5162,"name":"signal","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":341,"character":2}],"type":{"type":"unknown","name":"{ readonly aborted: Answerable<false> | Answerable<true>; onabort?: {}; addEventListener?: {}; removeEventListener?: {}; }"}},{"id":5163,"name":"insecureHTTPParser","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":342,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5164,"name":"env","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":343,"character":2}],"type":{"type":"unknown","name":"{ FormData?: {}; }"}},{"id":5165,"name":"formSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":346,"character":2}],"type":{"type":"unknown","name":"{ visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<false> | Answerable<...>; }"}},{"id":5166,"name":"family","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":347,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":4}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":6}],"name":"Answerable"}]}},{"id":5167,"name":"lookup","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":348,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"unknown","name":"{}"}]}}],"groups":[{"title":"Properties","children":[5128,5129,5130,5131,5132,5133,5134,5135,5136,5137,5138,5139,5140,5141,5142,5143,5144,5145,5146,5147,5148,5149,5150,5151,5152,5153,5154,5155,5156,5157,5158,5159,5160,5161,5162,5163,5164,5165,5166,5167]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.d.ts","line":30,"character":188}]}}],"name":"Answerable"}}],"type":{"type":"reference","id":5036,"name":"GetRequest"}}]},{"id":5212,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":39,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L39"}],"signatures":[{"id":5213,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5214,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":5549,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","id":5548,"name":"HTTPRequest.answeredBy"}},{"id":5215,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":68,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L68"}],"signatures":[{"id":5216,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5217,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":5036,"name":"GetRequest"},"inheritedFrom":{"type":"reference","id":5552,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","id":5551,"name":"HTTPRequest.describedAs"}},{"id":5218,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":76,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L76"}],"signatures":[{"id":5219,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":5555,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","id":5554,"name":"HTTPRequest.toString"}}],"groups":[{"title":"Methods","children":[5037,5220,5124,5212,5215,5218]}],"sources":[{"fileName":"packages/rest/src/models/GetRequest.ts","line":49,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/GetRequest.ts#L49"}],"extendedTypes":[{"type":"reference","id":5418,"name":"HTTPRequest"}],"permalink":"/api/rest/class/GetRequest","previousId":4845,"nextId":5418},{"id":5418,"name":"HTTPRequest","kind":128,"kindString":"Class","flags":{"isAbstract":true},"comment":{"summary":[{"kind":"text","text":"HTTP Request sent by the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\nusing the "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"Send"}]},"children":[{"id":5560,"name":"as","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":4}],"signatures":[{"id":5561,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":5562,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":5563,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5564,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":19}],"signatures":[{"id":5565,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5566,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","id":5031,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","name":"Question.as"}}],"inheritedFrom":{"type":"reference","name":"Question.as"}},{"id":5548,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":39,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L39"}],"signatures":[{"id":5549,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5550,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Question.answeredBy"}}],"overwrites":{"type":"reference","name":"Question.answeredBy"}},{"id":5551,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":68,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L68"}],"signatures":[{"id":5552,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5553,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":5418,"name":"HTTPRequest"},"overwrites":{"type":"reference","name":"Question.describedAs"}}],"overwrites":{"type":"reference","name":"Question.describedAs"}},{"id":5554,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":76,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L76"}],"signatures":[{"id":5555,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"type":{"type":"intrinsic","name":"string"},"overwrites":{"type":"reference","name":"Question.toString"}}],"overwrites":{"type":"reference","name":"Question.toString"}}],"groups":[{"title":"Methods","children":[5560,5548,5551,5554]}],"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":12,"character":22,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L12"}],"extendedTypes":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}],"name":"Question"}],"extendedBy":[{"type":"reference","id":4845,"name":"DeleteRequest"},{"type":"reference","id":5036,"name":"GetRequest"},{"type":"reference","id":5227,"name":"HeadRequest"},{"type":"reference","id":5567,"name":"OptionsRequest"},{"type":"reference","id":5758,"name":"PatchRequest"},{"type":"reference","id":5952,"name":"PostRequest"},{"type":"reference","id":6146,"name":"PutRequest"}],"permalink":"/api/rest/class/HTTPRequest","previousId":5036,"nextId":5227},{"id":5227,"name":"HeadRequest","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The HTTP HEAD method requests the headers that are returned if the specified resource\\nwould be requested with an HTTP GET method.\\nSuch a request can be done before deciding to download a large resource to save bandwidth, for example.\\n\\n## File download test\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, HeadRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(HeadRequest.to(\'/downloads/my-test-document.pdf\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Content-Length\'), equals(256)), // assuming we know the size of the document\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD\\n- https://tools.ietf.org/html/rfc7231#section-4.3.2"}]},"children":[{"id":5228,"name":"to","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/models/HeadRequest.ts","line":47,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HeadRequest.ts#L47"}],"signatures":[{"id":5229,"name":"to","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated."}]},"parameters":[{"id":5230,"name":"resourceUri","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The URI where the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n should send the "},{"kind":"inline-tag","tag":"@apilink","text":"HTTPRequest"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","id":5227,"name":"HeadRequest"}}]},{"id":5411,"name":"as","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":4}],"signatures":[{"id":5412,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":5413,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":5414,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5415,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":19}],"signatures":[{"id":5416,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5417,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","id":5031,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","id":5561,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","id":5560,"name":"HTTPRequest.as"}},{"id":5403,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":39,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L39"}],"signatures":[{"id":5404,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5405,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":5549,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","id":5548,"name":"HTTPRequest.answeredBy"}},{"id":5406,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":68,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L68"}],"signatures":[{"id":5407,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5408,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":5227,"name":"HeadRequest"},"inheritedFrom":{"type":"reference","id":5552,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","id":5551,"name":"HTTPRequest.describedAs"}},{"id":5409,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":76,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L76"}],"signatures":[{"id":5410,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":5555,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","id":5554,"name":"HTTPRequest.toString"}},{"id":5315,"name":"using","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HeadRequest.ts","line":63,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HeadRequest.ts#L63"}],"signatures":[{"id":5316,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"WithAnswerableProperties"},{"kind":"text","text":"\\n- [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)"}]},"parameters":[{"id":5317,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":5318,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5319,"name":"url","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":307,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5320,"name":"method","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":308,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5321,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":309,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5322,"name":"transformRequest","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":310,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":5323,"name":"transformResponse","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":311,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":5324,"name":"headers","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":312,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ [x: string]: any; set: {}; get: {}; has: {}; delete: {}; clear: {}; normalize: {}; concat: {}; toJSON: {}; setContentType: {}; getContentType: {}; hasContentType: {}; setContentLength: {}; getContentLength: {}; ... 13 more ...; [Symbol.iterator]: {}; }"},{"type":"unknown","name":"{ [x: string]: Answerable<string> | Answerable<false> | Answerable<true> | Answerable<number> | { [x: string]: any; set: {}; get: {}; has: {}; ... 23 more ...; [Symbol.iterator]: {}; } | Answerable<...>[]; ... 16 more ...; common?: { ...; }; }"}]}},{"id":5325,"name":"params","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":313,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5326,"name":"paramsSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":314,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ encode?: {}; serialize?: {}; visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<...> | Answerable<...>; }"},{"type":"unknown","name":"{}"}]}},{"id":5327,"name":"data","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":315,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5328,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":316,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5329,"name":"timeoutErrorMessage","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":317,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5330,"name":"withCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":318,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5331,"name":"adapter","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":319,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"}]}}]}},{"id":5332,"name":"auth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":320,"character":2}],"type":{"type":"unknown","name":"{ username: Answerable<string>; password: Answerable<string>; }"}},{"id":5333,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":321,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable"}]}},{"id":5334,"name":"responseEncoding","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":322,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5335,"name":"xsrfCookieName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":323,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5336,"name":"xsrfHeaderName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":324,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5337,"name":"onUploadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":325,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5338,"name":"onDownloadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":326,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5339,"name":"maxContentLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":327,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5340,"name":"validateStatus","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":328,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5341,"name":"maxBodyLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":329,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5342,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":330,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5343,"name":"maxRate","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":331,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"tuple","elements":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}]}]}},{"id":5344,"name":"beforeRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":332,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5345,"name":"socketPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":333,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5346,"name":"transport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":334,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5347,"name":"httpAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":335,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5348,"name":"httpsAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":336,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5349,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":337,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"unknown","name":"{ host: Answerable<string>; port: Answerable<number>; auth?: { username: Answerable<string>; password: Answerable<string>; }; protocol?: Answerable<...>; }"}]}},{"id":5350,"name":"cancelToken","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":338,"character":2}],"type":{"type":"unknown","name":"{ promise: Answerable<Cancel>; reason?: { message: Answerable<string>; }; throwIfRequested: {}; }"}},{"id":5351,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":339,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5352,"name":"transitional","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":340,"character":2}],"type":{"type":"unknown","name":"{ silentJSONParsing?: Answerable<false> | Answerable<true>; forcedJSONParsing?: Answerable<false> | Answerable<true>; clarifyTimeoutError?: Answerable<...> | Answerable<...>; }"}},{"id":5353,"name":"signal","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":341,"character":2}],"type":{"type":"unknown","name":"{ readonly aborted: Answerable<false> | Answerable<true>; onabort?: {}; addEventListener?: {}; removeEventListener?: {}; }"}},{"id":5354,"name":"insecureHTTPParser","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":342,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5355,"name":"env","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":343,"character":2}],"type":{"type":"unknown","name":"{ FormData?: {}; }"}},{"id":5356,"name":"formSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":346,"character":2}],"type":{"type":"unknown","name":"{ visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<false> | Answerable<...>; }"}},{"id":5357,"name":"family","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":347,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":4}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":6}],"name":"Answerable"}]}},{"id":5358,"name":"lookup","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":348,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"unknown","name":"{}"}]}}],"groups":[{"title":"Properties","children":[5319,5320,5321,5322,5323,5324,5325,5326,5327,5328,5329,5330,5331,5332,5333,5334,5335,5336,5337,5338,5339,5340,5341,5342,5343,5344,5345,5346,5347,5348,5349,5350,5351,5352,5353,5354,5355,5356,5357,5358]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.d.ts","line":30,"character":188}]}}],"name":"Answerable"}}],"type":{"type":"reference","id":5227,"name":"HeadRequest"}}]}],"groups":[{"title":"Methods","children":[5228,5411,5403,5406,5409,5315]}],"sources":[{"fileName":"packages/rest/src/models/HeadRequest.ts","line":34,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HeadRequest.ts#L34"}],"extendedTypes":[{"type":"reference","id":5418,"name":"HTTPRequest"}],"permalink":"/api/rest/class/HeadRequest","previousId":5418,"nextId":5567},{"id":5567,"name":"OptionsRequest","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The OPTIONS method requests information about the communication\\noptions available for the target resource, at either the origin\\nserver or an intervening intermediary.  This method allows a client\\nto determine the options and/or requirements associated with a\\nresource, or the capabilities of a server, without implying a\\nresource action.\\n\\n## File download test\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, OptionsRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(OptionsRequest.to(\'/downloads/my-test-document.pdf\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Allow\'), equals(\'OPTIONS, GET, HEAD\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS\\n- https://tools.ietf.org/html/rfc7231#section-4.3.7"}]},"children":[{"id":5568,"name":"to","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/models/OptionsRequest.ts","line":50,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/OptionsRequest.ts#L50"}],"signatures":[{"id":5569,"name":"to","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated."}]},"parameters":[{"id":5570,"name":"resourceUri","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The URI where the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n should send the "},{"kind":"inline-tag","tag":"@apilink","text":"HTTPRequest"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","id":5567,"name":"OptionsRequest"}}]},{"id":5751,"name":"as","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":4}],"signatures":[{"id":5752,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":5753,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":5754,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5755,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":19}],"signatures":[{"id":5756,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5757,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","id":5031,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","id":5561,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","id":5560,"name":"HTTPRequest.as"}},{"id":5743,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":39,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L39"}],"signatures":[{"id":5744,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5745,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":5549,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","id":5548,"name":"HTTPRequest.answeredBy"}},{"id":5746,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":68,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L68"}],"signatures":[{"id":5747,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5748,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":5567,"name":"OptionsRequest"},"inheritedFrom":{"type":"reference","id":5552,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","id":5551,"name":"HTTPRequest.describedAs"}},{"id":5749,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":76,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L76"}],"signatures":[{"id":5750,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":5555,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","id":5554,"name":"HTTPRequest.toString"}},{"id":5655,"name":"using","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/OptionsRequest.ts","line":66,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/OptionsRequest.ts#L66"}],"signatures":[{"id":5656,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"WithAnswerableProperties"},{"kind":"text","text":"\\n- [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)"}]},"parameters":[{"id":5657,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":5658,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5659,"name":"url","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":307,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5660,"name":"method","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":308,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5661,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":309,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5662,"name":"transformRequest","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":310,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":5663,"name":"transformResponse","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":311,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":5664,"name":"headers","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":312,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ [x: string]: any; set: {}; get: {}; has: {}; delete: {}; clear: {}; normalize: {}; concat: {}; toJSON: {}; setContentType: {}; getContentType: {}; hasContentType: {}; setContentLength: {}; getContentLength: {}; ... 13 more ...; [Symbol.iterator]: {}; }"},{"type":"unknown","name":"{ [x: string]: Answerable<string> | Answerable<false> | Answerable<true> | Answerable<number> | { [x: string]: any; set: {}; get: {}; has: {}; ... 23 more ...; [Symbol.iterator]: {}; } | Answerable<...>[]; ... 16 more ...; common?: { ...; }; }"}]}},{"id":5665,"name":"params","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":313,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5666,"name":"paramsSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":314,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ encode?: {}; serialize?: {}; visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<...> | Answerable<...>; }"},{"type":"unknown","name":"{}"}]}},{"id":5667,"name":"data","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":315,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5668,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":316,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5669,"name":"timeoutErrorMessage","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":317,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5670,"name":"withCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":318,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5671,"name":"adapter","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":319,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"}]}}]}},{"id":5672,"name":"auth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":320,"character":2}],"type":{"type":"unknown","name":"{ username: Answerable<string>; password: Answerable<string>; }"}},{"id":5673,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":321,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable"}]}},{"id":5674,"name":"responseEncoding","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":322,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5675,"name":"xsrfCookieName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":323,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5676,"name":"xsrfHeaderName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":324,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5677,"name":"onUploadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":325,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5678,"name":"onDownloadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":326,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5679,"name":"maxContentLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":327,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5680,"name":"validateStatus","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":328,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5681,"name":"maxBodyLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":329,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5682,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":330,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5683,"name":"maxRate","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":331,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"tuple","elements":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}]}]}},{"id":5684,"name":"beforeRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":332,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5685,"name":"socketPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":333,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5686,"name":"transport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":334,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5687,"name":"httpAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":335,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5688,"name":"httpsAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":336,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5689,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":337,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"unknown","name":"{ host: Answerable<string>; port: Answerable<number>; auth?: { username: Answerable<string>; password: Answerable<string>; }; protocol?: Answerable<...>; }"}]}},{"id":5690,"name":"cancelToken","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":338,"character":2}],"type":{"type":"unknown","name":"{ promise: Answerable<Cancel>; reason?: { message: Answerable<string>; }; throwIfRequested: {}; }"}},{"id":5691,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":339,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5692,"name":"transitional","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":340,"character":2}],"type":{"type":"unknown","name":"{ silentJSONParsing?: Answerable<false> | Answerable<true>; forcedJSONParsing?: Answerable<false> | Answerable<true>; clarifyTimeoutError?: Answerable<...> | Answerable<...>; }"}},{"id":5693,"name":"signal","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":341,"character":2}],"type":{"type":"unknown","name":"{ readonly aborted: Answerable<false> | Answerable<true>; onabort?: {}; addEventListener?: {}; removeEventListener?: {}; }"}},{"id":5694,"name":"insecureHTTPParser","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":342,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5695,"name":"env","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":343,"character":2}],"type":{"type":"unknown","name":"{ FormData?: {}; }"}},{"id":5696,"name":"formSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":346,"character":2}],"type":{"type":"unknown","name":"{ visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<false> | Answerable<...>; }"}},{"id":5697,"name":"family","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":347,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":4}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":6}],"name":"Answerable"}]}},{"id":5698,"name":"lookup","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":348,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"unknown","name":"{}"}]}}],"groups":[{"title":"Properties","children":[5659,5660,5661,5662,5663,5664,5665,5666,5667,5668,5669,5670,5671,5672,5673,5674,5675,5676,5677,5678,5679,5680,5681,5682,5683,5684,5685,5686,5687,5688,5689,5690,5691,5692,5693,5694,5695,5696,5697,5698]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.d.ts","line":30,"character":188}]}}],"name":"Answerable"}}],"type":{"type":"reference","id":5567,"name":"OptionsRequest"}}]}],"groups":[{"title":"Methods","children":[5568,5751,5743,5746,5749,5655]}],"sources":[{"fileName":"packages/rest/src/models/OptionsRequest.ts","line":37,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/OptionsRequest.ts#L37"}],"extendedTypes":[{"type":"reference","id":5418,"name":"HTTPRequest"}],"permalink":"/api/rest/class/OptionsRequest","previousId":5227,"nextId":5758},{"id":5758,"name":"PatchRequest","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The PATCH method requests that a set of changes described in the\\nrequest entity be applied to the resource identified by the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\n## Add new resource to a collection\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PatchRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PatchRequest.to(\'/books/0-688-00230-7\').with({\\n      lastReadOn: \'2016-06-16\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(204)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH\\n- https://tools.ietf.org/html/rfc5789"}]},"children":[{"id":5759,"name":"to","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/models/PatchRequest.ts","line":47,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PatchRequest.ts#L47"}],"signatures":[{"id":5760,"name":"to","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated."}]},"parameters":[{"id":5761,"name":"resourceUri","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The URI where the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n should send the "},{"kind":"inline-tag","tag":"@apilink","text":"HTTPRequest"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","id":5758,"name":"PatchRequest"}}]},{"id":5945,"name":"as","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":4}],"signatures":[{"id":5946,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":5947,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":5948,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":5949,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":19}],"signatures":[{"id":5950,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":5951,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","id":5031,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","id":5561,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","id":5560,"name":"HTTPRequest.as"}},{"id":5937,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":39,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L39"}],"signatures":[{"id":5938,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5939,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":5549,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","id":5548,"name":"HTTPRequest.answeredBy"}},{"id":5940,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":68,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L68"}],"signatures":[{"id":5941,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":5942,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":5758,"name":"PatchRequest"},"inheritedFrom":{"type":"reference","id":5552,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","id":5551,"name":"HTTPRequest.describedAs"}},{"id":5943,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":76,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L76"}],"signatures":[{"id":5944,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":5555,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","id":5554,"name":"HTTPRequest.toString"}},{"id":5846,"name":"with","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/PatchRequest.ts","line":57,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PatchRequest.ts#L57"}],"signatures":[{"id":5847,"name":"with","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"parameters":[{"id":5848,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":5758,"name":"PatchRequest"}}]},{"id":5849,"name":"using","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/PatchRequest.ts","line":73,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PatchRequest.ts#L73"}],"signatures":[{"id":5850,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"WithAnswerableProperties"},{"kind":"text","text":"\\n- [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)"}]},"parameters":[{"id":5851,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":5852,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":5853,"name":"url","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":307,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5854,"name":"method","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":308,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5855,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":309,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5856,"name":"transformRequest","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":310,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":5857,"name":"transformResponse","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":311,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":5858,"name":"headers","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":312,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ [x: string]: any; set: {}; get: {}; has: {}; delete: {}; clear: {}; normalize: {}; concat: {}; toJSON: {}; setContentType: {}; getContentType: {}; hasContentType: {}; setContentLength: {}; getContentLength: {}; ... 13 more ...; [Symbol.iterator]: {}; }"},{"type":"unknown","name":"{ [x: string]: Answerable<string> | Answerable<false> | Answerable<true> | Answerable<number> | { [x: string]: any; set: {}; get: {}; has: {}; ... 23 more ...; [Symbol.iterator]: {}; } | Answerable<...>[]; ... 16 more ...; common?: { ...; }; }"}]}},{"id":5859,"name":"params","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":313,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5860,"name":"paramsSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":314,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ encode?: {}; serialize?: {}; visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<...> | Answerable<...>; }"},{"type":"unknown","name":"{}"}]}},{"id":5861,"name":"data","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":315,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5862,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":316,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5863,"name":"timeoutErrorMessage","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":317,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5864,"name":"withCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":318,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5865,"name":"adapter","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":319,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"}]}}]}},{"id":5866,"name":"auth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":320,"character":2}],"type":{"type":"unknown","name":"{ username: Answerable<string>; password: Answerable<string>; }"}},{"id":5867,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":321,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable"}]}},{"id":5868,"name":"responseEncoding","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":322,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5869,"name":"xsrfCookieName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":323,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5870,"name":"xsrfHeaderName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":324,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5871,"name":"onUploadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":325,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5872,"name":"onDownloadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":326,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5873,"name":"maxContentLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":327,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5874,"name":"validateStatus","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":328,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5875,"name":"maxBodyLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":329,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5876,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":330,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":5877,"name":"maxRate","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":331,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"tuple","elements":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}]}]}},{"id":5878,"name":"beforeRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":332,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":5879,"name":"socketPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":333,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":5880,"name":"transport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":334,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5881,"name":"httpAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":335,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5882,"name":"httpsAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":336,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":5883,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":337,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"unknown","name":"{ host: Answerable<string>; port: Answerable<number>; auth?: { username: Answerable<string>; password: Answerable<string>; }; protocol?: Answerable<...>; }"}]}},{"id":5884,"name":"cancelToken","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":338,"character":2}],"type":{"type":"unknown","name":"{ promise: Answerable<Cancel>; reason?: { message: Answerable<string>; }; throwIfRequested: {}; }"}},{"id":5885,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":339,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5886,"name":"transitional","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":340,"character":2}],"type":{"type":"unknown","name":"{ silentJSONParsing?: Answerable<false> | Answerable<true>; forcedJSONParsing?: Answerable<false> | Answerable<true>; clarifyTimeoutError?: Answerable<...> | Answerable<...>; }"}},{"id":5887,"name":"signal","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":341,"character":2}],"type":{"type":"unknown","name":"{ readonly aborted: Answerable<false> | Answerable<true>; onabort?: {}; addEventListener?: {}; removeEventListener?: {}; }"}},{"id":5888,"name":"insecureHTTPParser","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":342,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":5889,"name":"env","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":343,"character":2}],"type":{"type":"unknown","name":"{ FormData?: {}; }"}},{"id":5890,"name":"formSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":346,"character":2}],"type":{"type":"unknown","name":"{ visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<false> | Answerable<...>; }"}},{"id":5891,"name":"family","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":347,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":4}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":6}],"name":"Answerable"}]}},{"id":5892,"name":"lookup","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":348,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"unknown","name":"{}"}]}}],"groups":[{"title":"Properties","children":[5853,5854,5855,5856,5857,5858,5859,5860,5861,5862,5863,5864,5865,5866,5867,5868,5869,5870,5871,5872,5873,5874,5875,5876,5877,5878,5879,5880,5881,5882,5883,5884,5885,5886,5887,5888,5889,5890,5891,5892]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.d.ts","line":30,"character":188}]}}],"name":"Answerable"}}],"type":{"type":"reference","id":5758,"name":"PatchRequest"}}]}],"groups":[{"title":"Methods","children":[5759,5945,5937,5940,5943,5846,5849]}],"sources":[{"fileName":"packages/rest/src/models/PatchRequest.ts","line":34,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PatchRequest.ts#L34"}],"extendedTypes":[{"type":"reference","id":5418,"name":"HTTPRequest"}],"permalink":"/api/rest/class/PatchRequest","previousId":5567,"nextId":5952},{"id":5952,"name":"PostRequest","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The HTTP POST method requests that the origin server accepts\\nthe entity enclosed in the request as a new subordinate of the resource\\nidentified by the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\nThis means that the POST should be used when you want to create a child resource under\\na collection of resources.\\n\\nPOST request is neither [safe](https://developer.mozilla.org/en-US/docs/Glossary/Safe),\\nnor [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent).\\nThis means that if you retry a POST request N times,\\na correctly implemented HTTP REST API will create N resources with N different URIs.\\n\\n## Add new resource to a collection\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PostRequest.to(\'/books\').with({\\n      isbn: \'0-688-00230-7\',\\n      title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n      author: \'Robert M. Pirsig\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(201)),\\n    Ensure.that(LastResponse.header(\'Location\'), equals(\'/books/0-688-00230-7\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Submit an HTML form\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse, PostRequest, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { stringify } from \'querystring\'\\n\\nconst formData = stringify({\\n    name: actor.name,\\n    email: `${ actor.name }@example.com`,\\n    text: \'Your website is great! Learnt a lot :-)\'\\n});\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PostRequest.to(\'/feedback\').with(postData).using({\\n      headers: {\\n        \'Content-Type\': \'application/x-www-form-urlencoded\',\\n        \'Content-Length\': formData.length\\n      }\\n    })),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Location\'), equals(\'/feedback/thank-you.html\')),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST\\n- https://tools.ietf.org/html/rfc7231#section-4.3.3"}]},"children":[{"id":5953,"name":"to","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/models/PostRequest.ts","line":87,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PostRequest.ts#L87"}],"signatures":[{"id":5954,"name":"to","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated."}]},"parameters":[{"id":5955,"name":"resourceUri","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The URI where the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n should send the "},{"kind":"inline-tag","tag":"@apilink","text":"HTTPRequest"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","id":5952,"name":"PostRequest"}}]},{"id":6139,"name":"as","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":4}],"signatures":[{"id":6140,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":6141,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":6142,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":6143,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":19}],"signatures":[{"id":6144,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":6145,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","id":5031,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","id":5561,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","id":5560,"name":"HTTPRequest.as"}},{"id":6131,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":39,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L39"}],"signatures":[{"id":6132,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":6133,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":5549,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","id":5548,"name":"HTTPRequest.answeredBy"}},{"id":6134,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":68,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L68"}],"signatures":[{"id":6135,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":6136,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":5952,"name":"PostRequest"},"inheritedFrom":{"type":"reference","id":5552,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","id":5551,"name":"HTTPRequest.describedAs"}},{"id":6137,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":76,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L76"}],"signatures":[{"id":6138,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":5555,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","id":5554,"name":"HTTPRequest.toString"}},{"id":6040,"name":"with","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/PostRequest.ts","line":97,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PostRequest.ts#L97"}],"signatures":[{"id":6041,"name":"with","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"parameters":[{"id":6042,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":5952,"name":"PostRequest"}}]},{"id":6043,"name":"using","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/PostRequest.ts","line":113,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PostRequest.ts#L113"}],"signatures":[{"id":6044,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"WithAnswerableProperties"},{"kind":"text","text":"\\n- [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)"}]},"parameters":[{"id":6045,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":6046,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":6047,"name":"url","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":307,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6048,"name":"method","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":308,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6049,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":309,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6050,"name":"transformRequest","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":310,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":6051,"name":"transformResponse","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":311,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":6052,"name":"headers","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":312,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ [x: string]: any; set: {}; get: {}; has: {}; delete: {}; clear: {}; normalize: {}; concat: {}; toJSON: {}; setContentType: {}; getContentType: {}; hasContentType: {}; setContentLength: {}; getContentLength: {}; ... 13 more ...; [Symbol.iterator]: {}; }"},{"type":"unknown","name":"{ [x: string]: Answerable<string> | Answerable<false> | Answerable<true> | Answerable<number> | { [x: string]: any; set: {}; get: {}; has: {}; ... 23 more ...; [Symbol.iterator]: {}; } | Answerable<...>[]; ... 16 more ...; common?: { ...; }; }"}]}},{"id":6053,"name":"params","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":313,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":6054,"name":"paramsSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":314,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ encode?: {}; serialize?: {}; visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<...> | Answerable<...>; }"},{"type":"unknown","name":"{}"}]}},{"id":6055,"name":"data","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":315,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":6056,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":316,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":6057,"name":"timeoutErrorMessage","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":317,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6058,"name":"withCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":318,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":6059,"name":"adapter","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":319,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"}]}}]}},{"id":6060,"name":"auth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":320,"character":2}],"type":{"type":"unknown","name":"{ username: Answerable<string>; password: Answerable<string>; }"}},{"id":6061,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":321,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable"}]}},{"id":6062,"name":"responseEncoding","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":322,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6063,"name":"xsrfCookieName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":323,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6064,"name":"xsrfHeaderName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":324,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6065,"name":"onUploadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":325,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":6066,"name":"onDownloadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":326,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":6067,"name":"maxContentLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":327,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":6068,"name":"validateStatus","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":328,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":6069,"name":"maxBodyLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":329,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":6070,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":330,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":6071,"name":"maxRate","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":331,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"tuple","elements":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}]}]}},{"id":6072,"name":"beforeRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":332,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":6073,"name":"socketPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":333,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6074,"name":"transport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":334,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":6075,"name":"httpAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":335,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":6076,"name":"httpsAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":336,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":6077,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":337,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"unknown","name":"{ host: Answerable<string>; port: Answerable<number>; auth?: { username: Answerable<string>; password: Answerable<string>; }; protocol?: Answerable<...>; }"}]}},{"id":6078,"name":"cancelToken","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":338,"character":2}],"type":{"type":"unknown","name":"{ promise: Answerable<Cancel>; reason?: { message: Answerable<string>; }; throwIfRequested: {}; }"}},{"id":6079,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":339,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":6080,"name":"transitional","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":340,"character":2}],"type":{"type":"unknown","name":"{ silentJSONParsing?: Answerable<false> | Answerable<true>; forcedJSONParsing?: Answerable<false> | Answerable<true>; clarifyTimeoutError?: Answerable<...> | Answerable<...>; }"}},{"id":6081,"name":"signal","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":341,"character":2}],"type":{"type":"unknown","name":"{ readonly aborted: Answerable<false> | Answerable<true>; onabort?: {}; addEventListener?: {}; removeEventListener?: {}; }"}},{"id":6082,"name":"insecureHTTPParser","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":342,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":6083,"name":"env","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":343,"character":2}],"type":{"type":"unknown","name":"{ FormData?: {}; }"}},{"id":6084,"name":"formSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":346,"character":2}],"type":{"type":"unknown","name":"{ visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<false> | Answerable<...>; }"}},{"id":6085,"name":"family","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":347,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":4}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":6}],"name":"Answerable"}]}},{"id":6086,"name":"lookup","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":348,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"unknown","name":"{}"}]}}],"groups":[{"title":"Properties","children":[6047,6048,6049,6050,6051,6052,6053,6054,6055,6056,6057,6058,6059,6060,6061,6062,6063,6064,6065,6066,6067,6068,6069,6070,6071,6072,6073,6074,6075,6076,6077,6078,6079,6080,6081,6082,6083,6084,6085,6086]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.d.ts","line":30,"character":188}]}}],"name":"Answerable"}}],"type":{"type":"reference","id":5952,"name":"PostRequest"}}]}],"groups":[{"title":"Methods","children":[5953,6139,6131,6134,6137,6040,6043]}],"sources":[{"fileName":"packages/rest/src/models/PostRequest.ts","line":74,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PostRequest.ts#L74"}],"extendedTypes":[{"type":"reference","id":5418,"name":"HTTPRequest"}],"permalink":"/api/rest/class/PostRequest","previousId":5758,"nextId":6146},{"id":6146,"name":"PutRequest","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"The PUT method requests that the state of the target resource be\\ncreated or replaced with the state defined by the representation\\nenclosed in the request message payload.\\n\\nPUT request should be used when you want to create\\na new resource at a known "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" (e.g. "},{"kind":"code","text":"`/books/0-688-00230-7`"},{"kind":"text","text":")\\nor replace an existing resource at such "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":".\\n\\nPUT request is [idempotent](https://developer.mozilla.org/en-US/docs/Glossary/Idempotent):\\ncalling it once or several times successively has the same effect (that is no _side effect_).\\n\\n## Create a new resource at a known location\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { CallAnApi, LastResponse, PutRequest, Send } from \'@serenity-js/rest\';\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nawait actorCalled(\'Apisit\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(PutRequest.to(\'/books/0-688-00230-7\').with({\\n      isbn: \'0-688-00230-7\',\\n      title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n      author: \'Robert M. Pirsig\',\\n    })),\\n    Ensure.that(LastResponse.status(), equals(201)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT\\n- https://tools.ietf.org/html/rfc7231#section-4.3.4"}]},"children":[{"id":6147,"name":"to","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/models/PutRequest.ts","line":57,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PutRequest.ts#L57"}],"signatures":[{"id":6148,"name":"to","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the object with a destination URI.\\n\\nWhen the "},{"kind":"code","text":"`resourceUri`"},{"kind":"text","text":" is not a fully qualified URL but a path, such as "},{"kind":"code","text":"`/products/2`"},{"kind":"text","text":",\\nit gets concatenated with the URL provided to the Axios instance\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated."}]},"parameters":[{"id":6149,"name":"resourceUri","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The URI where the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\n should send the "},{"kind":"inline-tag","tag":"@apilink","text":"HTTPRequest"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","id":6146,"name":"PutRequest"}}]},{"id":6333,"name":"as","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":4}],"signatures":[{"id":6334,"name":"as","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps this question to one of a different type.\\n\\n"},{"kind":"code","text":"```ts\\nQuestion.about(\'number returned as string\', actor => \'42\')   // returns: QuestionAdapter<string>\\n  .as(Number)                                                // returns: QuestionAdapter<number>\\n```"}]},"typeParameter":[{"id":6335,"name":"O","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":6336,"name":"mapping","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":6337,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Question.d.ts","line":232,"character":19}],"signatures":[{"id":6338,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":6339,"name":"answer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"union","types":[{"type":"reference","id":5031,"name":"O"},{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":5031,"name":"O"}],"name":"QuestionAdapter"},"inheritedFrom":{"type":"reference","id":5561,"name":"HTTPRequest.as"}}],"inheritedFrom":{"type":"reference","id":5560,"name":"HTTPRequest.as"}},{"id":6325,"name":"answeredBy","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":39,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L39"}],"signatures":[{"id":6326,"name":"answeredBy","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":6327,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"AnswersQuestions"},{"type":"reference","name":"UsesAbilities"}]}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"inheritedFrom":{"type":"reference","id":5549,"name":"HTTPRequest.answeredBy"}}],"inheritedFrom":{"type":"reference","id":5548,"name":"HTTPRequest.answeredBy"}},{"id":6328,"name":"describedAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":68,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L68"}],"signatures":[{"id":6329,"name":"describedAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":6330,"name":"subject","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":6146,"name":"PutRequest"},"inheritedFrom":{"type":"reference","id":5552,"name":"HTTPRequest.describedAs"}}],"inheritedFrom":{"type":"reference","id":5551,"name":"HTTPRequest.describedAs"}},{"id":6331,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/HTTPRequest.ts","line":76,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/HTTPRequest.ts#L76"}],"signatures":[{"id":6332,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","id":5555,"name":"HTTPRequest.toString"}}],"inheritedFrom":{"type":"reference","id":5554,"name":"HTTPRequest.toString"}},{"id":6234,"name":"with","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/PutRequest.ts","line":67,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PutRequest.ts#L67"}],"signatures":[{"id":6235,"name":"with","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the object with a request body."}]},"parameters":[{"id":6236,"name":"data","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Data to be sent to the "},{"kind":"code","text":"`resourceUri`"}]},"type":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","id":6146,"name":"PutRequest"}}]},{"id":6237,"name":"using","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/models/PutRequest.ts","line":83,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PutRequest.ts#L83"}],"signatures":[{"id":6238,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Overrides the default Axios request configuration provided\\nwhen the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Answerable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"WithAnswerableProperties"},{"kind":"text","text":"\\n- [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)"}]},"parameters":[{"id":6239,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Axios request configuration overrides"}]},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":6240,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":6241,"name":"url","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":307,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6242,"name":"method","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":308,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6243,"name":"baseURL","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":309,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6244,"name":"transformRequest","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":310,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":6245,"name":"transformResponse","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":311,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"unknown","name":"{}"}}]}},{"id":6246,"name":"headers","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":312,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ [x: string]: any; set: {}; get: {}; has: {}; delete: {}; clear: {}; normalize: {}; concat: {}; toJSON: {}; setContentType: {}; getContentType: {}; hasContentType: {}; setContentLength: {}; getContentLength: {}; ... 13 more ...; [Symbol.iterator]: {}; }"},{"type":"unknown","name":"{ [x: string]: Answerable<string> | Answerable<false> | Answerable<true> | Answerable<number> | { [x: string]: any; set: {}; get: {}; has: {}; ... 23 more ...; [Symbol.iterator]: {}; } | Answerable<...>[]; ... 16 more ...; common?: { ...; }; }"}]}},{"id":6247,"name":"params","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":313,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":6248,"name":"paramsSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":314,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{ encode?: {}; serialize?: {}; visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<...> | Answerable<...>; }"},{"type":"unknown","name":"{}"}]}},{"id":6249,"name":"data","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":315,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":6250,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":316,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":6251,"name":"timeoutErrorMessage","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":317,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6252,"name":"withCredentials","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":318,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":6253,"name":"adapter","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":319,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"},{"type":"array","elementType":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"},{"type":"unknown","name":"{}"}]}}]}},{"id":6254,"name":"auth","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":320,"character":2}],"type":{"type":"unknown","name":"{ username: Answerable<string>; password: Answerable<string>; }"}},{"id":6255,"name":"responseType","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":321,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":"text"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"arraybuffer"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"blob"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"document"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"json"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":"stream"}],"name":"Answerable"}]}},{"id":6256,"name":"responseEncoding","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":322,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6257,"name":"xsrfCookieName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":323,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6258,"name":"xsrfHeaderName","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":324,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6259,"name":"onUploadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":325,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":6260,"name":"onDownloadProgress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":326,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":6261,"name":"maxContentLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":327,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":6262,"name":"validateStatus","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":328,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":6263,"name":"maxBodyLength","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":329,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":6264,"name":"maxRedirects","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":330,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":6265,"name":"maxRate","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":331,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"tuple","elements":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}]}]}},{"id":6266,"name":"beforeRedirect","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":332,"character":2}],"type":{"type":"unknown","name":"{}"}},{"id":6267,"name":"socketPath","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":333,"character":2}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6268,"name":"transport","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":334,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":6269,"name":"httpAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":335,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":6270,"name":"httpsAgent","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":336,"character":2}],"type":{"type":"intrinsic","name":"any"}},{"id":6271,"name":"proxy","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":337,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"unknown","name":"{ host: Answerable<string>; port: Answerable<number>; auth?: { username: Answerable<string>; password: Answerable<string>; }; protocol?: Answerable<...>; }"}]}},{"id":6272,"name":"cancelToken","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":338,"character":2}],"type":{"type":"unknown","name":"{ promise: Answerable<Cancel>; reason?: { message: Answerable<string>; }; throwIfRequested: {}; }"}},{"id":6273,"name":"decompress","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":339,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":6274,"name":"transitional","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":340,"character":2}],"type":{"type":"unknown","name":"{ silentJSONParsing?: Answerable<false> | Answerable<true>; forcedJSONParsing?: Answerable<false> | Answerable<true>; clarifyTimeoutError?: Answerable<...> | Answerable<...>; }"}},{"id":6275,"name":"signal","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":341,"character":2}],"type":{"type":"unknown","name":"{ readonly aborted: Answerable<false> | Answerable<true>; onabort?: {}; addEventListener?: {}; removeEventListener?: {}; }"}},{"id":6276,"name":"insecureHTTPParser","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":342,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":false}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":true}],"name":"Answerable"}]}},{"id":6277,"name":"env","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":343,"character":2}],"type":{"type":"unknown","name":"{ FormData?: {}; }"}},{"id":6278,"name":"formSerializer","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":346,"character":2}],"type":{"type":"unknown","name":"{ visitor?: {}; dots?: Answerable<false> | Answerable<true>; metaTokens?: Answerable<false> | Answerable<true>; indexes?: Answerable<false> | Answerable<...>; }"}},{"id":6279,"name":"family","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":347,"character":2}],"type":{"type":"union","types":[{"type":"reference","typeArguments":[{"type":"literal","value":4}],"name":"Answerable"},{"type":"reference","typeArguments":[{"type":"literal","value":6}],"name":"Answerable"}]}},{"id":6280,"name":"lookup","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":348,"character":2}],"type":{"type":"union","types":[{"type":"unknown","name":"{}"},{"type":"unknown","name":"{}"}]}}],"groups":[{"title":"Properties","children":[6241,6242,6243,6244,6245,6246,6247,6248,6249,6250,6251,6252,6253,6254,6255,6256,6257,6258,6259,6260,6261,6262,6263,6264,6265,6266,6267,6268,6269,6270,6271,6272,6273,6274,6275,6276,6277,6278,6279,6280]}],"sources":[{"fileName":"packages/core/lib/screenplay/WithAnswerableProperties.d.ts","line":30,"character":188}]}}],"name":"Answerable"}}],"type":{"type":"reference","id":6146,"name":"PutRequest"}}]}],"groups":[{"title":"Methods","children":[6147,6333,6325,6328,6331,6234,6237]}],"sources":[{"fileName":"packages/rest/src/models/PutRequest.ts","line":44,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/models/PutRequest.ts#L44"}],"extendedTypes":[{"type":"reference","id":5418,"name":"HTTPRequest"}],"permalink":"/api/rest/class/PutRequest","previousId":5952,"nextId":6426},{"id":6340,"name":"CallAnApi","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" that enables the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to call an HTTP API.\\n\\nIf you need to connect via a proxy, check out [\\"Using Axios behind corporate proxies\\"](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d).\\n\\n## Using the default Axios HTTP client\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'https://api.example.org/\')\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Using Axios client with custom configuration\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport * as axios from \'axios\'\\n\\nconst axiosInstance = axios.create({\\n  timeout: 5 * 1000,\\n  headers: {\\n    \'X-Custom-Api-Key\': \'secret-key\',\\n  },\\n});\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.using(axiosInstance),\\n  )\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/users/2\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- https://github.com/axios/axios\\n- https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods"}]},"children":[{"id":6341,"name":"at","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":74,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/abilities/CallAnApi.ts#L74"}],"signatures":[{"id":6342,"name":"at","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to call a REST api at a specified baseUrl\\n\\nDefault timeout is set to 2s.\\n\\nDefault request headers:\\n- "},{"kind":"code","text":"`Accept`"},{"kind":"text","text":": "},{"kind":"code","text":"`application/json,application/xml`"}]},"parameters":[{"id":6343,"name":"baseURL","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":6340,"name":"CallAnApi"}}]},{"id":6344,"name":"using","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":94,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/abilities/CallAnApi.ts#L94"}],"signatures":[{"id":6345,"name":"using","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Produces an "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to call a REST API using a given axios instance.\\n\\nUseful when you need to customise Axios to\\n[make it aware of proxies](https://janmolak.com/node-js-axios-behind-corporate-proxies-8b17a6f31f9d),\\nfor example.\\n\\n#### Learn more\\n- [AxiosInstance](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L235-L238)"}]},"parameters":[{"id":6346,"name":"axiosInstance","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"AxiosInstance","qualifiedName":"AxiosInstance","package":"axios"}}],"type":{"type":"reference","id":6340,"name":"CallAnApi"}}]},{"id":6352,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":105,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/abilities/CallAnApi.ts#L105"}],"signatures":[{"id":6353,"name":"new CallAnApi","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"summary":[{"kind":"text","text":"#### Learn more\\n- [AxiosInstance](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L235-L238)"}]},"parameters":[{"id":6354,"name":"axiosInstance","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A pre-configured instance of the Axios HTTP client"}]},"type":{"type":"reference","name":"AxiosInstance","qualifiedName":"AxiosInstance","package":"axios"}}],"type":{"type":"reference","id":6340,"name":"CallAnApi"},"overwrites":{"type":"reference","name":"Ability.constructor"}}],"overwrites":{"type":"reference","name":"Ability.constructor"}},{"id":6357,"name":"modifyConfig","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":119,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/abilities/CallAnApi.ts#L119"}],"signatures":[{"id":6358,"name":"modifyConfig","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Allows for the original Axios config to be changed after\\nthe "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":"\\nhas been instantiated and given to the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":".\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)"}]},"parameters":[{"id":6359,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":6360,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":119,"character":21,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/abilities/CallAnApi.ts#L119"}],"signatures":[{"id":6361,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":6362,"name":"original","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosDefaults","qualifiedName":"AxiosDefaults","package":"axios"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]},{"id":6363,"name":"request","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":135,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/abilities/CallAnApi.ts#L135"}],"signatures":[{"id":6364,"name":"request","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Sends an HTTP request to a specified url.\\nResponse will be cached and available via "},{"kind":"inline-tag","tag":"@apilink","text":"mapLastResponse"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)\\n- [AxiosResponse](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L133-L140)"}]},"parameters":[{"id":6365,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Axios request configuration, which can be used to override the defaults\\n provided when the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AxiosResponse","qualifiedName":"AxiosResponse","package":"axios"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":6366,"name":"resolveUrl","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":149,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/abilities/CallAnApi.ts#L149"}],"signatures":[{"id":6367,"name":"resolveUrl","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Resolves the final URL, based on the "},{"kind":"inline-tag","tag":"@apilink","text":"AxiosRequestConfig"},{"kind":"text","text":" provided\\nand any defaults that the "},{"kind":"inline-tag","tag":"@apilink","text":"AxiosInstance"},{"kind":"text","text":" has been configured with.\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)\\n- [AxiosInstance](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L235-L238)"}]},"parameters":[{"id":6368,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}}],"type":{"type":"intrinsic","name":"string"}}]},{"id":6369,"name":"mapLastResponse","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":162,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/abilities/CallAnApi.ts#L162"}],"signatures":[{"id":6370,"name":"mapLastResponse","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Maps the last cached response to another type.\\nUseful when you need to extract a portion of the "},{"kind":"inline-tag","tag":"@apilink","text":"AxiosResponse"},{"kind":"text","text":" object.\\n\\n#### Learn more\\n- [AxiosResponse](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L133-L140)"}]},"typeParameter":[{"id":6371,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":6372,"name":"mappingFunction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":6373,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":162,"character":40,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/abilities/CallAnApi.ts#L162"}],"signatures":[{"id":6374,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":6375,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"},{"type":"intrinsic","name":"any"}],"name":"AxiosResponse","qualifiedName":"AxiosResponse","package":"axios"}}],"type":{"type":"reference","id":6371,"name":"T"}}]}}}],"type":{"type":"reference","id":6371,"name":"T"}}]}],"groups":[{"title":"Methods","children":[6341,6344,6357,6363,6366,6369]},{"title":"Constructors","children":[6352]}],"sources":[{"fileName":"packages/rest/src/screenplay/abilities/CallAnApi.ts","line":59,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/abilities/CallAnApi.ts#L59"}],"extendedTypes":[{"type":"reference","name":"Ability"}],"permalink":"/api/rest/class/CallAnApi","nextId":6379},{"id":6379,"name":"ChangeApiConfig","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Changes configuration of the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":"\\nthat the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" executing this "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" has been configured with.\\n\\n## Changing API URL for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\';\\nimport { By Navigate, PageElement, Text } from \'@serenity-js/web\';\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\';\\n\\nimport * as axios from \'axios\';\\n\\n// Let\'s imagine that the website under test displays\\n// a dynamically generated API URL that we would like to use\\nconst ApiDetailsWidget = {\\n  url: () => PageElement.located(By.id(\'api-url\')).describedAs(\'API URL\'),\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    BrowseTheWeb.using(protractor.browser),\\n\\n    // Note: no default base URL is given when the axios instance is created\\n    CallAnApi.using(axios.create()),\\n  )\\n  .attemptsTo(\\n    Navigate.to(\'/profile\'),\\n\\n    // We change the API URL based on the text displayed in the widget\\n    // (although we could change it to some arbitrary string too).\\n    ChangeApiConfig.setUrlTo(Text.of(ApiDetailsWidget.url())),\\n\\n    // Any subsequent request will be sent to the newly set URL\\n    Send.a(GetRequest.to(\'/projects\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Changing API port for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { LocalServer, ManageALocalServer, StartLocalServer } from \'@serenity-js/local-server\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    ManageALocalServer.runningAHttpListener(someServer),\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    StartALocalServer.onRandomPort(),\\n    ChangeApiConfig.setPortTo(LocalServer.port()),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Setting a header for all subsequent requests\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled, Question } from \'@serenity-js/core\'\\nimport { CallAnApi, ChangeApiConfig, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\n// A sample Question reading a Node process environment variable\\nconst EnvVar = (var_name: string) =>\\n    Question.about(`${ name } environment variable`, actor => process.env[var_name]);\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(\\n    CallAnApi.at(\'http://localhost\'),\\n  )\\n  .attemptsTo(\\n    ChangeApiConfig.setHeader(\'Authorization\', EnvVar(\'TOKEN\')),\\n    Send.a(GetRequest.to(\'/api\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":6380,"name":"setUrlTo","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":100,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/interactions/ChangeApiConfig.ts#L100"}],"signatures":[{"id":6381,"name":"setUrlTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" to change the base URL\\nof their "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"}]},"parameters":[{"id":6382,"name":"newApiUrl","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6383,"name":"setPortTo","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":110,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/interactions/ChangeApiConfig.ts#L110"}],"signatures":[{"id":6384,"name":"setPortTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" to change the port configured in the base URL\\nof their "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"}]},"parameters":[{"id":6385,"name":"newApiPort","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6386,"name":"setHeader","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":123,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/interactions/ChangeApiConfig.ts#L123"}],"signatures":[{"id":6387,"name":"setHeader","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor|actor"},{"kind":"text","text":" to change the configuration of the "},{"kind":"inline-tag","tag":"@apilink","text":"AxiosInstance"},{"kind":"text","text":"\\nused by their "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":"\\nand set an HTTP request header for any subsequent "},{"kind":"inline-tag","tag":"@apilink","text":"HTTPRequest|HTTPRequests"},{"kind":"text","text":"\\nissued via "},{"kind":"inline-tag","tag":"@apilink","text":"Send"},{"kind":"text","text":"."}]},"parameters":[{"id":6388,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}},{"id":6389,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6390,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":6391,"name":"new ChangeApiConfig","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":6379,"name":"ChangeApiConfig"}}]}],"groups":[{"title":"Methods","children":[6380,6383,6386]},{"title":"Constructors","children":[6390]}],"sources":[{"fileName":"packages/rest/src/screenplay/interactions/ChangeApiConfig.ts","line":92,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/interactions/ChangeApiConfig.ts#L92"}],"permalink":"/api/rest/class/ChangeApiConfig","previousId":6340,"nextId":6392},{"id":6392,"name":"Send","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Sends a "},{"kind":"inline-tag","tag":"@apilink","text":"HTTPRequest"},{"kind":"text","text":" to a specified url.\\n\\nThe response to the request is made available via "},{"kind":"inline-tag","tag":"@apilink","text":"LastResponse"},{"kind":"text","text":".\\n\\n## Send a GET request\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisit\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n  )\\n```"}]},"children":[{"id":6393,"name":"a","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":42,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/interactions/Send.ts#L42"}],"signatures":[{"id":6394,"name":"a","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a new "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"Send"},{"kind":"text","text":".\\n\\n#### Learn more\\n- [AxiosRequestConfig](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L75-L113)"}]},"parameters":[{"id":6395,"name":"request","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"name":"AxiosRequestConfig","qualifiedName":"AxiosRequestConfig","package":"axios"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":6422,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":6423,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}},{"id":6424,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":6425,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","name":"Interaction.toString"}},{"id":6410,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":56,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/interactions/Send.ts#L56"}],"signatures":[{"id":6411,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":6412,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"CollectsArtifacts"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[6393,6422,6424,6410]}],"sources":[{"fileName":"packages/rest/src/screenplay/interactions/Send.ts","line":32,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/interactions/Send.ts#L32"}],"extendedTypes":[{"type":"reference","name":"Interaction"}],"permalink":"/api/rest/class/Send","previousId":6379,"nextId":4845},{"id":6426,"name":"LastResponse","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Provides access to the properties of the last "},{"kind":"inline-tag","tag":"@apilink","text":"AxiosResponse"},{"kind":"text","text":" object,\\ncached on the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi"},{"kind":"text","text":".\\n\\n## Verify response to a GET request\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Book {\\n    title: string;\\n    author: string;\\n}\\n\\nawait actorCalled(\'Apisit\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/books/0-688-00230-7\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.header(\'Content-Type\'), equals(\'application/json\')),\\n    Ensure.that(LastResponse.body<Book>(), equals({\\n        title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n        author: \'Robert M. Pirsig\',\\n    })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Use Serenity/JS adapters to navigate complex response objects\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, LastResponse, Send } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Developer {\\n    name: string;\\n    id: string;\\n    projects: Project[];\\n}\\n\\ninterface Project {\\n    name: string;\\n    repoUrl: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(\'/developers/jan-molak\')),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.body<Developer>().name, equals(\'Jan Molak\')),\\n    Ensure.that(LastResponse.body<Developer>().projects[0].name, equals(\'Serenity/JS\')),\\n)\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [AxiosResponse](https://github.com/axios/axios/blob/v0.27.2/index.d.ts#L133-L140)"}]},"children":[{"id":6427,"name":"status","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":77,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/questions/LastResponse.ts#L77"}],"signatures":[{"id":6428,"name":"status","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the status code of the "},{"kind":"inline-tag","tag":"@apilink","text":"LastResponse|last response"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [HTTP response status codes](https://developer.mozilla.org/en-US/docs/Web/HTTP/Status)"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter"}}]},{"id":6429,"name":"body","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":157,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/questions/LastResponse.ts#L157"}],"signatures":[{"id":6430,"name":"body","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the body of the "},{"kind":"inline-tag","tag":"@apilink","text":"LastResponse|last response"},{"kind":"text","text":"\\n\\n#### A type-safe approach using generics\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Book {\\n  title: string;\\n  author: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n     // ...\\n\\n     // note body<T>() parameterised with type \\"Book\\"\\n     Ensure.that(LastResponse.body<Book>(), equals({\\n       title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n       author: \'Robert M. Pirsig\',\\n     })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## A not type-safe approach using "},{"kind":"code","text":"`any`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n     // ...\\n\\n     // note body<T>() parameterised with \\"any\\" or with no parameter is not type-safe!\\n     Ensure.that(LastResponse.body<any>(), equals({\\n       title: \'Zen and the Art of Motorcycle Maintenance: An Inquiry into Values\',\\n       author: \'Robert M. Pirsig\',\\n     })),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Iterating over the items in the response body\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\ninterface Product {\\n  id: number;\\n  name: string;\\n}\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    List.of<Product>(LastResponse.body<{ products: Product[] }>().products)\\n      .forEach(({ item, actor }) =>\\n        actor.attemptsTo(\\n          Send.a(GetRequest.to(`/products/${ item.id }`)),\\n          Ensure.that(LastResponse.body<Product>().id, equals(item.id)),\\n        )\\n      ),\\n  )\\n```"}]},"typeParameter":[{"id":6431,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"any"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":6431,"name":"T"}],"name":"QuestionAdapter"}}]},{"id":6432,"name":"header","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":183,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/questions/LastResponse.ts#L183"}],"signatures":[{"id":6433,"name":"header","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves a header of the "},{"kind":"inline-tag","tag":"@apilink","text":"LastResponse|last response"},{"kind":"text","text":", identified by "},{"kind":"code","text":"`name`"},{"kind":"text","text":"\\n\\n## Asserting on a header\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    Ensure.that(LastResponse.header(\'Content-Type\'), equals(\'application/json\')),\\n  )\\n```"}]},"parameters":[{"id":6434,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter"}}]},{"id":6435,"name":"headers","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":207,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/questions/LastResponse.ts#L207"}],"signatures":[{"id":6436,"name":"headers","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves all the headers of the "},{"kind":"inline-tag","tag":"@apilink","text":"LastResponse|last response"},{"kind":"text","text":".\\n\\n## Asserting on a header\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, LastResponse } from \'@serenity-js/rest\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nawait actorCalled(\'Apisitt\')\\n  .whoCan(CallAnApi.at(\'https://api.example.org/\'))\\n  .attemptsTo(\\n    Send.a(GetRequest.to(`/products`)),\\n    Ensure.that(LastResponse.headers()[\'Content-Type\'], equals(\'application/json\')),\\n  )\\n```"}]},"type":{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","name":"RawAxiosHeaders","qualifiedName":"RawAxiosHeaders","package":"axios"},{"type":"reflection","declaration":{"id":6437,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":6438,"name":"Content-Length","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"AxiosHeaderValue","qualifiedName":"AxiosHeaderValue","package":"axios"}},{"id":6439,"name":"Content-Encoding","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"AxiosHeaderValue","qualifiedName":"AxiosHeaderValue","package":"axios"}},{"id":6440,"name":"Content-Type","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"AxiosHeaderValue","qualifiedName":"AxiosHeaderValue","package":"axios"}},{"id":6441,"name":"Server","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"AxiosHeaderValue","qualifiedName":"AxiosHeaderValue","package":"axios"}},{"id":6442,"name":"Cache-Control","kind":1024,"kindString":"Property","flags":{},"type":{"type":"reference","name":"AxiosHeaderValue","qualifiedName":"AxiosHeaderValue","package":"axios"}}],"groups":[{"title":"Properties","children":[6438,6439,6440,6441,6442]}],"sources":[{"fileName":"node_modules/axios/index.d.ts","line":92,"character":32}]}},{"type":"reflection","declaration":{"id":6443,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":6444,"name":"set-cookie","kind":1024,"kindString":"Property","flags":{"isExternal":true},"sources":[{"fileName":"node_modules/axios/index.d.ts","line":95,"character":2}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"groups":[{"title":"Properties","children":[6444]}],"sources":[{"fileName":"node_modules/axios/index.d.ts","line":94,"character":4}]}}]}],"name":"Partial","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#partialtype","qualifiedName":"Partial","package":"typescript"}],"name":"QuestionAdapter"}}]},{"id":6445,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":6446,"name":"new LastResponse","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":6426,"name":"LastResponse"}}]}],"groups":[{"title":"Methods","children":[6427,6429,6432,6435]},{"title":"Constructors","children":[6445]}],"sources":[{"fileName":"packages/rest/src/screenplay/questions/LastResponse.ts","line":69,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/screenplay/questions/LastResponse.ts#L69"}],"permalink":"/api/rest/class/LastResponse","previousId":6146}],"groups":[{"title":"Abilities","children":[6340]},{"title":"Activities","children":[6379,6392]},{"title":"Models","children":[4845,5036,5418,5227,5567,5758,5952,6146]},{"title":"Questions","children":[6426]}],"sources":[{"fileName":"packages/rest/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/rest/src/index.ts#L1"}],"permalink":"/api/rest"},"urlSlug":"rest"}],"packageName":"@serenity-js/rest","packageVersion":"3.10.2"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":41,"name":"@serenity-js/local-server","kind":2,"kindString":"Module","flags":{},"children":[{"id":4142,"name":"ManageALocalServer","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" that enables an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":"\\nto manage a local [Node.js](https://nodejs.org/) server.\\n\\n## Managing a raw Node.js server\\n\\n"},{"kind":"code","text":"```ts\\nimport { actorCalled } from \'@serenity-js/core\'\\nimport { CallAnApi, GetRequest, Send } from \'@serenity-js/rest\'\\nimport { ManageALocalServer, LocalTestServer, StartLocalTestServer, StopLocalTestServer } from \'@serenity-js/local-server\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\n\\nimport * as axios from \'axios\'\\nimport * as http from \'http\'\\n\\nconst server = http.createServer(function (request, response) {\\n  response.setHeader(\'Connection\', \'close\');\\n  response.end(\'Hello!\');\\n})\\n\\nawait actorCalled(\'Apisit\')\\n  .whoCan(\\n    ManageALocalServer.using(server),\\n    CallAnApi.using(axios.create()),\\n  )\\n  .attemptsTo(\\n    StartLocalTestServer.onRandomPort(),\\n    Send.a(GetRequest.to(LocalServer.url())),\\n    Ensure.that(LastResponse.status(), equals(200)),\\n    Ensure.that(LastResponse.body<string>(), equals(\'Hello!\')),\\n    StopLocalTestServer.ifRunning(),\\n  )\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Anatomy of an HTTP transaction](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/)\\n- [Node.js HTTP server](https://nodejs.org/api/http.html#http_class_http_server)"}]},"children":[{"id":4143,"name":"runningAHttpListener","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":57,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L57"}],"signatures":[{"id":4144,"name":"runningAHttpListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" to manage a Node.js HTTP server using the provided "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":"."}]},"parameters":[{"id":4145,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","id":4173,"name":"RequestListener"},{"type":"reference","name":"Server","qualifiedName":"Server","package":"@types/node"}]}}],"type":{"type":"reference","id":4142,"name":"ManageALocalServer"}}]},{"id":4146,"name":"runningAHttpsListener","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":74,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L74"}],"signatures":[{"id":4147,"name":"runningAHttpsListener","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"An "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"},{"kind":"text","text":" to manage a Node.js HTTPS server using the provided server "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener"}]}]},"parameters":[{"id":4148,"name":"listener","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"union","types":[{"type":"reference","id":4173,"name":"RequestListener"},{"type":"reference","typeArguments":[{"type":"query","queryType":{"type":"reference","name":"IncomingMessage","qualifiedName":"IncomingMessage","package":"@types/node"}},{"type":"query","queryType":{"type":"reference","name":"ServerResponse","qualifiedName":"ServerResponse","package":"@types/node"}}],"name":"Server","qualifiedName":"Server","package":"@types/node"}]}},{"id":4149,"name":"options","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Accepts an options object from "},{"kind":"code","text":"`tls.createServer()`"},{"kind":"text","text":", "},{"kind":"code","text":"`tls.createSecureContext()`"},{"kind":"text","text":" and "},{"kind":"code","text":"`http.createServer()`"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"query","queryType":{"type":"reference","name":"IncomingMessage","qualifiedName":"IncomingMessage","package":"@types/node"}},{"type":"query","queryType":{"type":"reference","name":"ServerResponse","qualifiedName":"ServerResponse","package":"@types/node"}}],"name":"ServerOptions","qualifiedName":"ServerOptions","package":"@types/node"},"defaultValue":"{}"}],"type":{"type":"reference","id":4142,"name":"ManageALocalServer"}}]},{"id":4155,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":91,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L91"}],"signatures":[{"id":4156,"name":"new ManageALocalServer","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.npmjs.com/package/http-shutdown"}]}]},"parameters":[{"id":4157,"name":"protocol","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Protocol to be used when communicating with the running server; "},{"kind":"code","text":"`http`"},{"kind":"text","text":" or "},{"kind":"code","text":"`https`"}]},"type":{"type":"reference","id":4194,"name":"SupportedProtocols"}},{"id":4158,"name":"server","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"A Node.js server requestListener, with support for [server shutdown](https://www.npmjs.com/package/http-shutdown)."}]},"type":{"type":"reference","name":"Server","qualifiedName":"Server","package":"@types/node"}}],"type":{"type":"reference","id":4142,"name":"ManageALocalServer"},"overwrites":{"type":"reference","name":"Ability.constructor"}}],"overwrites":{"type":"reference","name":"Ability.constructor"}},{"id":4161,"name":"listen","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":105,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L105"}],"signatures":[{"id":4162,"name":"listen","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Starts the server on the first free port between "},{"kind":"code","text":"`preferredPort`"},{"kind":"text","text":" and "},{"kind":"code","text":"`highestPort`"},{"kind":"text","text":", inclusive."}]},"parameters":[{"id":4163,"name":"preferredPort","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Lower bound of the preferred port range"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"8000"},{"id":4164,"name":"highestPort","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"highestPort\\n Upper bound of the preferred port range"}]},"type":{"type":"intrinsic","name":"number"},"defaultValue":"65535"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]},{"id":4165,"name":"mapInstance","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L131"}],"signatures":[{"id":4166,"name":"mapInstance","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Provides access to the server "},{"kind":"code","text":"`requestListener`"}]},"typeParameter":[{"id":4167,"name":"T","kind":131072,"kindString":"Type parameter","flags":{}}],"parameters":[{"id":4168,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":4169,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":131,"character":23,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L131"}],"signatures":[{"id":4170,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4171,"name":"server","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4178,"name":"ServerWithShutdown"}},{"id":4172,"name":"protocol","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","id":4194,"name":"SupportedProtocols"}}],"type":{"type":"reference","id":4167,"name":"T"}}]}}}],"type":{"type":"reference","id":4167,"name":"T"}}]}],"groups":[{"title":"Methods","children":[4143,4146,4161,4165]},{"title":"Constructors","children":[4155]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":48,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L48"}],"extendedTypes":[{"type":"reference","name":"Ability"}],"permalink":"/api/local-server/class/ManageALocalServer","nextId":4197},{"id":4173,"name":"RequestListener","kind":4194304,"kindString":"Type alias","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":141,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L141"}],"type":{"type":"reflection","declaration":{"id":4174,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":141,"character":30,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L141"}],"signatures":[{"id":4175,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"code","text":"`requestListener`"},{"kind":"text","text":" function accepted by Node\'s\\n["},{"kind":"code","text":"`http.createServer`"},{"kind":"text","text":"](https://nodejs.org/api/http.html#http_http_createserver_options_requestlistener)\\nor ["},{"kind":"code","text":"`https.createServer`"},{"kind":"text","text":"](https://nodejs.org/api/https.html#https_https_createserver_options_requestlistener)."}]},"parameters":[{"id":4176,"name":"request","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"http.IncomingMessage","qualifiedName":"IncomingMessage","package":"@types/node"}},{"id":4177,"name":"response","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"http.ServerResponse","qualifiedName":"ServerResponse","package":"@types/node"}}],"type":{"type":"intrinsic","name":"void"}}]}},"permalink":"/api/local-server#RequestListener","previousId":4234,"nextId":4178},{"id":4178,"name":"ServerWithShutdown","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@apilink","text":"net.Server"},{"kind":"text","text":" with an added shutdown method."}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":"https://www.npmjs.com/package/http-shutdown"}]}]},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":148,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L148"}],"type":{"type":"intersection","types":[{"type":"reference","name":"net.Server","qualifiedName":"Server","package":"@types/node"},{"type":"reflection","declaration":{"id":4179,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":4180,"name":"shutdown","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L149"}],"type":{"type":"reflection","declaration":{"id":4181,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":14,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L149"}],"signatures":[{"id":4182,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4183,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":4184,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":149,"character":25,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L149"}],"signatures":[{"id":4185,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4186,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}},{"id":4187,"name":"forceShutdown","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L150"}],"type":{"type":"reflection","declaration":{"id":4188,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":19,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L150"}],"signatures":[{"id":4189,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4190,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":4191,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":150,"character":30,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L150"}],"signatures":[{"id":4192,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4193,"name":"error","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Error","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error","qualifiedName":"Error","package":"typescript"}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}]}}}],"groups":[{"title":"Properties","children":[4180,4187]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":148,"character":46,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L148"}]}}]},"permalink":"/api/local-server#ServerWithShutdown","previousId":4173},{"id":4194,"name":"SupportedProtocols","kind":8,"kindString":"Enumeration","flags":{},"comment":{"summary":[{"kind":"text","text":"The protocol supported by the instance of the "},{"kind":"inline-tag","tag":"@apilink","text":"ServerWithShutdown"},{"kind":"text","text":",\\nwrapped by the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"ManageALocalServer"},{"kind":"text","text":"."}]},"children":[{"id":4195,"name":"HTTP","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":160,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L160"}],"type":{"type":"literal","value":"http"}},{"id":4196,"name":"HTTPS","kind":16,"kindString":"Enumeration Member","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":161,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L161"}],"type":{"type":"literal","value":"https"}}],"groups":[{"title":"Enumeration Members","children":[4195,4196]}],"sources":[{"fileName":"packages/local-server/src/screenplay/abilities/ManageALocalServer.ts","line":159,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/abilities/ManageALocalServer.ts#L159"}],"permalink":"/api/local-server/enum/SupportedProtocols","previousId":4209,"nextId":4234},{"id":4197,"name":"StartLocalServer","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Starts local server so that a test can interact with it."}]},"children":[{"id":4198,"name":"onRandomPort","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":16,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/interactions/StartLocalServer.ts#L16"}],"signatures":[{"id":4199,"name":"onRandomPort","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Starts local test server on a random available ports."}]},"type":{"type":"reference","name":"Interaction"}}]},{"id":4200,"name":"onPort","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":26,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/interactions/StartLocalServer.ts#L26"}],"signatures":[{"id":4201,"name":"onPort","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to start a local test server on a "},{"kind":"code","text":"`preferredPort`"},{"kind":"text","text":",\\nor a random one if that\'s not available."}]},"parameters":[{"id":4202,"name":"preferredPort","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":4203,"name":"onRandomPortBetween","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":40,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/interactions/StartLocalServer.ts#L40"}],"signatures":[{"id":4204,"name":"onRandomPortBetween","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs the "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" to start a local test server on a random port\\nbetween "},{"kind":"code","text":"`lowestPort`"},{"kind":"text","text":" and "},{"kind":"code","text":"`highestPort`"},{"kind":"text","text":", inclusive."}]},"parameters":[{"id":4205,"name":"lowestPort","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Lower bound of the preferred port range"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}},{"id":4206,"name":"highestPort","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Upper bound of the preferred port range"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"Answerable"}}],"type":{"type":"reference","name":"Interaction"}}]},{"id":4207,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":4208,"name":"new StartLocalServer","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":4197,"name":"StartLocalServer"}}]}],"groups":[{"title":"Methods","children":[4198,4200,4203]},{"title":"Constructors","children":[4207]}],"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StartLocalServer.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/interactions/StartLocalServer.ts#L11"}],"permalink":"/api/local-server/class/StartLocalServer","previousId":4142,"nextId":4209},{"id":4209,"name":"StopLocalServer","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Stops the local server. Should be used in "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" block to make sure that the server\\nis correctly shut down even when the test fails."}]},"children":[{"id":4210,"name":"ifRunning","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":17,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/interactions/StopLocalServer.ts#L17"}],"signatures":[{"id":4211,"name":"ifRunning","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Stops the server if it\'s running. If the server hasn\'t been started, this interaction does nothing."}]},"type":{"type":"reference","name":"Interaction"}}]},{"id":4222,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":19,"character":4}],"signatures":[{"id":4223,"name":"new StopLocalServer","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":4224,"name":"description","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":4225,"name":"location","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"FileSystemLocation"}}],"type":{"type":"reference","id":4209,"name":"StopLocalServer"},"inheritedFrom":{"type":"reference","name":"Interaction.constructor"}}],"inheritedFrom":{"type":"reference","name":"Interaction.constructor"}},{"id":4230,"name":"instantiationLocation","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":23,"character":4}],"signatures":[{"id":4231,"name":"instantiationLocation","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the location where this "},{"kind":"inline-tag","tag":"@apilink","text":"Activity"},{"kind":"text","text":" was instantiated."}]},"type":{"type":"reference","name":"FileSystemLocation"},"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}}],"inheritedFrom":{"type":"reference","name":"Interaction.instantiationLocation"}},{"id":4232,"name":"toString","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/core/lib/screenplay/Activity.d.ts","line":44,"character":4}],"signatures":[{"id":4233,"name":"toString","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Generates a human-friendly description to be used when reporting this Activity.\\n\\n**Note**: When this activity is reported, token "},{"kind":"code","text":"`#actor`"},{"kind":"text","text":" in the description\\nwill be replaced with the name of the actor performing this Activity.\\n\\nFor example, "},{"kind":"code","text":"`#actor clicks on a button`"},{"kind":"text","text":" becomes "},{"kind":"code","text":"`Wendy clicks on a button`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"string"},"inheritedFrom":{"type":"reference","name":"Interaction.toString"}}],"inheritedFrom":{"type":"reference","name":"Interaction.toString"}},{"id":4226,"name":"performAs","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":24,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/interactions/StopLocalServer.ts#L24"}],"signatures":[{"id":4227,"name":"performAs","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":4228,"name":"actor","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"UsesAbilities"},{"type":"reference","name":"CollectsArtifacts"},{"type":"reference","name":"AnswersQuestions"}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"overwrites":{"type":"reference","name":"Interaction.performAs"}}],"groups":[{"title":"Methods","children":[4210,4230,4232,4226]},{"title":"Constructors","children":[4222]}],"sources":[{"fileName":"packages/local-server/src/screenplay/interactions/StopLocalServer.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/interactions/StopLocalServer.ts#L12"}],"extendedTypes":[{"type":"reference","name":"Interaction"}],"permalink":"/api/local-server/class/StopLocalServer","previousId":4197,"nextId":4194},{"id":4234,"name":"LocalServer","kind":128,"kindString":"Class","flags":{},"children":[{"id":4235,"name":"url","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":17,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/questions/LocalServer.ts#L17"}],"signatures":[{"id":4236,"name":"url","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the URL of the local server started\\nusing the "},{"kind":"inline-tag","tag":"@apilink","text":"StartLocalServer"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"name":"QuestionAdapter"}}]},{"id":4237,"name":"port","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":45,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/questions/LocalServer.ts#L45"}],"signatures":[{"id":4238,"name":"port","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the port number of the local server started\\nusing the "},{"kind":"inline-tag","tag":"@apilink","text":"StartLocalServer"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"Interaction|interaction"},{"kind":"text","text":"."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"number"}],"name":"QuestionAdapter"}}]},{"id":4239,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":4240,"name":"new LocalServer","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":4234,"name":"LocalServer"}}]}],"groups":[{"title":"Methods","children":[4235,4237]},{"title":"Constructors","children":[4239]}],"sources":[{"fileName":"packages/local-server/src/screenplay/questions/LocalServer.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/screenplay/questions/LocalServer.ts#L11"}],"permalink":"/api/local-server/class/LocalServer","previousId":4194,"nextId":4173}],"groups":[{"title":"Abilities","children":[4142]},{"title":"Activities","children":[4197,4209]},{"title":"Models","children":[4194]},{"title":"Questions","children":[4234]},{"title":"Type Aliases","children":[4173,4178]}],"sources":[{"fileName":"packages/local-server/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/local-server/src/index.ts#L1"}],"permalink":"/api/local-server"},"urlSlug":"local-server"}],"packageName":"@serenity-js/local-server","packageVersion":"3.10.2"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":37,"name":"@serenity-js/console-reporter","kind":2,"kindString":"Module","flags":{},"children":[{"id":38,"name":"default","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":9,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/index.ts#L9"}],"signatures":[{"id":39,"name":"default","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":40,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4140,"name":"ConsoleReporterConfig"},"defaultValue":"undefined"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":4082,"name":"ConsoleReporter"}],"name":"StageCrewMemberBuilder"}}],"permalink":"/api/console-reporter/function/default","nextId":4082},{"id":4082,"name":"ConsoleReporter","kind":128,"kindString":"Class","flags":{"isPublic":true},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" that uses [standard output](https://en.wikipedia.org/wiki/Standard_streams)\\nto report on progress of your Serenity/JS acceptance tests.\\n\\n"},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" ships with colour themes for both dark and light terminals,\\nas well as a monochromatic theme for those moments when you\'re in a noir mood\\n(or have a terminal that doesn\'t support colours, like the good old "},{"kind":"code","text":"`cmd.exe`"},{"kind":"text","text":" on Windows).\\n\\n## Registering the reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\n import { configure } from \'@serenity-js/core\';\\n import { ConsoleReporter } from \'@serenity-js/console-reporter\';\\n\\n configure({\\n   crew: [\\n     ConsoleReporter.withDefaultColourSupport()\\n   ],\\n });\\n```"},{"kind":"text","text":"\\n\\n## Redirecting output to a file\\n\\n"},{"kind":"code","text":"```ts\\n import { configure } from \'@serenity-js/core\';\\n import { ConsoleReporter } from \'@serenity-js/console-reporter\';\\n import { createWriteStream } from \'fs\';\\n\\n configure({\\n     outputStream: createWriteStream(\'./output.log\'),\\n     crew: [ ConsoleReporter.withDefaultColourSupport() ],\\n });\\n ```"},{"kind":"text","text":"\\n## Registering the reporter with WebdriverIO\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ConsoleReporter } from \'@serenity-js/console-reporter\';\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\';\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n      ConsoleReporter.forDarkTerminals(),\\n    ]\\n    // other Serenity/JS config\\n  },\\n\\n // other WebdriverIO config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Registering the reporter with Protractor\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nconst { ConsoleReporter } = require(\'@serenity-js/console-reporter\');\\n\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      ConsoleReporter.withDefaultColourSupport(),\\n    ],\\n    // other Serenity/JS config\\n  },\\n\\n  // other Protractor config\\n}\\n```"}]},"children":[{"id":4083,"name":"fromJSON","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":131,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts#L131"}],"signatures":[{"id":4084,"name":"fromJSON","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":4085,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":4140,"name":"ConsoleReporterConfig"}}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":4082,"name":"ConsoleReporter"}],"name":"StageCrewMemberBuilder"}}]},{"id":4086,"name":"withDefaultColourSupport","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":145,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts#L145"}],"signatures":[{"id":4087,"name":"withDefaultColourSupport","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" that auto-detects\\nyour terminal\'s support for colours and uses a colour theme\\nfor dark terminals if successful.\\n\\nPlease note that spawning your test process from another process\\n(by using [npm-failsafe](https://www.npmjs.com/package/npm-failsafe), for example)\\ncauses the "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" to use the monochromatic colour scheme,\\nas colour support can\'t be detected in child processes."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":4082,"name":"ConsoleReporter"}],"name":"StageCrewMemberBuilder"}}]},{"id":4088,"name":"forMonochromaticTerminals","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":155,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts#L155"}],"signatures":[{"id":4089,"name":"forMonochromaticTerminals","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a monochromatic colour theme.\\nGood for terminals with no colour support (like the "},{"kind":"code","text":"`cmd.exe`"},{"kind":"text","text":" on Windows),\\nor for times when you need to pipe the output to a text file and want\\nto avoid printing control characters."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":4082,"name":"ConsoleReporter"}],"name":"StageCrewMemberBuilder"}}]},{"id":4090,"name":"forDarkTerminals","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":162,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts#L162"}],"signatures":[{"id":4091,"name":"forDarkTerminals","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a colour theme optimised for terminals with dark backgrounds."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":4082,"name":"ConsoleReporter"}],"name":"StageCrewMemberBuilder"}}]},{"id":4092,"name":"forLightTerminals","kind":2048,"kindString":"Method","flags":{"isStatic":true},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":169,"character":11,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts#L169"}],"signatures":[{"id":4093,"name":"forLightTerminals","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instantiates a "},{"kind":"code","text":"`ConsoleReporter`"},{"kind":"text","text":" with a colour theme optimised for terminals with light backgrounds."}]},"type":{"type":"reference","typeArguments":[{"type":"reference","id":4082,"name":"ConsoleReporter"}],"name":"StageCrewMemberBuilder"}}]},{"id":4097,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":191,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts#L191"}],"signatures":[{"id":4098,"name":"new ConsoleReporter","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":4099,"name":"printer","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Printer"}},{"id":4100,"name":"theme","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TerminalTheme"}},{"id":4101,"name":"stage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"Stage"}}],"type":{"type":"reference","id":4082,"name":"ConsoleReporter"}}]},{"id":4111,"name":"notifyOf","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":211,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts#L211"}],"signatures":[{"id":4112,"name":"notifyOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Handles "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent"},{"kind":"text","text":" objects emitted by the "},{"kind":"inline-tag","tag":"@apilink","text":"Stage"},{"kind":"text","text":"."}],"blockTags":[{"tag":"@see","content":[{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"}]},{"tag":"@listens","content":[]}]},"parameters":[{"id":4113,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DomainEvent"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","name":"ListensToDomainEvents.notifyOf"}}],"implementationOf":{"type":"reference","name":"ListensToDomainEvents.notifyOf"}}],"groups":[{"title":"Methods","children":[4083,4086,4088,4090,4092,4111]},{"title":"Constructors","children":[4097]}],"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts","line":122,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporter.ts#L122"}],"implementedTypes":[{"type":"reference","name":"ListensToDomainEvents"}],"permalink":"/api/console-reporter/class/ConsoleReporter","previousId":38,"nextId":4140},{"id":4140,"name":"ConsoleReporterConfig","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Used to configure the "},{"kind":"inline-tag","tag":"@apilink","text":"ConsoleReporter"},{"kind":"text","text":"."}]},"children":[{"id":4141,"name":"theme","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Choose a colour theme optimised for light, dark, or monochromatic terminals.\\nOr, use \'auto\' to automatically pick the most suitable one."}]},"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts","line":11,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts#L11"}],"type":{"type":"union","types":[{"type":"literal","value":"light"},{"type":"literal","value":"dark"},{"type":"literal","value":"mono"},{"type":"literal","value":"auto"}]}}],"groups":[{"title":"Properties","children":[4141]}],"sources":[{"fileName":"packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts","line":6,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/stage/crew/console-reporter/ConsoleReporterConfig.ts#L6"}],"permalink":"/api/console-reporter/interface/ConsoleReporterConfig","previousId":4082}],"groups":[{"title":"Functions","children":[38]},{"title":"Stage","children":[4082,4140]}],"sources":[{"fileName":"packages/console-reporter/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/console-reporter/src/index.ts#L1"}],"permalink":"/api/console-reporter"},"urlSlug":"console-reporter"}],"packageName":"@serenity-js/console-reporter","packageVersion":"3.10.2"},{"entryPoints":[{"index":true,"label":"Index","reflection":{"id":44,"name":"@serenity-js/serenity-bdd","kind":2,"kindString":"Module","flags":{},"children":[{"id":45,"name":"default","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":7,"character":24,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/serenity-bdd/src/index.ts#L7"}],"signatures":[{"id":46,"name":"default","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","name":"StageCrewMember"}}],"permalink":"/api/serenity-bdd/function/default","nextId":6447},{"id":6447,"name":"SerenityBDDReporter","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"A "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember"},{"kind":"text","text":" that produces [Serenity BDD](http://serenity-bdd.info/)-standard JSON reports\\nto be parsed by [Serenity BDD CLI Reporter](https://github.com/serenity-bdd/serenity-cli)\\nto produce HTML reports and living documentation.\\n\\n## Registering the reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport { ArtifactArchiver, configure } from \'@serenity-js/core\';\\nimport { SerenityBDDReporter } from \'@serenity-js/serenity-bdd\';\\n\\nconfigure({\\n  crew: [\\n    ArtifactArchiver.storingArtifactsAt(\'./target/site/serenity\'),\\n    new SerenityBDDReporter()\\n  ],\\n})\\n```"},{"kind":"text","text":"\\n\\n## Registering the reporter using WebdriverIO configuration\\n\\n"},{"kind":"code","text":"```ts\\n// wdio.conf.ts\\nimport { ArtifactArchiver } from \'@serenity-js/core\';\\nimport { SerenityBDDReporter } from \'@serenity-js/serenity-bdd\';\\nimport { WebdriverIOConfig } from \'@serenity-js/webdriverio\';\\n\\nexport const config: WebdriverIOConfig = {\\n\\n  framework: \'@serenity-js/webdriverio\',\\n\\n  serenity: {\\n    crew: [\\n        ArtifactArchiver.storingArtifactsAt(\'./target/site/serenity\'),\\n        new SerenityBDDReporter(),\\n    ],\\n    // other Serenity/JS config\\n  },\\n  // other Protractor config\\n}\\n```"},{"kind":"text","text":"\\n\\n## Registering the reporter using Protractor configuration\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nconst\\n  { ArtifactArchiver }    = require(\'@serenity-js/core\'),\\n  { SerenityBDDReporter } = require(\'@serenity-js/serenity-bdd\')\\n\\nexports.config = {\\n  framework:     \'custom\',\\n  frameworkPath: require.resolve(\'@serenity-js/protractor/adapter\'),\\n\\n  serenity: {\\n    crew: [\\n      ArtifactArchiver.storingArtifactsAt(\'./target/site/serenity\'),\\n      new SerenityBDDReporter(),\\n    ],\\n    // other Serenity/JS config\\n  },\\n\\n  // other Protractor config\\n}\\n```"}]},"children":[{"id":6448,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":84,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts#L84"}],"signatures":[{"id":6449,"name":"new SerenityBDDReporter","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":6450,"name":"stage","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"stage"}]},"type":{"type":"reference","name":"Stage"}}],"type":{"type":"reference","id":6447,"name":"SerenityBDDReporter"}}]},{"id":6454,"name":"assignedTo","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":90,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts#L90"}],"signatures":[{"id":6455,"name":"assignedTo","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":6456,"name":"stage","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Stage"}}],"type":{"type":"reference","name":"StageCrewMember"},"implementationOf":{"type":"reference","name":"StageCrewMember.assignedTo"}}],"implementationOf":{"type":"reference","name":"StageCrewMember.assignedTo"}},{"id":6457,"name":"notifyOf","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":98,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts#L98"}],"signatures":[{"id":6458,"name":"notifyOf","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@inheritDoc","content":[]}]},"parameters":[{"id":6459,"name":"event","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"DomainEvent"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","name":"StageCrewMember.notifyOf"}}],"implementationOf":{"type":"reference","name":"StageCrewMember.notifyOf"}}],"groups":[{"title":"Constructors","children":[6448]},{"title":"Methods","children":[6454,6457]}],"sources":[{"fileName":"packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts","line":77,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/serenity-bdd/src/stage/crew/serenity-bdd-reporter/SerenityBDDReporter.ts#L77"}],"implementedTypes":[{"type":"reference","name":"StageCrewMember"}],"permalink":"/api/serenity-bdd/class/SerenityBDDReporter","previousId":45}],"groups":[{"title":"Functions","children":[45]},{"title":"Stage","children":[6447]}],"sources":[{"fileName":"packages/serenity-bdd/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/serenity-bdd/src/index.ts#L1"}],"permalink":"/api/serenity-bdd"},"urlSlug":"serenity-bdd"}],"packageName":"@serenity-js/serenity-bdd","packageVersion":"3.10.2"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":6,"name":"@serenity-js/cucumber/adapter","kind":2,"kindString":"Module","flags":{},"children":[{"id":2650,"name":"CucumberCLIAdapter","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Cucumber test scenarios.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TestRunnerAdapter"}]},"children":[{"id":2651,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":26,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberCLIAdapter.ts#L26"}],"signatures":[{"id":2652,"name":"new CucumberCLIAdapter","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2653,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2706,"name":"CucumberConfig"}},{"id":2654,"name":"loader","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ModuleLoader"}},{"id":2655,"name":"fileSystem","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FileSystem","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/API/FileSystem"}},{"id":2656,"name":"output","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2740,"name":"SerenityFormatterOutput"}}],"type":{"type":"reference","id":2650,"name":"CucumberCLIAdapter"}}]},{"id":2661,"name":"successThreshold","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberCLIAdapter.ts#L38"}],"signatures":[{"id":2662,"name":"successThreshold","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner, calculated based on "},{"kind":"inline-tag","tag":"@apilink","text":"CucumberConfig"}]},"type":{"type":"union","types":[{"type":"reference","name":"Outcome"},{"type":"reflection","declaration":{"id":2663,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2664,"name":"Code","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":36,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberCLIAdapter.ts#L38"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[2664]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":38,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberCLIAdapter.ts#L38"}]}}]},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.successThreshold"}},{"id":2665,"name":"load","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":50,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberCLIAdapter.ts#L50"}],"signatures":[{"id":2666,"name":"load","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Loads feature files."}]},"parameters":[{"id":2667,"name":"pathsToScenarios","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Absolute or relative paths to feature files"}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.load"}},{"id":2668,"name":"scenarioCount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":68,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberCLIAdapter.ts#L68"}],"signatures":[{"id":2669,"name":"scenarioCount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n If called before "},{"kind":"code","text":"`load`"}]}]},"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.scenarioCount"}},{"id":2670,"name":"run","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":83,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberCLIAdapter.ts#L83"}],"signatures":[{"id":2671,"name":"run","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Instructs Cucumber to execute feature files located at "},{"kind":"code","text":"`pathsToScenarios`"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[2651]},{"title":"Methods","children":[2661,2665,2668,2670]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberCLIAdapter.ts","line":20,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberCLIAdapter.ts#L20"}],"implementedTypes":[{"type":"reference","name":"TestRunnerAdapter"}],"permalink":"/api/cucumber-adapter/class/CucumberCLIAdapter","previousId":2706,"nextId":2725},{"id":2706,"name":"CucumberConfig","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration options to be passed to [Cucumber CLI](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md).\\nYou can specify the options using either camelCase (i.e. "},{"kind":"code","text":"`retryTagFilter`"},{"kind":"text","text":") or kebab-case (i.e. "},{"kind":"code","text":"`retry-tag-filter`"},{"kind":"text","text":")\\nas Serenity/JS will convert them to an appropriate format for you."}]},"children":[{"id":2707,"name":"dryRun","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Prepare a test run but don\'t run it\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)\\n- [Cucumber docs: dry run mode](https://github.com/cucumber/cucumber-js/blob/main/docs/dry_run.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":19,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L19"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2708,"name":"failFast","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Stop running tests when a test fails\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)\\n- [Cucumber docs: fail fast](https://github.com/cucumber/cucumber-js/blob/main/docs/fail_fast.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":30,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L30"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2709,"name":"colors","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable/disable colors in output. Cucumber 1.x only!\\nFor Cucumber 2.x and above use "},{"kind":"code","text":"`formatOptions: { colorsEnabled: false }`"},{"kind":"text","text":"\\n\\n**Note** For Cucumber 2.x and above use the "},{"kind":"inline-tag","tag":"@apilink","text":"CucumberConfig.formatOptions"},{"kind":"text","text":" instead.\\n\\n#### Disable colors in output in Cucumber 1.x\\n\\n"},{"kind":"code","text":"```ts\\ncolors: false\\n```"},{"kind":"text","text":"\\n\\n#### Disable colors in output in Cucumber 2.x and above\\n\\n "},{"kind":"code","text":"```ts\\n formatOptions: { colorsEnabled: false }\\n ```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber 1.x CLI options](https://github.com/cucumber/cucumber-js/blob/1.x/lib/cucumber/cli.js#L38)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"1.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":55,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L55"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2710,"name":"compiler","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Step definitions and support files can be written in languages that transpile to JavaScript.\\nTo do set the "},{"kind":"code","text":"`compiler`"},{"kind":"text","text":" option to "},{"kind":"code","text":"`<file_extension>:<module_name>`"},{"kind":"text","text":"\\n\\n**NoteL** For Cucumber 4.x and above use the "},{"kind":"inline-tag","tag":"@apilink","text":"CucumberConfig.require"},{"kind":"text","text":" option instead.\\n\\n#### Enable TypeScript support in Cucumber 1.x - 3.x\\n"},{"kind":"code","text":"```ts\\ncompiler: \'ts:ts-node/register\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber 3.x documentation](https://github.com/cucumber/cucumber-js/blob/3.x/docs/cli.md#transpilers)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"1.x - 3.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":73,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L73"}],"type":{"type":"intrinsic","name":"string"}},{"id":2711,"name":"format","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify additional output formats, optionally supply PATH to redirect formatter output\\n\\n#### Learn more\\n- [Cucumber output formats](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#formats)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":81,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L81"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":2712,"name":"formatOptions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Provide options for formatters\\n\\n#### Cucumber 1.x\\n"},{"kind":"code","text":"```ts\\nformatOptions: JSON.stringify({ option: \'value\' })\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber format options](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#format-options)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L94"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}},{"id":2713,"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only execute the scenarios with name matching the expression.\\n\\n#### Learn more\\n- [Cucumber docs: running specific features](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#running-specific-features)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":102,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L102"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":2714,"name":"profile","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"In order to store and reuse commonly used CLI options,\\nyou can add a "},{"kind":"code","text":"`cucumber.js`"},{"kind":"text","text":" file to your project root directory.\\nThe file should export an object where the key is the profile name\\nand the value is a string of CLI options.\\n\\nThe profile can be applied with "},{"kind":"code","text":"`-p <NAME>`"},{"kind":"text","text":" or "},{"kind":"code","text":"`--profile <NAME>`"},{"kind":"text","text":".\\nThis will prepend the profile\'s CLI options to the ones provided by the command line.\\nMultiple profiles can be specified at a time.\\n\\nIf no profile is specified and a profile named default exists,\\nit will be applied.\\n\\n#### Learn more\\n- [Cucumber profiles](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#profiles)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":120,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L120"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":2715,"name":"retry","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The number of times to retry a failing scenario before marking it as failed.\\n\\n#### Cucumber 7.x\\n\\n"},{"kind":"code","text":"```ts\\nretry: 3\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber docs: retry failing tests](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#retry-failing-tests)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"7.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":136,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L136"}],"type":{"type":"intrinsic","name":"number"}},{"id":2716,"name":"rerun","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Relative path to an output file produced by Cucumber.js ["},{"kind":"code","text":"`rerun`"},{"kind":"text","text":" formatter](https://github.com/cucumber/cucumber-js/blob/master/features/rerun_formatter.feature).\\n\\n**Note:** that the name of the output file *must* start with an "},{"kind":"code","text":"`@`"},{"kind":"text","text":" symbol.\\n\\n#### Saving details of failed scenarios to "},{"kind":"code","text":"`@rerun-output.txt`"},{"kind":"text","text":"\\n\\n"},{"kind":"code","text":"```ts\\nformat: [ \'rerun:@rerun-output.txt\' ]\\n```"},{"kind":"text","text":"\\n\\n#### Re-running scenarios saved to "},{"kind":"code","text":"`@rerun-output.txt`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nrerun: \'@rerun-output.txt\'\\n```"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":154,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L154"}],"type":{"type":"intrinsic","name":"string"}},{"id":2717,"name":"retryTagFilter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only retry tests matching the given [tag expression](https://github.com/cucumber/cucumber/tree/master/tag-expressions).\\n\\n#### Cucumber 7.x\\n"},{"kind":"code","text":"```ts\\nretry: 3,\\nretryTagFilter: \'@flaky\',\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- [Cucumber docs: retry failing tests](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#retry-failing-tests)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"7.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":170,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L170"}],"type":{"type":"intrinsic","name":"string"}},{"id":2718,"name":"require","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require files or node modules before executing features\\n\\n#### Enable TypeScript support in Cucumber 4.x and above\\n"},{"kind":"code","text":"```ts\\nrequire: \'ts:ts-node/register\'\\n```"},{"kind":"text","text":"\\n#### Learn more\\n- [Cucumber docs: requiring support files](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#requiring-support-files)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":182,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L182"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":2719,"name":"import","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Paths to where your support code is.\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":192,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L192"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":2720,"name":"requireModule","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Names of transpilation modules to load, loaded via require()\\n\\n#### Learn more\\n- [Cucumber docs: transpiling](https://github.com/cucumber/cucumber-js/blob/main/docs/transpiling.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":202,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L202"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":2721,"name":"language","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Default language for your feature files\\n\\n#### Learn more\\n- [Cucumber docs: configuration](https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md)"}],"blockTags":[{"tag":"@version","content":[{"kind":"text","text":"8.x"}]}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":212,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L212"}],"type":{"type":"intrinsic","name":"string"}},{"id":2722,"name":"tags","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run scenarios that match the given tags.\\n\\n**Note**: Cucumber 1.x requires the "},{"kind":"code","text":"`tags`"},{"kind":"text","text":" option to be an array of Cucumber tags,\\nwhile Cucumber 2.x and above uses a "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\nwith a [tag expression](https://github.com/cucumber/cucumber/tree/master/tag-expressions).\\n\\n#### Cucumber 1.x\\n"},{"kind":"code","text":"```ts\\n// Run all scenarios tagged with `@smoketest`, but not with `@wip`:\\ntag: [ \'@smoketest\', \'~@wip\' ]\\n```"},{"kind":"text","text":"\\n\\n#### Cucumber >= 2.x\\n"},{"kind":"code","text":"```ts\\n// Run all scenarios tagged with `@smoketest`, but not with `@wip`:\\ntag: \'@smoketest and not @wip\'\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- [Cucumber 1.x docs: tags](https://github.com/cucumber/cucumber-js/blob/1.x/docs/cli.md#tags)\\n- [Cucumber 2.x docs: tags](https://github.com/cucumber/cucumber-js/blob/2.x/docs/cli.md#tags)\\n- [Cucumber docs: tag expressions](https://github.com/cucumber/cucumber/tree/master/tag-expressions)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":239,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L239"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"id":2723,"name":"strict","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fail if there are any undefined or pending steps"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":244,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L244"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2724,"name":"worldParameters","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Provide parameters that will be passed to the world constructor\\n\\n#### Specifying "},{"kind":"code","text":"`worldParameters`"},{"kind":"text","text":" as "},{"kind":"code","text":"`string`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nworldParameters: JSON.stringify({ isDev: process.env.NODE_ENV !== \'production\' })\\n```"},{"kind":"text","text":"\\n\\n#### Specifying "},{"kind":"code","text":"`worldParameters`"},{"kind":"text","text":" as "},{"kind":"code","text":"`object`"},{"kind":"text","text":"\\n"},{"kind":"code","text":"```ts\\nworldParameters: { isDev: process.env.NODE_ENV !== \'production\' }\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n\\n- [Cucumber docs: world parameters](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#world-parameters)"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":263,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L263"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"object"}]}}],"groups":[{"title":"Properties","children":[2707,2708,2709,2710,2711,2712,2713,2714,2715,2716,2717,2718,2719,2720,2721,2722,2723,2724]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberConfig.ts","line":8,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberConfig.ts#L8"}],"permalink":"/api/cucumber-adapter/interface/CucumberConfig","nextId":2650},{"id":2725,"name":"CucumberFormat","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Represents a Cucumber.js formatter\\n\\n## Learn more\\n\\n- [Cucumber formatters](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#built-in-formatters)"}]},"children":[{"id":2732,"name":"formatter","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":13,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberFormat.ts#L13"}],"type":{"type":"intrinsic","name":"string"}},{"id":2733,"name":"output","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":14,"character":20,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberFormat.ts#L14"}],"type":{"type":"intrinsic","name":"string"}},{"id":2729,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberFormat.ts#L20"}],"signatures":[{"id":2730,"name":"new CucumberFormat","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2731,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Cucumber format expression, like "},{"kind":"code","text":"`pretty`"},{"kind":"text","text":" or "},{"kind":"code","text":"`json:out.json`"}]},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","id":2725,"name":"CucumberFormat"}}]},{"id":2734,"name":"value","kind":1024,"kindString":"Property","flags":{"isPublic":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"Cucumber format expression, like "},{"kind":"code","text":"`pretty`"},{"kind":"text","text":" or "},{"kind":"code","text":"`json:out.json`"}]},"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":20,"character":32,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberFormat.ts#L20"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2732,2733,2734]},{"title":"Constructors","children":[2729]}],"sources":[{"fileName":"packages/cucumber/src/adapter/CucumberFormat.ts","line":12,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/CucumberFormat.ts#L12"}],"permalink":"/api/cucumber-adapter/class/CucumberFormat","previousId":2650,"nextId":2735},{"id":2735,"name":"OutputDescriptor","kind":256,"kindString":"Interface","flags":{},"children":[{"id":2736,"name":"value","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":5,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/output/OutputDescriptor.ts#L5"}],"signatures":[{"id":2737,"name":"value","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"string"}}]},{"id":2738,"name":"cleanUp","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":6,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/output/OutputDescriptor.ts#L6"}],"signatures":[{"id":2739,"name":"cleanUp","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}}]}],"groups":[{"title":"Methods","children":[2736,2738]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/OutputDescriptor.ts","line":4,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/output/OutputDescriptor.ts#L4"}],"permalink":"/api/cucumber-adapter/interface/OutputDescriptor","previousId":2725,"nextId":2740},{"id":2740,"name":"SerenityFormatterOutput","kind":256,"kindString":"Interface","flags":{},"children":[{"id":2741,"name":"get","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":7,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts#L7"}],"signatures":[{"id":2742,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":2735,"name":"OutputDescriptor"}}]}],"groups":[{"title":"Methods","children":[2741]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts","line":6,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/output/SerenityFormatterOutput.ts#L6"}],"implementedBy":[{"type":"reference","id":2743,"name":"StandardOutput"},{"type":"reference","id":2748,"name":"TempFileOutput"}],"permalink":"/api/cucumber-adapter/interface/SerenityFormatterOutput","previousId":2735,"nextId":2743},{"id":2743,"name":"StandardOutput","kind":128,"kindString":"Class","flags":{},"children":[{"id":2744,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"signatures":[{"id":2745,"name":"new StandardOutput","kind":16384,"kindString":"Constructor signature","flags":{},"type":{"type":"reference","id":2743,"name":"StandardOutput"}}]},{"id":2746,"name":"get","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":9,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/output/StandardOutput.ts#L9"}],"signatures":[{"id":2747,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":2735,"name":"OutputDescriptor"},"implementationOf":{"type":"reference","id":2742,"name":"SerenityFormatterOutput.get"}}],"implementationOf":{"type":"reference","id":2741,"name":"SerenityFormatterOutput.get"}}],"groups":[{"title":"Constructors","children":[2744]},{"title":"Methods","children":[2746]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/StandardOutput.ts","line":8,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/output/StandardOutput.ts#L8"}],"implementedTypes":[{"type":"reference","id":2740,"name":"SerenityFormatterOutput"}],"permalink":"/api/cucumber-adapter/class/StandardOutput","previousId":2740,"nextId":2748},{"id":2748,"name":"TempFileOutput","kind":128,"kindString":"Class","flags":{},"children":[{"id":2749,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":12,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/output/TempFileOutput.ts#L12"}],"signatures":[{"id":2750,"name":"new TempFileOutput","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2751,"name":"fs","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"FileSystem","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/API/FileSystem"}}],"type":{"type":"reference","id":2748,"name":"TempFileOutput"}}]},{"id":2753,"name":"get","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":15,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/output/TempFileOutput.ts#L15"}],"signatures":[{"id":2754,"name":"get","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","id":2735,"name":"OutputDescriptor"},"implementationOf":{"type":"reference","id":2742,"name":"SerenityFormatterOutput.get"}}],"implementationOf":{"type":"reference","id":2741,"name":"SerenityFormatterOutput.get"}}],"groups":[{"title":"Constructors","children":[2749]},{"title":"Methods","children":[2753]}],"sources":[{"fileName":"packages/cucumber/src/adapter/output/TempFileOutput.ts","line":11,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/output/TempFileOutput.ts#L11"}],"implementedTypes":[{"type":"reference","id":2740,"name":"SerenityFormatterOutput"}],"permalink":"/api/cucumber-adapter/class/TempFileOutput","previousId":2743}],"groups":[{"title":"Configuration","children":[2706]},{"title":"Integration","children":[2650,2725,2735,2740,2743,2748]}],"sources":[{"fileName":"packages/cucumber/src/adapter/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/adapter/index.ts#L1"}],"permalink":"/api/cucumber-adapter"},"urlSlug":"cucumber-adapter"},{"index":true,"label":"index","reflection":{"id":4,"name":"@serenity-js/cucumber","kind":2,"kindString":"Module","flags":{},"children":[{"id":5,"name":"export=","kind":32,"kindString":"Variable","flags":{"isConst":true},"comment":{"summary":[{"kind":"text","text":"Registers a Cucumber reporter that emits "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent|Serenity/JS domain events"},{"kind":"text","text":"\\nand informs Serenity/JS when test scenarios and Cucumber steps start, finish, and with what result."}]},"sources":[{"fileName":"packages/cucumber/src/index.ts","line":14,"character":6,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/index.ts#L14"}],"type":{"type":"intrinsic","name":"unknown"},"defaultValue":"...","permalink":"/api/cucumber#export="}],"groups":[{"title":"Variables","children":[5]}],"sources":[{"fileName":"packages/cucumber/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/cucumber/src/index.ts#L1"}],"permalink":"/api/cucumber"},"urlSlug":"cucumber"}],"packageName":"@serenity-js/cucumber","packageVersion":"3.10.2"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":8,"name":"@serenity-js/jasmine/adapter","kind":2,"kindString":"Module","flags":{},"children":[{"id":2758,"name":"JasmineAdapter","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Jasmine test scenarios,\\nusing "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityReporterForJasmine"},{"kind":"text","text":" to report progress.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TestRunnerAdapter"}]},"children":[{"id":2764,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":44,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineAdapter.ts#L44"}],"signatures":[{"id":2765,"name":"new JasmineAdapter","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2766,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2793,"name":"JasmineConfig"}},{"id":2767,"name":"loader","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ModuleLoader"}}],"type":{"type":"reference","id":2758,"name":"JasmineAdapter"}}]},{"id":2772,"name":"successThreshold","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":53,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineAdapter.ts#L53"}],"signatures":[{"id":2773,"name":"successThreshold","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"type":{"type":"union","types":[{"type":"reference","name":"Outcome"},{"type":"reflection","declaration":{"id":2774,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2775,"name":"Code","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":53,"character":36,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineAdapter.ts#L53"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[2775]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":53,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineAdapter.ts#L53"}]}}]},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.successThreshold"}},{"id":2776,"name":"load","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":62,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineAdapter.ts#L62"}],"signatures":[{"id":2777,"name":"load","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"parameters":[{"id":2778,"name":"pathsToScenarios","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.load"}},{"id":2786,"name":"scenarioCount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":131,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineAdapter.ts#L131"}],"signatures":[{"id":2787,"name":"scenarioCount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}]},"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.scenarioCount"}},{"id":2791,"name":"run","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":149,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineAdapter.ts#L149"}],"signatures":[{"id":2792,"name":"run","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[2764]},{"title":"Methods","children":[2772,2776,2786,2791]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineAdapter.ts","line":20,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineAdapter.ts#L20"}],"implementedTypes":[{"type":"reference","name":"TestRunnerAdapter"}],"permalink":"/api/jasmine-adapter/class/JasmineAdapter","previousId":2793},{"id":2793,"name":"JasmineConfig","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration object that will be passed to the JasmineRunner.\\n\\n## Learn more\\n- [Jasmine configuration](https://jasmine.github.io/setup/nodejs.html)"}]},"children":[{"id":2794,"name":"helpers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of paths to helper files that should be loaded and executed before the "},{"kind":"code","text":"`requires`"},{"kind":"text","text":" and the "},{"kind":"code","text":"`specs`"},{"kind":"text","text":".\\nAccepts relative and absolute paths as well as glob expressions.\\n\\n#### Learn more\\n- [Jasmine tutorial](https://jasmine.github.io/tutorials/react_with_npm)"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":20,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineConfig.ts#L20"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":2795,"name":"requires","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of paths to files that should be required after the "},{"kind":"code","text":"`helpers`"},{"kind":"text","text":", but before the "},{"kind":"code","text":"`specs`"},{"kind":"text","text":".\\nThe paths need to be compatible with Node "},{"kind":"code","text":"`require`"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":26,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineConfig.ts#L26"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":2796,"name":"random","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Whether or not the tests should be executed in a pseudo-random order."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":31,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineConfig.ts#L31"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2797,"name":"grep","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Used to exclude any test scenarios which name doesn\'t match the pattern from the run."}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":36,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineConfig.ts#L36"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"RegExp","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp","qualifiedName":"RegExp","package":"typescript"}]}},{"id":2798,"name":"invertGrep","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts \'grep\' matches, defaults to "},{"kind":"code","text":"`false`"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":41,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineConfig.ts#L41"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2799,"name":"specFilter","kind":1024,"kindString":"Property","flags":{"isOptional":true},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":49,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineConfig.ts#L49"}],"type":{"type":"reflection","declaration":{"id":2800,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":49,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineConfig.ts#L49"}],"signatures":[{"id":2801,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Receives the full name of a test scenario and returns "},{"kind":"code","text":"`true`"},{"kind":"text","text":"\\nfor those that should be executed.\\n\\nTakes precedence over "},{"kind":"code","text":"`grep`"},{"kind":"text","text":"."}]},"parameters":[{"id":2802,"name":"specName","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},{"id":2803,"name":"seed","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The randomisation seed that will be used to determine the pseudo-random order of execution,\\nif "},{"kind":"code","text":"`random`"},{"kind":"text","text":" is set to "},{"kind":"code","text":"`true`"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":55,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineConfig.ts#L55"}],"type":{"type":"intrinsic","name":"string"}},{"id":2804,"name":"defaultTimeoutInterval","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Sets the global "},{"kind":"code","text":"`jasmine.DEFAULT_TIMEOUT_INTERVAL`"},{"kind":"text","text":",\\nwhich defines the default number of milliseconds Jasmine will wait for an asynchronous spec to complete.\\n\\n#### Learn more\\n- [Jasmine default timeout interval](https://jasmine.github.io/api/edge/jasmine#.DEFAULT_TIMEOUT_INTERVAL)"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":64,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineConfig.ts#L64"}],"type":{"type":"intrinsic","name":"number"}},{"id":2805,"name":"reporters","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of Jasmine reporters to be added to the test runner.\\n\\nUseful for situations like configuring ReportPortal, because you cannot use "},{"kind":"code","text":"`jasmine.addReporter()`"},{"kind":"text","text":" in the Protractor config.\\n\\n**Note:** reporters must be instantiated before adding them to the configuration.\\n\\n#### Using ReportPortal with Protractor and Jasmine\\n\\n"},{"kind":"code","text":"```js\\n// protractor.conf.js\\nconst AgentJasmine = require(\'@reportportal/agent-js-jasmine\')\\nconst agent = new AgentJasmine(require(\'./reportportalConf\'))\\n// ...\\njasmineNodeOpts: {\\n  // ...\\n  reporters: [ agent.getJasmineReporter() ],\\n}\\n\\nafterLaunch:() => {\\n  return agent.getExitPromise();\\n},\\n```"}]},"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":90,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineConfig.ts#L90"}],"type":{"type":"array","elementType":{"type":"reference","name":"JasmineReporter"}}}],"groups":[{"title":"Properties","children":[2794,2795,2796,2797,2798,2799,2803,2804,2805]}],"sources":[{"fileName":"packages/jasmine/src/adapter/JasmineConfig.ts","line":11,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/JasmineConfig.ts#L11"}],"permalink":"/api/jasmine-adapter/interface/JasmineConfig","nextId":2758}],"groups":[{"title":"Configuration","children":[2793]},{"title":"Integration","children":[2758]}],"sources":[{"fileName":"packages/jasmine/src/adapter/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/adapter/index.ts#L1"}],"permalink":"/api/jasmine-adapter"},"urlSlug":"jasmine-adapter"},{"index":true,"label":"index","reflection":{"id":7,"name":"@serenity-js/jasmine","kind":2,"kindString":"Module","flags":{},"children":[{"id":2755,"name":"export=","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/jasmine/src/bootstrap.ts","line":30,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/bootstrap.ts#L30"}],"signatures":[{"id":2756,"name":"export=","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Monkey-patches Jasmine\'s Suite and Spec so that they provide more accurate information,\\nand returns a bootstrapped instance of the "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityReporterForJasmine"},{"kind":"text","text":" to be registered with Jasmine.\\n\\n## Registering the reporter from the command line\\n\\n"},{"kind":"code","text":"```terminal\\njasmine --reporter=@serenity-js/jasmine\\n```"},{"kind":"text","text":"\\n\\n## Registering the reporter programmatically\\n\\n"},{"kind":"code","text":"```ts\\nimport serenityReporterForJasmine = require(\'@serenity-js/jasmine\');\\n\\njasmine.getEnv().addReporter(serenityReporterForJasmine);\\n```"}],"blockTags":[{"tag":"@see","content":[{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@apilink","text":"monkeyPatched"},{"kind":"text","text":"\\n"},{"kind":"text","text":" - "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityReporterForJasmine"},{"kind":"text","text":"\\n"}]},{"tag":"@returns","content":[]}]},"parameters":[{"id":2757,"name":"jasmine","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"the global.jasmine instance"}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"..."}],"type":{"type":"reference","name":"SerenityReporterForJasmine"}}],"permalink":"/api/jasmine/function/export="}],"groups":[{"title":"Functions","children":[2755]}],"sources":[{"fileName":"packages/jasmine/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/jasmine/src/index.ts#L1"}],"permalink":"/api/jasmine"},"urlSlug":"jasmine"}],"packageName":"@serenity-js/jasmine","packageVersion":"3.10.2"},{"entryPoints":[{"index":false,"label":"Test runner adapter","reflection":{"id":14,"name":"@serenity-js/mocha/adapter","kind":2,"kindString":"Module","flags":{},"children":[{"id":2806,"name":"MochaAdapter","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Allows for programmatic execution of Mocha test scenarios,\\nusing "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityReporterForMocha"},{"kind":"text","text":" to report progress.\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"TestRunnerAdapter"}]},"children":[{"id":2807,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":26,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaAdapter.ts#L26"}],"signatures":[{"id":2808,"name":"new MochaAdapter","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2809,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2829,"name":"MochaConfig"}},{"id":2810,"name":"loader","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"ModuleLoader"}}],"type":{"type":"reference","id":2806,"name":"MochaAdapter"}}]},{"id":2815,"name":"successThreshold","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaAdapter.ts#L35"}],"signatures":[{"id":2816,"name":"successThreshold","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Scenario success threshold for this test runner."}]},"type":{"type":"union","types":[{"type":"reference","name":"Outcome"},{"type":"reflection","declaration":{"id":2817,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2818,"name":"Code","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":36,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaAdapter.ts#L35"}],"type":{"type":"intrinsic","name":"number"}}],"groups":[{"title":"Properties","children":[2818]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":35,"character":34,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaAdapter.ts#L35"}]}}]},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.successThreshold"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.successThreshold"}},{"id":2819,"name":"load","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":46,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaAdapter.ts#L46"}],"signatures":[{"id":2820,"name":"load","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Loads test scenarios."}]},"parameters":[{"id":2821,"name":"pathsToScenarios","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.load"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.load"}},{"id":2822,"name":"scenarioCount","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":81,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaAdapter.ts#L81"}],"signatures":[{"id":2823,"name":"scenarioCount","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Returns the number of loaded scenarios"}],"blockTags":[{"tag":"@throws","content":[{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n If called before "},{"kind":"code","text":"`load`"}]}]},"type":{"type":"intrinsic","name":"number"},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.scenarioCount"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.scenarioCount"}},{"id":2824,"name":"run","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":95,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaAdapter.ts#L95"}],"signatures":[{"id":2825,"name":"run","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Runs loaded test scenarios."}],"blockTags":[{"tag":"@throws","content":[{"kind":"inline-tag","tag":"@apilink","text":"LogicError"},{"kind":"text","text":"\\n If called before "},{"kind":"code","text":"`load`"}]}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"TestRunnerAdapter.run"}}],"implementationOf":{"type":"reference","name":"TestRunnerAdapter.run"}}],"groups":[{"title":"Constructors","children":[2807]},{"title":"Methods","children":[2815,2819,2822,2824]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaAdapter.ts","line":21,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaAdapter.ts#L21"}],"implementedTypes":[{"type":"reference","name":"TestRunnerAdapter"}],"permalink":"/api/mocha-adapter/class/MochaAdapter","previousId":2829},{"id":2829,"name":"MochaConfig","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration object for the Mocha test runner.\\n\\n## Learn more\\n\\n- ["},{"kind":"code","text":"`.mocharc.yml`"},{"kind":"text","text":" example](https://github.com/mochajs/mocha/blob/v8.0.1/example/config/.mocharc.yml)"}]},"children":[{"id":2830,"name":"config","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Path to config file.\\n\\n#### Learn more\\n- [Mocha configuration examples](https://github.com/mochajs/mocha/tree/v8.0.1/example/config)"}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":18,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L18"}],"type":{"type":"intrinsic","name":"string"}},{"id":2831,"name":"allow-uncaught","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Allow uncaught errors to propagate."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":23,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L23"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2832,"name":"async-only","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require all tests to use a callback (async) or return a Promise."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":28,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L28"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2833,"name":"bail","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Abort (\\"bail\\") after first test failure."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":33,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L33"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2834,"name":"check-leaks","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Check for global variable leaks."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":38,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L38"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2835,"name":"delay","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Delay initial execution of root suite."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":43,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L43"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2836,"name":"fgrep","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run tests containing this string.\\n\\n**Note:** "},{"kind":"inline-tag","tag":"@apilink","text":"MochaConfig.fgrep"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"MochaConfig.grep"},{"kind":"text","text":" are mutually exclusive."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":50,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L50"}],"type":{"type":"intrinsic","name":"string"}},{"id":2837,"name":"file","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Files to be loaded prior to root suite execution."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":55,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L55"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":2838,"name":"forbid-only","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Fail if exclusive test(s) encountered."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":60,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L60"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2839,"name":"forbid-pending","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Fail if pending test(s) encountered."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":65,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L65"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2840,"name":"global","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"List of allowed global variables."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":70,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L70"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":2841,"name":"grep","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Only run tests matching this string or regexp.\\n\\n**Note:** "},{"kind":"inline-tag","tag":"@apilink","text":"MochaConfig.grep"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"MochaConfig.fgrep"},{"kind":"text","text":" are mutually exclusive."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":77,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L77"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reference","name":"RegExp","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp","qualifiedName":"RegExp","package":"typescript"}]}},{"id":2842,"name":"growl","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Enable Growl notifications."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":82,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L82"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2843,"name":"invert","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Inverts "},{"kind":"inline-tag","tag":"@apilink","text":"MochaConfig.grep"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"MochaConfig.fgrep"},{"kind":"text","text":" matches."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":87,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L87"}],"type":{"type":"intrinsic","name":"boolean"}},{"id":2844,"name":"require","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Require module."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":92,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L92"}],"type":{"type":"array","elementType":{"type":"intrinsic","name":"string"}}},{"id":2845,"name":"retries","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Retry failed tests this many times."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":97,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L97"}],"type":{"type":"intrinsic","name":"number"}},{"id":2846,"name":"slow","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify \\"slow\\" test threshold (in milliseconds)."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":102,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L102"}],"type":{"type":"intrinsic","name":"number"}},{"id":2847,"name":"timeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify test timeout threshold (in milliseconds).\\n\\n**Note:** setting this property to 0 means \\"no timeout\\"."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":109,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L109"}],"type":{"type":"intrinsic","name":"number"}},{"id":2848,"name":"ui","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"Specify user interface. Defaults to "},{"kind":"code","text":"`bdd`"},{"kind":"text","text":".\\n\\n#### Learn more\\n\\n- [Mocha interfaces](https://mochajs.org/#interfaces)"}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":118,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L118"}],"type":{"type":"intrinsic","name":"string"}},{"id":2849,"name":"strict","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"When set to "},{"kind":"code","text":"`true`"},{"kind":"text","text":", a skipped test is considered a failure."}]},"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":123,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L123"}],"type":{"type":"intrinsic","name":"boolean"}}],"groups":[{"title":"Properties","children":[2830,2831,2832,2833,2834,2835,2836,2837,2838,2839,2840,2841,2842,2843,2844,2845,2846,2847,2848,2849]}],"sources":[{"fileName":"packages/mocha/src/adapter/MochaConfig.ts","line":10,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/MochaConfig.ts#L10"}],"permalink":"/api/mocha-adapter/interface/MochaConfig","nextId":2806}],"groups":[{"title":"Configuration","children":[2829]},{"title":"Integration","children":[2806]}],"sources":[{"fileName":"packages/mocha/src/adapter/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/adapter/index.ts#L1"}],"permalink":"/api/mocha-adapter"},"urlSlug":"mocha-adapter"},{"index":true,"label":"index","reflection":{"id":9,"name":"@serenity-js/mocha","kind":2,"kindString":"Module","flags":{},"children":[{"id":10,"name":"export=","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/mocha/src/index.ts","line":10,"character":9,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/index.ts#L10"}],"signatures":[{"id":11,"name":"export=","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Registers a Mocha reporter that emits "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent|Serenity/JS domain events"},{"kind":"text","text":"\\nand informs Serenity/JS when a test scenario starts, finishes, and with what result."}]},"parameters":[{"id":12,"name":"runner","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Runner","qualifiedName":"Mocha.Runner","package":"@types/mocha"}},{"id":13,"name":"options","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"reference","name":"MochaOptions","qualifiedName":"Mocha.MochaOptions","package":"@types/mocha"}}],"type":{"type":"reference","name":"SerenityReporterForMocha"}}],"permalink":"/api/mocha/function/export="}],"groups":[{"title":"Functions","children":[10]}],"sources":[{"fileName":"packages/mocha/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/mocha/src/index.ts#L1"}],"permalink":"/api/mocha"},"urlSlug":"mocha"}],"packageName":"@serenity-js/mocha","packageVersion":"3.10.2"},{"entryPoints":[{"index":true,"label":"index","reflection":{"id":15,"name":"@serenity-js/playwright-test","kind":2,"kindString":"Module","flags":{},"children":[{"id":2853,"name":"PlaywrightTestConfig","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Convenience alias for [PlaywrightTestConfig](https://playwright.dev/docs/test-configuration) object\\nthat includes "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityOptions"},{"kind":"text","text":" and allows for any other custom options when needed.\\n\\n#### Example\\nConfiguring Playwright Test using the standard "},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":" from "},{"kind":"code","text":"`@playwright/test`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@playwright/test\'\\nimport type { SerenityOptions } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig<SerenityOptions & MyCustomOptions> = {\\n    // ...\\n}\\n\\nexport default config\\n```"},{"kind":"text","text":"\\n\\nSimplified configuration using Serenity/JS "},{"kind":"code","text":"`PlaywrightTestConfig`"},{"kind":"text","text":" from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":":\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n   // ...\\n}\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityOptions"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityReporterForPlaywrightTestConfig"},{"kind":"text","text":"\\n- [Playwright Test configuration](https://playwright.dev/docs/test-configuration)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/PlaywrightTestConfig.ts","line":42,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/PlaywrightTestConfig.ts#L42"}],"typeParameters":[{"id":2854,"name":"TestArgs","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"object"}},{"id":2855,"name":"WorkerArgs","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"object"}}],"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"reference","id":2854,"name":"TestArgs"}]},{"type":"reference","id":2855,"name":"WorkerArgs"}],"name":"BasePlaywrightTestConfig","qualifiedName":"PlaywrightTestConfig","package":"playwright"},"permalink":"/api/playwright-test#PlaywrightTestConfig","previousId":2850,"nextId":2881},{"id":2856,"name":"SerenityFixtures","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Serenity/JS-specific [Playwright Test fixtures](https://playwright.dev/docs/test-fixtures)\\ninjected into your "},{"kind":"inline-tag","tag":"@apilink","text":"it|test scenarios"},{"kind":"text","text":".\\n\\n## Example test scenario\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures } from \'@serenity-js/web\'\\n\\ndescribe(`Recording items`, () => {\\n\\n    test.use({\\n        defaultActorName: \'Serena\',\\n        crew: [\\n            Photographer.whoWill(TakePhotosOfFailures),\\n        ],\\n    })\\n\\n    describe(`Todo List App`, () => {\\n\\n        it(`should allow me to add a todo item`, async ({ actor }) => {\\n            await actor.attemptsTo(\\n                startWithAnEmptyList(),\\n\\n                recordItem(\'Buy some milk\'),\\n\\n                Ensure.that(itemNames(), equals([\\n                    \'Buy some milk\',\\n                ])),\\n            )\\n        })\\n    })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"it|test scenario"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"describe|Grouping test scenarios"},{"kind":"text","text":"\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"children":[{"id":2857,"name":"serenity","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Retrieves the root object of the Serenity/JS framework."}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":50,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityFixtures.ts#L50"}],"type":{"type":"reference","name":"Serenity"}},{"id":2858,"name":"platform","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Name and version of the operating system that Playwright Test worker process runs on."}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityFixtures.ts#L55"}],"type":{"type":"reflection","declaration":{"id":2859,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2860,"name":"name","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityFixtures.ts#L55"}],"type":{"type":"intrinsic","name":"string"}},{"id":2861,"name":"version","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":30,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityFixtures.ts#L55"}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2860,2861]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":55,"character":14,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityFixtures.ts#L55"}]}}},{"id":2862,"name":"actors","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"A cast of Serenity/JS actors to be used instead of the default cast\\nwhen instantiating "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures.actor|actor"},{"kind":"text","text":"\\nand invoking "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures.actorCalled|actorCalled"},{"kind":"text","text":".\\n\\n#### Overriding the default cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Recording items`, () => {\\n\\n    test.use({\\n        defaultActorName: \'Serena\',\\n        actors: ({ browser, contextOptions }, use) => {\\n            const cast = Cast.where(actor =>\\n                actor.whoCan(\\n                    BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                    TakeNotes.usingAnEmptyNotepad(),\\n                )\\n            )\\n\\n            // Make sure to pass your custom cast to Playwright `use` callback\\n            use(cast)\\n        },\\n    })\\n\\n    describe(`Todo List App`, () => {\\n\\n        it(`should allow me to add a todo item`, async ({ actor }) => {\\n            await actor.attemptsTo(\\n                startWithAnEmptyList(),\\n\\n                recordItem(\'Buy some milk\'),\\n\\n                Ensure.that(itemNames(), equals([\\n                    \'Buy some milk\',\\n                ])),\\n            )\\n        })\\n    })\\n})\\n```"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":104,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityFixtures.ts#L104"}],"type":{"type":"reference","name":"Cast"}},{"id":2863,"name":"actorCalled","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":119,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityFixtures.ts#L119"}],"type":{"type":"reflection","declaration":{"id":2864,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":119,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityFixtures.ts#L119"}],"signatures":[{"id":2865,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Uses the provided "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":" of "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures.actors|actors"},{"kind":"text","text":" to instantiate an "},{"kind":"inline-tag","tag":"@apilink","text":"Actor"},{"kind":"text","text":" called "},{"kind":"code","text":"`name`"},{"kind":"text","text":"\\nand inject it into a "},{"kind":"inline-tag","tag":"@apilink","text":"it|test scenario"},{"kind":"text","text":".\\n\\nRetrieves an existing actor if one has already been instantiated.\\n\\n#### Learn more\\n- Declaring a Serenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"it|test scenario"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityOptions.actors"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures.actors"}]},"parameters":[{"id":2866,"name":"name","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","name":"Actor"}}]}}},{"id":2867,"name":"actor","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Default "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures.actor|actor"},{"kind":"text","text":" injected into a "},{"kind":"inline-tag","tag":"@apilink","text":"it|test scenario"},{"kind":"text","text":".\\n\\nUsing "},{"kind":"code","text":"`actor`"},{"kind":"text","text":" fixture is equivalent to invoking "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures.actorCalled|actorCalled"},{"kind":"text","text":" with "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityOptions.defaultActorName|defaultActorName"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures.actorCalled|actorCalled"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityOptions.defaultActorName"},{"kind":"text","text":"\\n- Declaring a Serenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"it|test scenario"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":131,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityFixtures.ts#L131"}],"type":{"type":"reference","name":"Actor"}}],"groups":[{"title":"Properties","children":[2857,2858,2862,2863,2867]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityFixtures.ts","line":45,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityFixtures.ts#L45"}],"permalink":"/api/playwright-test/interface/SerenityFixtures","previousId":2875,"nextId":2868},{"id":2868,"name":"SerenityOptions","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration object accepted by "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":".\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport type { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\nimport type { CallAnApi } from \'@serenity-js/rest\'\\n\\n// Define any custom configuration options, if needed\\ninterface MyCustomOptions {\\n    apiUrl: string;\\n}\\n\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n\\n    // Register Serenity/JS reporter for Playwright Test\\n    // to enable integration with Serenity/JS stage crew members\\n    // and have them instantiated in the Playwright reporter process\\n    reporter: [\\n        [ \'@serenity-js/playwright-test\', {\\n            // Stage crew members instantiated in the test reporter process\\n            crew: [\\n                \'@serenity-js/serenity-bdd\',\\n                \'@serenity-js/console-reporter\',\\n                [ \'@serenity-js/core:ArtifactArchiver\', { outputDirectory: \'target/site/serenity\' } ],\\n            ]\\n        }]\\n    ],\\n\\n    use: {\\n\\n        // Register Serenity/JS stage crew members\\n        // and have them instantiated in Playwright Test worker processes\\n        crew: [\\n            [ \'@serenity-js/web:Photographer\', { strategy: \'TakePhotosOfFailures\' } ]\\n        ],\\n\\n        // Register a custom cast of Serenity/JS actors\\n        // if you don\'t want to use the default ones\\n        actors: ({ browser, contextOptions, apiUrl }, use) => {\\n             const cast = Cast.where(actor =>\\n                 actor.whoCan(\\n                     BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                     TakeNotes.usingAnEmptyNotepad(),\\n                     CallAnApi.at(apiUrl),\\n                 )\\n             )\\n\\n             use(cast)\\n        },\\n\\n        // Name to be given to an actor injected via `actor` fixture\\n        defaultActorName: \'Alice\',\\n\\n        // Any custom options, as per the MyCustomOptions interface\\n        apiUrl: \'https://api.serenity-js.org/v1\'\\n\\n        // Any other Playwright options\\n        baseURL: \'https://todo-app.serenity-js.org/\',\\n        video: \'on-first-retry\',\\n        trace: \'on-first-retry\',\\n    },\\n}\\n\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PlaywrightTestConfig"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures"}]},"children":[{"id":2869,"name":"actors","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the "},{"kind":"inline-tag","tag":"@apilink","text":"Cast"},{"kind":"text","text":" of "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.actors|actors"},{"kind":"text","text":" to be used when injecting an "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures.actor|actor"},{"kind":"text","text":"\\nor invoking "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures.actorCalled|actorCalled"},{"kind":"text","text":" in a "},{"kind":"inline-tag","tag":"@apilink","text":"it|test scenario"},{"kind":"text","text":".\\n\\n:::info Did you know?\\nWhen you use "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" "},{"kind":"inline-tag","tag":"@apilink","text":"it|test APIs"},{"kind":"text","text":", Serenity/JS already provides a default cast of actors for you.\\nEach one of the default actors receives "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|abilities"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":" and "},{"kind":"inline-tag","tag":"@apilink","text":"TakeNotes.usingAnEmptyNotepad"},{"kind":"text","text":".\\n\\nThe default abilities should be sufficient in most web testing scenarios. However, you might want to override this default configuration\\nwhen you need your actors to "},{"kind":"inline-tag","tag":"@apilink","text":"CallAnApi|interact with REST APIs"},{"kind":"text","text":", "},{"kind":"inline-tag","tag":"@apilink","text":"ManageALocalServer|manage local servers"},{"kind":"text","text":",\\nstart with a notepad that has some "},{"kind":"inline-tag","tag":"@apilink","text":"TakeNotes.using|initial state"},{"kind":"text","text":", or receive "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|custom abilities"},{"kind":"text","text":".\\n:::\\n\\n#### Using a custom crew of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\nimport { Cast, TakeNotes } from \'@serenity-js/core\'\\nimport { BrowseTheWebWithPlaywright } from \'@serenity-js/playwright\'\\nimport { CallAnApi } from \'@serenity-js/rest\'\\n\\n// Define any custom configuration options, if needed\\ninterface MyCustomOptions {\\n    apiUrl: string;\\n}\\n\\n// Parameterise PlaywrightTestConfig with MyCustomOptions\\n// to enable type checking of any custom properties\\nconst config: PlaywrightTestConfig<MyCustomOptions> = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        },\\n\\n        // custom properties\\n        apiUrl: \'https://api.serenity-js.org/v1\',\\n\\n        // Custom cast of actors receives `contextOptions`\\n        // with the additional Serenity/JS properties (see `PlaywrightOptions`),\\n        // as well as any other custom properties you define in the destructuring expression,\\n        // such as `apiUrl`.\\n        actors: ({ browser, contextOptions, apiUrl }, use) => {\\n            const cast = Cast.where(actor => actor.whoCan(\\n                BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                TakeNotes.usingAnEmptyNotepad(),\\n                CallAnApi.at(apiUrl),\\n            ))\\n\\n            // Make sure to pass your custom cast to Playwright `use` callback\\n            use(cast)\\n        },\\n    },\\n};\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- Declaring a Serenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"it|test scenario"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":144,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityOptions.ts#L144"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"Cast"},{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"}]}],"name":"TestFixture","qualifiedName":"TestFixture","package":"playwright"}},{"id":2870,"name":"defaultActorName","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the name given to the default Serenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures.actor|actor"},{"kind":"text","text":"\\ninjected into a "},{"kind":"inline-tag","tag":"@apilink","text":"it|test scenario"},{"kind":"text","text":".\\n\\n#### Learn more\\n- Declaring a Serenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"it|test scenario"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":154,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityOptions.ts#L154"}],"type":{"type":"intrinsic","name":"string"}},{"id":2871,"name":"crew","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Configures the "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.crew|stage crew members"},{"kind":"text","text":"\\nto be instantiated in Playwright Test worker processes.\\n\\n:::info Did you know?\\nBy default, Serenity/JS registers a "},{"kind":"inline-tag","tag":"@apilink","text":"Photographer"},{"kind":"text","text":".whoWill("},{"kind":"inline-tag","tag":"@apilink","text":"TakePhotosOfFailures"},{"kind":"text","text":"),\\nso that any test failures are automatically accompanied by a screenshot.\\n\\nIf you prefer a different behaviour, you can configure the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" with an empty array to disable taking screenshots altogether ("},{"kind":"code","text":"`crew: []`"},{"kind":"text","text":"),\\nor with a "},{"kind":"inline-tag","tag":"@apilink","text":"Photographer"},{"kind":"text","text":" who uses a different "},{"kind":"inline-tag","tag":"@apilink","text":"PhotoTakingStrategy"},{"kind":"text","text":", like to "},{"kind":"inline-tag","tag":"@apilink","text":"TakePhotosOfInteractions"},{"kind":"text","text":".\\n:::\\n\\n#### Example\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        crew: [\\n            [ \'@serenity-js/web:Photographer\', { strategy: \'TakePhotosOfFailures\' } ]\\n        ],\\n    },\\n};\\nexport default config\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.crew"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":187,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityOptions.ts#L187"}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","name":"StageCrewMember"},{"type":"reference","typeArguments":[{"type":"reference","name":"ListensToDomainEvents"}],"name":"StageCrewMemberBuilder"},{"type":"reference","name":"ClassDescription"}]}}},{"id":2872,"name":"cueTimeout","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Sets the "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.cueTimeout|cueTimeout"},{"kind":"text","text":" to a given "},{"kind":"inline-tag","tag":"@apilink","text":"Duration|duration"},{"kind":"text","text":" or a numeric value in milliseconds.\\nDefaults to **5 seconds**.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.cueTimeout"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Discardable"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Ability"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":198,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityOptions.ts#L198"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"number"},{"type":"reference","name":"Duration"}]}},{"id":2873,"name":"interactionTimeout","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"The maximum default amount of time allowed for interactions such as "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.until"},{"kind":"text","text":"\\nto complete.\\n\\nDefaults to **5 seconds**, can be overridden per interaction.\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"Wait.until"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":209,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityOptions.ts#L209"}],"type":{"type":"reference","name":"Duration"}},{"id":2874,"name":"contextOptions","kind":1024,"kindString":"Property","flags":{},"comment":{"summary":[{"kind":"text","text":"Playwright [BrowserContextOptions](https://playwright.dev/docs/api/class-testoptions#test-options-context-options),\\naugmented with several convenience properties to be used with the "},{"kind":"inline-tag","tag":"@apilink","text":"Ability|ability"},{"kind":"text","text":" to "},{"kind":"inline-tag","tag":"@apilink","text":"BrowseTheWebWithPlaywright"},{"kind":"text","text":".\\n\\nAdditional convenience properties include:\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PlaywrightOptions.defaultNavigationTimeout"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PlaywrightOptions.defaultNavigationWaitUntil"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"PlaywrightOptions.defaultTimeout"},{"kind":"text","text":"\\n\\n#### Using "},{"kind":"code","text":"`contextOptions`"},{"kind":"text","text":" with the default cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        }\\n\\n        // Since `actors` property is not defined,\\n        // `contextOptions` will be passed to the default cast of Serenity/JS actors\\n        // and injected into the ability to `BrowseTheWebWithPlaywright`\\n        // that each actor receives.\\n    },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Using "},{"kind":"code","text":"`contextOptions`"},{"kind":"text","text":" with a custom cast of Serenity/JS actors\\n\\n"},{"kind":"code","text":"```typescript\\n// playwright.config.ts\\nimport type { PlaywrightTestConfig } from \'@serenity-js/playwright-test\'\\n\\nconst config: PlaywrightTestConfig = {\\n    use: {\\n        contextOptions: {\\n            defaultNavigationTimeout: 30_000,\\n        }\\n\\n        // Custom cast of actors receives `contextOptions` with the\\n        // additional Serenity/JS properties.\\n        actors: ({ browser, contextOptions }, use) => {\\n            const cast = Cast.where(actor => actor.whoCan(\\n                BrowseTheWebWithPlaywright.using(browser, contextOptions),\\n                TakeNotes.usingAnEmptyNotepad(),\\n            ))\\n\\n            use(cast)\\n        },\\n    },\\n};\\nexport default config;\\n```"},{"kind":"text","text":"\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures"},{"kind":"text","text":"\\n- [Playwright Browser Context options](https://playwright.dev/docs/api/class-testoptions#test-options-context-options)\\n- [Playwright Test fixtures](https://playwright.dev/docs/test-fixtures)"}]},"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":273,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityOptions.ts#L273"}],"type":{"type":"reference","name":"PlaywrightOptions"}}],"groups":[{"title":"Properties","children":[2869,2870,2871,2872,2873,2874]}],"sources":[{"fileName":"packages/playwright-test/src/api/SerenityOptions.ts","line":81,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/SerenityOptions.ts#L81"}],"permalink":"/api/playwright-test/interface/SerenityOptions","previousId":2856,"nextId":2850},{"id":2880,"name":"fixtures","kind":32,"kindString":"Variable","flags":{"isConst":true},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":31,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L31"}],"type":{"type":"reference","typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"}]},{"type":"intrinsic","name":"object"},{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"}]},{"type":"intersection","types":[{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"}]}],"name":"Fixtures","qualifiedName":"Fixtures","package":"playwright"},"defaultValue":"...","permalink":"/api/playwright-test#fixtures","previousId":2881},{"id":2881,"name":"TestApi","kind":4194304,"kindString":"Type alias","flags":{},"comment":{"summary":[{"kind":"text","text":"Serenity/JS BDD-style test API created by "},{"kind":"inline-tag","tag":"@apilink","text":"useBase"},{"kind":"text","text":"."}]},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":158,"character":12,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L158"}],"typeParameters":[{"id":2892,"name":"TestArgs","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}},{"id":2893,"name":"WorkerArgs","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}}],"type":{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","typeArguments":[{"type":"reference","id":2892,"name":"TestArgs"},{"type":"reference","id":2893,"name":"WorkerArgs"}],"name":"TestType","qualifiedName":"TestType","package":"playwright"},{"type":"union","types":[{"type":"literal","value":"beforeAll"},{"type":"literal","value":"beforeEach"},{"type":"literal","value":"afterEach"},{"type":"literal","value":"afterAll"},{"type":"literal","value":"expect"}]}],"name":"Pick","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#picktype-keys","qualifiedName":"Pick","package":"typescript"},{"type":"reflection","declaration":{"id":2882,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2883,"name":"useFixtures","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":185,"character":8,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L185"}],"type":{"type":"reflection","declaration":{"id":2884,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":185,"character":21,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L185"}],"signatures":[{"id":2885,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a Serenity/JS BDD-style test API around the default Playwright [base test](https://playwright.dev/docs/test-fixtures)\\nand using custom test fixtures.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: \'Hello world!\'\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nShorthand for ["},{"kind":"code","text":"`useBase`"},{"kind":"text","text":"](/api/playwright-test/function/useBase/)"}]},"typeParameter":[{"id":2887,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}},{"id":2888,"name":"W","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":2886,"name":"customFixtures","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":2887,"name":"T"},{"type":"reference","id":2888,"name":"W"},{"type":"reference","id":2892,"name":"TestArgs"},{"type":"reference","id":2893,"name":"WorkerArgs"}],"name":"Fixtures","qualifiedName":"Fixtures","package":"playwright"}}],"type":{"type":"reference","id":2881,"typeArguments":[{"type":"intersection","types":[{"type":"reference","id":2892,"name":"TestArgs"},{"type":"reference","id":2887,"name":"T"}]},{"type":"intersection","types":[{"type":"reference","id":2893,"name":"WorkerArgs"},{"type":"reference","id":2888,"name":"W"}]}],"name":"TestApi"}}]}}},{"id":2889,"name":"it","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":186,"character":8,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L186"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":2892,"name":"TestArgs"},{"type":"reference","id":2893,"name":"WorkerArgs"}],"name":"TestType","qualifiedName":"TestType","package":"playwright"}},{"id":2890,"name":"test","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":187,"character":8,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L187"}],"type":{"type":"reference","typeArguments":[{"type":"reference","id":2892,"name":"TestArgs"},{"type":"reference","id":2893,"name":"WorkerArgs"}],"name":"TestType","qualifiedName":"TestType","package":"playwright"}},{"id":2891,"name":"describe","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":188,"character":8,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L188"}],"type":{"type":"query","queryType":{"type":"reference","name":"playwrightBaseTest.describe","qualifiedName":"TestType.describe","package":"playwright"}}}],"groups":[{"title":"Properties","children":[2883,2889,2890,2891]}],"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":160,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L160"}]}}]},"permalink":"/api/playwright-test#TestApi","previousId":2853,"nextId":2880},{"id":2894,"name":"it","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":266,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L266"}],"signatures":[{"id":2895,"name":"it","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it } from \'@serenity-js/playwright-test\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'supports multiple actors using separate browsers\', async ({ actorCalled }) => {\\n    await actorCalled(\'Alice\').attemptsTo(\\n      startWithAListContaining(\\n        \'Feed the cat\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      startWithAListContaining(\\n        \'Walk the dog\'\\n      ),\\n    )\\n\\n    await actorCalled(\'Alice\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Feed the cat\'\\n      ])),\\n    )\\n\\n    await actorCalled(\'Bob\').attemptsTo(\\n      Ensure.that(itemNames(), equals([\\n        \'Walk the dog\'\\n      ])),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- [Grouping test scenarios](/api/playwright-test/function/describe/)\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityFixtures"},{"kind":"text","text":"\\n- [Playwright Test "},{"kind":"code","text":"`test`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-call)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"parameters":[{"id":2896,"name":"title","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2897,"name":"testFunction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2898,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":2403,"character":32}],"signatures":[{"id":2899,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2900,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":2901,"name":"testInfo","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestInfo","qualifiedName":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/it","previousId":2988,"nextId":2902},{"id":2902,"name":"test","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":271,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L271"}],"signatures":[{"id":2903,"name":"test","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares a single test scenario. Alias for ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/it/)."}]},"parameters":[{"id":2904,"name":"title","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2905,"name":"testFunction","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2906,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":2403,"character":32}],"signatures":[{"id":2907,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2908,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":2909,"name":"testInfo","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestInfo","qualifiedName":"TestInfo","package":"playwright"}}],"type":{"type":"union","types":[{"type":"intrinsic","name":"void"},{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"}]}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/test","previousId":2894,"nextId":2910},{"id":2910,"name":"describe","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":321,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L321"}],"signatures":[{"id":2911,"name":"describe","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"parameters":[{"id":2912,"name":"title","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intrinsic","name":"string"}},{"id":2913,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2914,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":2374,"character":28}],"signatures":[{"id":2915,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2916,"name":"describe","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares a group of test scenarios.\\n\\n## Example\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Ensure, equals } from \'@serenity-js/assertions\'\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Photographer, TakePhotosOfFailures, Value } from \'@serenity-js/web\'\\n\\ndescribe(`Todo List App`, () => {\\n\\n  test.use({\\n    defaultActorName: \'Serena\',\\n    crew: [\\n      Photographer.whoWill(TakePhotosOfFailures),\\n    ],\\n  })\\n\\n  it(`should allow me to add a todo item`, async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(itemNames(), equals([\\n        \'Buy some milk\',\\n      ])),\\n    )\\n  })\\n\\n  it(\'should clear text input field when an item is added\', async ({ actor }) => {\\n    await actor.attemptsTo(\\n      startWithAnEmptyList(),\\n\\n      recordItem(\'Buy some milk\'),\\n\\n      Ensure.that(Value.of(newTodoInput()), equals(\'\')),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\n## Learn more\\n- Declaring a Serenity/JS [test scenario](/api/playwright-test/function/it/)\\n- [Playwright Test "},{"kind":"code","text":"`describe`"},{"kind":"text","text":" function](https://playwright.dev/docs/api/class-test#test-describe-1)\\n- [Serenity/JS + Playwright Test project template](https://github.com/serenity-js/serenity-js-playwright-test-template/)"}]},"parameters":[{"id":2917,"name":"callback","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2918,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":2399,"character":13}],"signatures":[{"id":2919,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"void"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/describe","previousId":2902,"nextId":2920},{"id":2920,"name":"beforeAll","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":323,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L323"}],"signatures":[{"id":2921,"name":"beforeAll","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook that is executed once per worker process before all tests.\\n\\n**Details**\\n\\nWhen called in the scope of a test file, runs before all tests in the file. When called inside a\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1) group, runs before all\\ntests in the group. If multiple "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\nYou can use [test.afterAll(hookFunction)](https://playwright.dev/docs/api/class-test#test-after-all-1) to teardown\\nany resources set up in "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":".\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest.afterAll(async () => {\\n  console.log(\'After tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"parameters":[{"id":2922,"name":"inner","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2923,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":3217,"character":19}],"signatures":[{"id":2924,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2925,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":2926,"name":"testInfo","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestInfo","qualifiedName":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2927,"name":"beforeAll","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeAll`"},{"kind":"text","text":" hook with a title that is executed once per worker process before all tests.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeAll(\'Setup\', async () => {\\n  console.log(\'Before tests\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"parameters":[{"id":2928,"name":"title","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":2929,"name":"inner","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2930,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":3239,"character":34}],"signatures":[{"id":2931,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2932,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":2933,"name":"testInfo","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestInfo","qualifiedName":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/beforeAll","previousId":2910,"nextId":2934},{"id":2934,"name":"beforeEach","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":325,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L325"}],"signatures":[{"id":2935,"name":"beforeEach","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook that is executed before each test.\\n\\n**Details**\\n\\nWhen called in the scope of a test file, runs before each test in the file. When called inside a\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1) group, runs before\\neach test in the group.  If multiple "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their\\nregistration.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures"},{"kind":"text","text":" as the test function itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo"},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can navigate the page before starting the test.\\n\\nYou can use [test.afterEach(hookFunction)](https://playwright.dev/docs/api/class-test#test-after-each-1) to\\nteardown any resources set up in "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":".\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(async ({ page }, testInfo) => {\\n  console.log(`Running ${testInfo.title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"}]},"parameters":[{"id":2936,"name":"inner","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2937,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":3099,"character":20}],"signatures":[{"id":2938,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2939,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":2940,"name":"testInfo","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestInfo","qualifiedName":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2941,"name":"beforeEach","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares a "},{"kind":"code","text":"`beforeEach`"},{"kind":"text","text":" hook with a title that is executed before each test.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.beforeEach(\'Open start URL\', async ({ page }, testInfo) => {\\n  console.log(`Running ${testInfo.title}`);\\n  await page.goto(\'https://my.start.url/\');\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  expect(page.url()).toBe(\'https://my.start.url/\');\\n});\\n```"}]},"parameters":[{"id":2942,"name":"title","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":2943,"name":"inner","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2944,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":3122,"character":35}],"signatures":[{"id":2945,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2946,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":2947,"name":"testInfo","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestInfo","qualifiedName":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/beforeEach","previousId":2920,"nextId":2948},{"id":2948,"name":"afterEach","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":327,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L327"}],"signatures":[{"id":2949,"name":"afterEach","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook that is executed after each test.\\n\\n**Details**\\n\\nWhen called in the scope of a test file, runs after each test in the file. When called inside a\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1) group, runs after each\\ntest in the group. If multiple "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nYou can access all the same "},{"kind":"inline-tag","tag":"@link","text":"Fixtures"},{"kind":"text","text":" as the test function itself, and also the "},{"kind":"inline-tag","tag":"@link","text":"TestInfo"},{"kind":"text","text":" object that\\ngives a lot of useful information. For example, you can check whether the test succeeded or failed.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(async ({ page }, testInfo) => {\\n  console.log(`Finished ${testInfo.title} with status ${testInfo.status}`);\\n\\n  if (testInfo.status !== testInfo.expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"parameters":[{"id":2950,"name":"inner","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2951,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":3155,"character":19}],"signatures":[{"id":2952,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2953,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":2954,"name":"testInfo","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestInfo","qualifiedName":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2955,"name":"afterEach","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterEach`"},{"kind":"text","text":" hook with a title that is executed after each test.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\n// example.spec.ts\\nimport { test, expect } from \'@playwright/test\';\\n\\ntest.afterEach(\'Status check\', async ({ page }, testInfo) => {\\n  console.log(`Finished ${testInfo.title} with status ${testInfo.status}`);\\n\\n  if (testInfo.status !== testInfo.expectedStatus)\\n    console.log(`Did not run as expected, ended up at ${page.url()}`);\\n});\\n\\ntest(\'my test\', async ({ page }) => {\\n  // ...\\n});\\n```"}]},"parameters":[{"id":2956,"name":"title","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":2957,"name":"inner","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2958,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":3180,"character":34}],"signatures":[{"id":2959,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2960,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":2961,"name":"testInfo","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestInfo","qualifiedName":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/afterEach","previousId":2934,"nextId":2962},{"id":2962,"name":"afterAll","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":329,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L329"}],"signatures":[{"id":2963,"name":"afterAll","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook that is executed once per worker after all tests.\\n\\n**Details**\\n\\nWhen called in the scope of a test file, runs after all tests in the file. When called inside a\\n[test.describe(title, callback)](https://playwright.dev/docs/api/class-test#test-describe-1) group, runs after all\\ntests in the group. If multiple "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hooks are added, they will run in the order of their registration.\\n\\nNote that worker process is restarted on test failures, and "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook runs again in the new worker. Learn\\nmore about [workers and failures](https://playwright.dev/docs/test-retries).\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"parameters":[{"id":2964,"name":"inner","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2965,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":3263,"character":18}],"signatures":[{"id":2966,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2967,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":2968,"name":"testInfo","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestInfo","qualifiedName":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}},{"id":2969,"name":"afterAll","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Declares an "},{"kind":"code","text":"`afterAll`"},{"kind":"text","text":" hook with a title that is executed once per worker after all tests.\\n\\n**Usage**\\n\\n"},{"kind":"code","text":"```js\\ntest.afterAll(\'Teardown\', async () => {\\n  console.log(\'Done with tests\');\\n  // ...\\n});\\n```"}]},"parameters":[{"id":2970,"name":"title","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Hook title."}]},"type":{"type":"intrinsic","name":"string"}},{"id":2971,"name":"inner","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reflection","declaration":{"id":2972,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":3279,"character":33}],"signatures":[{"id":2973,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2974,"name":"args","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}},{"id":2975,"name":"testInfo","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestInfo","qualifiedName":"TestInfo","package":"playwright"}}],"type":{"type":"intrinsic","name":"any"}}]}}}],"type":{"type":"intrinsic","name":"void"}}],"permalink":"/api/playwright-test/function/afterAll","previousId":2948,"nextId":2976},{"id":2976,"name":"expect","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":331,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L331"}],"signatures":[{"id":2977,"name":"expect","kind":4096,"kindString":"Call signature","flags":{},"typeParameter":[{"id":2978,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"default":{"type":"intrinsic","name":"unknown"}}],"parameters":[{"id":2979,"name":"actual","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2978,"name":"T","qualifiedName":"T","package":"playwright"}},{"id":2980,"name":"messageOrOptions","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"reflection","declaration":{"id":2981,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":2982,"name":"message","kind":1024,"kindString":"Property","flags":{"isExternal":true,"isOptional":true},"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":5130,"character":57}],"type":{"type":"intrinsic","name":"string"}}],"groups":[{"title":"Properties","children":[2982]}],"sources":[{"fileName":"node_modules/playwright/types/test.d.ts","line":5130,"character":55}]}}]}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"},{"type":"reference","id":2978,"name":"T","qualifiedName":"T","package":"playwright"}],"name":"MakeMatchers","qualifiedName":"MakeMatchers","package":"playwright"}}],"permalink":"/api/playwright-test/function/expect","previousId":2962,"nextId":2983},{"id":2983,"name":"useFixtures","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":333,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L333"}],"signatures":[{"id":2984,"name":"useFixtures","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a Serenity/JS BDD-style test API around the default Playwright [base test](https://playwright.dev/docs/test-fixtures)\\nand using custom test fixtures.\\n\\n"},{"kind":"code","text":"```typescript\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: \'Hello world!\'\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nShorthand for ["},{"kind":"code","text":"`useBase`"},{"kind":"text","text":"](/api/playwright-test/function/useBase/)"}]},"typeParameter":[{"id":2985,"name":"T","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}},{"id":2986,"name":"W","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":2987,"name":"customFixtures","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":2887,"name":"T"},{"type":"reference","id":2888,"name":"W"},{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"}]},{"type":"intersection","types":[{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"}]}],"name":"Fixtures","qualifiedName":"Fixtures","package":"playwright"}}],"type":{"type":"reference","id":2881,"typeArguments":[{"type":"intersection","types":[{"type":"reference","name":"PlaywrightTestArgs","qualifiedName":"PlaywrightTestArgs","package":"playwright"},{"type":"reference","name":"PlaywrightTestOptions","qualifiedName":"PlaywrightTestOptions","package":"playwright"},{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","id":2887,"name":"T"}]},{"type":"intersection","types":[{"type":"reference","name":"PlaywrightWorkerArgs","qualifiedName":"PlaywrightWorkerArgs","package":"playwright"},{"type":"reference","name":"PlaywrightWorkerOptions","qualifiedName":"PlaywrightWorkerOptions","package":"playwright"},{"type":"intrinsic","name":"object"},{"type":"reference","id":2888,"name":"W"}]}],"name":"TestApi"}}],"permalink":"/api/playwright-test/function/useFixtures","previousId":2976,"nextId":2875},{"id":2875,"name":"useBase","kind":64,"kindString":"Function","flags":{},"sources":[{"fileName":"packages/playwright-test/src/api/test-api.ts","line":473,"character":16,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/api/test-api.ts#L473"}],"signatures":[{"id":2876,"name":"useBase","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[{"kind":"text","text":"Creates a Serenity/JS BDD-style test API around the given Playwright [base test](https://playwright.dev/docs/test-fixtures).\\n\\n## Using default configuration\\n\\nWhen your test scenario doesn\'t require [custom test fixtures](https://playwright.dev/docs/test-fixtures),\\nand you\'re happy with the default [base test](https://playwright.dev/docs/api/class-test#test-call) offered by Playwright,\\nyou can import test API functions such as ["},{"kind":"code","text":"`describe`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) and ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) directly from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":".\\n\\n"},{"kind":"code","text":"```typescript\\nimport { describe, it, test } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\n// override default fixtures if needed\\ntest.use({\\n  defaultActorName: \'Alice\'\\n})\\n\\ndescribe(\'Serenity/JS default test API\', () => {\\n\\n  it(\'enables easy access to actors and standard Playwright fixtures\', async ({ actor, browserName }) => {\\n    await actor.attemptsTo(\\n      Log.the(browserName),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nIn the above example, importing test API functions directly from "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" is the equivalent of the following setup:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { test as playwrightBaseTest } from \'@playwright/test\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it, test, beforeEach, afterEach } = useBase(playwrightBaseTest)\\n```"},{"kind":"text","text":"\\n\\n## Using custom fixtures\\n\\nWhen your test scenario requires [custom test fixtures](https://playwright.dev/docs/test-fixtures),\\nbut you\'re still happy with the default [base test](https://playwright.dev/docs/api/class-test#test-call) offered by Playwright,\\nyou can create fixture-aware test API functions such as ["},{"kind":"code","text":"`describe`"},{"kind":"text","text":"](/api/playwright-test/function/describe/) and ["},{"kind":"code","text":"`it`"},{"kind":"text","text":"](/api/playwright-test/function/describe/)\\nby calling ["},{"kind":"code","text":"`useFixtures`"},{"kind":"text","text":"](/api/playwright-test/function/useFixtures/).\\n\\nFor example, you can create a test scenario using a static "},{"kind":"code","text":"`message`"},{"kind":"text","text":" fixture as follows:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\nimport { Log } from \'@serenity-js/core\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: \'Hello world!\'\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nThe value of your test fixtures can be either static or dynamic and based on the value of other fixtures.\\n\\nTo create a dynamic test fixture use the [function syntax](https://playwright.dev/docs/test-fixtures):\\n\\n"},{"kind":"code","text":"```typescript\\nimport { Log } from \'@serenity-js/core\'\\nimport { useFixtures } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it } = useFixtures<{ message: string }>({\\n  message: async ({ actor }, use) => {\\n    await use(`Hello, ${ actor.name }`);\\n  }\\n})\\n\\ndescribe(\'Serenity/JS useFixtures\', () => {\\n\\n  it(\'enables injecting custom test fixtures into test scenarios\', async ({ actor, message }) => {\\n    await actor.attemptsTo(\\n      Log.the(message),\\n    )\\n  })\\n})\\n```"},{"kind":"text","text":"\\n\\nIn the above example, creating test API functions via "},{"kind":"code","text":"`useFixtures`"},{"kind":"text","text":" is the equivalent of the following setup:\\n\\n"},{"kind":"code","text":"```typescript\\nimport { test as playwrightBaseTest } from \'@playwright/test\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\n\\nconst { describe, it, test, beforeEach, afterEach } = useBase(playwrightBaseTest)\\n  .useFixtures<{ message: string }>({\\n    message: async ({ actor }, use) => {\\n      await use(`Hello, ${ actor.name }`);\\n    }\\n  })\\n```"},{"kind":"text","text":"\\n\\n## Using custom base test\\n\\nIn cases where you need to use a non-default base test, for example when doing [UI component testing](https://playwright.dev/docs/test-components),\\nyou can create Serenity/JS test API functions around your preferred base test.\\n\\n"},{"kind":"code","text":"```tsx\\nimport { test as componentTest } from \'@playwright/experimental-ct-react\'\\nimport { Ensure, contain } from \'@serenity-js/assertions\'\\nimport { useBase } from \'@serenity-js/playwright-test\'\\nimport { Enter, PageElement, CssClasses } from \'@serenity-js/web\'\\n\\nimport EmailInput from \'./EmailInput\';\\n\\nconst { it, describe } = useBase(componentTest).useFixtures<{ emailAddress: string }>({\\n  emailAddress: ({ actor }, use) => {\\n    use(`${ actor.name }@example.org`)\\n  }\\n})\\n\\ndescribe(\'EmailInput\', () => {\\n\\n  it(\'allows valid email addresses\', async ({ actor, mount, emailAddress }) => {\\n    const nativeComponent = await mount(<EmailInput/>);\\n\\n    const component = PageElement.from(nativeComponent);\\n\\n    await actor.attemptsTo(\\n      Enter.theValue(emailAddress).into(component),\\n      Ensure.that(CssClasses.of(component), contain(\'valid\')),\\n    )\\n  })\\n})\\n```"}]},"typeParameter":[{"id":2877,"name":"TestArgs","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"}},{"id":2878,"name":"WorkerArgs","kind":131072,"kindString":"Type parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"any"}],"name":"Record","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#recordkeys-type","qualifiedName":"Record","package":"typescript"},"default":{"type":"intrinsic","name":"object"}}],"parameters":[{"id":2879,"name":"baseTest","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reference","id":2877,"name":"TestArgs"},{"type":"reference","id":2878,"name":"WorkerArgs"}],"name":"TestType","qualifiedName":"TestType","package":"playwright"}}],"type":{"type":"reference","id":2881,"typeArguments":[{"type":"intersection","types":[{"type":"reference","typeArguments":[{"type":"reference","id":2868,"name":"SerenityOptions"},{"type":"literal","value":"actors"}],"name":"Omit","externalUrl":"https://www.typescriptlang.org/docs/handbook/utility-types.html#omittype-keys","qualifiedName":"Omit","package":"typescript"},{"type":"reference","id":2856,"name":"SerenityFixtures"},{"type":"reference","id":2877,"name":"TestArgs"}]},{"type":"reference","id":2878,"name":"WorkerArgs"}],"name":"TestApi"}}],"permalink":"/api/playwright-test/function/useBase","previousId":2983,"nextId":2856},{"id":2850,"name":"SerenityReporterForPlaywrightTestConfig","kind":256,"kindString":"Interface","flags":{},"comment":{"summary":[{"kind":"text","text":"Configuration object accepted by "},{"kind":"code","text":"`@serenity-js/playwright-test`"},{"kind":"text","text":" reporter.\\n\\nSee "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityOptions"},{"kind":"text","text":" for usage examples."}]},"children":[{"id":2851,"name":"crew","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"A list of "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder|StageCrewMemberBuilders"},{"kind":"text","text":" or "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember|StageCrewMembers"},{"kind":"text","text":"\\nto be instantiated in Playwright Test reporter process and notified of "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent|DomainEvents"},{"kind":"text","text":" that occur during the scenario execution.\\nNote that the "},{"kind":"code","text":"`crew`"},{"kind":"text","text":" can also be configured using "},{"kind":"inline-tag","tag":"@apilink","text":"ClassDescription|ClassDescriptions"},{"kind":"text","text":".\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityOptions"},{"kind":"text","text":"\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.crew"}]},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":65,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts#L65"}],"type":{"type":"array","elementType":{"type":"union","types":[{"type":"reference","name":"StageCrewMember"},{"type":"reference","typeArguments":[{"type":"reference","name":"ListensToDomainEvents"}],"name":"StageCrewMemberBuilder"},{"type":"reference","name":"ClassDescription"}]}}},{"id":2852,"name":"outputStream","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"summary":[{"kind":"text","text":"An output stream to be injected into "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMemberBuilder|StageCrewMemberBuilders"},{"kind":"text","text":"\\n\\nDefaults to ["},{"kind":"code","text":"`process.stdout`"},{"kind":"text","text":"](https://nodejs.org/api/process.html#process_process_stdout).\\n\\n#### Learn more\\n- "},{"kind":"inline-tag","tag":"@apilink","text":"SerenityConfig.outputStream"}]},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":75,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts#L75"}],"type":{"type":"reference","name":"OutputStream"}}],"groups":[{"title":"Properties","children":[2851,2852]}],"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":54,"character":17,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts#L54"}],"permalink":"/api/playwright-test/interface/SerenityReporterForPlaywrightTestConfig","previousId":2868,"nextId":2853},{"id":2988,"name":"default","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[{"kind":"text","text":"Serenity/JS reporter that receives notifications from Playwright Test and emits them as\\nSerenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"DomainEvent|domain events"},{"kind":"text","text":" which can be used by\\nSerenity/JS "},{"kind":"inline-tag","tag":"@apilink","text":"StageCrewMember|stage crew members"},{"kind":"text","text":"."}]},"children":[{"id":2989,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":94,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts#L94"}],"signatures":[{"id":2990,"name":"new default","kind":16384,"kindString":"Constructor signature","flags":{},"parameters":[{"id":2991,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":2850,"name":"SerenityReporterForPlaywrightTestConfig"}},{"id":2992,"name":"serenity","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Instance of "},{"kind":"inline-tag","tag":"@apilink","text":"Serenity"},{"kind":"text","text":", specific to the Node process running this Serenity reporter.\\n Note that Playwright runs test workers and reporters in separate processes."}]},"type":{"type":"reference","name":"Serenity"},"defaultValue":"reporterSerenityInstance"}],"type":{"type":"reference","id":2988,"name":"SerenityReporterForPlaywrightTest"}}]},{"id":2996,"name":"onBegin","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":101,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts#L101"}],"signatures":[{"id":2997,"name":"onBegin","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":2998,"name":"config","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","typeArguments":[{"type":"reflection","declaration":{"id":2999,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}},{"type":"reflection","declaration":{"id":3000,"name":"__type","kind":65536,"kindString":"Type literal","flags":{}}}],"name":"FullConfig","qualifiedName":"FullConfig","package":"playwright"}},{"id":3001,"name":"suite","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"Suite","qualifiedName":"Suite","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","name":"Reporter.onBegin"}}],"implementationOf":{"type":"reference","name":"Reporter.onBegin"}},{"id":3002,"name":"onTestBegin","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":105,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts#L105"}],"signatures":[{"id":3003,"name":"onTestBegin","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3004,"name":"test","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestCase","qualifiedName":"TestCase","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","name":"Reporter.onTestBegin"}}],"implementationOf":{"type":"reference","name":"Reporter.onTestBegin"}},{"id":3005,"name":"onTestEnd","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":129,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts#L129"}],"signatures":[{"id":3006,"name":"onTestEnd","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":3007,"name":"test","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestCase","qualifiedName":"TestCase","package":"playwright"}},{"id":3008,"name":"result","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","name":"TestResult","qualifiedName":"TestResult","package":"playwright"}}],"type":{"type":"intrinsic","name":"void"},"implementationOf":{"type":"reference","name":"Reporter.onTestEnd"}}],"implementationOf":{"type":"reference","name":"Reporter.onTestEnd"}},{"id":3020,"name":"onEnd","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":226,"character":10,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts#L226"}],"signatures":[{"id":3021,"name":"onEnd","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"void"}],"name":"Promise","externalUrl":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise","qualifiedName":"Promise","package":"typescript"},"implementationOf":{"type":"reference","name":"Reporter.onEnd"}}],"implementationOf":{"type":"reference","name":"Reporter.onEnd"}},{"id":3031,"name":"printsToStdio","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":283,"character":4,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts#L283"}],"signatures":[{"id":3032,"name":"printsToStdio","kind":4096,"kindString":"Call signature","flags":{},"type":{"type":"intrinsic","name":"boolean"},"implementationOf":{"type":"reference","name":"Reporter.printsToStdio"}}],"implementationOf":{"type":"reference","name":"Reporter.printsToStdio"}}],"groups":[{"title":"Constructors","children":[2989]},{"title":"Methods","children":[2996,3002,3005,3020,3031]}],"sources":[{"fileName":"packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts","line":83,"character":13,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/reporter/SerenityReporterForPlaywrightTest.ts#L83"}],"implementedTypes":[{"type":"reference","name":"Reporter","qualifiedName":"Reporter","package":"playwright"}],"permalink":"/api/playwright-test/class/default","nextId":2894}],"groups":[{"title":"Classes","children":[2988]},{"title":"Functions","children":[2894,2902,2910,2920,2934,2948,2962,2976,2983,2875]},{"title":"Interfaces","children":[2856,2868,2850]},{"title":"Type Aliases","children":[2853,2881]},{"title":"Variables","children":[2880]}],"sources":[{"fileName":"packages/playwright-test/src/index.ts","line":1,"character":0,"url":"https://github.com/serenity-js/serenity-js/blob/6a0439f/packages/playwright-test/src/index.ts#L1"}],"permalink":"/api/playwright-test"},"urlSlug":"playwright-test"}],"packageName":"@serenity-js/playwright-test","packageVersion":"3.10.2"}]')}}]);